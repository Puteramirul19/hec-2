{"version":3,"sources":["raw-js/kendo.autocomplete.js"],"names":["global","factory","exports","module","require","define","amd","globalThis","self","kendo","_globals","Autocomplete","List","MobileScroller","Virtuallist","PrefixSuffixContainersChunk","this","kendo_list_js","kendo_mobile_scroller_js","kendo_virtuallist_js","kendo_prefixSuffixContainers_chunk_js","$","undefined$1","window","encode","htmlEncode","support","caret","activeElement","_activeElement","placeholderSupported","placeholder","ui","keys","DataSource","data","ARIA_DISABLED","ARIA_READONLY","CHANGE","DISABLED","READONLY","FOCUSED","STATEDISABLED","ns","HOVEREVENTS","indexOfWordAtCaret","caretIdx","text","separator","substring","split","length","AutoComplete","extend","init","element","options","wrapper","that","Array","isArray","dataSource","fn","call","attr","inputMode","_wrapper","_clearButton","_dataSource","_ignoreCase","type","_popup","addClass","on","_keydown","bind","_keypress","_search","e","_hasActionSheet","readonly","removeAttr","_prev","_accessor","_oldText","_placeholder","ev","filterInput","relatedTarget","_change","close","removeClass","autocomplete","role","inputmode","_clear","_clearValue","_clearValueMouseDownHandler","_enable","_old","_initList","parents","is","enable","listView","preventDefault","_resetFocusItemHandler","_resetFocusItem","a","widget","prefixInsertBefore","_inputValuesContainer","suffixInsertAfter","clearButton","notify","_toggleCloseVisibility","_applyCssClasses","label","_label","_aria","name","enabled","suggest","template","groupTemplate","fixedGroupTemplate","prefixOptions","suffixOptions","dataTextField","minLength","enforceMinLength","delay","height","filter","ignoreCase","highlightFirst","animation","virtual","value","autoWidth","popup","size","fillMode","rounded","adaptiveTitle","adaptiveTitleSubtitle","currentTarget","classList","contains","_clearValueTrigger","_onActionSheetCreate","_unboundClick","toggle","val","trigger","_onCloseButtonPressed","_refreshHandler","_unbindDataSource","_progressHandler","_showBusy","_errorHandler","_hideBusy","create","setDataSource","events","setOptions","listOptions","_listOptions","_accessors","skipUpdateOnBind","dataValueField","selectedItemChange","_editable","off","disable","_toggleHover","prop","current","focus","_deactivateItem","destroy","refresh","select","li","_select","search","word","lowerCaseValue","_separator","accentFoldingFiltering","clearTimeout","_typingTimeout","wordAtCaret","_open","_mute","toLocaleLowerCase","toLowerCase","_filterSource","operator","field","one","_unifySeparators","idx","key","_last","currentValue","words","wordIndex","selectionEnd","BACKSPACE","DELETE","view","inArray","ul","_text","indexOf","lastIndexOf","_defaultSeparator","toString","push","lastSeparator","matchAll","source","pop","slice","join","_refreshFloatingLabel","_click","item","dataItem","dataItemByIndex","getElementIndex","_active","done","_blur","_clearText","noop","_highlightFirst","index","scrollTo","_listBound","action","flatView","groupsLength","_group","isActive","_renderFooter","_renderNoData","_toggleNoData","_toggleHeader","_resizePopup","position","_inputValue","_allowOpening","unbind","_touchScroller","reset","callback","_muted","_listChange","_selectValue","selectedDataItems","defaultSeparator","splice","replaceWordAtCaret","_preselect","oldText","setValue","unifyType","valueUpdated","_typing","itemSelected","clearValueTrigger","typing","className","keyCode","visible","DOWN","_move","open","ESC","altKey","UP","HOME","END","ENTER","TAB","PAGEDOWN","PAGEUP","_hovered","direction","scrollWith","screenHeight","_view","show","toggleClass","document","RegExp","setTimeout","candidate","insertAfter","preventShow","_showClear","_hideClear","DOMelement","parent","wrap","style","cssText","css","width","_focused","plugin","cssProperties","registerPrefix","registerValues","values","roundedValues","concat","jQuery","kendo$1","__meta__","id","category","description","depends","features","default","Object","defineProperty"],"mappings":"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","file":"kendo.autocomplete.min.js","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('kendo.list.js'), require('kendo.mobile.scroller.js'), require('kendo.virtuallist.js'), require('kendo.prefix-suffix-containers.chunk.js')) :\n    typeof define === 'function' && define.amd ? define(['exports', 'kendo.list', 'kendo.mobile.scroller', 'kendo.virtuallist', 'kendo.prefix-suffix-containers.chunk'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global.kendo = global.kendo || {}, global.kendo._globals = global.kendo._globals || {}, global.kendo._globals.Autocomplete = {}), global.kendo._globals.List, global.kendo._globals.MobileScroller, global.kendo._globals.Virtuallist, global.kendo._globals.PrefixSuffixContainersChunk));\n})(this, (function (exports, kendo_list_js, kendo_mobile_scroller_js, kendo_virtuallist_js, kendo_prefixSuffixContainers_chunk_js) {\n    const __meta__ = {\n        id: \"autocomplete\",\n        name: \"AutoComplete\",\n        category: \"web\",\n        description: \"The AutoComplete widget provides suggestions depending on the typed text.It also allows multiple value entries.\",\n        depends: [\"list\", \"prefix-suffix-containers.chunk\"],\n        features: [ {\n            id: \"mobile-scroller\",\n            name: \"Mobile scroller\",\n            description: \"Support for kinetic scrolling in mobile device\",\n            depends: [ \"mobile.scroller\" ]\n        }, {\n            id: \"virtualization\",\n            name: \"VirtualList\",\n            description: \"Support for virtualization\",\n            depends: [ \"virtuallist\" ]\n        } ]\n    };\n\n    (function($, undefined$1) {\n        var kendo = window.kendo,\n            encode = kendo.htmlEncode,\n            support = kendo.support,\n            caret = kendo.caret,\n            activeElement = kendo._activeElement,\n            placeholderSupported = support.placeholder,\n            ui = kendo.ui,\n            List = ui.List,\n            keys = kendo.keys,\n            DataSource = kendo.data.DataSource,\n            ARIA_DISABLED = \"aria-disabled\",\n            ARIA_READONLY = \"aria-readonly\",\n            CHANGE = \"change\",\n            DISABLED = \"disabled\",\n            READONLY = \"readonly\",\n            FOCUSED = \"k-focus\",\n            SELECTED = \"k-selected\",\n            STATEDISABLED = \"k-disabled\",\n            AUTOCOMPLETEVALUE = \"off\",\n            HOVER = \"k-hover\",\n            ns = \".kendoAutoComplete\",\n            HOVEREVENTS = \"mouseenter\" + ns + \" mouseleave\" + ns;\n\n        function indexOfWordAtCaret(caretIdx, text, separator) {\n            return separator ? text.substring(0, caretIdx).split(separator).length - 1 : 0;\n        }\n\n        function wordAtCaret(caretIdx, text, separator) {\n            return text.split(separator)[indexOfWordAtCaret(caretIdx, text, separator)];\n        }\n\n        function replaceWordAtCaret(caretIdx, text, word, separator, defaultSeparator) {\n            var words = text.split(separator);\n\n            words.splice(indexOfWordAtCaret(caretIdx, text, separator), 1, word);\n\n            if (separator && words[words.length - 1] !== \"\") {\n                words.push(\"\");\n            }\n\n            return words.join(defaultSeparator);\n        }\n\n        var AutoComplete = List.extend({\n            init: function(element, options) {\n                var that = this, wrapper, disabled;\n\n                that.ns = ns;\n                options = Array.isArray(options) ? { dataSource: options } : options;\n\n                List.fn.init.call(that, element, options);\n\n                element = that.element;\n                options = that.options;\n\n                options.placeholder = options.placeholder || element.attr(\"placeholder\");\n                options.inputMode = options.inputMode || element.attr(\"inputmode\") || \"text\";\n\n                if (placeholderSupported) {\n                    element.attr(\"placeholder\", options.placeholder);\n                }\n\n                that._wrapper();\n                that._clearButton();\n\n                that._dataSource();\n                that._ignoreCase();\n\n                element[0].type = \"text\";\n                wrapper = that.wrapper;\n\n                that._popup();\n\n                element\n                    .addClass(\"k-input-inner\")\n                    .on(\"keydown\" + ns, that._keydown.bind(that))\n                    .on(\"keypress\" + ns, that._keypress.bind(that))\n                    .on(\"input\" + ns, that._search.bind(that))\n                    .on(\"paste\" + ns, that._search.bind(that))\n                    .on(\"focus\" + ns, function(e) {\n                        if (that._hasActionSheet()) {\n                            that.element.attr(\"readonly\", true);\n                        } else if (!that.options.readonly) {\n                            that.element.removeAttr(\"readonly\");\n                        }\n                        that._prev = that._accessor();\n                        that._oldText = that._prev;\n                        that._placeholder(false);\n                        wrapper.addClass(FOCUSED);\n                    })\n                    .on(\"focusout\" + ns, function(ev) {\n                        if (that.filterInput && ev.relatedTarget === that.filterInput[0]) {\n                            return;\n                        }\n\n                        that._change();\n                        that._placeholder();\n                        that.close();\n                        wrapper.removeClass(FOCUSED);\n                    })\n                    .attr({\n                        autocomplete: AUTOCOMPLETEVALUE,\n                        role: \"combobox\",\n                        \"aria-expanded\": false,\n                        inputmode: options.inputMode\n                    });\n\n                that._clear.on(\"click\" + ns + \" touchend\" + ns, that._clearValue.bind(that));\n                that._clear.on(\"mousedown\" + ns, that._clearValueMouseDownHandler.bind(that));\n                that._enable();\n\n                that._old = that._accessor();\n\n                that._placeholder();\n\n                that._initList();\n\n                disabled = $(that.element).parents(\"fieldset\").is(':disabled');\n\n                if (disabled) {\n                    that.enable(false);\n                }\n\n                that.listView.bind(\"click\", function(e) { e.preventDefault(); });\n\n                that._resetFocusItemHandler = that._resetFocusItem.bind(that);\n                kendo_prefixSuffixContainers_chunk_js.a({ widget: that, wrapper: that.wrapper, options: that.options, prefixInsertBefore: that._inputValuesContainer, suffixInsertAfter: options.clearButton ? that._clear : that.element });\n\n                kendo.notify(that);\n                that._toggleCloseVisibility();\n                that._applyCssClasses();\n\n                if (options.label) {\n                    that._label();\n                }\n\n                that._aria();\n            },\n\n            options: {\n                name: \"AutoComplete\",\n                enabled: true,\n                suggest: false,\n                template: \"\",\n                groupTemplate: (data) => encode(data),\n                fixedGroupTemplate: (data) => encode(data),\n                prefixOptions: {\n                    separator: true\n                },\n                suffixOptions: {\n                    separator: true\n                },\n                dataTextField: \"\",\n                minLength: 1,\n                enforceMinLength: false,\n                delay: 200,\n                height: 200,\n                filter: \"startswith\",\n                ignoreCase: true,\n                highlightFirst: false,\n                separator: null,\n                placeholder: \"\",\n                animation: {},\n                virtual: false,\n                value: null,\n                clearButton: true,\n                autoWidth: false,\n                popup: null,\n                size: \"medium\",\n                fillMode: \"solid\",\n                rounded: \"medium\",\n                label: null,\n                adaptiveTitle: null,\n                adaptiveTitleSubtitle: null,\n            },\n\n            _clearValueMouseDownHandler: function(ev) {\n                var that = this;\n\n                if (ev && ev.currentTarget && ev.currentTarget.classList.contains('k-clear-value')) {\n                    that._clearValueTrigger = true;\n                } else {\n                    that._clearValueTrigger = false;\n                }\n            },\n\n            _onActionSheetCreate: function() {\n                var that = this;\n\n                that._unboundClick = true;\n                that.element\n                    .on(\"click\", function() { that.popup.toggle(); });\n\n                if (that.filterInput) {\n                    that.filterInput\n                        .on(\"keydown\" + ns, that._keydown.bind(that))\n                        .on(\"keypress\" + ns, that._keypress.bind(that))\n                        .on(\"input\" + ns, that._search.bind(that))\n                        .on(\"paste\" + ns, that._search.bind(that))\n                        .attr({\n                            autocomplete: AUTOCOMPLETEVALUE,\n                            role: \"combobox\",\n                            \"aria-expanded\": false\n                        });\n\n                    that.popup.bind(\"activate\", () => {\n                        // that.wrapper.off(\"focusout\");\n                        that.filterInput.val(that.element.val());\n                        that.filterInput.trigger(\"focus\");\n                    });\n                    that.popup.bind(\"deactivate\", () => {\n                        // that.wrapper.on(\"focusout\", function(ev) {\n                        //     if ((that.filterInput && ev.relatedTarget === that.filterInput[0]) || !that.wrapper.hasClass(FOCUSED)) {\n                        //         return;\n                        //     }\n\n                        //     that._change();\n                        //     that._placeholder();\n                        //     that.close();\n                        //     that.wrapper.removeClass(FOCUSED);\n                        // });\n\n                        // that.wrapper.focus();\n                        that.element.trigger(\"focus\");\n                    });\n                }\n            },\n\n            _onCloseButtonPressed: function() {\n                var that = this;\n\n                if (that.filterInput && activeElement() === that.filterInput[0]) {\n                    that.element.val(that.filterInput.val());\n                }\n            },\n\n            _popup: function() {\n                List.fn._popup.call(this);\n                this.popup.element.addClass(\"k-autocomplete-popup\");\n            },\n\n            _dataSource: function() {\n                var that = this;\n\n                if (that.dataSource && that._refreshHandler) {\n                    that._unbindDataSource();\n                } else {\n                    that._progressHandler = that._showBusy;\n                    that._errorHandler = that._hideBusy;\n                }\n\n                that.dataSource = DataSource.create(that.options.dataSource)\n                    .bind(\"progress\", that._progressHandler)\n                    .bind(\"error\", that._errorHandler);\n            },\n\n            setDataSource: function(dataSource) {\n                this.options.dataSource = dataSource;\n                this._dataSource();\n\n                this.listView.setDataSource(this.dataSource);\n            },\n\n            events: [\n                \"open\",\n                \"close\",\n                CHANGE,\n                \"select\",\n                \"filtering\",\n                \"dataBinding\",\n                \"dataBound\"\n            ],\n\n            setOptions: function(options) {\n                var listOptions = this._listOptions(options);\n\n                List.fn.setOptions.call(this, options);\n\n                this.listView.setOptions(listOptions);\n                this._accessors();\n                this._aria();\n                this._clearButton();\n            },\n\n            _listOptions: function(options) {\n                var listOptions = List.fn._listOptions.call(this, $.extend(options, {\n                    skipUpdateOnBind: true\n                }));\n\n                listOptions.dataValueField = listOptions.dataTextField;\n                listOptions.selectedItemChange = null;\n\n                return listOptions;\n            },\n\n            _editable: function(options) {\n                var that = this,\n                    element = that.element,\n                    wrapper = that.wrapper.off(ns),\n                    readonly = options.readonly,\n                    disable = options.disable;\n\n                if (!readonly && !disable) {\n                    wrapper\n                        .removeClass(STATEDISABLED)\n                        .on(HOVEREVENTS, that._toggleHover);\n\n                    element.prop(DISABLED, false)\n                           .prop(READONLY, false)\n                           .attr(ARIA_DISABLED, false)\n                           .attr(ARIA_READONLY, false);\n                } else {\n                    wrapper\n                        .addClass(disable ? STATEDISABLED : \"\")\n                        .removeClass(disable ? \"\" : STATEDISABLED);\n\n                    element.attr(DISABLED, disable)\n                           .attr(READONLY, readonly)\n                           .attr(ARIA_DISABLED, disable)\n                           .attr(ARIA_READONLY, readonly);\n                }\n\n                that._toggleCloseVisibility();\n            },\n\n            close: function() {\n                var that = this;\n                var current = that.listView.focus();\n\n                if (current) {\n                    current.removeClass(SELECTED);\n                }\n\n                that.popup.close();\n                that._deactivateItem();\n            },\n\n            destroy: function() {\n                var that = this;\n\n                that.element.off(ns);\n                that._clear.off(ns);\n                that.wrapper.off(ns);\n\n                if (that.filterInput) {\n                    that.filterInput.off(ns);\n                }\n\n                List.fn.destroy.call(that);\n            },\n\n            refresh: function() {\n                this.listView.refresh();\n            },\n\n            select: function(li) {\n                this._select(li);\n            },\n\n            search: function(word) {\n                let that = this,\n                options = that.options,\n                ignoreCase = options.ignoreCase,\n                separator = that._separator(),\n                length,\n                lowerCaseValue,\n                accentFoldingFiltering = that.dataSource.options.accentFoldingFiltering,\n                element = that.filterInput && activeElement() === that.filterInput[0] ? that.filterInput : that.element;\n\n                word = word || that._accessor();\n\n                clearTimeout(that._typingTimeout);\n\n                if (separator) {\n                    word = wordAtCaret(caret(element)[0], word, separator);\n                }\n\n                length = word.length;\n\n                if ((!options.enforceMinLength && !length) || length >= options.minLength) {\n                    that._open = true;\n\n                    that._mute(function() {\n                        this.listView.value([]);\n                    });\n\n                    lowerCaseValue = accentFoldingFiltering ? word.toLocaleLowerCase(accentFoldingFiltering) : word.toLowerCase();\n\n                    that._filterSource({\n                        value: ignoreCase ? lowerCaseValue : word,\n                        operator: options.filter,\n                        field: options.dataTextField,\n                        ignoreCase: ignoreCase\n                    });\n\n                    that.one(\"close\", that._unifySeparators.bind(that));\n                }\n                that._toggleCloseVisibility();\n            },\n\n            suggest: function(word) {\n                var that = this,\n                    key = that._last,\n                    value = that._accessor(),\n                    currentValue = that.value(),\n                    element = that.element[0],\n                    caretIdx = caret(element)[0],\n                    separator = that._separator(),\n                    words = value.split(separator),\n                    wordIndex = indexOfWordAtCaret(caretIdx, value, separator),\n                    selectionEnd = caretIdx,\n                    idx,\n                    accentFoldingFiltering = that.dataSource.options.accentFoldingFiltering;\n\n                if (key == keys.BACKSPACE || key == keys.DELETE) {\n                    that._last = undefined$1;\n                    return;\n                }\n\n                word = word || \"\";\n\n                if (typeof word !== \"string\") {\n                    if (word[0]) {\n                        word = that.dataSource.view()[List.inArray(word[0], that.ul[0])];\n                    }\n\n                    word = word ? that._text(word) : \"\";\n                }\n\n                if (caretIdx <= 0) {\n                    caretIdx = (accentFoldingFiltering ? value.toLocaleLowerCase(accentFoldingFiltering) : value.toLowerCase()).indexOf(accentFoldingFiltering ? word.toLocaleLowerCase(accentFoldingFiltering) : word.toLowerCase()) + 1;\n                }\n\n                idx = value.substring(0, caretIdx).lastIndexOf(that._defaultSeparator());\n                idx = idx > -1 ? caretIdx - (idx + that._defaultSeparator().length) : caretIdx;\n                value = words[wordIndex].substring(0, idx);\n\n                if (word) {\n                    word = word.toString();\n                    idx = (accentFoldingFiltering ? word.toLocaleLowerCase(accentFoldingFiltering) : word.toLowerCase()).indexOf(accentFoldingFiltering ? value.toLocaleLowerCase(accentFoldingFiltering) : value.toLowerCase());\n                    if (idx > -1) {\n                        word = word.substring(idx + value.length);\n\n                        selectionEnd = caretIdx + word.length;\n\n                        value += word;\n                    }\n\n                    if (separator && words[words.length - 1] !== \"\") {\n                        words.push(\"\");\n                    }\n\n                }\n\n                words[wordIndex] = value;\n\n                if (typeof that.options.separator == 'object' && that.options.separator != null) {\n                    if (currentValue.length > 1) {\n                        let lastSeparator = [...currentValue.matchAll(separator.source)].pop();\n                        if (lastSeparator) {\n                            that._accessor(words.slice(0, -1).join(that._defaultSeparator() || \"\") + lastSeparator + words[words.length - 1]);\n                        } else {\n                            that._accessor(words.slice(0, -1).join(that._defaultSeparator() || \"\"));\n                        }\n                    } else {\n                      that._accessor(words.join(this._defaultSeparator() || \"\"));\n                    }\n                } else {\n                    that._accessor(words.join(separator || \"\"));\n                }\n\n                if (element === activeElement()) {\n                    caret(element, caretIdx, selectionEnd);\n                }\n            },\n\n            value: function(value) {\n                if (value !== undefined$1) {\n                    this.listView.value(value);\n\n                    this._accessor(value);\n                    this._old = this._accessor();\n                    this._oldText = this._accessor();\n                } else {\n                    return this._accessor();\n                }\n                this._toggleCloseVisibility();\n                this._refreshFloatingLabel();\n            },\n\n            _click: function(e) {\n                var item = e.item;\n                var that = this;\n                var element = that.element;\n                var dataItem = that.listView.dataItemByIndex(that.listView.getElementIndex(item));\n\n                e.preventDefault();\n\n                that._active = true;\n\n                if (that.trigger(\"select\", { dataItem: dataItem, item: item })) {\n                    that.close();\n                    return;\n                }\n                that._oldText = element.val();\n                that._select(item).done(function() {\n                    that._blur();\n\n                    caret(element, element.val().length);\n                });\n            },\n\n            _clearText: $.noop,\n\n            _highlightFirst: function() {\n                var index = this.options.highlightFirst ? 0 : -1;\n\n                this.listView.focus(index);\n            },\n\n            _resetFocusItem: function() {\n                if (this.options.virtual) {\n                    this.listView.scrollTo(0);\n                }\n\n                this._highlightFirst();\n            },\n\n            _listBound: function() {\n                var that = this;\n                var popup = that.popup;\n                var options = that.options;\n                var data = that.dataSource.flatView();\n                var length = data.length;\n                var groupsLength = that.dataSource._group ? that.dataSource._group.length : 0;\n                var isActive = that.element[0] === activeElement() || that.filterInput && that.filterInput[0] === activeElement();\n                var action;\n\n                that._renderFooter();\n                that._renderNoData();\n                that._toggleNoData(!length);\n                that._toggleHeader(!!groupsLength && !!length);\n\n                that._resizePopup();\n\n                popup.position();\n\n                if (length) {\n                    if (options.suggest && isActive && that._inputValue()) {\n                        that.suggest(data[0]);\n                    }\n\n                    that._highlightFirst();\n                }\n\n                if (that._open) {\n                    that._open = false;\n                    action = that._allowOpening() ? \"open\" : \"close\";\n\n                    if (that._typingTimeout && !isActive) {\n                        action = \"close\";\n                    }\n\n                    if (length) {\n                        that._resetFocusItem();\n\n                        if (options.virtual) {\n                            that.popup\n                                .unbind(\"activate\", that._resetFocusItemHandler)\n                                .one(\"activate\", that._resetFocusItemHandler);\n                        }\n                    }\n\n                    popup[action]();\n                    that._typingTimeout = undefined$1;\n                }\n\n                if (that._touchScroller) {\n                    that._touchScroller.reset();\n                }\n\n                that._hideBusy();\n\n                that.trigger(\"dataBound\");\n            },\n\n            _mute: function(callback) {\n                this._muted = true;\n                callback.call(this);\n                this._muted = false;\n            },\n\n            _listChange: function() {\n                var isActive = this._active || this.element[0] === activeElement();\n\n                if (isActive && !this._muted) {\n                    this._selectValue(this.listView.selectedDataItems()[0]);\n                }\n            },\n\n            _selectValue: function(dataItem) {\n                var separator = this._separator();\n                var text = \"\";\n\n                if (dataItem) {\n                    text = this._text(dataItem);\n                }\n\n                if (text === null) {\n                    text = \"\";\n                }\n\n                if (separator) {\n                    text = replaceWordAtCaret(caret(this.element)[0], this._accessor(), text, separator, this._defaultSeparator());\n                }\n\n                this._prev = text;\n                this._accessor(text);\n                this._placeholder();\n            },\n\n            _unifySeparators: function() {\n                this._accessor(this.value().split(this._separator()).join(this._defaultSeparator()));\n                return this;\n            },\n\n            _preselect: function(value, text) {\n                this._inputValue(text);\n                this._accessor(value);\n\n                this._old = this.oldText = this._accessor();\n\n                this.listView.setValue(value);\n                this._placeholder();\n            },\n\n            _change: function() {\n                var that = this;\n                var value = that._unifySeparators().value();\n                var trigger = value !== List.unifyType(that._old, typeof value);\n\n                var valueUpdated = trigger && !that._typing;\n                var itemSelected = that._oldText !== value;\n                var clearValueTrigger = that._clearValueTrigger;\n\n                that._old = value;\n                that._oldText = value;\n\n                if (that.filterInput && activeElement() === that.filterInput[0]) {\n                    that.element.val(that.filterInput.val());\n                }\n\n                if ((valueUpdated || itemSelected) && !clearValueTrigger) {\n                    // trigger the DOM change event so any subscriber gets notified\n                    that.element.trigger(CHANGE);\n                }\n\n                if (trigger && !clearValueTrigger) {\n                    that.trigger(CHANGE);\n                }\n\n                that.typing = false;\n                that._toggleCloseVisibility();\n            },\n\n            _accessor: function(value) {\n                var that = this,\n                    element = that.filterInput && activeElement() === that.filterInput[0] ? that.filterInput[0] : that.element[0];\n\n                if (value !== undefined$1) {\n                    element.value = value === null ? \"\" : value;\n                    that._placeholder();\n                } else {\n                    value = element.value;\n\n                    if (element.className.indexOf(\"k-readonly\") > -1) {\n                        if (value === that.options.placeholder) {\n                            return \"\";\n                        } else {\n                            return value;\n                        }\n                    }\n\n                    return value;\n                }\n            },\n\n            _keydown: function(e) {\n                var that = this;\n                var key = e.keyCode;\n                var listView = that.listView;\n                var visible = that.popup.visible();\n                var current = listView.focus();\n\n                that._last = key;\n\n                if (key === keys.DOWN) {\n                    if (visible) {\n                        this._move(current ? \"focusNext\" : \"focusFirst\");\n                    } else if (that.value()) {\n                        that._filterSource({\n                            value: that.ignoreCase ? that.value().toLowerCase() : that.value(),\n                            operator: that.options.filter,\n                            field: that.options.dataTextField,\n                            ignoreCase: that.ignoreCase\n                        }).done(function() {\n                            if (that._allowOpening()) {\n                                that._resetFocusItem();\n                                that.popup.open();\n                            }\n                        });\n                    }\n                    e.preventDefault();\n                } else if (key === keys.ESC ) {\n                    if (visible) {\n                        e.preventDefault();\n                        that.close();\n                    } else {\n                        that._clearValue();\n                    }\n                } else if (e.altKey && key === keys.UP && visible) {\n                    e.preventDefault();\n                    that.close();\n                } else if (key === keys.UP) {\n                    if (visible) {\n                        this._move(current ? \"focusPrev\" : \"focusLast\");\n                    }\n                    e.preventDefault();\n                } else if (key === keys.HOME) {\n                    this._move(\"focusFirst\");\n                } else if (key === keys.END) {\n                    this._move(\"focusLast\");\n                } else if (key === keys.ENTER || key === keys.TAB) {\n\n                    if (key === keys.ENTER && visible) {\n                        e.preventDefault();\n                    }\n\n                    if (visible && current) {\n                        var dataItem = listView.dataItemByIndex(listView.getElementIndex(current));\n                        if (that.trigger(\"select\", { dataItem: dataItem, item: current })) {\n                            return;\n                        }\n\n                        this._select(current);\n                    }\n\n                    this._blur();\n                } else if (that.popup.visible() && (key === keys.PAGEDOWN || key === keys.PAGEUP)) {\n                    e.preventDefault();\n\n                    var direction = key === keys.PAGEDOWN ? 1 : -1;\n                    listView.scrollWith(direction * listView.screenHeight());\n                } else {\n                    // In some cases when the popup is opened resize is triggered which will cause it to close\n                    // Setting the below flag will prevent this from happening\n                    that.popup._hovered = true;\n                    that._search();\n                }\n            },\n\n            _keypress: function() {\n                this._oldText = this.element.val();\n                this._typing = true;\n            },\n\n            _move: function(action) {\n                this.listView[action]();\n\n                if (this.options.suggest && this.listView.focus() == null && action == \"focusNext\") {\n                    this.listView.focus(0);\n                    this.suggest(this.listView._view[0].item);\n                } else if (this.options.suggest && this.listView.focus() == null && action == \"focusPrev\") {\n                    let index = this.listView._view.length - 1;\n                    this.listView.focus(index);\n                    this.suggest(this.listView._view[index].item);\n                } else if (this.options.suggest && (action == \"focusFirst\" || action == \"focusLast\")) {\n                   caret(this.element);\n                } else if (this.options.suggest && this.listView.focus() != null) {\n                    this.suggest(this.listView.focus());\n                }\n            },\n\n            _placeholder: function(show) {\n                if (placeholderSupported) {\n                    return;\n                }\n\n                var that = this,\n                    element = that.element,\n                    placeholder = that.options.placeholder,\n                    value;\n\n                if (placeholder) {\n                    value = element.val();\n\n                    if (show === undefined$1) {\n                        show = !value;\n                    }\n\n                    if (!show) {\n                        if (value !== placeholder) {\n                            placeholder = value;\n                        } else {\n                            placeholder = \"\";\n                        }\n                    }\n\n                    if (value === that._old && !show) {\n                        return;\n                    }\n\n                    element.toggleClass(\"k-readonly\", show)\n                           .val(placeholder);\n\n                    if (!placeholder && element[0] === document.activeElement) {\n                        caret(element[0], 0, 0);\n                    }\n                }\n            },\n\n            _separator: function() {\n                var separator = this.options.separator;\n                if (separator instanceof Array) {\n                   return new RegExp(separator.join(\"|\"), 'gi');\n                }\n                return separator;\n            },\n\n            _defaultSeparator: function() {\n                var separator = this.options.separator;\n                if (separator instanceof Array) {\n                    return separator[0];\n                }\n                return separator;\n            },\n\n            _inputValue: function() {\n                return this.element.val();\n            },\n\n            _search: function() {\n                var that = this;\n                clearTimeout(that._typingTimeout);\n\n                that._typingTimeout = setTimeout(function() {\n                    if (that._prev !== that._accessor()) {\n                        that._prev = that._accessor();\n                        that.search();\n                    }\n                }, that.options.delay);\n            },\n\n            _select: function(candidate) {\n                var that = this;\n                that._active = true;\n\n                return that.listView.select(candidate).done(function() {\n                    that._active = false;\n                });\n            },\n\n            _clearButton: function() {\n                List.fn._clearButton.call(this);\n\n                if (this.options.clearButton) {\n                    this._clear.insertAfter(this.element);\n                }\n            },\n\n            _toggleHover: function(e) {\n                $(e.currentTarget).toggleClass(HOVER, e.type === \"mouseenter\");\n            },\n\n            _toggleCloseVisibility: function() {\n                var preventShow = this.element.is(\":disabled\") || this.element.is(\"[readonly]\");\n\n                if (this.value() && !preventShow) {\n                    this._showClear();\n                } else {\n                    this._hideClear();\n                }\n            },\n\n            _wrapper: function() {\n                var that = this,\n                    element = that.element,\n                    DOMelement = element[0],\n                    wrapper;\n\n                wrapper = element.parent();\n\n                if (!wrapper.is(\"span.k-autocomplete\")) {\n                    wrapper = element.wrap(\"<span />\").parent();\n                }\n\n                wrapper.attr(\"tabindex\", -1);\n\n                wrapper[0].style.cssText = DOMelement.style.cssText;\n                element.css({\n                    width: \"\",\n                    height: DOMelement.style.height\n                });\n\n                that._focused = that.element;\n                that.wrapper = wrapper\n                    .addClass(\"k-autocomplete k-input\")\n                    .addClass(DOMelement.className)\n                    .removeClass('input-validation-error');\n            },\n\n            _clearValue: function() {\n                this._clearValueTrigger = false;\n                List.fn._clearValue.call(this);\n                this.element.trigger(\"focus\");\n            }\n        });\n\n        ui.plugin(AutoComplete);\n\n        kendo.cssProperties.registerPrefix(\"AutoComplete\", \"k-input-\");\n\n        kendo.cssProperties.registerValues(\"AutoComplete\", [{\n            prop: \"rounded\",\n            values: kendo.cssProperties.roundedValues.concat([['full', 'full']])\n        }]);\n    })(window.kendo.jQuery);\n    var kendo$1 = kendo;\n\n    exports.__meta__ = __meta__;\n    exports.default = kendo$1;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n"]}
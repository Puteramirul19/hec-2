{"version":3,"sources":["raw-js/kendo.aiprompt.views.js"],"names":["global","factory","exports","module","require","define","amd","globalThis","self","kendo","_globals","AipromptViews","this","$","Widget","ui","messageTypes","AIPromptBaseView","extend","init","element","options","that","fn","call","aiprompt","getKendoAIPrompt","contentElement","footerElement","buttonText","buttonIcon","service","name","render","_renderContent","_renderFooter","_renderContentElement","content","addClass","append","_renderFooterElement","footer","_ajaxRequest","prompt","isRetry","history","data","_getAjaxData","requestOptions","url","type","contentType","JSON","stringify","success","response","_ajaxSuccessHandler","headers","progress","ajax","outputGetter","_getResponseMessageText","output","id","guid","activeView","trigger","addPromptOutput","generateButton","find","removeClass","Message","Text","defaultData","role","value","text","length","concat","isPresent","Object","keys","messages","isFunction","isPlainObject","Error","destroy","off","remove","DEFAULT_PROMPT_VIEW_TEMPLATE","suggestions","promptSuggestionItemTemplate","promptSuggestions","map","suggestion","join","DEFAULT_PROMPT_VIEW_FOOTER_TEMPLATE","generateOutput","DEFAULT_PROMPT_VIEW_SUGGESTION_ITEM_TEMPLATE","AIPromptPromptView","template","viewTemplate","footerTemplate","setTextAreaValue","getKendoTextArea","_focusSuggestion","attr","initializeComponents","kendoTextArea","resize","placeholder","promptPlaceholder","textArea","kendoButton","icon","themeColor","rounded","click","e","eventArgs","transport","read","first","nextExpanderContentId","expanderButton","next","fillMode","target","closest","iconEl","sender","is","toggle","on","keyCode","preventDefault","prev","siblings","last","view","DEFAULT_OUTPUT_CARD_TEMPLATE_FUNC","showOutputRating","showOutputSubtitleTooltip","encodedPromptOutputs","outputTitle","htmlEncode","copyOutput","retryGeneration","ratePositive","rateNegative","DEFAULT_OUTPUT_VIEW_TEMPLATE","promptOutputs","AIPromptOutputView","unshift","renderPromptOutput","card","outputsContainer","_getOutputFromElement","parentElement","promptOutput","navigator","clipboard","writeText","rateType","AIPromptCommandsView","promptCommands","commandItems","panelBarEl","kendoPanelBar","animation","dataSource","selectable","select","ev","item","dataItem","hasChildren","promptViewWrapper","EMPTY_TEMPLATE","AIPromptCustomView","window","jQuery","kendo$1","__meta__","category","description","depends","hidden","chunk","default","defineProperty"],"mappings":"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","file":"kendo.aiprompt.views.min.js","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('kendo.core.js'), require('kendo.icons.js'), require('kendo.textarea.js'), require('kendo.button.js'), require('kendo.panelbar.js')) :\n    typeof define === 'function' && define.amd ? define(['exports', 'kendo.core', 'kendo.icons', 'kendo.textarea', 'kendo.button', 'kendo.panelbar'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global.kendo = global.kendo || {}, global.kendo._globals = global.kendo._globals || {}, global.kendo._globals.AipromptViews = {})));\n})(this, (function (exports) {\n    const __meta__ = {\n        id: \"aiprompt.views\",\n        name: \"AipromptViews\",\n        category: \"web\",\n        description: \"A reusable outputed chunk of code\",\n        depends: ['core', 'icons', 'textarea', 'button', 'panelbar'],\n        hidden: true,\n        chunk: true,\n        \n    };\n\n    (function($) {\n        let Widget = kendo.ui.Widget;\n        const messageTypes = {\n            \"ai\": \"assistant\",\n            \"system\": \"system\",\n            \"user\": \"user\",\n            \"tool\": \"tool\"\n        };\n\n        const KDISABLED = \"k-disabled\";\n\n        let AIPromptBaseView = kendo.ui.AIPromptBaseView = Widget.extend({\n            init: function(element, options) {\n                let that = this;\n\n                Widget.fn.init.call(that, element, options);\n\n                that.aiprompt = element.getKendoAIPrompt();\n\n                that.contentElement = that.options.contentElement;\n                that.footerElement = that.options.footerElement;\n                that.buttonText = that.options.buttonText;\n                that.buttonIcon = that.options.buttonIcon;\n                that.service = that.options.service;\n            },\n\n            options: {\n                name: \"AIPromptBaseView\",\n                buttonText: \"\",\n                buttonIcon: \"\",\n            },\n\n            render: function() {\n                let that = this;\n\n                that._renderContent();\n                that._renderFooter();\n            },\n\n            _renderContentElement: function() {\n                let that = this;\n                let content = $(\"<div></div>\").addClass(\"k-prompt-content\");\n                that.contentElement = content;\n                that.element.append(content);\n\n                return that.contentElement;\n            },\n\n            _renderFooterElement: function() {\n                let that = this;\n                let footer = $(\"<div></div>\").addClass(\"k-prompt-footer\");\n                that.footerElement = footer;\n                that.element.append(footer);\n\n                return that.footerElement;\n            },\n\n            _ajaxRequest: function(prompt, isRetry, history) {\n                let that = this;\n                let service = that.service;\n                let data = that._getAjaxData(prompt, isRetry, history);\n                const url = typeof service === \"string\" ? service : service.url;\n                const requestOptions = {\n                    url: url,\n                    type: \"POST\",\n                    contentType: \"application/json\",\n                    data: JSON.stringify(data),\n                    success: (response) => that._ajaxSuccessHandler(response, isRetry, prompt),\n                };\n\n                if (service?.headers) {\n                    requestOptions.headers = service.headers;\n                }\n                kendo.ui.progress(that.contentElement, true);\n\n                return $.ajax(requestOptions);\n            },\n\n            _ajaxSuccessHandler: function(response, isRetry, prompt) {\n                const that = this;\n                const outputGetter = that.service?.outputGetter || that._getResponseMessageText;\n                const output = {\n                    id: kendo.guid(),\n                    output: outputGetter(response),\n                    prompt: prompt,\n                    isRetry: isRetry,\n                    activeView: 1\n                };\n\n                that.aiprompt.trigger(\"promptResponse\", { output });\n                that.aiprompt.addPromptOutput(output);\n                that.aiprompt.activeView(output.activeView);\n\n                if (!isRetry) {\n                    const generateButton = that.footerElement?.find(\"button[ref-generate-output-button]\");\n                    generateButton?.removeClass(KDISABLED);\n                }\n\n                kendo.ui.progress(that.contentElement, false);\n            },\n\n            _getResponseMessageText: function(response) {\n                return response?.Message?.Text || \"An error occurred while processing the request.\";\n            },\n\n            _getAjaxData: function(prompt, isRetry, history) {\n                const that = this;\n                const service = that.service;\n                let defaultData = [\n                    {\n                        role: {\n                            value: messageTypes.user\n                        },\n                        text: prompt\n                    }\n                ];\n\n                if (history?.length) {\n                    defaultData = history.concat(defaultData);\n                }\n\n                if (typeof service === \"string\") {\n                    return defaultData;\n                }\n\n                if (kendo.isPresent(service.data) && Object.keys(service.data).length) {\n                    service.data.messages = defaultData;\n                    return service.data;\n                }\n\n                if (kendo.isFunction(service?.data)) {\n                    return service.data(prompt, isRetry, history);\n                }\n\n                if ($.isPlainObject(service) && kendo.isPresent(service.url)) {\n                    return defaultData;\n                }\n\n                throw new Error(\"Invalid AIPrompt service configuration.\");\n            },\n\n            destroy: function() {\n                let that = this;\n                Widget.fn.destroy.call(that);\n\n                if (that.contentElement) {\n                    that.contentElement.off();\n                    kendo.destroy(that.contentElement);\n                    that.contentElement.remove();\n                }\n\n                if (that.footerElement) {\n                    that.footerElement.off();\n                    kendo.destroy(that.footerElement);\n                    that.footerElement.remove();\n                }\n            }\n        });\n\n        let DEFAULT_PROMPT_VIEW_TEMPLATE = ({ suggestions, promptSuggestionItemTemplate, messages }) => `<div class=\"k-prompt-view\">\n        <textarea ref-prompt-input></textarea>\n        ${suggestions?.length ?\n            `<div class=\"k-prompt-expander\">\n                <button ref-prompt-suggestions-button aria-expanded=\"true\">${messages.promptSuggestions}</button>\n                <div class=\"k-prompt-expander-content\" role=\"list\">\n                    ${suggestions.map(suggestion => promptSuggestionItemTemplate({ suggestion })).join(\"\")}\n                </div>\n            </div>` : ''\n        }\n    </div>`;\n\n        let DEFAULT_PROMPT_VIEW_FOOTER_TEMPLATE = ({ messages }) => `<div class=\"k-actions k-actions-start k-actions-horizontal k-prompt-actions\">\n        <button ref-generate-output-button>${messages.generateOutput}</button>\n    </div>`;\n\n        let DEFAULT_PROMPT_VIEW_SUGGESTION_ITEM_TEMPLATE = ({ suggestion }) => `<div role=\"listitem\" class=\"k-prompt-suggestion\">${suggestion}</div>`;\n        kendo.ui.AIPromptPromptView = AIPromptBaseView.extend({\n            init: function(element, options) {\n                let that = this;\n\n                AIPromptBaseView.fn.init.call(that, element, options);\n                that.promptSuggestions = that.options.promptSuggestions;\n                that.promptSuggestionItemTemplate = kendo.template(that.options.promptSuggestionItemTemplate || DEFAULT_PROMPT_VIEW_SUGGESTION_ITEM_TEMPLATE);\n            },\n            options: {\n                name: \"AIPromptPromptView\",\n                buttonIcon: \"sparkles\",\n            },\n\n            _renderContent: function() {\n                let that = this;\n                let suggestions = that.promptSuggestions;\n                let promptSuggestionItemTemplate = that.promptSuggestionItemTemplate;\n                let content = kendo.template(that.options.viewTemplate || DEFAULT_PROMPT_VIEW_TEMPLATE)({ suggestions, promptSuggestionItemTemplate, messages: that.options.messages });\n\n                that._renderContentElement();\n                that.contentElement.append(content);\n            },\n\n            _renderFooter: function() {\n                let that = this;\n                let footer = kendo.template(that.options.footerTemplate || DEFAULT_PROMPT_VIEW_FOOTER_TEMPLATE)({ messages: that.options.messages });\n\n                that._renderFooterElement();\n                that.footerElement.append(footer);\n            },\n\n            setTextAreaValue: function(value) {\n                let that = this;\n                that.contentElement.find(\"textarea[ref-prompt-input]\").getKendoTextArea().value(value);\n            },\n\n            _focusSuggestion(element) {\n                let that = this;\n                if (!element || !element.length) {\n                    return;\n                }\n\n                that.contentElement.find(\".k-prompt-suggestion[tabindex=0]\").attr(\"tabindex\", \"-1\");\n                element.attr(\"tabindex\", \"0\").trigger(\"focus\");\n            },\n            initializeComponents: function() {\n                let that = this;\n                let suggestions = that.promptSuggestions;\n                const generateButton = that.footerElement.find(\"button[ref-generate-output-button]\");\n\n                that.contentElement.find(\"textarea[ref-prompt-input]\").kendoTextArea($.extend({\n                    resize: \"vertical\",\n                    placeholder: that.options.messages.promptPlaceholder,\n                }, that.options.textArea));\n\n                generateButton.kendoButton({\n                    icon: \"sparkles\",\n                    themeColor: \"primary\",\n                    rounded: \"full\",\n                    click: function(e) {\n                        const prompt = that.contentElement.find(\"textarea[ref-prompt-input]\").getKendoTextArea().value();\n                        const eventArgs = { prompt, isRetry: false, history: [] };\n\n                        that.aiprompt.trigger(\"promptRequest\", eventArgs);\n\n                        if (that.service) {\n                            that.aiprompt.transport.read({ prompt: eventArgs.prompt, history: eventArgs.history, isRetry: false });\n                        }\n                    }\n                });\n\n                if (suggestions?.length) {\n                    that.contentElement.find(\".k-prompt-suggestion\").first().attr(\"tabindex\", \"0\");\n                    let nextExpanderContentId = kendo.guid();\n                    let expanderButton = that.contentElement.find(\".k-prompt-expander button[ref-prompt-suggestions-button]\");\n\n                    that.contentElement.find(\".k-prompt-expander button[ref-prompt-suggestions-button]\").attr(\"aria-controls\", nextExpanderContentId);\n                    expanderButton.next(\".k-prompt-expander-content\").attr(\"id\", nextExpanderContentId);\n\n                    that.contentElement.find(\".k-prompt-expander button[ref-prompt-suggestions-button]\").kendoButton({\n                        icon: \"chevron-up\",\n                        fillMode: \"flat\",\n                        click: function(e) {\n                            let expander = $(e.target).closest(\".k-prompt-expander\");\n                            let content = expander.find(\".k-prompt-expander-content\");\n                            let iconEl = e.sender.element.find(\".k-icon\");\n                            kendo.ui.icon(iconEl, content.is(\":visible\") ? \"chevron-down\" : \"chevron-up\");\n                            content.toggle();\n                            e.sender.element.attr(\"aria-expanded\", content.is(\":visible\"));\n                        }\n                    });\n\n                    that.contentElement.on(\"click\", \".k-prompt-suggestion\", function(e) {\n                        that.setTextAreaValue($(e.target).text());\n                    });\n\n                    that.contentElement.on(\"keydown\", \".k-prompt-suggestion\", function(e) {\n                        if (e.keyCode === 40 || e.keyCode === 38 || e.keyCode === 36 || e.keyCode === 35 || e.keyCode === 13 || e.keyCode === 32) {\n                            e.preventDefault();\n                            let target = $(e.target);\n                            let siblings = target.siblings();\n                            let next, prev;\n\n                            // down arrow\n                            if (e.keyCode === 40) {\n                                next = target.next();\n                                that._focusSuggestion(next);\n                            }\n\n                            // up arrow\n                            if (e.keyCode === 38) {\n                                prev = target.prev();\n                                that._focusSuggestion(prev);\n                            }\n\n                            // home\n                            if (e.keyCode === 36) {\n                                prev = siblings.first();\n                                that._focusSuggestion(prev);\n                            }\n\n                            // end\n                            if (e.keyCode === 35) {\n                                next = siblings.last();\n                                that._focusSuggestion(next);\n                            }\n\n                            // enter or space\n                            if (e.keyCode === 13 || e.keyCode === 32) {\n                                that.setTextAreaValue($(e.target).text());\n                            }\n                        }\n                    });\n\n                }\n\n                if (kendo.isFunction(that.options.initializeComponents)) {\n                    that.options.initializeComponents({ view: that });\n                }\n            },\n\n            render: function() {\n                let that = this;\n\n                that._renderContent();\n                that._renderFooter();\n                that.initializeComponents();\n            },\n        });\n\n        let DEFAULT_OUTPUT_CARD_TEMPLATE_FUNC = ({ output, showOutputRating, messages, showOutputSubtitleTooltip, encodedPromptOutputs }) => `\n    <div role=\"listitem\" tabindex=\"0\" class=\"k-card\" data-id=\"${output.id}\" >\n        <div class=\"k-card-header\">\n            <div class=\"k-card-title\">${messages.outputTitle}</div>\n            <div class=\"k-card-subtitle\" ${showOutputSubtitleTooltip ? `title=\"${kendo.htmlEncode(output.prompt)}\"` : \"\" }>${kendo.htmlEncode(output.prompt)}</div>\n        </div>\n        <div class=\"k-card-body\">\n            <p>${encodedPromptOutputs ? kendo.htmlEncode(output.output) : output.output}</p>\n        </div>\n        <div class=\"k-actions k-actions-start k-actions-horizontal k-card-actions\">\n            <button ref-copy-button>${messages.copyOutput}</button>\n            <button ref-retry-button>${messages.retryGeneration}</button>\n\n            <span class=\"k-spacer\"></span>\n            ${showOutputRating ? `\n            <button ref-rate-positive title=${messages.ratePositive ? messages.ratePositive : 'Helpful'}>${messages.ratePositive}</button>\n            <button ref-rate-negative title=${messages.rateNegative ? messages.rateNegative : 'Unhelpful'}>${messages.rateNegative}</button>\n            ` : \"\"}\n        </div>\n    </div>`;\n\n        let DEFAULT_OUTPUT_VIEW_TEMPLATE = ({ promptOutputs, showOutputRating, messages, showOutputSubtitleTooltip, encodedPromptOutputs }) => `<div class=\"k-prompt-view\"><div role=\"list\" class=\"k-card-list\">\n    ${promptOutputs ? promptOutputs.map(output => DEFAULT_OUTPUT_CARD_TEMPLATE_FUNC({ output, showOutputRating, messages, showOutputSubtitleTooltip, encodedPromptOutputs })).join(\"\") : ''}\n    </div></div>`;\n\n        kendo.ui.AIPromptOutputView = AIPromptBaseView.extend({\n            init: function(element, options) {\n                let that = this;\n\n                AIPromptBaseView.fn.init.call(that, element, options);\n\n                that.promptOutputs = (that.options.promptOutputs || []).map(output => {\n                    output.id = output.id || kendo.guid();\n                    return output;\n                });\n\n                that.showOutputRating = that.options.showOutputRating;\n            },\n\n            options: {\n                name: \"AIPromptOutputView\",\n                buttonIcon: \"comment\",\n                promptOutputs: []\n            },\n\n            addPromptOutput: function(output) {\n                let that = this;\n                output.id = output.id || kendo.guid();\n                that.promptOutputs.unshift(output);\n                that.renderPromptOutput(output);\n            },\n\n            renderPromptOutput: function(output) {\n                let that = this;\n                let showOutputRating = that.options.showOutputRating;\n                let encodedPromptOutputs = that.options.encodedPromptOutputs;\n                let messages = that.options.messages;\n\n                let card = $(kendo.template(DEFAULT_OUTPUT_CARD_TEMPLATE_FUNC)({ output, showOutputRating, messages, encodedPromptOutputs }));\n                that.outputsContainer.append(card);\n                that.initializeComponents(card);\n            },\n\n            _renderContent: function() {\n                let that = this;\n                let promptOutputs = that.promptOutputs;\n                let showOutputRating = that.options.showOutputRating;\n                let showOutputSubtitleTooltip = that.options.showOutputSubtitleTooltip;\n                let messages = that.options.messages;\n                let encodedPromptOutputs = that.options.encodedPromptOutputs;\n\n                let outputsContainer = kendo.template(that.viewTemplate || DEFAULT_OUTPUT_VIEW_TEMPLATE)({ promptOutputs, showOutputRating, messages, showOutputSubtitleTooltip, encodedPromptOutputs });\n                that.outputsContainer = $(outputsContainer);\n                that._renderContentElement();\n                that.contentElement.append(that.outputsContainer);\n            },\n\n            _getOutputFromElement: function(element) {\n                let that = this;\n                let card = $(element).closest(\".k-card\");\n                let id = card.data(\"id\");\n\n                let promptOutput = that.promptOutputs.find(output => output.id === id);\n\n                return promptOutput;\n            },\n\n            initializeComponents: function(parentElement) {\n                let that = this;\n                parentElement = parentElement || that.contentElement;\n\n                parentElement.find(\"[ref-copy-button]\").kendoButton({\n                    icon: \"copy\",\n                    fillMode: \"flat\",\n                    themeColor: \"primary\",\n                    click: function(e) {\n                        let promptOutput = that._getOutputFromElement(e.target);\n                        if (!that.aiprompt.trigger(\"outputCopy\", { output: promptOutput, prompt: promptOutput.prompt })) {\n                            if (navigator.clipboard && typeof navigator.clipboard.writeText === \"function\") {\n                                navigator.clipboard.writeText(promptOutput.output);\n                            }\n                        }\n                    }\n                });\n\n                parentElement.find(\"[ref-retry-button]\").kendoButton({\n                    icon: \"arrow-rotate-cw\",\n                    fillMode: \"flat\",\n                    click: function(e) {\n                        let promptOutput = that._getOutputFromElement(e.target);\n                        const history = { role: { value: messageTypes.ai }, text: promptOutput.output };\n                        const eventArgs = { prompt: promptOutput.prompt, output: promptOutput, isRetry: true, history: [history] };\n\n                        that.aiprompt.trigger(\"promptRequest\", eventArgs);\n\n                        if (that.service) {\n                            that.aiprompt.transport.read({ prompt: promptOutput.prompt, history: eventArgs.history, isRetry: true });\n                        }\n                    }\n                });\n\n                if (that.options.showOutputRating) {\n                    parentElement.find(\"[ref-rate-positive]\").kendoButton({\n                        icon: \"thumb-up-outline\",\n                        fillMode: \"flat\",\n                        click: function(e) {\n                            let promptOutput = that._getOutputFromElement(e.target);\n                            let rateType = \"positive\";\n\n                            that.aiprompt.trigger(\"outputRatingChange\", { rateType, output: promptOutput });\n\n                            kendo.ui.icon(e.sender.element.find(\".k-icon\"), \"thumb-up\");\n                            kendo.ui.icon(e.target.next(\"[ref-rate-negative]\").find(\".k-icon\"), \"thumb-down-outline\");\n                        }\n                    });\n\n                    parentElement.find(\"[ref-rate-negative]\").kendoButton({\n                        icon: \"thumb-down-outline\",\n                        fillMode: \"flat\",\n                        click: function(e) {\n                            let promptOutput = that._getOutputFromElement(e.target);\n                            let rateType = \"negative\";\n                            that.aiprompt.trigger(\"outputRatingChange\", { rateType, output: promptOutput });\n\n                            kendo.ui.icon(e.sender.element.find(\".k-icon\"), \"thumb-down\");\n                            kendo.ui.icon(e.target.prev(\"[ref-rate-positive]\").find(\".k-icon\"), \"thumb-up-outline\");\n                        }\n                    });\n                }\n            },\n\n            render: function() {\n                let that = this;\n                that._renderContent();\n                that.initializeComponents();\n\n                that.contentElement.on(\"keydown\", \".k-card\", function(e) {\n                    let target = $(e.target);\n\n                    // if up or down arrow, focus next or previous card\n                    // if home or end, focus first or last card\n                    if (e.keyCode === 40 || e.keyCode === 38 || e.keyCode === 36 || e.keyCode === 35) {\n                        e.preventDefault();\n\n                        // down arrow\n                        if (e.keyCode === 40) {\n                            target.next(\".k-card\").trigger(\"focus\");\n                        }\n\n                        // up arrow\n                        if (e.keyCode === 38) {\n                            target.prev(\".k-card\").trigger(\"focus\");\n                        }\n\n                        // home\n                        if (e.keyCode === 36) {\n                            that.contentElement.find(\".k-card\").first().trigger(\"focus\");\n                        }\n\n                        // end\n                        if (e.keyCode === 35) {\n                            that.contentElement.find(\".k-card\").last().trigger(\"focus\");\n                        }\n                    }\n                });\n            }\n        });\n\n        kendo.ui.AIPromptCommandsView = AIPromptBaseView.extend({\n            options: {\n                name: \"AIPromptCommandsView\",\n                buttonText: \"\",\n                buttonIcon: \"more-horizontal\",\n                promptCommands: []\n            },\n\n            initializeComponents: function() {\n                let that = this;\n                let commandItems = that.options.promptCommands;\n\n                let panelBarEl = $(\"<div></div>\").kendoPanelBar({\n                    animation: false,\n                    dataSource: commandItems,\n                    selectable: false,\n                    select: function(ev) {\n                        let item = $(ev.item);\n                        let dataItem = this.dataItem(item);\n                        if (dataItem.hasChildren) {\n                            return;\n                        }\n\n                        that.aiprompt.trigger(\"commandExecute\", { sender: that.aiprompt, item: dataItem });\n                    }\n                });\n                const promptViewWrapper = $(\"<div class='k-prompt-view'>\");\n                promptViewWrapper.append(panelBarEl);\n\n                that.contentElement.append(promptViewWrapper);\n            },\n\n            render: function() {\n                let that = this;\n                that._renderContentElement();\n                that.initializeComponents();\n            },\n        });\n\n        let EMPTY_TEMPLATE = () => \"\";\n        kendo.ui.AIPromptCustomView = AIPromptBaseView.extend({\n            options: {\n                name: \"AIPromptCustomView\",\n                buttonText: \"\",\n                buttonIcon: \"\",\n                viewTemplate: EMPTY_TEMPLATE,\n                footerTemplate: EMPTY_TEMPLATE,\n            },\n\n            initializeComponents: function() {\n                let that = this;\n                if (typeof that.options.initializeComponents === \"function\") {\n                    that.options.initializeComponents.call(that);\n                }\n            },\n\n            _renderContent: function() {\n                let that = this;\n                let content = kendo.template(that.options.viewTemplate)({ aiprompt: that });\n\n                that._renderContentElement();\n                that.contentElement.append(content);\n            },\n\n            _renderFooter: function() {\n                let that = this;\n                if (that.options.footerTemplate === EMPTY_TEMPLATE) {\n                    return;\n                }\n\n                let footer = kendo.template(that.options.footerTemplate)({ messages: that.options.messages });\n\n                that._renderFooterElement();\n                that.footerElement.append(footer);\n            },\n            render: function() {\n                let that = this;\n                that._renderContent();\n                that._renderFooter();\n                that.initializeComponents();\n            },\n        });\n\n    })(window.kendo.jQuery);\n    var kendo$1 = kendo;\n\n    exports.__meta__ = __meta__;\n    exports.default = kendo$1;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n"]}
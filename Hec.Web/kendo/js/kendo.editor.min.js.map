{"version":3,"sources":["raw-js/kendo.editor.js"],"names":["global","factory","exports","module","require","define","amd","globalThis","self","kendo","_globals","Editor","this","$","editorNS","Command","GenericCommand","registerTool","Tool","RestorePoint","extend","InsertHtmlCommand","InsertHtmlTool","UndoRedoStack","Observable","init","options","fn","call","clear","events","push","command","stack","slice","currentCommandIndex","undo","canUndo","trigger","redo","canRedo","length","deepExtend","util","undefined$1","window","Class","Widget","ui","os","support","mobileOS","browser","keys","outerWidth","_outerWidth","outerHeight","_outerHeight","FORMATTING_MARKS_STYLE_ID","FORMATTING_MARKS_OVERLAY_ID","FORMATTING_MARKS_OVERLAY_WRAPPER_ID","SELECT","PLACEHOLDER_CLASS","PLACEHOLDER_TAG_ID","NATIVE_TOOLS","EditorUtils","editorWrapperTemplate","formatByName","name","format","i","inArray","tags","getToolCssClass","icon","cssClass","superscript","subscript","justifyLeft","justifyCenter","justifyRight","justifyFull","insertUnorderedList","insertOrderedList","insertUpperRomanList","insertLowerRomanList","import","indent","outdent","createLink","unlink","insertImage","insertFile","viewHtml","foreColor","backColor","createTable","addColumnLeft","addColumnRight","addRowAbove","addRowBelow","deleteRow","deleteColumn","mergeCellsHorizontally","mergeCellsVertically","splitCellHorizontally","splitCellVertically","tableProperties","tableCellProperties","tableWizardInsert","tableAlignLeft","tableAlignCenter","tableAlignRight","cleanFormatting","copyFormat","applyFormat","pdf","nameToKebab","replace","toLowerCase","toolName","tool","defaultTools","registerFormat","formatName","formats","cacheComments","content","comments","index","retrieveComments","supportedContentEditable","document","documentElement","toolGroups","basic","scripts","alignment","lines","symbols","links","lists","dent","tablesWizard","tablesInsert","tablesAddDelete","tablesMerge","tablesPosition","formatPainter","__suppressEditableCheck","element","toolbarContainer","type","domElement","that","editor","dom","Dom","_registerHandler","closest","update","bind","_isAiPromptEnabled","_addAIPromptElements","_setupType","_initToolbar","_setupHeight","_resizable","_initializeContentElement","_setupKeyboard","clipboard","Clipboard","undoRedoStack","_populateValue","mousedown","_endTyping","mouseup","e","_mouseup","_handleSpaceAndNewLines","_initializeImmutables","_ariaLabel","wrapper","find","toolbar","resize","_initInlineOverflowWrapper","notify","_showWatermarkOverlay","_initAIPrompt","_isInlineAIPromptEnabled","_initInlineAIPrompt","messages","auto","bold","italic","underline","strikethrough","fitToCell","lineHeight","formattingMarks","insertHtml","fontName","fontNameInherit","fontSize","fontSizeInherit","formatBlock","formatting","style","emptyFolder","editAreaTitle","uploadFile","overflowAnchor","orderBy","orderBySize","orderByName","invalidFileType","deleteFile","overwriteFile","directoryNotFound","imageWebAddress","imageAltText","imageWidth","imageHeight","fileWebAddress","fileTitle","fileText","linkWebAddress","linkText","linkToolTip","linkOpenInNewWindow","dialogUpdate","dialogInsert","dialogOk","dialogCancel","createTableHint","tableWizard","tableTab","cellTab","accessibilityTab","caption","summary","width","height","units","cellSpacing","cellPadding","topPadding","leftPadding","bottomPadding","rightPadding","independentCellPaddings","cellMargin","captionAlignment","position","background","tableBackground","id","border","borderStyle","borderWidth","borderColor","collapseBorders","wrapText","associateCellsWithHeaders","alignLeft","alignCenter","alignRight","alignLeftTop","alignCenterTop","alignRightTop","alignLeftMiddle","alignCenterMiddle","alignRightMiddle","alignLeftBottom","alignCenterBottom","alignRightBottom","alignRemove","columns","rows","selectAllCells","applyToColumn","applyToRow","exportAs","print","headerRows","headerColumns","tableSummaryPlaceholder","associateNone","associateScope","associateIds","borderNone","placeholder","nonce","unsafeInline","encoded","formattingMarksRefreshDelay","domain","resizable","deserialization","custom","serialization","entities","semantic","optimizeTags","keepEOL","pasteCleanup","all","css","keepNewLines","msAllFormatting","msConvertLists","msTags","none","span","stylesheets","dialogOptions","modal","draggable","animation","imageBrowser","fileBrowser","navigateOnTab","text","value","tools","ai","destroy","_deregisterHandlers","clearTimeout","_spellCorrectTimeout","_focusOutside","windowInstance","tablePopup","_destroyUploadWidget","interSectionObserver","disconnect","resizeObserver","_destroyResizings","_destroyFormattingMarksOverlay","setOptions","_setOptionsTools","_initializePlaceholder","createRange","RangeUtils","encodedValue","encode","exec","params","range","Error","body","getAttribute","keyboard","isTypingInProgress","_focusBody","selectRange","_range","getRange","Object","map","key","immutables","test","execCommand","async","change","_commandChange","_selectionChange","managesUndoRedo","focus","restoreSelection","selection","getSelection","rangeCount","getRangeAt","doc","startContainer","endContainer","startOffset","endOffset","setStart","collapse","SelectionUtils","selectionFromDocument","paste","html","insertAfterSelection","refresh","textarea","val","remove","selectionRestorePoint","toRange","saveSelection","container","commonAncestorContainer","contains","selectedHtml","Serializer","domToXhtml","cloneContents","removeAllRanges","addRange","state","textNodes","finder","collapsed","getFormat","isFormatted","_togglePlaceholder","trim","_oldValue","currentHtml","htmlToDom","_refreshTools","_bindTools","unbind","filter","el","each","initialize","_blur","old","_containsRange","isAncestorOrSelf","_createContentElement","iframe","wnd","lang","specifiedDomain","domainScript","src","hide","title","frameBorder","addClass","attr","tabIndex","insertBefore","location","hostname","contentWindow","contentDocument","observer","IntersectionObserver","entries","entry","isIntersecting","_decorateFormatting","unobserve","observe","getElementsByTagName","open","write","isRtl","ios","edge","chrome","href","join","close","_deleteSavedRange","component","dataSource","items","tag","className","formattingElement","getKendoDropDownList","data","list","getEffectiveBackground","inlineStyle","_appendFormattingMarksStyles","elementId","$head","head","append","_appendFormattingMarksOverlay","_formattingMarksOverlayWrapper","_formattingMarksOverlay","appendTo","_bodyTopBottomPaddings","parseFloat","_isInlineEditor","insertAfter","_updateFormattingMarksOverlayHeight","scrollHeight","inlineHeight","_inlineOverflowWrapper","wrap","parent","splitterElement","aiPromptElement","defaultCommands","_mapCommands","inlineAIPrompt","commands","InlineAIPrompt","kendoInlineAIPrompt","service","systemPrompt","promptRequest","context","toString","promptAction","action","parentId","item","prompt","aiPrompt","kendoAIPrompt","views","buttonIcon","textArea","suffixOptions","template","themeColor","initializeComponents","view","contentElement","kendoButtonGroup","_contextSelection","fillMode","select","selectionToggleButton","sender","_buttons","fullContentToggleButton","indices","target","toggle","_toggleIndex","promptCommands","contextSelection","_contextTemplate","commandExecute","transport","read","history","isRetry","aiPromptSplitter","kendoSplitter","panes","size","collapsible","min","pane","_selectionChangeHandler","query","defaultTemplate","selectionRect","getBoundingClientRect","elementRect","_popup","popupHeight","popupWidth","y","scrollY","top","x","scrollX","left","innerHeight","bottom","innerWidth","_getSelectionPosition","_initContextMenu","renderIcon","_aiContextMenu","kendoContextMenu","targe","_insertAIResult","handlers","_handlers","h","off","handler","_uploadWidget","endTyping","scrollTop","activeElement","_activeElement","clientHeight","msie","opacity","_handleToolbarClick","_immutablesContext","Immutables","immutablesContext","editableTextNodes","blurTrigger","mousedownTrigger","createElement","setAttribute","appendChild","interval","setInterval","last","clearInterval","_wrapSingleTextNodeInParagraph","setTimeout","_mousedown","touch","keydown","_spellCorrect","parentElement","nodeName","_cachedHeight","restoreHeight","keyCode","BACKSPACE","DELETE","F10","first","preventPopupHide","preventDefault","LEFT","RIGHT","offset","next","nextChar","nodeType","nodeValue","toolFromShortcut","toolOptions","keyPressCommand","_runPostContentKeyCommands","keypress","_showElementResizeHandles","keyup","selectionCodes","TAB","PAGEUP","PAGEDOWN","END","HOME","UP","DOWN","INSERT","ctrlKey","altKey","shiftKey","_refreshInterval","click","selectNode","focusin","hasAttribute","_showWindow","focusout","active","popup","toolbarContainerElement","get","_toolbarFocused","hasClass","removeClass","_hideWindow","_initializeColumnResizing","_initializeRowResizing","_initializeElementResizing","defaults","toolbarOptions","_processToolbarItems","_setNativeTools","parentMessages","Boolean","mode","evaluateTemplates","overflow","isPlainObject","ToolBar","on","is","toolbarWidth","_initToolbarWindow","toolbarEl","prepend","kendoWindow","dragHandle","effects","minHeight","visible","autoFocus","actions","dragend","_moved","_selectionStarted","parents","stopPropagation","gecko","which","tagName","defaultValue","deserializedRoot","getAllComments","innerHTML","_resetGroups","current","result","optionsTools","j","t","guidGroupName","flatDefaultTools","processedObject","currentGroups","Array","isArray","guid","_processToolOptions","gr","includes","values","group","g","to","_processDefaultTool","shortcuts","uiOptions","originalOptions","palette","attributes","class","showText","showIcon","tooltip","ColorTool","componentOptions","preview","input","buttons","_shortcutSequence","nodes","filterBy","htmlIndentSpace","_updateImmutablesState","eventNames","NS","hasOwnProperty","applyEventMap","split","toolsFromShortcut","o","changesContent","childNodes","nodeTypes","TEXT_NODE","refreshDelay","applyFormattingMarks","clearFormattingMarksOverlay","_toggledFormattingMarks","children","_formattingMarksTimeout","empty","heightStyle","expectedHeight","parseInt","actualHeight","indexOf","isNaN","Keyboard","BackspaceHandler","TypingHandler","SystemHandler","SelectAllHandler","_wrapTextarea","res","ctrl","shift","alt","beforeCorrection","falseTrigger","contextmenu","one","mozilla","_finishUpdate","show","$body","toggleClass","overflowPopup","uiElement","trackImmutables","toolInOverflowMenuIsHidden","toolsToBeUpdated","overflowMenu","toolInOverflowMenu","w","editorWrap","editArea","isResizable","resizableMin","resizableMax","max","maxHeight","minWidth","maxWidth","ResizeObserver","_resizeTimeOut","_destroyElementResizing","ElementResizingFactory","dispose","_destroyRowResizing","RowResizing","_destroyColumnResizing","ColumnResizing","create","_showElementResizeHandlesProxy","elementResizing","parentNode","showResizeHandles","columnResizing","rowResizing","_getWindowWidth","editorElement","_overlapsWindow","box","toolbarWrapper","toolbarWrapperOffset","toolbarWrapperLeft","toolbarWrapperTop","boxOffset","boxOffsetLeft","boxOffsetTop","editorOffset","Math","plugin","commandArguments","noop","UndoTool","enable","removeAttr","emptyElementContent","emptyTableCellContent","PDFMixin","prototype","_drawPDF","drawing","drawDOM","saveAsPDF","progress","Deferred","promise","args","then","root","exportPDF","done","dataURI","saveAs","fileName","proxyURL","proxyTarget","forceProxy","resolve","fail","err","reject","jQuery","STYLE","FLOAT","CSSFLOAT","STYLEFLOAT","CLASS","KMARKER","makeMap","len","obj","nonListBlockElements","blockElements","concat","block","selfClosing","inlineElements","inline","fillAttrs","nonEmptyNonTextContentElements","normalize","node","version","firstChild","prev","nextSibling","persistedScrollTop","whitespace","emptyspace","rgb","bom","whitespaceOrBom","cssAttributes","htmlRe","entityRe","entityTable","findNodeIndex","skipText","previousSibling","isDataNode","isAncestorOf","findClosestAncestor","rootElem","iterator","createNodeIterator","NodeFilter","SHOW_COMMENT","FILTER_ACCEPT","curNode","nextNode","getNodeLength","splitDataNode","temp","newNode","cloneNode","denormalizedText","deleteData","attrEquals","cssFloat","blockParentOrBody","parentOfType","ownerDocument","blockParents","blocks","windowFromDocument","defaultView","parentWindow","ELEMENT_NODE","ATTRIBUTE_NODE","CDATA_SECTION_NODE","ENTITY_REFERENCE_NODE","ENTITY_NODE","PROCESSING_INSTRUCTION_NODE","COMMENT_NODE","DOCUMENT_NODE","DOCUMENT_TYPE_NODE","DOCUMENT_FRAGMENT_NODE","NOTATION_NODE","toHex","color","matches","encodableChars","c","charCode","charCodeAt","entity","isBom","stripBom","stripBomNode","removeChild","insignificant","_moz_dirty","_moz_editor_bogus_node","tableCell","significantNodes","grep","child","emptyTextNode","emptyNode","significantChildNodes","isWhitespace","getTextNodes","lastTextNode","lastChild","isMarker","allowsTextContent","every","allWhitespaceContent","isEmptyspace","sibling","direction","isBlock","isPrevBlock","isNextBlock","isSelfClosing","isEmpty","isInline","isImg","isBr","scrollContainer","compatMode","scrollingElement","scrollTo","toStart","elementTop","elementHeight","marker","windowHeight","offsetHeight","ceil","persistScrollTop","offsetParent","offsetTop","offsetLeft","restoreScrollTop","undefined","insertAt","newElement","referenceElement","removeChildren","removeTextSiblings","closestBy","condition","rootCondition","ofType","changeTag","skipAttributes","attribute","specified","cssText","editableParent","contentEditable","unwrap","isChildOfBaseContainer","createEmptyNode","removeAttribute","mergeAttributes","origin","traverseCss","unstyle","backgroundStyle","innerText","classNames","classes","commonAncestor","ancestors","count","arguments","paths","minPathLength","Infinity","output","reverse","closestSplittableParent","apply","editableParents","editableAncestor","closestEditable","types","editable","closestEditableOfType","invert","match","ensureTrailingBreaks","elements","ensureTrailingBreak","removeTrailingBreak","br","reMapTableColumns","table","colAttr","_mapColIndices","clearTableMappings","registeredColumns","rowIndex","cells","colIndex","cellIndex","cell","rowSpan","_mapColspan","colSpan","ci","ri","associateWithIds","theadRows","numberOfTheadRows","tableRows","numberOfTableRows","theadMatrix","tbodyMatrix","tHead","_getNumberOfHeaderRows","_generateIdsForColumns","_generateIdsForRows","_assignIds","col","colspan","rowspan","k","l","timestamp","Date","getTime","row","headers","pushHeaderId","forEach","_onlyUnique","_getNumberOfColumns","currentIndex","numberOfCols","Number","_getNumberOfHeaderColumns","numberOfHeaderRows","number","fontSizeMappings","quoteRe","brRe","pixelRe","emptyPRe","cssDeclaration","sizzleAttr","scriptAttr","onerrorRe","bomSpan","div","supportsLeadingWhitespace","isFunction","toEditableHtml","_toEditableImmutables","immutable","prependTo","_fillEmptyElements","p","_removeSystemElements","_resetOrderedLists","ol","originalStart","ols","_preventScriptExecution","attributesToRemove","deserialize","semanticFilter","mapStart","tagMap","start","end","skipEncoding","canOptimize","semanticAttributes","specifiedAttributes","textDecoration","font","fontFamily","inlineStyles","ignoredStylePrefixes","prop","startsWith","strong","em","b","u","styleObj","splice","face","styleAttr","properties","property","lastIndex","cssProperties","$node","htmlEncode","skip","childNode","mapper","previous","jqNode","serialize","shouldOptimize","isEmptyBomNode","runCustom","script","childrenCount","textOnly","selectionFromWindow","W3CSelection","selectionFromRange","rangeDocument","documentFromRange","W3CRange","updateRangeProperties","fixIvalidRange","setEnd","setStartBefore","setStartAfter","setEndBefore","setEndAfter","selectNodeContents","deleteContents","cloneRange","deleteSubtree","hasPartialSubtree","getSubtreeIterator","RangeIterator","cloneSubtree","frag","createDocumentFragment","extractContents","extractSubtree","originalRange","insertNode","startNodeName","endNodeName","startAncestor","endAncestor","compareBoundaries","ex","isInvalidRange","fromNode","_current","_next","_end","hasNext","traverse","callback","delta","inStartContainer","inEndContainer","nodeIndex","getSubRange","subRange","textRange","createTextRange","adoptContainer","duplicate","right","textRangeContainer","adoptEndPoint","compareEndPoints","movedStart","movedEnd","cursorNode","textOffset","isData","anchorNode","anchorParent","cursor","moveToElementText","setEndPoint","comparison","appended","RangeEnumerator","enumerate","visit","ImmutablesRangeIterator","ImmutablesRangeEnumerator","rootNode","getEditable","nodeToPath","serializedImmutables","removeImmutables","restoreImmutables","lastType","restoreHtml","path","toRangePoint","denormalizedOffset","Marker","caret","addCaret","removeCaret","containerIndex","textNode","add","expand","isExpandable","rangeBoundary","_removeDeadMarkers","createTextNode","_normalizedIndex","pointer","shouldNormalizeStart","shouldNormalizeEnd","isBomSelected","charAt","collapsedToStart","startParent","endParent","startIndex","endIndex","boundary","immutableParent","image","stringify","partition","partitionRange","contents","mapAll","mapped","getAll","predicate","selector","getMarkers","isStartOf","isEndOf","wrapSelectedElements","startEditable","endEditable","isEnd","beforeCaret","afterCaret","search","substring","complexBlocks","IMMUTABALE","IMMUTABALE_MARKER_SELECTOR","randomId","chars","round","random","updateToolOptions","_initOptions","_toHtml","replaceWith","isDeleting","_cancelDeleting","_cancelTyping","typingInProgress","isTypingKey","backspace","del","cancelDeleting","nextImmutable","closestSelectionLi","closestImmutableLi","_removeImmutable","forwards","commonContainer","_nextNode","startRestorePoint","expandImmutablesIn","startImmutableParent","endImmutableParent","serialized","restorePoint","formatter","lockRange","releaseRange","point","createDialog","postExec","_actionButtonsTemplate","insertButtonIcon","cancelButtonIcon","renderButton","endRestorePoint","ViewHtmlCommand","cmd","dialog","_footerTemplate","_footerMessages","center","FormatCommand","FormatTool","getKendoToolBar","getKendoToggleButton","MOUSEDOWN_NS","InlineFormatFinder","numberOfSiblings","referenceNode","textNodesCount","elementNodesCount","markerCount","findSuitable","sourceNode","findFormat","InlineFormatter","activate","formatNode","formatNodes","consolidate","outerMostInline","pop","GreedyInlineFormatFinder","greedyProperty","fontAttr","getInlineCssValue","attributeValue","pair","cssIndex","propertyAndValue","getFormatInner","parentsUntil","addBack","toArray","GreedyInlineFormatter","toCamelCase","InlineFormatTool","DelayedExecutionTool","FontTool","cssAttr","domAttr","widget","setDataSource","newRange","ENTER","_widget","getKendoColorPicker","storedRange","_inputFocused","unselectable","_value","toCssRgba","fontWeight","togglable","fontStyle","toolIcon","commandOn","closeOnSelect","dataValueField","dataTextField","valuePrimitive","HTTP_PROTOCOL","protocolRegExp","endLinkCharsRegExp","LinkFormatFinder","LinkFormatter","markers","a","ref","UnlinkCommand","LinkCommand","url","_initialText","img","_close","_form","_createForm","_apply","_keydown","linkUrl","_dialog","formElement","form","kendoForm","renderButtons","field","label","editorOptions","after","ESC","textInput","anchor","AutoLinkCommand","detectedLink","detectLink","linkMarker","linkRange","_ensureWebProtocol","startNode","traverser","LeftDomTextTraverser","cancelAtNode","DomTextLinkDetection","_hasProtocolPrefix","_prefixWithWebProtocol","UnlinkTool","isLink","DomPos","_detectEnd","blank","clone","_detectStart","_isLinkDetected","puntuationOptions","extendOptions","RightDomTextTraverser","_skipStartPuntuation","lastIndexOfRegExp","ii","r","str","DomTextTraverser","cancel","_traverse","edgeNode","subText","splitIndex","SPACEBAR","BlockFormatFinder","candidate","suitable","f","_resolveListsItems","until","ImmutablesNS","BlockFormatter","ancestor","_handleImmutables","images","imageAttributes","nonImages","applyFormatting","immutableFormat","namedFormat","GreedyBlockFormatter","formatTag","ListFormatter","blockFormatter","BlockFormatTool","listElements","textAlign","float","display","marginLeft","marginRight","listStylePosition","ListFormatFinder","altAttr","matchesType","isList","unwrapTag","li","isImmutable","containsAny","_parentLists","merge","breakable","findSuitableNode","applyOnSection","section","pushAncestor","listStyleType","lastSection","lastNodes","sections","addLastSection","ul","fragment","ListCommand","ListTool","FormattingTool","toFormattingItem","dot","decorate","optionLabel","dataItem","toJSON","dataBound","getFormattingValue","n","selectBox","_ancestor","operator","CleanFormatCommand","tagsToClean","clean","listFormatter","unwrapListItem","highlightFirst","autoWidth","KEDITORIMAGEURL","KEDITORIMAGETITLE","KEDITORIMAGEWIDTH","KEDITORIMAGEHEIGHT","ImageCommand","removeIEAttributes","onload","onerror","applied","isIE","showBrowser","ImageBrowser","_imageBrowser","ev","selected","dialogHeight","loadingOverlay","ImportCommand","_initializeUploadWidget","importOptions","upload","kendoUpload","success","_onUploadSuccess","_onUploadProgress","_onUploadSelect","error","_onUploadError","complete","_onUploadComplete","showFileList","multiple","saveUrl","autoUpload","saveField","validation","allowedExtensions","maxFileSize","getKendoUpload","_trigger","clearAllFiles","_removeLoadingOverlay","response","files","validationErrors","_initLoadingOverlay","eventType","uploadEvent","_iframeWrapper","_container","postProcess","genericCommand","initialValue","autoSize","ExportAsCommand","exportType","postToProxy","generateForm","submit","exportAsOptions","method","valueInput","exportTypeInput","fileNameInput","antiForgeryInput","csrf_param","ExportAsTool","changeHandler","_exec","itemTemplate","valueTemplate","iconClass","indentDirection","IndentFormatter","parentList","targets","mapImmutables","siblingList","nestedList","getListTypeAttr","targetIndex","styleType","targetNode","listParent","siblings","nextAll","IndentCommand","indentFormatter","OutdentCommand","OutdentTool","isOutdentable","listParentsCount","suitableNodes","ParagraphCommand","_insertMarker","_moveFocus","focusNode","shouldTrim","startInBlock","endInBlock","_blankAfter","paragraph","heading","tableNode","rng","emptyParagraphContent","parentChildrenLength","_insertParagraphAfter","headingDomName","NewLineCommand","filler","kbrParent","oldIE","KEDITORFILEURL","KEDITORFILETEXT","KEDITORFILETITLE","FileCommand","file","FileBrowser","_fileBrowser","ACTIVESTATE","SELECTEDSTATE","SCOPE","ROW","COL","ROWGROUP","COLGROUP","COLSPAN","ROWSPAN","TABLE","THEAD","TBODY","TR","TD","TH","getTouches","columnTemplate","tableFormatFinder","TableCommand","skipCleaners","_tableHtml","columnHtml","rowHeight","insertedTable","PopupTool","btn","popupTemplate","kendoPopup","copyAnchorStyles","_open","_activate","_toggle","_editor","TableWizardTool","TableWizardCommand","insertNewTable","kendoButton","_setTableSize","InsertTableTool","cols","cellWidth","cellHeight","firstCell","eq","lastCell","getOffset","tableFromLocation","floor","clientY","clientX","scrollLeft","offsetWidth","autoApplyNS","_valid","status","initiallyVisible","button","selectedRows","selectedColumns","changed","tableSize","stopImmediatePropagation","TableModificationCommand","_clearColIndexAttr","_findRowSpanCell","_resetElementResizing","_findNextTdInRow","td","lastTd","_adjustColgroups","colgroup","colElements","colgroupElements","numberOfCells","_associateHeaderIds","InsertRowCommand","cellCount","newRow","createdCell","_appendCell","newCell","InsertColumnCommand","columnIndex","_processForColSpan","_resizeCells","selectedCell","colSpanEffect","parsedWidth","unit","calculatedWidth","DeleteRowCommand","focusElement","rowParent","_focusElement","_handleRowSpanCells","adjacentCell","nextRow","firstRow","before","_reduceRowSpan","rowSpanValue","DeleteColumnCommand","columnCount","_handleColSpanCells","_reduceColSpan","colSpanValue","MergeCellsHorizontallyCommand","nextTd","_getColspan","MergeCellsVerticallyCommand","tr","targetRow","bottomTd","_getRowspan","SplitCellCommand","emptyTd","_splitCellHorizontally","_splitCellVertically","_getRowspanValue","_getColspanValue","tdToAdd","colSpanResult","rowSpanResult","TableModificationTool","commandsMap","insert","delete","column","TableFormatCommand","_showResizeHandles","TableFormatTool","isTable","align","nonSplittableTagsOnPaste","cleaners","ScriptCleaner","TabCleaner","MSWordFormatCleaner","WebkitFormatCleaner","HtmlTagsCleaner","HtmlAttrCleaner","HtmlContentCleaner","CustomCleaner","htmlToFragment","_startModification","_inProgress","_endModification","modificationInfo","_contentModification","_removeBomNodes","_onBeforeCopy","oncopy","oncut","_fileToDataURL","blob","deferred","reader","FileReader","File","getAsFile","readAsDataURL","_triggerPaste","_handleImagePaste","clipboardData","originalEvent","_insertImages","when","results","onpaste","clipboardNode","_decoreateClipboardNode","webkit","_moveToCaretPosition","clipboardRange","containers","ondragover","ondrop","dataTransfer","margin","padding","fontVariant","lineSpacing","nodeOffset","caretOffset","_caretOffset","translate","transform","rangeChanged","isStartTextNode","prevLength","bomNode","splittableParent","preventSplit","unwrapPasted","applicable","splitter","splittable","fragmentsHtml","elm","rangeEnd","focusedTable","siblingNodes","lastSiblingIndex","lastSibling","Cleaner","replacements","customReplacements","junkReplacements","convertFontMatch","$0","$1","closing","family","stripEmptyAnchors","listType","listData","startingSymbol","matchSymbol","symbol","isNumber","trimStartText","_guessUnorderedListStyle","_guessOrderedListStyle","_convertToLi","_checkForBullet","_getHtmlNoBullet","extractListLevels","level","_createList","rootMargin","rootIndex","lastRootLi","isLastRootLi","rootList","blockChildren","lastMargin","levels","acceptedNameTags","listIndex","levelType","removeAttributes","significantStyles","addSignificantStyles","isSignificantCss","removeAttributeNode","createColGroup","convertHeaders","boldedCells","removeParagraphs","paragraphs","removeTextNodes","trs","currentNode","tables","longestRow","titles","removeFormatting","filters","DomCleaner","cleanDom","collectTags","collectAttr","TextContainer","HtmlTextLines","separators","line","inlineBlockText","resetLine","appendText","textContainer","appendInlineBlockText","flashInlineBlockText","endLine","il","il1","jl","jl1","DomEnumerator","preventDown","hasText","enumerator","buildText","getDefaultSeparators","htmlLines","thead","tbody","cleaner","cellText","PREVIOUS_SIBLING","getSibling","tableCells","tableCellsWrappers","tableElements","inTable","RemoveTableContent","cellsTypes","startCell","endCell","_removeContent","getNext","evt","Event","isDefaultPrevented","deleteSelection","startTyping","_removeBomSpan","textContent","_addCaret","_restoreCaret","_handleDelete","caretPlaceholder","_merge","_cleanBomBefore","_handleBackspace","startAtLi","liIndex","startAtNonFirstLi","rangeStartNode","previousNode","_handleSelection","parentElementOrNode","_surroundFullyContent","_surroundFullySelectedAnchor","toLocaleLowerCase","_join","startImmutable","endImmutable","_moveMarker","_root","dest","_mergeWithTextNode","appendedNode","_isCaret","systemCommandIsInProgress","createUndoCommand","isModifierKey","isSystem","_toSelectableImmutables","_selectEditorBody","isCharacter","String","fromCharCode","modifier","_getShortcutModifier","navigator","platform","toUpperCase","metaKey","found","matchKey","toolKey","onEndTyping","stopTyping","force","timeout","what","ExportPdfCommand","PrintCommand","CopyFormatCommand","blockStyles","collectStyles","rangeNodes","populateStyles","destination","styleValue","styleKey","attributeKey","styles","nodeStyles","ApplyFormatCommand","removeEmptyElementsFromRange","cleanInlineParents","applyBlockStyles","applyInlineStyles","emptyElements","blockParent","outerWrapper","previousNodes","nextNodes","prevWrapper","nextWrapper","listItems","currentStyle","createdNode","topNode","CopyFormatTool","ApplyFormatTool","LineHeightCommand","LineHeightFormatTool","getKendoComboBox","closeHandler","mouseDownHandler","keyDownHandler","currentRange","prefixOptions","DOM","createMark","character","scrollableWrapper","clonedRange","domRect","parentRect","createElementNS","setAttributeNS","appendSvgMarks","overlay","isInlineEditor","FormattingMarksCommand","math","REGEX_NUMBER_IN_PERCENTAGES","REGEX_NUMBER_IN_PIXELS","STRING","inPercentages","ResizingUtils","constrain","lowerBound","upperBound","getScrollBarWidth","scrollbar","calculatePercentageRatio","total","inPixels","toPercentages","toPixels","KEY_DOWN","MOUSE_LEAVE","MOUSE_UP","TableElementResizing","_attachEventHandlers","eventNamespace","rootElement","_destroyResizeHandle","rtl","handle","dataAttribute","detectElementBorderHovering","resizingInProgress","resizing","handleOptions","tableElement","currentTarget","resizeHandle","elementBorderHovered","showResizeHandle","_initResizeHandle","setResizeHandlePosition","setResizeHandleDimensions","setResizeHandleDataAttributes","_attachResizeHandleEventHandlers","_initResizable","_hideResizeMarker","markerClass","_destroyResizable","Resizable","draggableElement","onResizeStart","onResize","resizeend","onResizeEnd","_disableKeyboard","setResizeHandleDragPosition","_enableKeyboard","_forceResizing","userEvents","ResizingFactory","resizingName","_destroyResizing","_initResizing","parentTable","resizingType","abs","RESIZE_HANDLE_CLASS","RESIZE_MARKER_CLASS","BODY","COLATTR","COMMA","WIDTH","handleWidth","borderOffset","mousePosition","tableInnerElement","tBodies","scrollTopOffset","scrollLeftOffset","columnWidthOffset","scrollBarWidth","columnOffsetLeft","innerElementOffsetTop","tableHead","tableBody","fullHeight","columnWidth","columnLeftOffset","adjacentColumnWidth","resizeHandleOffsetLeft","handleOffset","newWidth","initialAdjacentColumnWidth","initialColumnWidth","nextColumn","rtlModifier","initialDeltaX","initialDelta","_setTableComputedWidth","_setColumnsComputedWidth","_resizeColumn","_resizeTopAndBottomColumns","_resizeAdjacentColumns","innerElementWidth","currentColumnsWidths","topAndBottomColumns","innerTableElement","deltaWidth","adjacentColumns","_resizeAdjacentColumn","adjacentColumn","HEIGHT","handleHeight","rowOffsetLeft","rowOffsetTop","topInnerTableElement","$row","tableTopOffset","resizeHandleOffsetTop","currentRowHeight","initialTableHeight","tableHeadHeight","tableBodyHeight","initialStyleHeight","newRowHeight","_setRowsHeightInPixels","_setTableHeight","_setRowsHeightInPercentages","currentRowsHeights","newHeight","Draggable","DRAG_START","DRAG","DRAG_END","HALF_INSIDE","MOUSE_OVER","MOUSE_OUT","EAST","NORTH","NORTHEAST","NORTHWEST","SOUTH","SOUTHEAST","SOUTHWEST","WEST","ElementResizeHandle","_addStyles","_initDraggable","_initPositioningStrategy","_initDraggingStrategy","resizableElement","_destroyDraggable","_setPosition","_positioningStrategy","getPosition","_onMouseOver","_onMouseOut","HandlePositioningStrategy","_draggable","dragstart","_onDragStart","drag","_onDrag","_onDragEnd","_draggingStrategy","adjustDragDelta","deltaX","deltaY","initialDeltaY","HandleDraggingStrategy","StrategyFactory","_items","register","itemsLength","PositioningStrategyFactory","calculatePosition","handleOffsetPosition","applyHandleOffset","applyScrollOffset","rootLeft","EastPositioningStrategy","NorthPositioningStrategy","NortheastPositioningStrategy","NorthwestPositioningStrategy","SouthPositioningStrategy","SoutheastPositioningStrategy","SouthwestPositioningStrategy","WestPositioningStrategy","DraggingStrategyFactory","adjustment","deltas","xAxisAdjustment","yAxisAdjustment","HorizontalDraggingStrategy","EastDraggingStrategy","WestDraggingStrategy","VerticalDraggingStrategy","NorthDraggingStrategy","SouthDraggingStrategy","HorizontalAndVerticalDraggingStrategy","NorthEastDraggingStrategy","NorthWestDraggingStrategy","SouthEastDraggingStrategy","SouthWestDraggingStrategy","RESIZE_HANDLE_WRAPPER_CLASS","ELEMENT_RESIZING_CLASS","MOUSE_DOWN","ELEMENT_TYPES","isUndefined","ElementResizing","handles","_destroyResizeHandles","appendHandlesTo","_resizeWidth","_resizeHeight","_getMaxDimensionValue","dimension","dimensionLowercase","parentDimension","parentScrollOffset","_initResizeHandles","_bindToResizeHandlesEvents","_onResizeHandleDragStart","_initialElementHeight","_initialElementWidth","_onResizeHandleDrag","_onResizeHandleDragEnd","TableResizing","_hasRowsInPixels","ratioValue","ratioTotalValue","constrainedWidth","styleWidth","currentWidth","parentWidth","_setColumnsWidth","constrainedHeight","styleHeight","currentHeight","parentHeight","hasRowsInPixels","parentColumn","columnsLength","isWidthInPercentages","ImageResizing","_onResizeHandleDragVertical","_onResizeHandleDragHorizontal","_onResizeHandleDragLocked","_getDeltas","initialWidth","initialHeight","MAX_SAFE_INTEGER","hasImg","eventTarget","eventCurrentTarget","isResizeHandleOrChild","tableResizing","cellsFormatFinder","reUnit","COL_INDEX","isTableCellWizard","tableCellWizard","selectedTable","_sourceTable","_selectedTable","selectedCells","_selectedTableCells","_selectedCells","closeCallback","onDialogClose","parseTable","TableWizardDialog","insertTable","createNewTable","updateTable","_ensureFocusableAfterTable","lastSelectedRow","cellProp","tableProp","_lastInCollection","_deleteTableRows","_addRows","_updateColumns","_updateTableProperties","cellProperties","_updateCellProperties","_updateCaption","_updateHeadersWithThead","_updateHeadersNoThead","_updateHeaderAssociates","_isHeadingRow","_isHeadingCell","cellsWithHeadersAssociated","headingIds","checkHeader","header","headersArray","headersAttr","some","_insertCells","insertCell","createTHead","_createTableRows","createTBody","cellsWithHeaders","_addScopes","initialIndex","insertRow","cellsLength","newRowsCount","firstRowLastCell","numberOfColumns","lastCurrentCell","rowColumns","deleteCell","_getStylesData","topCellPadding","_getNumericValue","leftCellPadding","bottomCellPadding","rightCellPadding","tableData","paddingTop","paddingLeft","paddingBottom","paddingRight","captionContent","deleteCaption","createCaption","_getAlignmentData","verticalAlign","_swapToHeaderCells","deleteTHead","_removeScopes","_removeAssociates","headerCols","whiteSpace","widthUnit","heightUnit","backgroundColor","bgColor","borderCollapse","_getTablePositionData","tStyle","captionClone","tableAlignment","_getAlignment","tablePosition","_getTablePosition","numberOfHeaderColumns","tableJson","_getUnit","parseTableRows","rowData","cellData","parseCell","cStyle","horizontalOnly","hAlign","vAlign","collection","TableWizardEditTool","TableCellWizardEditTool","FORM_FIELD_CLASS","INVISIBLE_CLASS","DOT","numericTextBoxSettings","borderStyles","textWrapDropDownSettings","tablePositionDropDownSettings","tableAlignmentDropDownSettings","cellAlignmentDropDownSettings","accessibilityAlignmentDropDownSettings","tablePropertiesDialogTemplate","cellPropertiesDialogTemplate","_openTablePropertiesDialog","_dialogTemplate","collectTableDialogValues","components","_initTabStripComponent","_tablePropertiesForm","_createTablePropertiesForm","_accessibilityPropertiesForm","_createAccessibilityPropertiesForm","_openCellPropertiesDialog","collectCellDialogValues","_cellPropertiesForm","_createCellPropertiesForm","isCellProperties","tabStrip","kendoTabStrip","_collectTableViewValues","_collectAccessibilityViewValues","_collectCellViewValues","tableView","check","cellView","wrapTextValue","accessibilityView","_addUnit","_initNumericTextbox","storage","settings","kendoNumericTextBox","_initDropDownList","kendoDropDownList","_setComponentValue","_initBorderStyleDropDown","_initTablePositionDropDown","_initPositionDropDown","_initTableAlignmentDropDown","_initAlignmentDropDown","_initCellAlignmentDropDown","_initAccessibilityAlignmentDropDown","_initTextWrapDropDown","_initAssociationDropDown","_initColorPicker","kendoColorPicker","clearButton","_initInput","kendoTextBox","_initCheckbox","kendoCheckBox","_initTextArea","kendoTextArea","_destroyComponents","dialogTemplate","_onPaddingTopChange","viewType","topCellPaddingNumeric","topCellPaddingValue","leftCellPaddingNumeric","bottomCellPaddingNumeric","rightCellPaddingNumeric","_cachedPadding","_onPaddingCheckChange","checked","bottomCellPaddingValue","leftCellPaddingValue","rightCellPaddingValue","_onColumnsNumberChange","headerColumnsNumeric","currentNumberOfColumnsHeaders","_onRowsNumberChange","headerRowsNumeric","currentNumberOfRowHeaders","numberOfRows","layout","grid","gutter","layoutWrapper","hint","optional","kendo$1","__meta__","category","description","depends","features","default","defineProperty"],"mappings":"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","file":"kendo.editor.min.js","sourcesContent":["(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('kendo.combobox.js'), require('kendo.dropdownlist.js'), require('kendo.resizable.js'), require('kendo.window.js'), require('kendo.colorpicker.js'), require('kendo.imagebrowser.js'), require('kendo.numerictextbox.js'), require('kendo.textarea.js'), require('kendo.core.js'), require('kendo.aiprompt.js'), require('kendo.buttongroup.js'), require('kendo.toolbar.js'), require('kendo.icons.js'), require('kendo.splitter.js'), require('kendo.html.input.js'), require('kendo.html.icon.js'), require('kendo.inlineaiprompt.js'), require('kendo.form.js'), require('kendo.filebrowser.js'), require('kendo.draganddrop.js'), require('kendo.html.button.js'), require('kendo.tabstrip.js')) :\n   typeof define === 'function' && define.amd ? define(['exports', 'kendo.combobox', 'kendo.dropdownlist', 'kendo.resizable', 'kendo.window', 'kendo.colorpicker', 'kendo.imagebrowser', 'kendo.numerictextbox', 'kendo.textarea', 'kendo.core', 'kendo.aiprompt', 'kendo.buttongroup', 'kendo.toolbar', 'kendo.icons', 'kendo.splitter', 'kendo.html.input', 'kendo.html.icon', 'kendo.inlineaiprompt', 'kendo.form', 'kendo.filebrowser', 'kendo.draganddrop', 'kendo.html.button', 'kendo.tabstrip'], factory) :\n   (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global.kendo = global.kendo || {}, global.kendo._globals = global.kendo._globals || {}, global.kendo._globals.Editor = {})));\n})(this, (function (exports) {\n   (function(kendo) {\n       var UndoRedoStack = kendo.Observable.extend({\n           init: function(options) {\n               kendo.Observable.fn.init.call(this, options);\n               this.clear();\n           },\n           events: [ \"undo\", \"redo\" ],\n           push: function (command) {\n               this.stack = this.stack.slice(0, this.currentCommandIndex + 1);\n               this.currentCommandIndex = this.stack.push(command) - 1;\n           },\n           undo: function () {\n               if (this.canUndo()) {\n                   var command = this.stack[this.currentCommandIndex--];\n                   command.undo();\n                   this.trigger(\"undo\", { command: command });\n               }\n           },\n           redo: function () {\n               if (this.canRedo()) {\n                   var command = this.stack[++this.currentCommandIndex];\n                   command.redo();\n                   this.trigger(\"redo\", { command: command });\n               }\n           },\n           clear: function() {\n               this.stack = [];\n               this.currentCommandIndex = -1;\n           },\n           canUndo: function () {\n               return this.currentCommandIndex >= 0;\n           },\n           canRedo: function () {\n               return this.currentCommandIndex != this.stack.length - 1;\n           }\n       });\n\n       kendo.deepExtend(kendo, {\n           util: {\n               UndoRedoStack: UndoRedoStack\n           }\n       });\n   })(kendo);\n\n   (function($, undefined$1) {\n\n       // Imports ================================================================\n       var kendo = window.kendo,\n           Class = kendo.Class,\n           Widget = kendo.ui.Widget,\n           os = kendo.support.mobileOS,\n           browser = kendo.support.browser,\n           extend = $.extend,\n           deepExtend = kendo.deepExtend,\n           keys = kendo.keys,\n           outerWidth = kendo._outerWidth,\n           outerHeight = kendo._outerHeight,\n           NS = \".kendoEditor\";\n\n       const FORMATTING_MARKS_STYLE_ID = \"formatting-marks-style\",\n           FORMATTING_MARKS_OVERLAY_ID = \"formatting-marks-overlay\",\n           FORMATTING_MARKS_OVERLAY_WRAPPER_ID = \"formatting-marks-overlay-wrapper\";\n\n       var SELECT = \"select\";\n       var SELECT_OVERLAY_SELECTOR = \"select.k-select-overlay\";\n       var PLACEHOLDER_CLASS = \"k-placeholder\";\n       var PLACEHOLDER_TAG_ID = \"placeholder\";\n       var REFRESH_INTERVAL = 200;\n       var DEFAULT_LANGUAGE = \"en\";\n\n       var NATIVE_TOOLS = [\n           \"insertLineBreak\",\n           \"insertParagraph\",\n           \"redo\",\n           \"undo\",\n           \"autoLink\"\n       ];\n\n       const TOOLBAR_ALLOWED_CLOSE_SELECTORS = \".k-icon,.k-svg-icon,svg,path,.k-editor-window,.k-editor-toolbar,.k-editortoolbar-dragHandle,[ref-toolbar-tool],[ref-toolbar-tool] *\";\n\n       var EditorUtils = {\n           editorWrapperTemplate: () =>\n               '<div class=\"k-editor\">' +\n               '<div class=\"k-editor-toolbar\" role=\"toolbar\"></div>' +\n               '<div class=\"k-editable-area k-editor-content\"></div>' +\n               '</div>',\n\n           formatByName: function(name, format) {\n               for (var i = 0; i < format.length; i++) {\n                   if ($.inArray(name, format[i].tags) >= 0) {\n                       return format[i];\n                   }\n               }\n           },\n\n           getToolCssClass: function(name, icon) {\n               var toolCssClassNames = {\n                   superscript: \"supscript\",\n                   subscript: \"subscript\",\n                   justifyLeft: \"align-left\",\n                   justifyCenter: \"align-center\",\n                   justifyRight: \"align-right\",\n                   justifyFull: \"align-justify\",\n                   insertUnorderedList: \"list-unordered\",\n                   insertOrderedList: \"list-ordered\",\n                   insertUpperRomanList: \"list-roman-upper\",\n                   insertLowerRomanList: \"list-roman-lower\",\n                   \"import\": \"import\",\n                   indent: \"indent\",\n                   outdent: \"outdent\",\n                   createLink: \"link\",\n                   unlink: \"unlink\",\n                   insertImage: \"image\",\n                   insertFile: \"file-add\",\n                   viewHtml: \"code\",\n                   foreColor: \"foreground-color\",\n                   backColor: \"droplet\",\n                   createTable: \"table-add\",\n                   addColumnLeft: \"table-column-insert-left\",\n                   addColumnRight: \"table-column-insert-right\",\n                   addRowAbove: \"table-row-insert-above\",\n                   addRowBelow: \"table-row-insert-below\",\n                   deleteRow: \"table-row-delete\",\n                   deleteColumn: \"table-column-delete\",\n                   mergeCellsHorizontally: \"cells-merge-horizontally\",\n                   mergeCellsVertically: \"cells-merge-vertically\",\n                   splitCellHorizontally: \"cell-split-horizontally\",\n                   splitCellVertically: \"cell-split-vertically\",\n                   tableProperties: \"table-properties\",\n                   tableCellProperties: \"table-cell-properties\",\n                   tableWizardInsert: \"table-wizard\",\n                   tableAlignLeft: \"table-position-start\",\n                   tableAlignCenter: \"table-position-center\",\n                   tableAlignRight: \"table-position-end\",\n                   cleanFormatting: \"clear-css\",\n                   copyFormat: \"copy-format\",\n                   applyFormat: \"apply-format\",\n                   pdf: \"file-pdf\"\n               };\n\n               var cssClass = toolCssClassNames[name];\n\n               if (cssClass) {\n                   return cssClass;\n               }\n\n               if (icon) {\n                   return icon;\n               }\n\n               return EditorUtils.nameToKebab(name);\n           },\n\n           nameToKebab: function(name) {\n               return name.replace(/([a-z])([A-Z])/g, \"$1-$2\")\n                   .replace(/[\\s_]+/g, '-')\n                   .toLowerCase();\n           },\n\n           registerTool: function(toolName, tool) {\n               if (!tool.name) {\n                   tool.options.name = toolName;\n                   tool.name = toolName.toLowerCase();\n               }\n\n               if (!tool.options.ui) {\n                   tool.options.ui = {};\n               }\n\n               tool.options.ui.command = toolName;\n\n               Editor.defaultTools[toolName] = tool;\n           },\n\n           registerFormat: function(formatName, format) {\n               Editor.fn.options.formats[formatName] = format;\n           },\n\n           cacheComments: function(content, comments) {\n               for (var index in comments) {\n                   content = content.replace(comments[index], \"{\" + index + \"}\");\n               }\n               return content;\n           },\n\n           retrieveComments: function(content, comments) {\n               for (var index in comments) {\n                   content = content.replace(\"{\" + index + \"}\", comments[index]);\n               }\n               return content;\n           }\n       };\n\n       var messages = {\n           auto: \"Auto\",\n           bold: \"Bold\",\n           italic: \"Italic\",\n           underline: \"Underline\",\n           strikethrough: \"Strikethrough\",\n           superscript: \"Superscript\",\n           subscript: \"Subscript\",\n           fitToCell: \"Fit to cell\",\n           justifyCenter: \"Center text\",\n           justifyLeft: \"Align text left\",\n           justifyRight: \"Align text right\",\n           justifyFull: \"Justify\",\n           insertUnorderedList: \"Insert unordered list\",\n           insertOrderedList: \"Insert ordered list\",\n           lineHeight: \"Set line height\",\n           formattingMarks: \"Toggle formatting marks\",\n           indent: \"Indent\",\n           outdent: \"Outdent\",\n           createLink: \"Insert hyperlink\",\n           unlink: \"Remove hyperlink\",\n           insertImage: \"Insert image\",\n           insertFile: \"Insert file\",\n           insertHtml: \"Insert HTML\",\n           viewHtml: \"View HTML\",\n           fontName: \"Select font family\",\n           fontNameInherit: \"(inherited font)\",\n           fontSize: \"Select font size\",\n           fontSizeInherit: \"(inherited size)\",\n           formatBlock: \"Format\",\n           formatting: \"Format\",\n           foreColor: \"Color\",\n           backColor: \"Background color\",\n           style: \"Styles\",\n           emptyFolder: \"Empty Folder\",\n           editAreaTitle: \"Editable area. Press F10 for toolbar.\",\n           uploadFile: \"Upload\",\n           overflowAnchor: \"More tools\",\n           orderBy: \"Arrange by:\",\n           orderBySize: \"Size\",\n           orderByName: \"Name\",\n           invalidFileType: \"The selected file {0} is not valid. Supported file types are {1}.\",\n           deleteFile: 'Are you sure you want to delete {0}?',\n           overwriteFile: 'A file with name {0} already exists in the current directory. Do you want to overwrite it?',\n           directoryNotFound: \"A directory with this name was not found.\",\n           imageWebAddress: \"Web address\",\n           imageAltText: \"Alternate text\",\n           imageWidth: \"Width (px)\",\n           imageHeight: \"Height (px)\",\n           fileWebAddress: \"Web address\",\n           fileTitle: \"Title\",\n           fileText: \"Text\",\n           linkWebAddress: \"Web address\",\n           linkText: \"Text\",\n           linkToolTip: \"ToolTip\",\n           linkOpenInNewWindow: \"Open link in new window\",\n           dialogUpdate: \"Update\",\n           dialogInsert: \"Insert\",\n           dialogOk: \"Confirm\",\n           dialogCancel: \"Cancel\",\n           cleanFormatting: \"Clean formatting\",\n           createTable: \"Create a table\",\n           createTableHint: \"Create a {0} x {1} table\",\n           addColumnLeft: \"Add column on the left\",\n           addColumnRight: \"Add column on the right\",\n           addRowAbove: \"Add row above\",\n           addRowBelow: \"Add row below\",\n           deleteRow: \"Delete row\",\n           deleteColumn: \"Delete column\",\n           mergeCellsHorizontally: \"Merge cells horizontally\",\n           mergeCellsVertically: \"Merge cells vertically\",\n           splitCellHorizontally: \"Split cells horizontally\",\n           splitCellVertically: \"Split cells vertically\",\n           tableAlignLeft: \"Table Align Left\",\n           tableAlignCenter: \"Table Align Center\",\n           tableAlignRight: \"Table Align Right\",\n           tableWizard: \"Table Wizard\",\n           tableProperties: \"Table Properties\",\n           tableCellProperties: \"Cell Properties\",\n           tableTab: \"General\",\n           cellTab: \"Cell\",\n           accessibilityTab: \"Advanced\",\n           caption: \"Caption\",\n           summary: \"Summary\",\n           width: \"Width\",\n           height: \"Height\",\n           units: \"Units\",\n           cellSpacing: \"Cell Spacing\",\n           cellPadding: \"Cell Padding\",\n           topPadding: \"Top\",\n           leftPadding: \"Left\",\n           bottomPadding: \"Bottom\",\n           rightPadding: \"Right\",\n           independentCellPaddings: \"Independent Cell Paddings\",\n           cellMargin: \"Cell Margin\",\n           alignment: \"Alignment\",\n           captionAlignment: \"Caption alignment\",\n           position: \"Position\",\n           background: \"Background\",\n           tableBackground: \"Table background\",\n           cssClass: \"CSS Class\",\n           id: \"ID\",\n           border: \"Border\",\n           borderStyle: \"Border Style\",\n           borderWidth: \"Border Width\",\n           borderColor: \"Border Color\",\n           collapseBorders: \"Collapse borders\",\n           wrapText: \"Wrap text\",\n           associateCellsWithHeaders: \"Associate headers\",\n           alignLeft: \"Align Left\",\n           alignCenter: \"Align Center\",\n           alignRight: \"Align Right\",\n           alignLeftTop: \"Align Left Top\",\n           alignCenterTop: \"Align Center Top\",\n           alignRightTop: \"Align Right Top\",\n           alignLeftMiddle: \"Align Left Middle\",\n           alignCenterMiddle: \"Align Center Middle\",\n           alignRightMiddle: \"Align Right Middle\",\n           alignLeftBottom: \"Align Left Bottom\",\n           alignCenterBottom: \"Align Center Bottom\",\n           alignRightBottom: \"Align Right Bottom\",\n           alignRemove: \"Remove Alignment\",\n           columns: \"Columns\",\n           rows: \"Rows\",\n           selectAllCells: \"Apply to all cells\",\n           applyToColumn: \"apply to column\",\n           applyToRow: \"apply to row\",\n           exportAs: \"Export As\",\n           \"import\": \"Import\",\n           print: \"Print\",\n           headerRows: \"Header Rows\",\n           headerColumns: \"Header Cols\",\n           tableSummaryPlaceholder: \"Summary attribute is not HTML5 compatible.\",\n           associateNone: \"None\",\n           associateScope: \"Associate using 'scope' attribute\",\n           associateIds: \"Associate using Ids\",\n           copyFormat: \"Copy format\",\n           applyFormat: \"Apply format\",\n           borderNone: \"None\",\n           undo: \"Undo\",\n           redo: \"Redo\"\n       };\n\n       var supportedContentEditable = typeof (document.documentElement.contentEditable) != 'undefined';\n\n       var toolGroups = {\n           basic: [\"bold\", \"italic\", \"underline\", \"strikethrough\"],\n           undo: [\"undo\", \"redo\"],\n           scripts: [\"subscript\", \"superscript\"],\n           alignment: [\"justifyLeft\", \"justifyCenter\", \"justifyRight\", \"justifyFull\"],\n           lines: [\"lineHeight\"],\n           symbols: [\"formattingMarks\"],\n           links: [\"insertImage\", \"insertFile\", \"createLink\", \"unlink\"],\n           lists: [\"insertUnorderedList\", \"insertOrderedList\", \"insertUpperRomanList\", \"insertLowerRomanList\",],\n           dent: [\"indent\", \"outdent\"],\n           tablesWizard: [\"tableProperties\", \"tableCellProperties\"],\n           tablesInsert: [\"createTable\"],\n           tablesAddDelete: [\"addColumnLeft\", \"addColumnRight\", \"addRowAbove\", \"addRowBelow\", \"deleteRow\", \"deleteColumn\"],\n           tablesMerge: [\"mergeCellsHorizontally\", \"mergeCellsVertically\", \"splitCellHorizontally\", \"splitCellVertically\"],\n           tablesPosition: [\"tableAlignLeft\", \"tableAlignCenter\", \"tableAlignRight\"],\n           formatPainter: [\"copyFormat\", \"applyFormat\"]\n       };\n\n       var Editor = Widget.extend({\n           __suppressEditableCheck: false,\n           init: function(element, options) {\n               var that = this,\n                   editorNS = kendo.ui.editor,\n                   dom = editorNS.Dom,\n                   toolbarContainer,\n                   type, domElement;\n\n\n               /* suppress initialization in devices w/o proper contenteditable support */\n               if (!supportedContentEditable && !that.__suppressEditableCheck) {\n                   return;\n               }\n\n               Widget.fn.init.call(that, element, options);\n\n               that.options = deepExtend({}, that.options, options);\n\n               element = that.element;\n               domElement = element[0];\n               type = dom.name(domElement);\n\n               this._registerHandler(\n                   element.closest(\"form\"), \"submit\", that.update.bind(that, undefined$1)\n               );\n\n               if (that._isAiPromptEnabled()) {\n                   that._addAIPromptElements();\n               }\n\n               toolbarContainer = that._setupType(element);\n\n               that._initToolbar(toolbarContainer);\n               that._setupHeight(type);\n               that._resizable();\n               that._initializeContentElement(that);\n               that._setupKeyboard();\n\n               that.clipboard = new editorNS.Clipboard(this);\n               that.undoRedoStack = new kendo.util.UndoRedoStack();\n\n               that._populateValue(options, domElement);\n\n               that._registerHandler(document, {\n                   \"mousedown\": function() { that._endTyping(); },\n                   \"mouseup\": function(e) { that._mouseup(e); }\n               });\n\n               that._registerHandler(window, \"resize\", that._handleSpaceAndNewLines.bind(that));\n\n               that._initializeImmutables();\n\n               if (type == \"textarea\") {\n                   that._ariaLabel(that.wrapper.find(\"iframe\"));\n               }\n\n               that.toolbar.resize();\n\n               that._initInlineOverflowWrapper();\n\n               kendo.notify(that);\n\n               if (that._showWatermarkOverlay) {\n                   that._showWatermarkOverlay((that.wrapper && that.wrapper[0]) || that.element[0]);\n               }\n\n               if (that._isAiPromptEnabled()) {\n                   that._initAIPrompt();\n               }\n\n               if (that._isInlineAIPromptEnabled()) {\n                   that._initInlineAIPrompt();\n               }\n           },\n\n           events: [\n               \"select\",\n               \"change\",\n               \"execute\",\n               \"error\",\n               \"paste\",\n               \"keydown\",\n               \"keyup\"\n           ],\n\n           options: {\n               name: \"Editor\",\n               messages: messages,\n               placeholder: \"\",\n               nonce: \"\",\n               unsafeInline: true,\n               formats: {},\n               encoded: true,\n               formattingMarksRefreshDelay: 250,\n               domain: null,\n               resizable: false,\n               deserialization: {\n                   custom: null\n               },\n               serialization: {\n                   entities: true,\n                   semantic: true,\n                   scripts: false,\n                   optimizeTags: false,\n                   keepEOL: false\n               },\n               pasteCleanup: {\n                   all: false,\n                   css: false,\n                   custom: null,\n                   keepNewLines: false,\n                   msAllFormatting: false,\n                   msConvertLists: true,\n                   msTags: true,\n                   none: false,\n                   span: false\n               },\n               stylesheets: [],\n               dialogOptions: {\n                   modal: true, resizable: false, draggable: true,\n                   animation: false\n               },\n               imageBrowser: null,\n               fileBrowser: null,\n               navigateOnTab: false,\n               fontName: [\n                   { text: \"Arial\", value: \"Arial, Helvetica, sans-serif\" },\n                   { text: \"Courier New\", value: \"\\\"Courier New\\\", Courier, monospace\" },\n                   { text: \"Georgia\", value: \"Georgia, serif\" },\n                   { text: \"Impact\", value: \"Impact, Charcoal, sans-serif\" },\n                   { text: \"Lucida Console\", value: \"\\\"Lucida Console\\\", Monaco, monospace\" },\n                   { text: \"Tahoma\", value: \"Tahoma, Geneva, sans-serif\" },\n                   { text: \"Times New Roman\", value: \"\\\"Times New Roman\\\", Times, serif\" },\n                   { text: \"Trebuchet MS\", value: \"\\\"Trebuchet MS\\\", Helvetica, sans-serif\" },\n                   { text: \"Verdana\", value: \"Verdana, Geneva, sans-serif\" }\n               ],\n               fontSize: [\n                   { text: \"1 (8pt)\", value: \"xx-small\" },\n                   { text: \"2 (10pt)\", value: \"x-small\" },\n                   { text: \"3 (12pt)\", value: \"small\" },\n                   { text: \"4 (14pt)\", value: \"medium\" },\n                   { text: \"5 (18pt)\", value: \"large\" },\n                   { text: \"6 (24pt)\", value: \"x-large\" },\n                   { text: \"7 (36pt)\", value: \"xx-large\" }\n               ],\n               formatBlock: [\n                   { text: \"Paragraph\", value: \"p\" },\n                   { text: \"Quotation\", value: \"blockquote\" },\n                   { text: \"Heading 1\", value: \"h1\" },\n                   { text: \"Heading 2\", value: \"h2\" },\n                   { text: \"Heading 3\", value: \"h3\" },\n                   { text: \"Heading 4\", value: \"h4\" },\n                   { text: \"Heading 5\", value: \"h5\" },\n                   { text: \"Heading 6\", value: \"h6\" }\n               ],\n               tools: [\n                   \"formatting\",\n                   \"bold\",\n                   \"italic\",\n                   \"underline\",\n                   \"undo\",\n                   \"redo\",\n                   \"justifyLeft\",\n                   \"justifyCenter\",\n                   \"justifyRight\",\n                   \"copyFormat\",\n                   \"applyFormat\",\n                   \"insertUnorderedList\",\n                   \"insertOrderedList\",\n                   \"indent\",\n                   \"outdent\",\n                   \"createLink\",\n                   \"unlink\",\n                   \"insertImage\",\n                   \"tableProperties\",\n                   \"tableCellProperties\",\n                   \"createTable\",\n                   \"addRowAbove\",\n                   \"addRowBelow\",\n                   \"addColumnLeft\",\n                   \"addColumnRight\",\n                   \"deleteRow\",\n                   \"deleteColumn\",\n                   \"mergeCellsHorizontally\",\n                   \"mergeCellsVertically\",\n                   \"splitCellHorizontally\",\n                   \"splitCellVertically\",\n                   \"tableAlignLeft\",\n                   \"tableAlignCenter\",\n                   \"tableAlignRight\"\n               ],\n               ai: false\n           },\n\n           destroy: function() {\n               var editor = this;\n\n               Widget.fn.destroy.call(this);\n\n               this._endTyping(true);\n\n               this._deregisterHandlers();\n\n               clearTimeout(this._spellCorrectTimeout);\n\n               this._focusOutside();\n\n               this.toolbar.destroy();\n\n               if (this.windowInstance) {\n                   this.windowInstance.destroy();\n               }\n               if (this.tablePopup) {\n                   this.tablePopup.destroy();\n               }\n\n               editor._destroyUploadWidget();\n\n               if (this.interSectionObserver) {\n                   this.interSectionObserver.disconnect();\n                   this.interSectionObserver = null;\n               }\n\n               if (this.resizeObserver) {\n                   this.resizeObserver.disconnect();\n                   this.resizeObserver = null;\n                   this.wrapper.css(\"min-height\", \"\");\n                   this.wrapper.css(\"max-height\", \"\");\n               }\n\n               editor._destroyResizings();\n\n               editor._destroyFormattingMarksOverlay();\n\n               kendo.destroy(this.wrapper);\n           },\n\n           setOptions: function(options) {\n               var editor = this;\n\n               Widget.fn.setOptions.call(editor, options);\n\n               if (options.tools) {\n                   this._setOptionsTools(options.tools);\n               }\n\n               this._initializePlaceholder();\n           },\n\n           createRange: function(document) {\n               return kendo.ui.editor.RangeUtils.createRange(document || this.document);\n           },\n\n           encodedValue: function() {\n               return kendo.ui.editor.Dom.encode(this.value());\n           },\n\n           exec: function(name, params) {\n               var that = this;\n               var command = null;\n               var defaultTools = kendo.ui.Editor.defaultTools;\n               var range, tool, prevented;\n\n               if (!name) {\n                   throw new Error(\"kendoEditor.exec(): `name` parameter cannot be empty\");\n               }\n\n               if (that.body.getAttribute(\"contenteditable\") !== \"true\" &&\n                   name !== \"print\" &&\n                   name !== \"pdf\" &&\n                   name !== \"exportAs\") {\n                   return false;\n               }\n\n               if (!that.keyboard.isTypingInProgress()) {\n                   that._focusBody();\n                   that.selectRange(that._range || that.getRange());\n               }\n\n               tool = that.tools[name] || defaultTools[name];\n\n               if (!tool) {\n                   Object.keys(defaultTools).map(key => {\n                       if (key.toLowerCase() === name) {\n                           tool = defaultTools[key];\n                       }\n                   });\n               }\n\n               if (tool) {\n                   range = that.getRange();\n\n                   if (tool.command) {\n                       command = tool.command(extend({ range: range, body: that.body, immutables: !!that.immutables }, params));\n                   }\n\n                   prevented = that.trigger(\"execute\", { name: name, command: command });\n\n                   if (prevented) {\n                       return;\n                   }\n\n                   if (/^(undo|redo)$/i.test(name)) {\n                       that.undoRedoStack[name]();\n                   } else if (command) {\n                       that.execCommand(command);\n\n                       if (command.async) {\n                           command.change = that._commandChange.bind(that);\n                           return;\n                       }\n                   }\n\n                   // Prevent double execution when the formatting marks tool is used.\n                   if (name !== \"formattingMarks\") {\n                       that._handleSpaceAndNewLines();\n                   }\n                   that._selectionChange();\n               }\n           },\n\n           _commandChange: function() {\n               const that = this;\n               that._selectionChange();\n               that._handleSpaceAndNewLines();\n           },\n\n           execCommand: function(command) {\n               if (!command.managesUndoRedo) {\n                   this.undoRedoStack.push(command);\n               }\n\n               command.editor = this;\n               command.exec();\n           },\n\n           focus: function() {\n               this.restoreSelection();\n           },\n\n           getRange: function() {\n               var selection = this.getSelection(),\n                   range = selection && selection.rangeCount > 0 ? selection.getRangeAt(0) : this.createRange(),\n                   doc = this.document;\n\n               if (range.startContainer == doc && range.endContainer == doc && !range.startOffset && !range.endOffset) {\n                   range.setStart(this.body, 0);\n                   range.collapse(true);\n               }\n\n               return range;\n           },\n\n           getSelection: function() {\n               return kendo.ui.editor.SelectionUtils.selectionFromDocument(this.document);\n           },\n\n           paste: function(html, options) {\n               this.focus();\n\n               var command = new kendo.ui.editor.InsertHtmlCommand($.extend({\n                   range: this.getRange(),\n                   html: html\n               }, options));\n\n               command.editor = this;\n\n               command.exec();\n           },\n\n           insertAfterSelection: function(html, options) {\n               this.focus();\n               // Insert content after the current selection\n               const range = this.getRange();\n               range.collapse(false); // Move caret to the end of the selection\n               var command = new kendo.ui.editor.InsertHtmlCommand($.extend({\n                   range: range,\n                   html: html\n               }, options));\n\n               command.editor = this;\n\n               command.exec();\n           },\n\n           refresh: function() {\n               var that = this;\n\n               if (that.textarea) {\n                   that._destroyResizings();\n                   // preserve updated value before re-initializing\n                   // don't use update() to prevent the editor from encoding the content too early\n                   var value = that.value();\n                   that.textarea.val(value);\n                   that.wrapper.find(\"iframe\").remove();\n                   that._initializeContentElement(that);\n                   that.value(value);\n               }\n           },\n\n           restoreSelection: function() {\n               this._focusBody();\n\n               if (this.selectionRestorePoint) {\n                   this.selectRange(this.selectionRestorePoint.toRange());\n               }\n           },\n\n           saveSelection: function(range) {\n               range = range || this.getRange();\n               var container = range.commonAncestorContainer,\n                   body = this.body;\n\n               if (container == body || $.contains(body, container)) {\n                   this.selectionRestorePoint = new kendo.ui.editor.RestorePoint(range, body);\n               }\n           },\n\n           selectedHtml: function() {\n               return kendo.ui.editor.Serializer.domToXhtml(this.getRange().cloneContents());\n           },\n\n           selectRange: function(range) {\n               this._focusBody();\n               var selection = this.getSelection();\n               selection.removeAllRanges();\n               selection.addRange(range);\n               this.saveSelection(range);\n           },\n\n           state: function(toolName) {\n               var tool = kendo.ui.Editor.defaultTools[toolName];\n               var finder = tool && (tool.options.finder || tool.finder);\n               var RangeUtils = kendo.ui.editor.RangeUtils;\n               var range, textNodes;\n\n               if (finder) {\n                   range = this.getRange();\n\n                   textNodes = RangeUtils.textNodes(range);\n\n                   if (!textNodes.length && range.collapsed) {\n                       textNodes = [range.startContainer];\n                   }\n\n                   return finder.getFormat ? finder.getFormat(textNodes) : finder.isFormatted(textNodes);\n               }\n\n               return false;\n           },\n\n           update: function(value) {\n               value = value || this.options.encoded ? this.encodedValue() : this.value();\n\n               if (this.textarea) {\n                   this.textarea.val(value);\n                   this._togglePlaceholder(!value.trim());\n               } else {\n                   this._oldValue = value;\n               }\n           },\n\n           value: function(html) {\n               var body = this.body,\n                   editorNS = kendo.ui.editor,\n                   options = this.options,\n                   currentHtml = editorNS.Serializer.domToXhtml(body, options.serialization);\n\n               if (html === undefined$1) {\n                   return currentHtml;\n               }\n\n               if (html == currentHtml) {\n                   return;\n               }\n\n               editorNS.Serializer.htmlToDom(html, body, options.deserialization);\n\n               this.selectionRestorePoint = null;\n               this.update();\n               this._refreshTools();\n           },\n\n           _bindTools: function() {\n               var that = this,\n                   defaultTools = this.tools;\n\n               that.unbind(\"select\", that.toolbar.resize.bind(that.toolbar));\n\n               that.toolbar.element.find(\"[data-command]\")\n                   .filter((i, el) => $(el).find(\"[data-command]\").length === 0)\n                   .each((i, el) => {\n                       var toolName = el.getAttribute(\"data-command\"),\n                           tool = defaultTools[toolName];\n\n                       if (tool && tool.initialize) {\n                           tool.initialize($(el), that);\n                       }\n                   });\n\n               that.bind(\"select\", that.toolbar.resize.bind(that.toolbar));\n           },\n\n           _blur: function() {\n               var textarea = this.textarea;\n               var old = textarea ? textarea.val() : this._oldValue;\n               var value = this.options.encoded ? this.encodedValue() : this.value();\n\n               this.update();\n\n               if (textarea) {\n                   textarea.trigger(\"blur\");\n               }\n\n               if (value != old) {\n                   this.trigger(\"change\");\n                   if (textarea) {\n                       textarea.trigger(\"change\");\n                   }\n               }\n           },\n\n           _containsRange: function(range) {\n               var dom = kendo.ui.editor.Dom;\n               var body = this.body;\n               return range && dom.isAncestorOrSelf(body, range.startContainer) &&\n                   dom.isAncestorOrSelf(body, range.endContainer);\n           },\n\n           _createContentElement: function(stylesheets) {\n               var editor = this;\n               var iframe, wnd, doc;\n               var textarea = editor.textarea;\n               var specifiedDomain = editor.options.domain;\n               var domain = specifiedDomain || document.domain;\n               var domainScript = \"\";\n               var src = 'javascript:\"\"';\n               var lang = \"\";\n\n               textarea.hide();\n\n               iframe = $(\"<iframe />\", { title: editor.options.messages.editAreaTitle, frameBorder: \"0\" })[0];\n\n               $(iframe)\n                   .css(\"display\", \"\")\n                   .addClass(\"k-content k-iframe\")\n                   .attr(\"tabindex\", textarea[0].tabIndex)\n                   .insertBefore(textarea);\n\n               // automatically relax same-origin policy if document.domain != location.hostname,\n               // or forcefully relax if options.domain is specified (for document.domain = document.domain scenario)\n               if (specifiedDomain || domain != location.hostname) {\n                   // relax same-origin policy\n                   domainScript = `<script ${editor.options.nonce ? `nonce=\"${editor.options.nonce}\"` : \"\"}>document.domain=\"${domain}\"</script>`;\n                   src = \"javascript:document.write('\" + domainScript + \"')\";\n                   iframe.src = src;\n               }\n\n               if (!iframe.src) {\n                   iframe.src = \"\";\n               }\n\n               wnd = iframe.contentWindow || iframe;\n               doc = wnd.document || iframe.contentDocument;\n\n               // https://github.com/telerik/kendo-ui-core/issues/7561\n               const observer = editor.interSectionObserver = new IntersectionObserver(entries => {\n                   for (const entry of entries) {\n                       if (entry.isIntersecting) {\n                           editor._decorateFormatting(doc.body);\n                           observer.unobserve(iframe);\n                       }\n                   }\n               });\n               observer.observe(iframe);\n\n               lang = document.getElementsByTagName(\"html\")[0].getAttribute(\"lang\") || DEFAULT_LANGUAGE;\n\n               doc.open();\n               doc.write(\n                   \"<!DOCTYPE html><html lang='\" + lang + \"'><head>\" +\n                   \"<meta charset='utf-8' />\" +\n                   \"<title>Kendo UI Editor content</title>\" +\n                   `<style ${editor.options.nonce ? `nonce=\"${editor.options.nonce}\"` : \"\"}>` +\n                   \"html{padding:0;margin:0;height:100%;min-height:100%;cursor:text;}\" +\n                   \"body{padding:0;margin:0;}\" +\n                   \"body{box-sizing:border-box;font-size:12px;font-family:Verdana,Geneva,sans-serif;margin-top:-1px;padding:5px .4em 0;\" +\n                   \"word-wrap: break-word;-webkit-nbsp-mode: space;-webkit-line-break: after-white-space;\" +\n                   (kendo.support.isRtl(textarea) ? \"direction:rtl;\" : \"\") +\n                   (os.ios ? \"word-break:keep-all;\" : \"\") +\n                   (browser.edge || browser.chrome ? \"height:100%;\" : \"\") +\n                   \"}\" +\n                   \"h1{font-size:2em;margin:.67em 0}h2{font-size:1.5em}h3{font-size:1.16em}h4{font-size:1em}h5{font-size:.83em}h6{font-size:.7em}\" +\n                   \"p{margin:0 0 1em;}.k-marker{display:none;}.k-paste-container,.Apple-style-span{position:absolute;left:-10000px;width:1px;height:1px;overflow:hidden}\" +\n                   \"ul,ol{padding-left:2.5em}\" +\n                   \"span{-ms-high-contrast-adjust:none;}\" +\n                   \"a{color:#00a}\" +\n                   \"code{font-size:1.23em}\" +\n                   \"telerik\\\\3Ascript{display: none;}\" +\n                   \".k-table{width:100%;border-spacing:0;margin: 0 0 1em;}\" +\n                   \".k-table td{min-width:1px;padding:.2em .3em;}\" +\n                   \".k-table,.k-table td{outline:0;border: 1px dotted #ccc;}\" +\n                   \".k-table th{outline:0;border: 1px dotted #999;}\" +\n                   \".k-table p{margin:0;padding:0;}\" +\n                   \".k-column-resize-handle-wrapper {position: absolute; height: 10px; width:10px; cursor: col-resize; z-index: 2;}\" +\n                   \".k-column-resize-handle {width: 100%; height: 100%;}\" +\n                   \".k-column-resize-handle > .k-column-resize-marker {width:2px; height:100%; margin:0 auto; background-color:#00b0ff; display:none; opacity:0.8;}\" +\n                   \".k-row-resize-handle-wrapper {position: absolute; cursor: row-resize; z-index:2; width: 10px; height: 10px;}\" +\n                   \".k-row-resize-handle {display: table; width: 100%; height: 100%;}\" +\n                   \".k-row-resize-marker-wrapper{display: table-cell; height:100%; width:100%; margin:0; padding:0; vertical-align: middle;}\" +\n                   \".k-row-resize-marker{margin: 0; padding:0; width:100%; height:2px; background-color: #00b0ff; opacity:0.8; display:none;}\" +\n                   \".k-element-resize-handle-wrapper {position: absolute; background-color: #fff; border: 1px solid #000; z-index: 100; width: 5px; height: 5px;}\" +\n                   \".k-element-resize-handle {width: 100%; height: 100%;}\" +\n                   \".k-element-resize-handle.k-resize-east{cursor:e-resize;}\" +\n                   \".k-element-resize-handle.k-resize-north{cursor:n-resize;}\" +\n                   \".k-element-resize-handle.k-resize-northeast{cursor:ne-resize;}\" +\n                   \".k-element-resize-handle.k-resize-northwest{cursor:nw-resize;}\" +\n                   \".k-element-resize-handle.k-resize-south{cursor:s-resize;}\" +\n                   \".k-element-resize-handle.k-resize-southeast{cursor:se-resize;}\" +\n                   \".k-element-resize-handle.k-resize-southwest{cursor:sw-resize;}\" +\n                   \".k-element-resize-handle.k-resize-west{cursor:w-resize;}\" +\n                   \".k-table.k-element-resizing{opacity:0.6;}\" +\n                   \".k-placeholder{color:grey}\" +\n                   \"k\\\\:script{display:none;}\" +\n                   \"</style>\" +\n                   domainScript +\n                   $.map(stylesheets, function(href) {\n                       return `<link rel='stylesheet' href='${href}' ${editor.options.nonce ? `nonce=\"${editor.options.nonce}\"` : \"\"}>`;\n                   }).join(\"\") +\n                   `</head><body id='${editor.element.attr(\"id\")}' autocorrect='off' contenteditable='true'></body></html>`\n               );\n               doc.close();\n\n               return wnd;\n           },\n\n           _deleteSavedRange: function() {\n               if (\"_range\" in this) {\n                   delete this._range;\n               }\n           },\n\n           _decorateFormatting: function(body) {\n               var formattingElement = this.toolbar.element.find(\"input[data-command=formatting]\"),\n                   dom = kendo.ui.editor.Dom,\n                   component, dataSource, items, i, tag, className, style;\n\n               if (formattingElement.length) {\n                   component = formattingElement.getKendoDropDownList();\n                   if (!component) {\n                       return;\n                   }\n                   dataSource = component.dataSource;\n                   items = dataSource.data();\n\n                   if (body) {\n                       component.list.css(\"background-color\", dom.getEffectiveBackground($(body)));\n                   }\n\n                   if (this.options.unsafeInline !== false) {\n\n                       for (i = 0; i < items.length; i++) {\n                           tag = items[i].tag || \"span\";\n                           className = items[i].className;\n\n                           style = dom.inlineStyle(body, tag, { className: className });\n                           style = style.replace(/\"/g, \"'\");\n\n                           items[i].style = style + \";display:inline-block\";\n                       }\n                   }\n\n                   dataSource.trigger(\"change\");\n               }\n           },\n\n           _appendFormattingMarksStyles: function() {\n               const that = this,\n                   elementId = that.element.attr(\"id\");\n\n               let style, $head;\n\n               style = `<style id='${FORMATTING_MARKS_STYLE_ID + \"-\" + elementId}' ${that.options.nonce ? `nonce=\"${that.options.nonce}\"` : \"\"} >\n                #${elementId} p::after,\n                #${elementId} li::after,\n                #${elementId} h1::after,\n                #${elementId} h2::after,\n                #${elementId} h3::after,\n                #${elementId} h4::after,\n                #${elementId} h5::after,\n                #${elementId} h6::after {content: '\\\\00B6'; color: #6098f2;}\n                #${FORMATTING_MARKS_OVERLAY_WRAPPER_ID + \"-\" + elementId} {\n                    position: absolute;\n                    top: 0;\n                    left: 0;\n                    width: 100%;\n                    z-index: 9999;\n                    pointer-events: none;\n                }\n                #${FORMATTING_MARKS_OVERLAY_ID + \"-\" + elementId} {\n                    width: 100%;\n                    height: 100%;\n                  }\n            </style>`;\n\n               $head = $(that.document.head);\n               $head.find(\"#\" + FORMATTING_MARKS_STYLE_ID + \"-\" + elementId).remove();\n               $head.append(style);\n           },\n\n           _appendFormattingMarksOverlay: function() {\n               const that = this,\n                   elementId = that.element.attr(\"id\");\n\n               that._formattingMarksOverlayWrapper = $(`<div id='${FORMATTING_MARKS_OVERLAY_WRAPPER_ID + \"-\" + elementId}'></div>`);\n               that._formattingMarksOverlay = $(`<svg id='${FORMATTING_MARKS_OVERLAY_ID + \"-\" + elementId}'></svg>`).appendTo(that._formattingMarksOverlayWrapper);\n               that._bodyTopBottomPaddings = parseFloat($(that.body).css(\"padding-top\")) + parseFloat($(that.body).css(\"padding-bottom\"));\n\n               if (that._isInlineEditor()) {\n                   that._formattingMarksOverlayWrapper.insertAfter(that.element);\n               } else {\n                   that._formattingMarksOverlayWrapper.appendTo($(that.document).find(\"html\"));\n               }\n           },\n\n           _destroyFormattingMarksOverlay: function() {\n               const that = this,\n                   elementId = that.element.attr(\"id\");\n\n               $(that.document).find(\"#\" + FORMATTING_MARKS_OVERLAY_WRAPPER_ID + \"-\" + elementId).remove();\n               $(that.document.head).find(\"#\" + FORMATTING_MARKS_STYLE_ID + \"-\" + elementId).remove();\n           },\n\n           _updateFormattingMarksOverlayHeight: function() {\n               const that = this;\n\n               if (that._isInlineEditor()) {\n                   that._formattingMarksOverlayWrapper.height($(that.body).outerHeight());\n               } else {\n                   that._formattingMarksOverlayWrapper.height(that.body.scrollHeight - that._bodyTopBottomPaddings);\n               }\n           },\n\n           _initInlineOverflowWrapper: function() {\n               const that = this,\n                   inlineHeight = that.options.inlineHeight;\n\n               if (that._isInlineEditor() && inlineHeight > -1) {\n                   that._inlineOverflowWrapper = that.element.wrap(`<div class='k-inline-editor-overflow-wrapper k-pos-relative k-overflow-auto'></div>`).parent();\n                   that._inlineOverflowWrapper.height(inlineHeight);\n               }\n           },\n\n           _addAIPromptElements: function() {\n               const that = this;\n               const splitterElement = $('<div/>');\n               const aiPromptElement = $('<div/>');\n\n\n               that.splitterElement = splitterElement;\n               that.aiPromptElement = aiPromptElement;\n               splitterElement.insertBefore(that.element);\n               aiPromptElement.appendTo(splitterElement);\n               that.element.appendTo(splitterElement);\n           },\n\n           _initInlineAIPrompt: function() {\n               const that = this;\n               const element = $(\"<div/>\").insertAfter(that.element);\n               const defaultCommands = that._mapCommands(that.options.ai?.inlineAIPrompt?.commands || that.options.ai?.commands || kendo.ui.InlineAIPrompt.fn.options.commands);\n\n               that.inlineAIPrompt = element.kendoInlineAIPrompt({\n                   width: \"768px\",\n                   service: that.options.ai?.service,\n                   commands: defaultCommands,\n                   systemPrompt: that.options.ai?.inlineAIPrompt?.systemPrompt,\n                   promptRequest: (e) => {\n                       e.context = that.getRange().toString();\n                   },\n                   promptAction: (e) => {\n                       if (e.action === 'insert') {\n                           that.insertAfterSelection(e.content);\n                       }\n\n                       if (e.action === 'replace') {\n                           that.paste(e.content);\n                       }\n                   }\n               }).data('kendoInlineAIPrompt');\n           },\n\n           _mapCommands: function(commands, parentId = null) {\n               const that = this;\n\n               return commands.map((command, i) => {\n                   const id = parentId ? `${parentId}-${i}` : `${i}`;\n                   const item = {\n                       id: id,\n                       text: command.text,\n                       icon: command.icon\n                   };\n\n                   if (command.prompt) {\n                       item.prompt = command.prompt;\n                   }\n\n                   if (command.items) {\n                       item.items = that._mapCommands(command.items, id);\n                   }\n\n                   return item;\n               });\n           },\n\n           _isAiPromptEnabled() {\n               const that = this;\n\n               return that.options.ai && that.options.ai.aiPrompt != false;\n           },\n\n           _isInlineAIPromptEnabled() {\n               const that = this;\n\n               return that.options.ai && that.options.ai.inlineAIPrompt != false;\n           },\n\n           _initAIPrompt: function() {\n               const that = this;\n               const defaultCommands = that.options.ai?.aiPrompt?.commands || that.options.ai?.commands || that._mapCommands(kendo.ui.InlineAIPrompt.fn.options.commands);\n\n               that.aiPrompt = that.aiPromptElement.kendoAIPrompt($.extend({\n                   service: that.options.ai?.service,\n                   views: [\n                       {\n                           type: 'prompt',\n                           buttonIcon: \"\",\n                           textArea: {\n                               rows: 5,\n                               suffixOptions: {\n                                   template: () => `<div ref-select-context-buttongroup></div>`\n                               }\n                           },\n                           themeColor: \"base\",\n                           initializeComponents: (e) => {\n                               let view = e.view;\n                               view.contentElement.find('[ref-select-context-buttongroup]').kendoButtonGroup({\n                                   index: that._contextSelection,\n                                   items: [\n                                       { text: \"Use with selection\", icon: \"box-sizing\" },\n                                       { text: \"Use full content\", icon: \"form-element\" }\n                                   ],\n                                   selection: \"multiple\",\n                                   fillMode: \"flat\",\n                                   select: (e) => {\n                                       let selectionToggleButton = e.sender._buttons[0];\n                                       let fullContentToggleButton = e.sender._buttons[1];\n\n                                       if (e.indices.length > 1) {\n                                           if (e.target[0] == selectionToggleButton.element[0]) {\n                                               fullContentToggleButton.toggle(false);\n                                               e.sender._toggleIndex(1);\n                                           } else {\n                                               selectionToggleButton.toggle(false);\n                                               e.sender._toggleIndex(0);\n                                           }\n                                       }\n\n                                       that._contextSelection = e.indices[0];\n                                   }\n                               });\n                           },\n                       },\n                       {\n                           type: 'output',\n                           themeColor: \"base\",\n                       },\n                       {\n                           type: 'commands',\n                           themeColor: \"base\",\n                           promptCommands: defaultCommands\n                       }\n                   ],\n                   promptRequest: (e) => {\n                       const contextSelection = that._contextSelection;\n                       let prompt = e.prompt;\n\n                       if (contextSelection === 0) {\n                           prompt = that._contextTemplate(prompt, that.getRange().toString());\n                       } else if (contextSelection === 1) {\n                           prompt = that._contextTemplate(prompt, that.value());\n                       } else {\n                           prompt = that._contextTemplate(prompt, \"\");\n                       }\n\n                       if (e.prompt != prompt) {\n                           e.prompt = prompt;\n                       }\n                   },\n                   commandExecute: (e) => {\n                       const prompt = e.item.prompt;\n\n                       if (prompt) {\n                           that.aiPrompt.transport.read({\n                               prompt: prompt(that.value()),\n                               history: [],\n                               isRetry: false\n                           });\n                       }\n                   }\n               }, that.options.ai?.aiPrompt)).data('kendoAIPrompt');\n               that.aiPromptSplitter = that.splitterElement.kendoSplitter({\n                   panes: [$.extend({\n                       size: '50%',\n                       collapsible: true,\n                       collapsed: true,\n                       min: \"360px\"\n                   }, that.options.ai?.pane), {}]\n               }).data('kendoSplitter');\n\n               if (that._isInlineAIPromptEnabled()) {\n                   that.bind(\"select\", that._selectionChangeHandler.bind(that));\n               }\n           },\n\n           _contextTemplate: function(query, context) {\n               const that = this;\n               const defaultTemplate = `You are an advanced AI language assistant.\n            A user has selected a portion of their text and provided a query regarding how they want it modified.\n            Your task is to accurately respond to their request while preserving the original intent of the text.\n            Follow the instructions strictly and provide only the requested output unless explicitly asked to explain your changes.\n\n            ${context ? \"Selected Text:\" : \"\"}\n            ${context}\n\n            User's Request:\n            ${query}\n\n            Response:`;\n\n               if (!that.options.ai?.aiPrompt?.systemPrompt) {\n                   return defaultTemplate;\n               }\n\n               return that.options.ai?.aiPrompt?.systemPrompt(query, context);\n           },\n\n           _selectionChangeHandler: function() {\n               const that = this,\n                   range = that.getRange(),\n                   selectionRect = range.getBoundingClientRect(),\n                   elementRect = that.wrapper[0].getBoundingClientRect(),\n                   editorNS = kendo.ui.editor,\n                   rangeUtils = editorNS.RangeUtils,\n                   nodes = rangeUtils.textNodes(range);\n\n               if (nodes.length === 0) {\n                   that.inlineAIPrompt._popup.close();\n                   return;\n               }\n\n               that.inlineAIPrompt._popup.open();\n               const popupHeight = that.inlineAIPrompt._popup.element.outerHeight();\n               const popupWidth = that.inlineAIPrompt._popup.element.outerWidth();\n               let y = window.scrollY + elementRect.top + selectionRect.top + selectionRect.height;\n               let x = window.scrollX + elementRect.left + selectionRect.left + selectionRect.width / 2 - popupWidth / 2;\n               that.inlineAIPrompt._popup.close(true);\n\n               if (window.innerHeight - selectionRect.bottom < popupHeight) {\n                   y -= popupHeight;\n               } else {\n                   y += popupHeight;\n               }\n\n               if (x + popupWidth > window.innerWidth + window.scrollX) {\n                   x = window.innerWidth + window.scrollX - popupWidth;\n               }\n\n               that.inlineAIPrompt._popup.open(x, y);\n           },\n\n           _getSelectionPosition: function() {\n               const that = this;\n               const range = that.getRange();\n               const selectionRect = range.getBoundingClientRect();\n           },\n\n           _initContextMenu: function() {\n               const that = this;\n               const html = $(`<ul>\n                            <li>${kendo.html.renderIcon({ icon: 'arrow-rotate-cw' })} Rewrite</li>\n                            <li>${kendo.html.renderIcon({ icon: 'spell-checker' })} Fix mistakes</li>\n                            <li>${kendo.html.renderIcon({ icon: 'tell-a-friend' })} Change tone\n                                <ul>\n                                    <li>Neutral</li>\n                                    <li>Friendly</li>\n                                    <li>Casual</li>\n                                    <li>Formal</li>\n                                </ul>\n                            </li>\n                            <li>${kendo.html.renderIcon({ icon: 'apply-format' })} Polish formatting\n                            <li>${kendo.html.renderIcon({ icon: 'col-resize' })} Adjust length\n                            <li>${kendo.html.renderIcon({ icon: 'edit-tools' })} Translate\n                        </ul>`);\n\n               $('body').append(html);\n\n               that._aiContextMenu = html.kendoContextMenu({ targe: \"imposibru\" }).data('kendoContextMenu');\n           },\n\n           _insertAIResult: function() {\n               const that = this,\n                   aiResult = \"Test ai result\";\n\n               that.paste(aiResult);\n           },\n\n           _deregisterHandlers: function() {\n               var handlers = this._handlers;\n\n               for (var i = 0; i < handlers.length; i++) {\n                   var h = handlers[i];\n                   h.element.off(h.type, h.handler);\n               }\n\n               this._handlers = [];\n           },\n\n           _destroyUploadWidget: function() {\n               var editor = this;\n               if (editor._uploadWidget) {\n                   editor._uploadWidget.destroy();\n                   editor._uploadWidget = null;\n               }\n           },\n\n           _endTyping: function() {\n               var keyboard = this.keyboard;\n\n               try {\n                   if (keyboard.isTypingInProgress()) {\n                       keyboard.endTyping(true);\n                       this.saveSelection();\n                   }\n               } catch (e) { }\n           },\n\n           _focusBody: function() {\n               var body = this.body;\n               var iframe = this.wrapper && this.wrapper.find(\"iframe\")[0];\n               var documentElement = this.document.documentElement;\n               var activeElement = kendo._activeElement();\n               var scrollTop;\n\n\n               if (!iframe && body.scrollHeight > body.clientHeight) {\n                   scrollTop = body.scrollTop;\n                   body.focus();\n                   body.scrollTop = scrollTop;\n\n               } else if (activeElement != body && activeElement != iframe) {\n                   scrollTop = documentElement.scrollTop;\n                   body.focus();\n                   documentElement.scrollTop = scrollTop;\n               }\n           },\n\n           _focusOutside: function() {\n               // move focus outside the Editor, see https://github.com/telerik/kendo/issues/3673\n               if (kendo.support.browser.msie && this.textarea) {\n                   var tempInput = $(\"<input />\")\n                       .css({\n                           position: \"fixed\",\n                           left: \"1px\",\n                           top: \"1px\",\n                           width: \"1px\",\n                           height: \"1px\",\n                           \"font-size\": \"0\",\n                           border: \"0\",\n                           opacity: \"0\"\n                       })\n                       .appendTo(document.body).trigger(\"focus\");\n                   tempInput.trigger(\"blur\").remove();\n               }\n           },\n\n           _handleToolbarClick: function(e) {\n               var toolName = e.target.data(\"command\");\n\n               if (toolName && toolName !== \"createTable\") {\n                   this.exec(toolName);\n               }\n           },\n\n           _immutablesContext: function(range) {\n               var editorNS = kendo.ui.editor;\n\n               if (this.options.immutables) {\n                   if (range.collapsed) {\n                       return editorNS.Immutables.immutablesContext(range);\n                   } else {\n                       return editorNS.RangeUtils.editableTextNodes(range).length === 0;\n                   }\n               }\n           },\n\n           _initializeContentElement: function() {\n               var editor = this;\n               var doc;\n               var blurTrigger;\n               var mousedownTrigger;\n\n               if (editor.textarea) {\n                   editor.window = editor._createContentElement(editor.options.stylesheets);\n                   doc = editor.document = editor.window.contentDocument || editor.window.document;\n\n                   // Ensure that body exists as various Firefox plugins can cause a delay of the body creation\n                   // https://github.com/telerik/kendo-ui-core/issues/3515\n                   if (!doc.body) {\n                       var body = doc.createElement(\"body\");\n                       body.setAttribute(\"contenteditable\", \"true\");\n                       body.setAttribute(\"autocorrect\", \"off\");\n                       doc.getElementsByTagName(\"html\")[0].appendChild(body);\n\n                       var interval = setInterval(function() {\n                           if ($(editor.document).find(\"body\").length > 1) {\n                               $(editor.document).find(\"body\").last().remove();\n                               window.clearInterval(interval);\n                           }\n                       }, 10);\n                   }\n\n                   editor.body = doc.body;\n\n                   blurTrigger = editor.window;\n                   mousedownTrigger = doc;\n\n                   this._registerHandler(doc, \"mouseup\", this._mouseup.bind(this));\n               } else {\n                   editor.window = window;\n                   doc = editor.document = document;\n                   editor.body = editor.element[0];\n\n                   blurTrigger = editor.body;\n                   mousedownTrigger = editor.body;\n\n                   editor._wrapSingleTextNodeInParagraph();\n\n                   setTimeout(() => {\n                       editor._decorateFormatting(editor.body);\n                   });\n               }\n\n               this._registerHandler(blurTrigger, \"blur\", this._blur.bind(this));\n               editor._registerHandler(mousedownTrigger, \"down\", editor._mousedown.bind(editor));\n\n               try {\n                   doc.execCommand(\"enableInlineTableEditing\", null, false);\n               } catch (e) { }\n\n               if (kendo.support.touch) {\n                   this._registerHandler(doc, {\n                       \"keydown\": function() {\n                           // necessary in iOS when touch events are bound to the page\n                           if (kendo._activeElement() != doc.body) {\n                               editor.window.focus();\n                           }\n                       }\n                   });\n               }\n\n               this._initializePlaceholder();\n\n               this._spellCorrect(editor);\n\n               this._registerHandler(editor.document, {\n                   \"mouseover dragenter\": function(e) {\n                       var height = $(editor.body).height();\n                       var htmlHeight = $(editor.body.parentElement).height();\n\n                       if (htmlHeight > height && e.target.nodeName.toLowerCase() === \"html\") {\n                           editor._cachedHeight = \"\" + editor.body.style.height;\n                           editor.body.style.height = \"100%\";\n                       }\n                   },\n                   \"mouseout dragleave drop contextmenu\": function(e) {\n                       var restoreHeight = function() {\n                           if (editor._cachedHeight !== undefined$1 && e.target === editor.body) {\n                               editor.body.style.height = editor._cachedHeight;\n                               delete editor._cachedHeight;\n                           }\n                       };\n\n                       if (e.type === \"contextmenu\") {\n                           setTimeout(function() {\n                               restoreHeight();\n                           }, 10);\n                       } else {\n                           restoreHeight();\n                       }\n\n                   }\n               });\n\n               this._registerHandler(editor.body, {\n                   \"keydown\": function(e) {\n                       var range;\n\n                       if ((e.keyCode === keys.BACKSPACE || e.keyCode === keys.DELETE) && editor.body.getAttribute(\"contenteditable\") !== \"true\") {\n                           return false;\n                       }\n\n                       if (e.keyCode === keys.F10) {\n                           editor.toolbar.element.find(\"[tabindex=0]\").first().trigger(\"focus\");\n                           editor.toolbar.preventPopupHide = true;\n                           e.preventDefault();\n                           return;\n                       } else if (e.keyCode == keys.LEFT || e.keyCode == keys.RIGHT) {\n                           // skip bom nodes when navigating with arrows\n                           range = editor.getRange();\n                           var left = e.keyCode == keys.LEFT;\n                           var container = range[left ? \"startContainer\" : \"endContainer\"];\n                           var offset = range[left ? \"startOffset\" : \"endOffset\"];\n                           var direction = left ? -1 : 1;\n\n                           var next = offset + direction;\n                           var nextChar = left ? next : offset;\n\n                           if (container.nodeType == 3 && container.nodeValue[nextChar] == \"\\ufeff\") {\n                               range.setStart(container, next);\n                               range.collapse(true);\n                               editor.selectRange(range);\n                           }\n                       }\n\n                       var tools = editor.tools;\n                       var toolName = editor.keyboard.toolFromShortcut(tools, e);\n                       var toolOptions = toolName ? tools[toolName].options : {};\n\n                       if (toolName && !toolOptions.keyPressCommand) {\n                           e.preventDefault();\n\n                           if (!/^(undo|redo)$/.test(toolName)) {\n                               editor.keyboard.endTyping(true);\n                           }\n\n                           editor.trigger(\"keydown\", e);\n                           editor.exec(toolName);\n                           editor._runPostContentKeyCommands(e);\n\n                           return false;\n                       }\n\n                       editor.keyboard.clearTimeout();\n\n                       editor.keyboard.keydown(e);\n                   },\n                   \"keypress\": function(e) {\n                       setTimeout(function() {\n                           editor._runPostContentKeyCommands(e);\n                           editor._showElementResizeHandles();\n                       }, 0);\n                   },\n                   \"keyup\": function(e) {\n                       var selectionCodes = [\n                           keys.BACKSPACE,\n                           keys.TAB,\n                           keys.PAGEUP,\n                           keys.PAGEDOWN,\n                           keys.END,\n                           keys.HOME,\n                           keys.LEFT,\n                           keys.UP,\n                           keys.RIGHT,\n                           keys.DOWN,\n                           keys.INSERT,\n                           keys.DELETE\n                       ];\n\n                       if ($.inArray(e.keyCode, selectionCodes) > -1 || (e.keyCode == 65 && e.ctrlKey && !e.altKey && !e.shiftKey)) {\n                           window.clearTimeout(this._refreshInterval);\n                           this._refreshInterval = window.setTimeout(function() {\n                               editor._selectionChange();\n                           }, REFRESH_INTERVAL);\n                       }\n\n                       if (e.keyCode === keys.BACKSPACE || e.keyCode === keys.DELETE) {\n                           editor._handleSpaceAndNewLines();\n                       }\n\n                       editor.keyboard.keyup(e);\n                   },\n                   \"click\": function(e) {\n                       var dom = kendo.ui.editor.Dom, range;\n\n                       if (dom.name(e.target) === \"img\") {\n                           range = editor.createRange();\n                           range.selectNode(e.target);\n                           editor.selectRange(range);\n                       }\n                   },\n                   \"cut copy paste drop dragover\": function(e) {\n                       editor.clipboard[\"on\" + e.type](e);\n                       editor._handleSpaceAndNewLines();\n                   },\n                   \"focusin\": function() {\n                       if (editor.body.hasAttribute(\"contenteditable\")) {\n                           $(this).addClass(\"k-active\");\n                           // To be moved to the Editor\n                           editor._showWindow();\n                           editor._togglePlaceholder(false);\n                       }\n                   },\n                   \"focusout\": function() {\n                       setTimeout(function() {\n                           var active = kendo._activeElement();\n                           var body = editor.body;\n                           // All below to be moved to the Editor\n                           var toolbar = editor.toolbar;\n\n                           if (toolbar.options.popup) {\n                               var toolbarContainerElement = editor.windowInstance.element.get(0);\n                               if (toolbarContainerElement && !($.contains(toolbarContainerElement, active) || toolbarContainerElement == active)) {\n                                   toolbar.preventPopupHide = false;\n                               }\n                           }\n\n                           if (active != body && !$.contains(body, active) && !editor._toolbarFocused() && !toolbar.preventPopupHide && !$(active).hasClass(\"k-context-menu\") && !$(active).hasClass(\"k-colorpalette\")) {\n                               $(body).removeClass(\"k-active\");\n                               editor._hideWindow();\n                           }\n\n                           editor._togglePlaceholder(!editor.value().trim());\n                       }, 10);\n                   }\n               });\n\n               editor._initializeColumnResizing();\n               editor._initializeRowResizing();\n               editor._initializeElementResizing();\n           },\n\n           _initializeImmutables: function() {\n               var that = this,\n                   editorNS = kendo.ui.editor;\n\n               if (that.options.immutables) {\n                   that.immutables = new editorNS.Immutables(that);\n               }\n           },\n\n           _initializePlaceholder: function() {\n               var that = this,\n                   placeholder = that.options.placeholder,\n                   style, $head;\n\n               if (!that.textarea || !placeholder) {\n                   return;\n               }\n\n               style = `<style id='${PLACEHOLDER_TAG_ID}' ${that.options.nonce ? `nonce=\"${that.options.nonce}\"` : \"\"} >.` +\n                   PLACEHOLDER_CLASS + \":before { content: '\" + placeholder + \"'; }\" +\n                   \"</style>\";\n\n               $head = $(that.document.head);\n               $head.find(\"#\" + PLACEHOLDER_TAG_ID).remove();\n               $head.append(style);\n\n               that._togglePlaceholder(!that.value().trim());\n           },\n\n           _initToolbar: function(toolbarContainer) {\n               var that = this,\n                   tools, defaults, toolbarOptions;\n\n               that.tools = [];\n               [tools, defaults] = that._processToolbarItems(that.options.tools);\n               that._setNativeTools();\n\n               toolbarOptions = {\n                   tools: tools,\n                   defaultTools: defaults,\n                   parentMessages: that.options.messages,\n                   resizable: that.options.resizable === true || Boolean(that.options.resizable && that.options.resizable.toolbar && that.options.resizable.toolbar?.mode !== \"none\"),\n                   toggle: that._handleToolbarClick.bind(this),\n                   click: that._handleToolbarClick.bind(this),\n                   navigateOnTab: that.options.navigateOnTab,\n                   evaluateTemplates: true,\n                   overflow: $.isPlainObject(that.options.resizable?.toolbar) ? that.options.resizable.toolbar : undefined$1,\n               };\n\n               that.toolbar = new kendo.ui.ToolBar(toolbarContainer, toolbarOptions);\n\n               that._bindTools();\n               that.bind(\"select\", that._refreshTools.bind(that));\n\n               toolbarContainer.on(\"mousedown\" + NS, function(e) {\n                   const target = $(e.target);\n                   const tool = target.closest('[ref-toolbar-tool]');\n\n                   if (!tool.length || !tool.data(\"command\")) {\n                       return;\n                   }\n\n                   if (tool.length) {\n                       if (!target.is(\"input\")) {\n                           e.preventDefault();\n                       }\n                   } else {\n                       e.preventDefault();\n                   }\n               });\n\n               if (!that.textarea) {\n                   const toolbarWidth = toolbarContainer.width();\n                   if (toolbarWidth && toolbarWidth > 0) {\n                       toolbarContainer.width(toolbarWidth);\n                   }\n\n                   that._initToolbarWindow(toolbarContainer);\n               }\n           },\n\n           _initToolbarWindow: function(toolbarEl) {\n               var that = this;\n\n               this.windowInstance = toolbarEl\n                   .wrap(\"<div class='editorToolbarWindow k-editor-window' />\")\n                   .parent()\n                   .prepend(\"<span class='k-editortoolbar-dragHandle'>\" + kendo.ui.icon(\"handle-drag\") + \"</span>\")\n                   .kendoWindow({\n                       title: false,\n                       resizable: false,\n                       draggable: {\n                           dragHandle: \".k-editortoolbar-dragHandle\"\n                       },\n                       animation: {\n                           open: { effects: \"fade:in\" },\n                           close: { effects: \"fade:out\" }\n                       },\n                       minHeight: 42,\n                       visible: false,\n                       autoFocus: false,\n                       actions: [],\n                       dragend: function() {\n                           this._moved = true;\n                       }\n                   })\n                   .on(\"mousedown\", function(e) {\n                       if (!$(e.target).is(TOOLBAR_ALLOWED_CLOSE_SELECTORS)) {\n                           that.toolbar.preventPopupHide = true;\n                       }\n                   })\n                   .on(\"focusout\", function() {\n                       that.element.focusout();\n                   })\n                   .data(\"kendoWindow\");\n           },\n\n           _mousedown: function(e) {\n               var editor = this;\n               editor._selectionStarted = true;\n\n               if ($(editor.body).parents('.k-window').length) {\n                   e.stopPropagation();\n               }\n\n               // handle middle-click and ctrl-click on links\n               if (browser.gecko) {\n                   return;\n               }\n\n               var target = $(e.target).closest(\"a[href]\");\n\n               if ((e.which == 2 || (e.which == 1 && e.ctrlKey)) && target && target.is(\"a[href]\")) {\n                   window.open(target.attr(\"href\"), \"_new\");\n               }\n\n               if (e.target.tagName && e.target.tagName.toLowerCase() === \"html\") {\n                   setTimeout(function() {\n                       editor.body.focus();\n                   }, 0);\n               }\n           },\n\n           _mouseup: function(e) {\n               var that = this;\n\n               if (kendo.support.mobileOS.ios && e && $(e.target).is(SELECT_OVERLAY_SELECTOR)) {\n                   return;\n               }\n\n               if (that._selectionStarted) {\n                   setTimeout(function() {\n                       that._selectionChange();\n                   }, 1);\n               }\n           },\n\n           _populateValue: function(options, domElement) {\n               var that = this,\n                   editorNS = kendo.ui.editor,\n                   dom = editorNS.Dom,\n                   value, comments;\n\n               if (options && options.value) {\n                   value = options.value;\n               } else if (that.textarea) {\n                   // indented HTML introduces problematic ranges in IE\n                   value = domElement.value;\n\n                   if (!value.replace(/\\s/g, '').length) {\n                       value = value.replace(/\\s/g, '');\n                   }\n\n                   // revert encoding of value when content is fetched from cache\n                   if (that.options.encoded && domElement.defaultValue && domElement.defaultValue.trim().length) {\n                       value = domElement.defaultValue;\n                   }\n\n                   var deserializedRoot = editorNS.Serializer.htmlToDom(value, $(\"<div></div>\")[0], that.options.deserialization);\n                   comments = dom.getAllComments(deserializedRoot);\n                   value = EditorUtils.cacheComments(value, comments);\n                   value = value.replace(/[\\r\\n\\v\\f\\t ]+/ig, \" \");\n                   value = EditorUtils.retrieveComments(value, comments);\n               } else {\n                   value = domElement.innerHTML;\n               }\n\n               that.value(value || '\\ufeff');\n           },\n\n           _resetGroups: function(current) {\n               var result = {};\n\n               Object.keys(current).map(key => {\n                   result[key + \"_\"] = current[key];\n               });\n\n               return result;\n           },\n\n           _processToolbarItems: function(optionsTools) {\n               var flatDefaultTools = {},\n                   processedObject = {},\n                   tools = [],\n                   currentGroups = $.extend(true, {}, toolGroups),\n                   i, j, t, name, guidGroupName;\n\n               for (i = 0; i < optionsTools.length; i++) {\n                   t = optionsTools[i];\n\n                   if (Array.isArray(t)) {\n                       guidGroupName = kendo.guid();\n\n                       for (j = 0; j < t.length; j++) {\n                           [flatDefaultTools, name] = this._processToolOptions(t[j], flatDefaultTools);\n\n                           if (!name) {\n                               continue;\n                           }\n\n                           flatDefaultTools[name].gr = guidGroupName;\n                       }\n                   } else {\n                       [flatDefaultTools, name] = this._processToolOptions(t, flatDefaultTools);\n\n                       if (!name) {\n                           continue;\n                       } else if (name === \"separator\") {\n                           currentGroups = this._resetGroups(currentGroups);\n                       }\n\n                       Object.keys(currentGroups).map(key => {\n                           var group = currentGroups[key];\n\n                           if (group.includes(name)) {\n                               flatDefaultTools[name].gr = key;\n                           }\n                       });\n                   }\n               }\n\n               Object.values(flatDefaultTools).map((tool) => {\n                   var group = tool.gr;\n\n                   delete tool.gr;\n\n                   if (group === undefined$1) {\n                       processedObject[tool.name] = tool;\n                   } else {\n                       if (!processedObject[group]) {\n                           processedObject[group] = [];\n                       }\n\n                       processedObject[group].push(tool);\n                   }\n               });\n\n               tools = Object.values(processedObject).map((g) => {\n                   var result;\n\n                   if (g.length) {\n                       result = g.map((to) => to.name);\n                   } else {\n                       result = g.name;\n                   }\n\n                   if (result.length === 1) {\n                       result = result[0];\n                   }\n\n                   return result;\n               });\n\n               return [tools, flatDefaultTools];\n           },\n\n           _processDefaultTool: function(tool, defaultTools) {\n               var name = tool.name,\n                   result = {},\n                   options;\n\n               if ($.isPlainObject(tool)) {\n                   if (name && defaultTools[name]) {\n                       // configured tool\n                       result = extend({}, defaultTools[name]);\n                       extend(result.options, tool);\n                   } else {\n                       // custom tool\n                       options = extend({ icon: \"gear\", type: \"button\" }, tool);\n\n                       if (!options.name) {\n                           options.name = \"custom\";\n                       }\n\n                       options.cssClass = \"k-\" + options.name;\n\n                       result = {\n                           options: options\n                       };\n\n                       name = options.name;\n                   }\n               } else if (defaultTools[tool]) {\n                   name = tool;\n                   result = defaultTools[name];\n               } else {\n                   return null;\n               }\n\n               this.tools[name] = result;\n\n               return result;\n           },\n\n           _processToolOptions: function(t, flatDefaultTools) {\n               var that = this,\n                   defaultTools = kendo.deepExtend({}, kendo.ui.Editor.defaultTools),\n                   tool, name, view, shortcuts, options, uiOptions, icon, toolOptions, originalOptions, palette;\n\n               tool = this._processDefaultTool(t, defaultTools);\n\n               if (!tool) {\n                   return [flatDefaultTools, null];\n               }\n\n               options = tool.options;\n               name = options.name;\n               uiOptions = options.ui || {};\n               icon = EditorUtils.getToolCssClass(options.name, options.icon);\n\n               // We want to preserve any custom properties from the original tool object.\n               originalOptions = $.isPlainObject(t) ? $.extend({}, t) : {};\n               delete originalOptions.items;\n\n               toolOptions = $.extend({\n                   name: options.name,\n                   command: options.command,\n                   template: options.template,\n                   attributes: { class: options.cssClass },\n                   type: \"button\",\n                   icon: icon,\n                   showText: \"overflow\",\n                   showIcon: \"both\"\n               }, uiOptions, originalOptions);\n\n               if (options.tooltip) {\n                   if (!toolOptions.attributes) {\n                       toolOptions.attributes = {};\n                   }\n\n                   toolOptions.attributes.title = options.tooltip;\n               }\n               if (options.exec) {\n                   toolOptions.click = options.exec.bind(that);\n                   delete toolOptions.exec;\n               }\n\n               if (toolOptions.component === \"ColorPicker\") {\n                   if (options.palette !== undefined$1 || uiOptions.palette !== kendo.ui.editor.ColorTool.fn.options.palette) {\n                       palette = options.palette || kendo.ui.editor.ColorTool.fn.options.palette;\n                       view = options.palette !== undefined$1 && !options.palette ? \"gradient\" : \"palette\";\n                       toolOptions.componentOptions.palette = view === \"palette\" ? palette : undefined$1;\n                       toolOptions.componentOptions.views = [view];\n                       toolOptions.componentOptions.preview = view === \"gradient\";\n                       toolOptions.componentOptions.input = view === \"gradient\";\n                       toolOptions.componentOptions.buttons = view === \"gradient\";\n\n                       if (view === \"gradient\") {\n                           delete toolOptions.componentOptions.columns;\n                       }\n                   }\n                   if (view === \"palette\" && options.columns) {\n                       toolOptions.componentOptions.columns = options.columns;\n                   }\n               }\n\n               if (toolOptions.component === \"DropDownList\" || toolOptions.component === \"ComboBox\") {\n                   if (!toolOptions.componentOptions) {\n                       toolOptions.componentOptions = {};\n                   }\n\n                   if (!toolOptions.componentOptions.dataSource) {\n                       if (that.options[name] && Array.isArray(that.options[name])) {\n                           toolOptions.componentOptions.dataSource = that.options[name];\n                       } else {\n                           toolOptions.componentOptions.dataSource = options.items;\n                       }\n                   }\n               }\n               if (toolOptions.template) {\n                   delete toolOptions.type;\n               }\n\n               shortcuts = this._shortcutSequence(name);\n\n               if (shortcuts !== \"\") {\n                   if (!toolOptions.attributes) {\n                       toolOptions.attributes = {};\n                   }\n\n                   toolOptions.attributes[\"aria-keyshortcuts\"] = shortcuts;\n               }\n\n               flatDefaultTools[name] = toolOptions;\n\n               return [flatDefaultTools, name];\n           },\n\n           _refreshTools: function() {\n               var that = this,\n                   range = that.getRange(),\n                   editorNS = kendo.ui.editor,\n                   rangeUtils = editorNS.RangeUtils,\n                   nodes = rangeUtils.textNodes(range),\n                   immutables = that.options.immutables,\n                   immutablesContext = that._immutablesContext(range),\n                   defaultTools = that.tools;\n\n               nodes = editorNS.Dom.filterBy(nodes, editorNS.Dom.htmlIndentSpace, true);\n\n               if (!nodes.length) {\n                   nodes = [range.startContainer];\n               }\n\n               that.toolbar.element.find(\"[data-command]\")\n                   .filter((i, el) => $(el).find(\"[data-command]\").length === 0)\n                   .each(function() {\n                       var toolName = this.getAttribute(\"data-command\"),\n                           tool = defaultTools[toolName],\n                           ui;\n\n                       if (tool) {\n                           ui = $(this);\n\n                           if (tool.update) {\n                               tool.update(ui, nodes, that.undoRedoStack);\n                           }\n\n                           if (immutables) {\n                               that._updateImmutablesState(tool, ui, immutablesContext);\n                           }\n                       }\n                   });\n           },\n\n           _registerHandler: function(element, type, handler) {\n               var editor = this;\n               var NS = \".kendoEditor\";\n               var eventNames;\n               var i;\n\n               element = $(element);\n\n               if (!this._handlers) {\n                   this._handlers = [];\n               }\n\n               if (element.length) {\n                   if ($.isPlainObject(type)) {\n                       for (var t in type) {\n                           if (type.hasOwnProperty(t)) {\n                               this._registerHandler(element, t, type[t]);\n                           }\n                       }\n                   } else {\n                       //map the original event to handle interaction on mobile platforms\n                       eventNames = kendo.applyEventMap(type).split(\" \");\n\n                       for (i = 0; i < eventNames.length; i++) {\n                           editor._handlers.push({\n                               element: element,\n                               type: eventNames[i] + NS,\n                               handler: handler\n                           });\n\n                           element.on(eventNames[i] + NS, handler);\n                       }\n                   }\n               }\n           },\n\n           _runPostContentKeyCommands: function(e) {\n               const range = this.getRange();\n               const tools = this.keyboard.toolsFromShortcut(this.tools, e);\n\n               for (var i = 0; i < tools.length; i++) {\n                   var tool = tools[i];\n                   var o = tool.options;\n                   if (!o.keyPressCommand) {\n                       continue;\n                   }\n\n                   var cmd = new o.command({ range: range });\n                   if (cmd.changesContent()) {\n                       this.keyboard.endTyping(true);\n                       this.exec(tool.name);\n                   }\n               }\n\n               this._wrapSingleTextNodeInParagraph();\n\n               this._handleSpaceAndNewLines();\n           },\n\n           _wrapSingleTextNodeInParagraph: function() {\n               const childNodes = this.body.childNodes;\n               const dom = kendo.ui.editor.Dom;\n\n               if (this.textarea) {\n                   return;\n               }\n\n               if (childNodes.length === 1 && childNodes[0].nodeType === dom.nodeTypes.TEXT_NODE) {\n                   dom.wrap(childNodes[0], this.document.createElement(\"p\"));\n               }\n           },\n\n           _handleSpaceAndNewLines: function() {\n               const that = this,\n                   refreshDelay = that.options.formattingMarksRefreshDelay,\n                   editorNS = kendo.ui.editor,\n                   applyFormattingMarks = editorNS.applyFormattingMarks,\n                   clearFormattingMarksOverlay = editorNS.clearFormattingMarksOverlay;\n\n               if (that._toggledFormattingMarks) {\n                   if (that._formattingMarksOverlay.children().length) {\n                       clearFormattingMarksOverlay(that);\n                   }\n\n                   if (refreshDelay) {\n                       clearTimeout(that._formattingMarksTimeout);\n                       that._formattingMarksTimeout = setTimeout(() => applyFormattingMarks(that), refreshDelay);\n                   } else {\n                       applyFormattingMarks(that);\n                   }\n\n               }\n           },\n\n           _selectionChange: function() {\n               this._selectionStarted = false;\n               this.saveSelection();\n               this.trigger(\"select\", {});\n           },\n\n           _setOptionsTools: function(optionsTools) {\n               var that = this,\n                   toolbar = that.toolbar,\n                   toolbarContainer = toolbar.element,\n                   tools, defaults, toolbarOptions;\n\n               toolbar.destroy();\n               toolbarContainer.empty();\n\n               that.tools = [];\n               [tools, defaults] = that._processToolbarItems(optionsTools);\n               that._setNativeTools();\n\n               toolbarOptions = {\n                   tools: tools,\n                   defaultTools: defaults,\n                   parentMessages: that.options.messages,\n                   resizable: that.options.resizable === true || Boolean(that.options.resizable && that.options.resizable.toolbar && that.options.resizable.toolbar?.mode !== \"none\"),\n                   toggle: that._handleToolbarClick.bind(this),\n                   click: that._handleToolbarClick.bind(this),\n                   overflow: $.isPlainObject(that.options.resizable?.toolbar) ? that.options.resizable.toolbar : undefined$1,\n               };\n\n               that.toolbar = new kendo.ui.ToolBar(toolbarContainer, toolbarOptions);\n\n               that._bindTools();\n           },\n\n           _setNativeTools: function() {\n               var defaultTools = kendo.deepExtend({}, kendo.ui.Editor.defaultTools),\n                   i;\n\n               for (i = 0; i < NATIVE_TOOLS.length; i++) {\n                   if (!this.tools[NATIVE_TOOLS[i]]) {\n                       this.tools[NATIVE_TOOLS[i]] = defaultTools[NATIVE_TOOLS[i]];\n                   }\n               }\n           },\n\n           _setupHeight: function(type) {\n               var that = this;\n\n               if (type == \"textarea\") {\n                   setTimeout(function() {\n                       var heightStyle = that.wrapper[0].style.height;\n                       var expectedHeight = parseInt(heightStyle, 10);\n                       var actualHeight = that.wrapper.height();\n                       if (heightStyle.indexOf(\"px\") > 0 && !isNaN(expectedHeight) && actualHeight > expectedHeight) {\n                           that.wrapper.height(expectedHeight - (actualHeight - expectedHeight));\n                       }\n                   });\n               }\n           },\n\n           _setupKeyboard: function() {\n               var that = this,\n                   editorNS = kendo.ui.editor;\n\n               that.keyboard = new editorNS.Keyboard([\n                   new editorNS.BackspaceHandler(that),\n                   new editorNS.TypingHandler(that),\n                   new editorNS.SystemHandler(that),\n                   new editorNS.SelectAllHandler(that)\n               ]);\n           },\n\n           _setupType: function(element) {\n               var domElement = element[0],\n                   type = kendo.ui.editor.Dom.name(domElement),\n                   id = domElement.id,\n                   toolbarContainer;\n\n               if (!id) {\n                   id = kendo.guid();\n                   domElement.setAttribute(\"id\", id);\n               }\n\n               if (type == \"textarea\") {\n                   this._wrapTextarea();\n\n                   toolbarContainer = this.wrapper.find(\".k-editor-toolbar\");\n                   toolbarContainer.attr(\"aria-controls\", id);\n               } else {\n                   $(domElement).attr(\"contenteditable\", true).addClass(\"k-editor k-editor-inline\");\n                   toolbarContainer = $('<div class=\"k-editor-toolbar\"/>').insertBefore(element);\n               }\n\n               return toolbarContainer;\n           },\n\n           _isInlineEditor: function() {\n               return this.element.hasClass(\"k-editor-inline\");\n           },\n\n           _shortcutSequence: function(name) {\n               var tool = kendo.ui.Editor.defaultTools[name],\n                   res = \"\",\n                   options;\n\n               if (!tool || !tool.options) {\n                   return res;\n               }\n\n               options = tool.options;\n\n               if (options.ctrl) {\n                   res += \"Ctrl+\";\n               }\n\n               if (options.shift) {\n                   res += \"Shift+\";\n               }\n\n               if (options.alt) {\n                   res += \"Alt+\";\n               }\n\n               if (options.key) {\n                   res += options.key;\n               }\n\n               return res;\n           },\n\n           _spellCorrect: function(editor) {\n               var beforeCorrection;\n               var falseTrigger = false;\n\n               this._registerHandler(editor.body, {\n                   \"contextmenu\": function() {\n                       editor.one(\"select\", function() {\n                           beforeCorrection = null;\n                       });\n\n                       editor._spellCorrectTimeout = setTimeout(function() {\n                           beforeCorrection = new kendo.ui.editor.RestorePoint(editor.getRange(), editor.body);\n                           falseTrigger = false;\n                       }, 10);\n                   },\n                   \"input\": function() {\n                       if (!beforeCorrection) {\n                           return;\n                       }\n\n                       if (kendo.support.browser.mozilla && !falseTrigger) {\n                           falseTrigger = true;\n                           return;\n                       }\n\n                       kendo.ui.editor._finishUpdate(editor, beforeCorrection);\n                   }\n               });\n           },\n\n           _togglePlaceholder: function(show) {\n               var that = this,\n                   body = that.body,\n                   $body = $(body),\n                   placeholder = that.options.placeholder;\n\n               if (!that.textarea || !placeholder) {\n                   return;\n               }\n\n               $body.attr('aria-label', function() {\n                   return show ? placeholder : \"\";\n               });\n\n               $body.toggleClass(PLACEHOLDER_CLASS, show);\n           },\n\n           _toolbarFocused: function() {\n               var active = kendo._activeElement(),\n                   popup = this.windowInstance,\n                   overflowPopup = this.overflowPopup;\n\n               return (popup && $(active).closest(popup.wrapper).length) ||\n                   (overflowPopup && overflowPopup.visible());\n           },\n\n           _updateImmutablesState: function(tool, ui, immutablesContext) {\n               let toolbar = this.toolbar,\n                   name = tool.name,\n                   overflowAnchor = toolbar.overflowAnchor,\n                   uiElement = ui.closest(\"[ref-toolbar-tool]\"),\n                   trackImmutables = tool.options.trackImmutables,\n                   toolInOverflowMenuIsHidden = true,\n                   editorNS = kendo.ui.editor;\n\n               if (trackImmutables === undefined$1) {\n                   trackImmutables = $.inArray(name, editorNS.Immutables.toolsToBeUpdated) > -1;\n               }\n\n               if (overflowAnchor && !overflowAnchor.hasClass(\"k-hidden\")) {\n                   const overflowMenu = toolbar.overflowMenu,\n                       toolInOverflowMenu = overflowMenu?.element.find(`[data-command=\"${tool.options.name}\"]`);\n\n                   toolInOverflowMenuIsHidden = toolInOverflowMenu?.hasClass(\"k-hidden\");\n               }\n\n               if (trackImmutables) {\n                   if (immutablesContext) {\n                       toolbar.hide(uiElement);\n                   } else if (toolInOverflowMenuIsHidden) {\n                       toolbar.show(uiElement);\n                   }\n               }\n           },\n\n           _wrapTextarea: function() {\n               var that = this,\n                   textarea = that.element,\n                   w = textarea[0].style.width,\n                   h = textarea[0].style.height,\n                   template = EditorUtils.editorWrapperTemplate(),\n                   editorWrap = $(template).insertBefore(textarea),\n                   editArea = editorWrap.find(\".k-editable-area\");\n\n               editorWrap.css({\n                   \"width\": w,\n                   \"height\": h\n               });\n\n               textarea.attr(\"autocomplete\", \"off\")\n                   .appendTo(editArea).addClass(\"k-content k-raw-content\").css(\"display\", \"none\");\n\n               that.textarea = textarea;\n               that.wrapper = editorWrap;\n           },\n\n           // Resizing methods\n           _resizable: function() {\n               let that = this;\n               let resizable = this.options.resizable;\n               let isResizable = $.isPlainObject(resizable) ? (resizable.content === undefined$1 || resizable.content === true) : resizable;\n               let resizableMin = $.isPlainObject(resizable.min) ? resizable.min : { minHeight: resizable.min };\n               let resizableMax = $.isPlainObject(resizable.max) ? resizable.max : { maxHeight: resizable.max };\n\n               if (isResizable && this.textarea) {\n                   that.wrapper.addClass('k-editor-resizable');\n\n                   if (resizableMin.minHeight) {\n                       that.wrapper.css(\"min-height\", resizableMin.minHeight);\n                   }\n\n                   if (resizableMax.maxHeight) {\n                       that.wrapper.css(\"max-height\", resizableMax.maxHeight);\n                   }\n\n                   if (resizableMin.minWidth) {\n                       that.wrapper.css(\"min-width\", resizableMin.minWidth);\n                   }\n\n                   if (resizableMax.maxWidth) {\n                       that.wrapper.css(\"max-width\", resizableMax.maxWidth);\n                   }\n\n                   that.resizeObserver = new ResizeObserver(() => {\n                       clearTimeout(that._resizeTimeOut);\n\n                       that._resizeTimeOut = setTimeout(function() {\n                           that.toolbar.resize();\n                           that._handleSpaceAndNewLines();\n                       }, 50);\n\n                   });\n                   that.resizeObserver.observe(that.wrapper[0]);\n               }\n           },\n\n           _destroyResizings: function() {\n               var editor = this;\n\n               editor._destroyElementResizing();\n               kendo.ui.editor.ElementResizingFactory.current.dispose(editor);\n               editor._destroyRowResizing();\n               kendo.ui.editor.RowResizing.dispose(editor);\n               editor._destroyColumnResizing();\n               kendo.ui.editor.ColumnResizing.dispose(editor);\n           },\n\n           _initializeElementResizing: function() {\n               var editor = this;\n\n               kendo.ui.editor.ElementResizingFactory.current.create(editor);\n\n               editor._showElementResizeHandlesProxy = editor._showElementResizeHandles.bind(editor);\n               editor.bind(SELECT, editor._showElementResizeHandlesProxy);\n           },\n\n           _destroyElementResizing: function() {\n               var editor = this;\n               var elementResizing = editor.elementResizing;\n\n               if (elementResizing) {\n                   elementResizing.destroy();\n                   editor.elementResizing = null;\n               }\n\n               if (editor._showElementResizeHandlesProxy) {\n                   editor.unbind(SELECT, editor._showElementResizeHandlesProxy);\n               }\n           },\n\n           _showElementResizeHandles: function() {\n               var editor = this;\n               var elementResizing = editor.elementResizing;\n\n               if (elementResizing && elementResizing.element && elementResizing.element.parentNode) {\n                   elementResizing.showResizeHandles();\n               } else if (elementResizing && (!elementResizing.element || !elementResizing.element.parentNode)) {\n                   editor._destroyElementResizing();\n               }\n           },\n\n           _initializeColumnResizing: function() {\n               kendo.ui.editor.ColumnResizing.create(this);\n           },\n\n           _destroyColumnResizing: function() {\n               var editor = this;\n\n               if (editor.columnResizing) {\n                   editor.columnResizing.destroy();\n                   editor.columnResizing = null;\n               }\n           },\n\n           _initializeRowResizing: function() {\n               kendo.ui.editor.RowResizing.create(this);\n           },\n\n           _destroyRowResizing: function() {\n               var editor = this;\n\n               if (editor.rowResizing) {\n                   editor.rowResizing.destroy();\n                   editor.rowResizing = null;\n               }\n           },\n\n           // ToolBar Window methods\n           _getWindowWidth: function() {\n               var that = this,\n                   wrapper = that.windowInstance.wrapper,\n                   editorElement = that.element;\n\n               return outerWidth(editorElement) - parseInt(wrapper.css(\"border-left-width\"), 10) - parseInt(wrapper.css(\"border-right-width\"), 10);\n           },\n\n           _hideWindow: function() {\n               if (this.windowInstance) {\n                   this.windowInstance.close();\n               }\n           },\n\n           _overlapsWindow: function(box) {\n               var toolbarWrapper = this.windowInstance.wrapper,\n                   toolbarWrapperOffset = toolbarWrapper.offset(),\n                   toolbarWrapperLeft = toolbarWrapperOffset.left,\n                   toolbarWrapperTop = toolbarWrapperOffset.top,\n                   boxOffset = box.offset(),\n                   boxOffsetLeft = boxOffset.left,\n                   boxOffsetTop = boxOffset.top;\n\n               return !(boxOffsetLeft + box.width() < toolbarWrapperLeft ||\n                   boxOffsetLeft > toolbarWrapperLeft + toolbarWrapper.width() ||\n                   boxOffsetTop + box.height() < toolbarWrapperTop ||\n                   boxOffsetTop > toolbarWrapperTop + toolbarWrapper.height());\n           },\n\n           _showWindow: function() {\n               var that = this,\n                   windowInstance = that.windowInstance,\n                   wrapper, editorElement, editorOffset,\n                   browser = kendo.support.browser;\n\n               if (windowInstance) {\n                   wrapper = windowInstance.wrapper;\n                   editorElement = that.element;\n\n                   if (!wrapper.is(\":visible\") || !that.windowInstance.options.visible) {\n\n                       if (!wrapper[0].style.width) {\n                           wrapper.width(this._getWindowWidth());\n                       }\n\n                       // track content position when other parts of page change\n                       if (!windowInstance._moved) {\n                           editorOffset = editorElement.offset();\n                           wrapper.css({\n                               top: Math.max(0, parseInt(editorOffset.top, 10) - outerHeight(wrapper) - parseInt(that.windowInstance.element.css(\"padding-bottom\"), 10)),\n                               left: Math.max(0, parseInt(editorOffset.left, 10))\n                           });\n                       }\n\n                       if ((browser.msie || browser.edge) && that._overlapsWindow(editorElement)) {\n                           setTimeout(function() {\n                               windowInstance.open();\n                           }, 0);\n                       } else {\n                           windowInstance.open();\n                       }\n                   }\n               }\n           }\n       });\n\n       Editor.defaultTools = {};\n\n       kendo.ui.plugin(Editor);\n\n       var Tool = Class.extend({\n           init: function(options) {\n               this.options = options;\n           },\n\n           command: function(commandArguments) {\n               return new this.options.command(commandArguments);\n           },\n\n           update: $.noop\n       });\n\n       Tool.exec = function(editor, name, value) {\n           editor.exec(name, { value: value });\n       };\n\n       var UndoTool = Tool.extend({\n           command: $.noop,\n           update: function(ui, nodes, undoRedoStack) {\n               var that = this,\n                   name = that.options.name,\n                   toolbar = ui.closest(\".k-toolbar\").data(\"kendoToolBar\");\n\n               switch (name) {\n                   case \"undo\":\n                       toolbar.enable(ui, undoRedoStack.canUndo());\n                       break;\n                   case \"redo\":\n                       toolbar.enable(ui, undoRedoStack.canRedo());\n                       break;\n                   default:\n                       break;\n               }\n\n               ui.removeAttr(\"disabled\");\n           }\n       });\n\n       EditorUtils.registerTool(\"separator\", new Tool({ ui: { type: \"separator\" } }));\n       EditorUtils.registerTool(\"undo\", new UndoTool({ key: \"Z\", ctrl: true }));\n       EditorUtils.registerTool(\"redo\", new UndoTool({ key: \"Y\", ctrl: true }));\n\n       // Exports ================================================================\n\n       var emptyElementContent = '\\ufeff';\n       var emptyTableCellContent = emptyElementContent;\n\n       if (browser.msie || browser.edge) {\n           emptyTableCellContent = emptyElementContent = \"&nbsp;\";\n       }\n\n       extend(kendo.ui, {\n           editor: {\n               EditorUtils: EditorUtils,\n               Tool: Tool,\n               emptyElementContent: emptyElementContent,\n               emptyTableCellContent: emptyTableCellContent\n           }\n       });\n\n       if (kendo.PDFMixin) {\n           kendo.PDFMixin.extend(Editor.prototype);\n           Editor.prototype._drawPDF = function() {\n               return kendo.drawing.drawDOM(this.body, this.options.pdf);\n           };\n           Editor.prototype.saveAsPDF = function() {\n               var progress = new $.Deferred();\n               var promise = progress.promise();\n               var args = { promise: promise };\n\n               if (this.trigger(\"pdfExport\", args)) {\n                   return;\n               }\n\n               var options = this.options.pdf;\n\n               this._drawPDF(progress)\n                   .then(function(root) {\n                       return kendo.drawing.exportPDF(root, options);\n                   })\n                   .done(function(dataURI) {\n                       kendo.saveAs({\n                           dataURI: dataURI,\n                           fileName: options.fileName,\n                           proxyURL: options.proxyURL,\n                           proxyTarget: options.proxyTarget,\n                           forceProxy: options.forceProxy\n                       });\n                       progress.resolve();\n                   })\n                   .fail(function(err) {\n                       progress.reject(err);\n                   });\n\n               return promise;\n           };\n       }\n\n   })(window.kendo.jQuery);\n\n   (function($) {\n\n   var kendo = window.kendo,\n       map = $.map,\n       extend = $.extend,\n       browser = kendo.support.browser,\n       STYLE = \"style\",\n       FLOAT = \"float\",\n       CSSFLOAT = \"cssFloat\",\n       STYLEFLOAT = \"styleFloat\",\n       CLASS = \"class\",\n       KMARKER = \"k-marker\";\n\n   function makeMap(items) {\n       var obj = {},\n           i, len;\n\n       for (i = 0, len = items.length; i < len; i++) {\n           obj[items[i]] = true;\n       }\n       return obj;\n   }\n\n   var empty = makeMap(\"area,base,basefont,br,col,frame,hr,img,input,isindex,link,meta,param,embed\".split(\",\")),\n       nonListBlockElements = \"p,div,h1,h2,h3,h4,h5,h6,address,applet,blockquote,button,center,dd,dir,dl,dt,fieldset,form,frameset,hr,iframe,isindex,map,menu,noframes,noscript,object,pre,script,table,tbody,td,tfoot,th,thead,tr,header,article,nav,footer,section,aside,main,figure,figcaption\".split(\",\"),\n       blockElements = nonListBlockElements.concat([\"ul\",\"ol\",\"li\"]),\n       block = makeMap(blockElements),\n       selfClosing = makeMap(\"area,base,br,col,command,embed,hr,img,input,keygen,link,menuitem,meta,param,source,track,wbr\".split(\",\")),\n       inlineElements = \"span,em,a,abbr,acronym,applet,b,basefont,bdo,big,br,button,cite,code,del,dfn,font,i,iframe,img,input,ins,kbd,label,map,object,q,s,samp,script,select,small,strike,strong,sub,sup,textarea,tt,u,var,data,time,mark,ruby\".split(\",\"),\n       inline = makeMap(inlineElements),\n       fillAttrs = makeMap(\"checked,compact,declare,defer,disabled,ismap,multiple,nohref,noresize,noshade,nowrap,readonly,selected\".split(\",\")),\n       nonEmptyNonTextContentElements = [\"hgroup\",\"ol\",\"ul\",\"dl\",\"object\",\"video\",\"audio\",\"table\",\"colgroup\",\"tbody\",\"thead\",\"tfoot\",\"tr\",\"select\",\"optgroup\"];\n\n   var normalize = function(node) {\n       if (node.nodeType == 1) {\n           node.normalize();\n       }\n   };\n\n   if (browser.msie && browser.version >= 8) {\n       normalize = function(parent) {\n           if (parent.nodeType == 1 && parent.firstChild) {\n               var prev = parent.firstChild,\n                   node = prev;\n\n               normalize(node);\n\n               while (true) {\n                   node = node.nextSibling;\n\n                   if (!node) {\n                       break;\n                   }\n\n                   normalize(node);\n\n                   if (node.nodeType == 3 && prev.nodeType == 3) {\n                       node.nodeValue = prev.nodeValue + node.nodeValue;\n                       Dom.remove(prev);\n                   }\n\n                   prev = node;\n               }\n           }\n       };\n   }\n\n   var whitespace = /^\\s+$/,\n       emptyspace = /^[\\n\\r\\t]+$/,\n       rgb = /rgb\\s*\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*\\)/i,\n       bom = /\\ufeff/g,\n       whitespaceOrBom = /^(\\s+|\\ufeff)$/,\n       persistedScrollTop,\n       cssAttributes =\n              (\"color,padding-left,padding-right,padding-top,padding-bottom,\" +\n               \"background-color,background-attachment,background-image,background-position,background-repeat,\" +\n               \"border-top-style,border-top-width,border-top-color,\" +\n               \"border-bottom-style,border-bottom-width,border-bottom-color,\" +\n               \"border-left-style,border-left-width,border-left-color,\" +\n               \"border-right-style,border-right-width,border-right-color,\" +\n               \"font-family,font-size,font-style,font-variant,font-weight,line-height\"\n              ).split(\",\"),\n       htmlRe = /[<>&]/g,\n       entityRe = /[\\u00A0-\\u2666<>&]/g,\n       entityTable = {\n               34: 'quot', 38: 'amp', 39: 'apos', 60: 'lt', 62: 'gt',\n               160: 'nbsp', 161: 'iexcl', 162: 'cent', 163: 'pound', 164: 'curren',\n               165: 'yen', 166: 'brvbar', 167: 'sect', 168: 'uml', 169: 'copy',\n               170: 'ordf', 171: 'laquo', 172: 'not', 173: 'shy', 174: 'reg',\n               175: 'macr', 176: 'deg', 177: 'plusmn', 178: 'sup2', 179: 'sup3',\n               180: 'acute', 181: 'micro', 182: 'para', 183: 'middot', 184: 'cedil',\n               185: 'sup1', 186: 'ordm', 187: 'raquo', 188: 'frac14', 189: 'frac12',\n               190: 'frac34', 191: 'iquest', 192: 'Agrave', 193: 'Aacute', 194: 'Acirc',\n               195: 'Atilde', 196: 'Auml', 197: 'Aring', 198: 'AElig', 199: 'Ccedil',\n               200: 'Egrave', 201: 'Eacute', 202: 'Ecirc', 203: 'Euml', 204: 'Igrave',\n               205: 'Iacute', 206: 'Icirc', 207: 'Iuml', 208: 'ETH', 209: 'Ntilde',\n               210: 'Ograve', 211: 'Oacute', 212: 'Ocirc', 213: 'Otilde', 214: 'Ouml',\n               215: 'times', 216: 'Oslash', 217: 'Ugrave', 218: 'Uacute', 219: 'Ucirc',\n               220: 'Uuml', 221: 'Yacute', 222: 'THORN', 223: 'szlig', 224: 'agrave',\n               225: 'aacute', 226: 'acirc', 227: 'atilde', 228: 'auml', 229: 'aring',\n               230: 'aelig', 231: 'ccedil', 232: 'egrave', 233: 'eacute', 234: 'ecirc',\n               235: 'euml', 236: 'igrave', 237: 'iacute', 238: 'icirc', 239: 'iuml',\n               240: 'eth', 241: 'ntilde', 242: 'ograve', 243: 'oacute', 244: 'ocirc',\n               245: 'otilde', 246: 'ouml', 247: 'divide', 248: 'oslash', 249: 'ugrave',\n               250: 'uacute', 251: 'ucirc', 252: 'uuml', 253: 'yacute', 254: 'thorn',\n               255: 'yuml', 402: 'fnof', 913: 'Alpha', 914: 'Beta', 915: 'Gamma',\n               916: 'Delta', 917: 'Epsilon', 918: 'Zeta', 919: 'Eta', 920: 'Theta',\n               921: 'Iota', 922: 'Kappa', 923: 'Lambda', 924: 'Mu', 925: 'Nu',\n               926: 'Xi', 927: 'Omicron', 928: 'Pi', 929: 'Rho', 931: 'Sigma',\n               932: 'Tau', 933: 'Upsilon', 934: 'Phi', 935: 'Chi', 936: 'Psi',\n               937: 'Omega', 945: 'alpha', 946: 'beta', 947: 'gamma', 948: 'delta',\n               949: 'epsilon', 950: 'zeta', 951: 'eta', 952: 'theta', 953: 'iota',\n               954: 'kappa', 955: 'lambda', 956: 'mu', 957: 'nu', 958: 'xi',\n               959: 'omicron', 960: 'pi', 961: 'rho', 962: 'sigmaf', 963: 'sigma',\n               964: 'tau', 965: 'upsilon', 966: 'phi', 967: 'chi', 968: 'psi',\n               969: 'omega', 977: 'thetasym', 978: 'upsih', 982: 'piv', 8226: 'bull',\n               8230: 'hellip', 8242: 'prime', 8243: 'Prime', 8254: 'oline', 8260: 'frasl',\n               8472: 'weierp', 8465: 'image', 8476: 'real', 8482: 'trade', 8501: 'alefsym',\n               8592: 'larr', 8593: 'uarr', 8594: 'rarr', 8595: 'darr', 8596: 'harr',\n               8629: 'crarr', 8656: 'lArr', 8657: 'uArr', 8658: 'rArr', 8659: 'dArr',\n               8660: 'hArr', 8704: 'forall', 8706: 'part', 8707: 'exist', 8709: 'empty',\n               8711: 'nabla', 8712: 'isin', 8713: 'notin', 8715: 'ni', 8719: 'prod',\n               8721: 'sum', 8722: 'minus', 8727: 'lowast', 8730: 'radic', 8733: 'prop',\n               8734: 'infin', 8736: 'ang', 8743: 'and', 8744: 'or', 8745: 'cap',\n               8746: 'cup', 8747: 'int', 8756: 'there4', 8764: 'sim', 8773: 'cong',\n               8776: 'asymp', 8800: 'ne', 8801: 'equiv', 8804: 'le', 8805: 'ge',\n               8834: 'sub', 8835: 'sup', 8836: 'nsub', 8838: 'sube', 8839: 'supe',\n               8853: 'oplus', 8855: 'otimes', 8869: 'perp', 8901: 'sdot', 8968: 'lceil',\n               8969: 'rceil', 8970: 'lfloor', 8971: 'rfloor', 9001: 'lang', 9002: 'rang',\n               9674: 'loz', 9824: 'spades', 9827: 'clubs', 9829: 'hearts', 9830: 'diams',\n               338: 'OElig', 339: 'oelig', 352: 'Scaron', 353: 'scaron', 376: 'Yuml',\n               710: 'circ', 732: 'tilde', 8194: 'ensp', 8195: 'emsp', 8201: 'thinsp',\n               8204: 'zwnj', 8205: 'zwj', 8206: 'lrm', 8207: 'rlm', 8211: 'ndash',\n               8212: 'mdash', 8216: 'lsquo', 8217: 'rsquo', 8218: 'sbquo', 8220: 'ldquo',\n               8221: 'rdquo', 8222: 'bdquo', 8224: 'dagger', 8225: 'Dagger', 8240: 'permil',\n               8249: 'lsaquo', 8250: 'rsaquo', 8364: 'euro'\n           };\n\n   var Dom = {\n       block: block,\n       inline: inline,\n\n       findNodeIndex: function(node, skipText) {\n           var i = 0;\n\n           if (!node) {\n               return -1;\n           }\n\n           while (true) {\n               node = node.previousSibling;\n\n               if (!node) {\n                   break;\n               }\n\n               if (!(skipText && node.nodeType == 3)) {\n                   i++;\n               }\n           }\n\n           return i;\n       },\n\n       isDataNode: function(node) {\n           return node && node.nodeValue !== null && node.data !== null;\n       },\n\n       isAncestorOf: function(parent, node) {\n           try {\n               return !Dom.isDataNode(parent) && ($.contains(parent, Dom.isDataNode(node) ? node.parentNode : node) || node.parentNode == parent);\n           } catch (e) {\n               return false;\n           }\n       },\n\n       isAncestorOrSelf: function(root, node) {\n           return Dom.isAncestorOf(root, node) || root == node;\n       },\n\n       findClosestAncestor: function(root, node) {\n           if (Dom.isAncestorOf(root, node)) {\n               while (node && node.parentNode != root) {\n                   node = node.parentNode;\n               }\n           }\n\n           return node;\n       },\n\n       getAllComments: function(rootElem) {\n           var comments = [];\n           // Fourth argument, which is actually obsolete according to the DOM4 standard, is required in IE 11\n           var iterator = document.createNodeIterator(rootElem,\n               NodeFilter.SHOW_COMMENT,\n               function() {\n                   return NodeFilter.FILTER_ACCEPT;\n               }, false);\n\n           var curNode = iterator.nextNode();\n           while (curNode) {\n               comments.push(curNode.nodeValue);\n               curNode = iterator.nextNode();\n           }\n           return comments;\n       },\n\n       getNodeLength: function(node) {\n           return Dom.isDataNode(node) ? node.length : node.childNodes.length;\n       },\n\n       splitDataNode: function(node, offset) {\n           var newNode = node.cloneNode(false);\n           var denormalizedText = \"\";\n           var iterator = node.nextSibling;\n           var temp;\n\n           while (iterator && iterator.nodeType == 3 && iterator.nodeValue) {\n               denormalizedText += iterator.nodeValue;\n               temp = iterator;\n               iterator = iterator.nextSibling;\n               Dom.remove(temp);\n           }\n\n           node.deleteData(offset, node.length);\n           newNode.deleteData(0, offset);\n           newNode.nodeValue += denormalizedText;\n           Dom.insertAfter(newNode, node);\n       },\n\n       attrEquals: function(node, attributes) {\n           for (var key in attributes) {\n               var value = node[key];\n\n               if (key == FLOAT) {\n                   value = node[kendo.support.cssFloat ? CSSFLOAT : STYLEFLOAT];\n               }\n\n               if (typeof value == \"object\") {\n                   if (!Dom.attrEquals(value, attributes[key])) {\n                       return false;\n                   }\n               } else if (value != attributes[key]) {\n                   return false;\n               }\n           }\n\n           return true;\n       },\n\n       blockParentOrBody: function(node) {\n           return Dom.parentOfType(node, blockElements) || node.ownerDocument.body;\n       },\n\n       blockParents: function(nodes) {\n           var blocks = [],\n               i, len;\n\n           for (i = 0, len = nodes.length; i < len; i++) {\n               var block = Dom.parentOfType(nodes[i], Dom.blockElements);\n               if (block && $.inArray(block, blocks) < 0) {\n                   blocks.push(block);\n               }\n           }\n\n           return blocks;\n       },\n\n       windowFromDocument: function(document) {\n           return document.defaultView || document.parentWindow;\n       },\n\n       normalize: normalize,\n       blockElements: blockElements,\n       nonListBlockElements: nonListBlockElements,\n       inlineElements: inlineElements,\n       empty: empty,\n       fillAttrs: fillAttrs,\n       nodeTypes: {\n           ELEMENT_NODE: 1,\n           ATTRIBUTE_NODE: 2,\n           TEXT_NODE: 3,\n           CDATA_SECTION_NODE: 4,\n           ENTITY_REFERENCE_NODE: 5,\n           ENTITY_NODE: 6,\n           PROCESSING_INSTRUCTION_NODE: 7,\n           COMMENT_NODE: 8,\n           DOCUMENT_NODE: 9,\n           DOCUMENT_TYPE_NODE: 10,\n           DOCUMENT_FRAGMENT_NODE: 11,\n           NOTATION_NODE: 12\n       },\n\n       toHex: function(color) {\n           var matches = rgb.exec(color);\n\n           if (!matches) {\n               return color;\n           }\n\n           return \"#\" + map(matches.slice(1), function(x) {\n               x = parseInt(x, 10).toString(16);\n               return x.length > 1 ? x : \"0\" + x;\n           }).join(\"\");\n       },\n\n       encode: function(value, options) {\n           var encodableChars = (!options || options.entities) ? entityRe : htmlRe;\n           return value.replace(encodableChars, function(c) {\n               var charCode = c.charCodeAt(0);\n               var entity = entityTable[charCode];\n               return entity ? '&' + entity + ';' : c;\n           });\n       },\n       isBom: function(node) {\n           return node && node.nodeType === 3 && /^[\\ufeff]+$/.test(node.nodeValue);\n       },\n       stripBom: function(text) {\n           return (text || \"\").replace(bom, \"\");\n       },\n\n       stripBomNode: function(node) {\n           if (Dom.isBom(node)) {\n               node.parentNode.removeChild(node);\n           }\n       },\n\n       insignificant: function(node) {\n           var attr = node.attributes;\n\n           return node.className == \"k-marker\" || (Dom.is(node, 'br') && (node.className == \"k-br\" || attr._moz_dirty || attr._moz_editor_bogus_node)) || (Dom.is(node, 'span') && (node.className == \"k-br\"));\n       },\n       tableCell: function(node) {\n           return Dom.is(node, \"td\") || Dom.is(node, \"th\");\n       },\n       significantNodes: function(nodes) {\n           return $.grep(nodes, function(child) {\n               var name = Dom.name(child);\n\n               if (name == 'br' || Dom.insignificant(child) || Dom.emptyTextNode(child) || (child.nodeType == 1 && !empty[name] && Dom.emptyNode(child))) {\n                   return false;\n               }\n               return true;\n           });\n       },\n\n       emptyTextNode: function(node) {\n           return node && node.nodeType == 3 && whitespaceOrBom.test(node.nodeValue);\n       },\n\n       emptyNode: function(node) {\n           return node.nodeType == 1 && !Dom.significantNodes(node.childNodes).length;\n       },\n\n       name: function(node) {\n           return node.nodeName.toLowerCase();\n       },\n\n       significantChildNodes: function(node) {\n           return $.grep(node.childNodes, function(child) {\n               return child.nodeType != 3 || !Dom.isWhitespace(child);\n           });\n       },\n\n       getTextNodes: function(body, nodes) {\n           const childNodes = body.childNodes;\n           nodes = nodes || [];\n\n           for (const node of childNodes) {\n               if (node.nodeType === this.nodeTypes.TEXT_NODE &&\n                   (blockElements.includes(Dom.name(node.parentNode)) ||\n                   inlineElements.includes(Dom.name(node.parentNode)) ||\n                   node.parentNode === body)) {\n                   nodes.push(node);\n               } else if (node.nodeType === this.nodeTypes.ELEMENT_NODE) {\n                   this.getTextNodes(node, nodes);\n               }\n           }\n\n           return nodes;\n       },\n\n       lastTextNode: function(node) {\n           var result = null;\n\n           if (node.nodeType == 3) {\n               return node;\n           }\n\n           for (var child = node.lastChild; child; child = child.previousSibling) {\n               result = Dom.lastTextNode(child);\n\n               if (result) {\n                   return result;\n               }\n           }\n\n           return result;\n       },\n\n       is: function(node, nodeName) {\n           return node && Dom.name(node) == nodeName;\n       },\n\n       isMarker: function(node) {\n           return node.className == KMARKER;\n       },\n\n       isWhitespace: function(node) {\n           return whitespace.test(node.nodeValue);\n       },\n\n       allowsTextContent: function(node) {\n           var result = true;\n\n           nonEmptyNonTextContentElements.every(function(name) {\n               if (Dom.is(node, name)) {\n                   result = false;\n                   return false;\n               } else {\n                   return true;\n               }\n           });\n\n           return result;\n       },\n\n       allWhitespaceContent: function(node) {\n           var child = node.firstChild;\n           while (child && Dom.isWhitespace(child)) {\n               child = child.nextSibling;\n           }\n\n           return !child;\n       },\n\n       isEmptyspace: function(node) {\n           return emptyspace.test(node.nodeValue);\n       },\n\n       htmlIndentSpace: function(node) {\n           if (!(Dom.isDataNode(node) && Dom.isWhitespace(node))) {\n               return false;\n           }\n\n           if (emptyspace.test(node.nodeValue)) {\n               return true;\n           }\n\n           var sibling = function(el, direction) {\n               while (el[direction]) {\n                   el = el[direction];\n                   if (Dom.significantNodes([el]).length > 0) {\n                       return el;\n                   }\n               }\n           };\n\n           var parent = node.parentNode;\n           var prev = sibling(node, \"previousSibling\");\n           var next = sibling(node, \"nextSibling\");\n\n           if (bom.test(node.nodeValue)) {\n               return !!(prev || next);\n           }\n\n           if ($(parent).is(\"tr,tbody,thead,tfoot,table,ol,ul\")) {\n               return true;\n           }\n\n           if (Dom.isBlock(parent) || Dom.is(parent, \"body\")) {\n               var isPrevBlock = prev && Dom.isBlock(prev);\n               var isNextBlock = next && Dom.isBlock(next);\n               if ((!next && isPrevBlock) || (!prev && isNextBlock) || (isPrevBlock && isNextBlock)) {\n                   return true;\n               }\n           }\n\n           return false;\n       },\n\n       isBlock: function(node) {\n           return block[Dom.name(node)];\n       },\n\n       isSelfClosing: function(node) {\n           return selfClosing[Dom.name(node)];\n       },\n\n       isEmpty: function(node) {\n           return empty[Dom.name(node)];\n       },\n\n       isInline: function(node) {\n           return inline[Dom.name(node)];\n       },\n\n       isImg: function(node) {\n           return Dom.name(node) == \"img\";\n       },\n\n       isBr: function(node) {\n           return Dom.name(node) == \"br\";\n       },\n\n       list: function(node) {\n           var name = node ? Dom.name(node) : \"\";\n           return name == \"ul\" || name == \"ol\" || name == \"dl\";\n       },\n\n       scrollContainer: function(doc) {\n           var wnd = Dom.windowFromDocument(doc),\n               scrollContainer = (wnd.contentWindow || wnd).document || wnd.ownerDocument || wnd;\n\n           if (scrollContainer.compatMode == 'BackCompat') {\n               scrollContainer = scrollContainer.body;\n           } else {\n               scrollContainer = scrollContainer.scrollingElement || scrollContainer.documentElement;\n           }\n\n           return scrollContainer;\n       },\n\n       scrollTo: function(node, toStart) {\n           var doc = node.ownerDocument;\n           var wnd = Dom.windowFromDocument(doc);\n           var windowHeight = wnd.innerHeight;\n           var scrollContainer = Dom.scrollContainer(doc);\n           var element, elementTop, elementHeight, marker;\n\n           if (Dom.isDataNode(node)) {\n               if (toStart) {\n                   marker = Dom.create(doc, \"span\", { \"innerHTML\": \"&#xfeff;\" });\n                   Dom.insertBefore(marker, node);\n                   element = $(marker);\n               } else {\n                   element = $(node.parentNode);\n               }\n           } else {\n               element = $(node);\n           }\n\n           elementTop = element.offset().top;\n           elementHeight = element[0].offsetHeight;\n\n           if (toStart || !elementHeight) {\n               elementHeight = parseInt(element.css(\"line-height\"), 10) ||\n                               Math.ceil(1.2 * parseInt(element.css(\"font-size\"), 10)) ||\n                               15;\n           }\n\n           if (marker) {\n               Dom.remove(marker);\n           }\n\n           if (elementHeight + elementTop > scrollContainer.scrollTop + windowHeight) {\n               scrollContainer.scrollTop = elementHeight + elementTop - windowHeight;\n           }\n       },\n\n       persistScrollTop: function(doc) {\n           persistedScrollTop = Dom.scrollContainer(doc).scrollTop;\n       },\n\n       offset: function(target, offsetParent) {\n           var result = { top: target.offsetTop, left: target.offsetLeft };\n           var parent = target.offsetParent;\n\n           while (parent && (!offsetParent || Dom.isAncestorOf(offsetParent, parent))) {\n               result.top += parent.offsetTop;\n               result.left += parent.offsetLeft;\n               parent = parent.offsetParent;\n           }\n\n           return result;\n       },\n\n       restoreScrollTop: function(doc) {\n           if (typeof persistedScrollTop == \"number\") {\n               Dom.scrollContainer(doc).scrollTop = persistedScrollTop;\n               persistedScrollTop = undefined;\n           }\n       },\n\n       insertAt: function(parent, newElement, position) {\n           parent.insertBefore(newElement, parent.childNodes[position] || null);\n       },\n\n       insertBefore: function(newElement, referenceElement) {\n           if (referenceElement.parentNode) {\n               return referenceElement.parentNode.insertBefore(newElement, referenceElement);\n           } else {\n               return referenceElement;\n           }\n       },\n\n       insertAfter: function(newElement, referenceElement) {\n           return referenceElement.parentNode.insertBefore(newElement, referenceElement.nextSibling);\n       },\n\n       remove: function(node) {\n           if (node.parentNode) {\n               node.parentNode.removeChild(node);\n           }\n       },\n\n       removeChildren: function(node) {\n           while (node.firstChild) {\n               node.removeChild(node.firstChild);\n           }\n       },\n\n       removeTextSiblings: function(node) {\n           var parentNode = node.parentNode;\n\n           while (node.nextSibling && node.nextSibling.nodeType == 3) {\n               parentNode.removeChild(node.nextSibling);\n           }\n\n           while (node.previousSibling && node.previousSibling.nodeType == 3) {\n               parentNode.removeChild(node.previousSibling);\n           }\n       },\n\n       trim: function(parent) {\n           for (var i = parent.childNodes.length - 1; i >= 0; i--) {\n               var node = parent.childNodes[i];\n               if (Dom.isDataNode(node)) {\n                   if (!Dom.stripBom(node.nodeValue).length) {\n                       Dom.remove(node);\n                   }\n               } else if (node.className != KMARKER) {\n                   Dom.trim(node);\n\n                   if ((!Dom.isEmpty(node) && node.childNodes.length === 0) ||\n                       (Dom.isBlock(node) && Dom.allWhitespaceContent(node))) {\n                       Dom.remove(node);\n                   }\n               }\n           }\n\n           return parent;\n       },\n\n       closest: function(node, tags) {\n           if (typeof tags === \"string\") {\n               tags = [tags];\n           }\n\n           while (node && tags.indexOf(Dom.name(node)) < 0) {\n               node = node.parentNode;\n           }\n\n           return node;\n       },\n\n       closestBy: function(node, condition, rootCondition) {\n           while (node && !condition(node)) {\n               if (rootCondition && rootCondition(node)) {\n                   return null;\n               }\n               node = node.parentNode;\n           }\n           return node;\n       },\n\n       sibling: function(node, direction) {\n           do {\n               node = node[direction];\n           } while (node && node.nodeType != 1);\n\n           return node;\n       },\n\n       next: function(node) {\n           return Dom.sibling(node, \"nextSibling\");\n       },\n\n       prev: function(node) {\n           return Dom.sibling(node, \"previousSibling\");\n       },\n\n       parentOfType: function(node, tags) {\n           do {\n               node = node.parentNode;\n           } while (node && !(Dom.ofType(node, tags)));\n\n           return node;\n       },\n\n       ofType: function(node, tags) {\n           return $.inArray(Dom.name(node), tags) >= 0;\n       },\n\n       changeTag: function(referenceElement, tagName, skipAttributes) {\n           var newElement = Dom.create(referenceElement.ownerDocument, tagName),\n               attributes = referenceElement.attributes,\n               i, len, name, value, attribute;\n\n           if (!skipAttributes) {\n               for (i = 0, len = attributes.length; i < len; i++) {\n                   attribute = attributes[i];\n                   if (attribute.specified) {\n                       // IE < 8 cannot set class or style via setAttribute\n                       name = attribute.nodeName;\n                       value = attribute.nodeValue;\n                       if (name == CLASS) {\n                           newElement.className = value;\n                       } else if (name == STYLE) {\n                           newElement.style.cssText = referenceElement.style.cssText;\n                       } else {\n                           newElement.setAttribute(name, value);\n                       }\n                   }\n               }\n           }\n\n           while (referenceElement.firstChild) {\n               newElement.appendChild(referenceElement.firstChild);\n           }\n\n           Dom.insertBefore(newElement, referenceElement);\n           Dom.remove(referenceElement);\n           return newElement;\n       },\n\n       editableParent: function(node) {\n           while (node && (node.nodeType == 3 || node.contentEditable !== 'true')) {\n               node = node.parentNode;\n           }\n\n           return node;\n       },\n\n       wrap: function(node, wrapper) {\n           Dom.insertBefore(wrapper, node);\n           wrapper.appendChild(node);\n           return wrapper;\n       },\n\n       unwrap: function(node) {\n           var parent = node.parentNode;\n           while (node.firstChild) {\n               parent.insertBefore(node.firstChild, node);\n           }\n\n           parent.removeChild(node);\n       },\n\n       wrapper: function(node) {\n           var wrapper = Dom.closestBy(node, function(el) {\n               return el.parentNode && Dom.significantNodes(el.parentNode.childNodes).length > 1;\n           });\n\n           return $(wrapper).is(\"body,.k-editor\") ? undefined : wrapper;\n       },\n\n       isChildOfBaseContainer: function(node) {\n           return $(node).parent().is(\"body,.k-editor\");\n       },\n\n       create: function(document, tagName, attributes) {\n           return Dom.attr(document.createElement(tagName), attributes);\n       },\n\n       createEmptyNode: function(document, tagName, attributes) {\n           var node = Dom.attr(document.createElement(tagName), attributes);\n           node.innerHTML = \"\\ufeff\";\n           return node;\n       },\n\n       attr: function(element, attributes) {\n           attributes = extend({}, attributes);\n\n           if (attributes && STYLE in attributes) {\n               Dom.style(element, attributes.style);\n               delete attributes.style;\n           }\n\n           for (var attr in attributes) {\n               if (attributes[attr] === null) {\n                   element.removeAttribute(attr);\n                   delete attributes[attr];\n               } else if (attr == \"className\") {\n                   element[attr] = attributes[attr];\n               }\n           }\n\n           return extend(element, attributes);\n       },\n\n       mergeAttributes: function(origin, target, traverseCss) {\n           if (!origin.attributes.length) {\n               return;\n           }\n\n           $.each(origin.attributes, function() {\n               if (this.name !== \"contenteditable\" && (!traverseCss || this.name !== STYLE)) {\n                   $(target).attr(this.name, this.value);\n               }\n\n               if (traverseCss && this.name === STYLE) {\n                   $.each(origin.style, function() {\n                       target.style[this] = origin.style[this];\n                   });\n               }\n           });\n       },\n\n       style: function(node, value) {\n           $(node).css(value || {});\n       },\n\n       unstyle: function(node, value) {\n           for (var key in value) {\n               if (key == FLOAT) {\n                   node.style[kendo.support.cssFloat ? CSSFLOAT : STYLEFLOAT] = \"\";\n               } else {\n                   node.style[key] = \"\";\n               }\n           }\n\n           if (node.style.cssText === \"\") {\n               node.removeAttribute(STYLE);\n           }\n       },\n\n       inlineStyle: function(body, name, attributes) {\n           var span = $(Dom.create(body.ownerDocument, name, attributes)),\n               style;\n\n           body.appendChild(span[0]);\n\n           style = map(cssAttributes, function(value) {\n               if (browser.msie && value == \"line-height\" && span.css(value) == \"1px\") {\n                   return \"line-height:1.5\";\n               } else {\n                   return value + \":\" + span.css(value);\n               }\n           }).join(\";\");\n\n           span.remove();\n\n           return style;\n       },\n\n       getEffectiveBackground: function(element) {\n           var backgroundStyle = element.css(\"background-color\") || \"\";\n\n           if (backgroundStyle.indexOf(\"rgba(0, 0, 0, 0\") < 0 && backgroundStyle !== \"transparent\") {\n               return backgroundStyle;\n           } else if (element[0].tagName.toLowerCase() === \"html\") {\n               return \"Window\";\n           } else {\n               return Dom.getEffectiveBackground(element.parent());\n           }\n       },\n\n       innerText: function(node) {\n           var text = node.innerHTML;\n           text = text.replace(/<!--(.|\\s)*?-->/gi, \"\");\n           text = text.replace(/<\\/?[^>]+?\\/?>/gm, \"\");\n\n           return text;\n       },\n\n       removeClass: function(node, classNames) {\n           var className = \" \" + node.className + \" \",\n               classes = classNames.split(\" \"),\n               i, len;\n\n           for (i = 0, len = classes.length; i < len; i++) {\n               className = className.replace(\" \" + classes[i] + \" \", \" \");\n           }\n\n           className = kendo.trim(className);\n\n           if (className.length) {\n               node.className = className;\n           } else {\n               node.removeAttribute(CLASS);\n           }\n       },\n\n       commonAncestor: function() {\n           var count = arguments.length,\n               paths = [],\n               minPathLength = Infinity,\n               output = null,\n               i, ancestors, node, first, j;\n\n           if (!count) {\n               return null;\n           }\n\n           if (count == 1) {\n               return arguments[0];\n           }\n\n           for (i = 0; i < count; i++) {\n               ancestors = [];\n               node = arguments[i];\n               while (node) {\n                   ancestors.push(node);\n                   node = node.parentNode;\n               }\n               paths.push(ancestors.reverse());\n               minPathLength = Math.min(minPathLength, ancestors.length);\n           }\n\n           if (count == 1) {\n               return paths[0][0];\n           }\n\n           for (i = 0; i < minPathLength; i++) {\n               first = paths[0][i];\n\n               for (j = 1; j < count; j++) {\n                   if (first != paths[j][i]) {\n                       return output;\n                   }\n               }\n\n               output = first;\n           }\n           return output;\n       },\n\n       closestSplittableParent: function(nodes) {\n           var result;\n\n           if (nodes.length == 1) {\n               result = Dom.parentOfType(nodes[0], [\"ul\",\"ol\"]);\n           } else {\n               result = Dom.commonAncestor.apply(null, nodes);\n           }\n\n           if (!result) {\n               result = Dom.parentOfType(nodes[0], [\"p\", \"td\"]) || nodes[0].ownerDocument.body;\n           }\n\n           if (Dom.isInline(result)) {\n               result = Dom.blockParentOrBody(result);\n           }\n\n           var editableParents = map(nodes, Dom.editableParent);\n           var editableAncestor = Dom.commonAncestor(editableParents)[0];\n\n           if ($.contains(result, editableAncestor)) {\n               result = editableAncestor;\n           }\n\n           return result;\n       },\n\n       closestEditable: function(node, types) {\n           var closest;\n           var editable = Dom.editableParent(node);\n\n           if (Dom.ofType(node, types)) {\n               closest = node;\n           } else {\n               closest = Dom.parentOfType(node, types);\n           }\n\n           if ((closest && editable && $.contains(closest, editable)) || (!closest && editable)) {\n               closest = editable;\n           }\n\n           return closest;\n       },\n\n       closestEditableOfType: function(node, types) {\n           var editable = Dom.closestEditable(node, types);\n\n           if (editable && Dom.ofType(editable, types) && !$(editable).is(\".k-editor\")) {\n               return editable;\n           }\n       },\n\n       filter: function(tagName, nodes, invert) {\n           var filterFn = function(node) {\n               return Dom.name(node) == tagName;\n           };\n\n           return Dom.filterBy(nodes, filterFn, invert);\n       },\n\n       filterBy: function(nodes, condition, invert) {\n           var i = 0;\n           var len = nodes.length;\n           var result = [];\n           var match;\n\n           for (; i < len; i++) {\n               match = condition(nodes[i]);\n               if ((match && !invert) || (!match && invert)) {\n                   result.push(nodes[i]);\n               }\n           }\n\n           return result;\n       },\n\n       ensureTrailingBreaks: function(node) {\n           var elements = $(node).find(\"p,td,th\");\n           var length = elements.length;\n           var i = 0;\n\n           if (length) {\n               for (; i < length; i++) {\n                   Dom.ensureTrailingBreak(elements[i]);\n               }\n           } else {\n               Dom.ensureTrailingBreak(node);\n           }\n       },\n\n       removeTrailingBreak: function(node) {\n           $(node).find(\"br[type=_moz],.k-br\").remove();\n       },\n\n       ensureTrailingBreak: function(node) {\n           Dom.removeTrailingBreak(node);\n\n           var lastChild = node.lastChild;\n           var name = lastChild && Dom.name(lastChild);\n           var br;\n\n           if (!name ||\n               (name != \"br\" && name != \"img\") ||\n               (name == \"br\" && lastChild.className != \"k-br\")) {\n               br = node.ownerDocument.createElement(\"br\");\n               br.className = \"k-br\";\n               node.appendChild(br);\n           }\n       },\n\n       // Start: Table Utilities\n\n       reMapTableColumns: function(table, colAttr) {\n           Dom._mapColIndices(table, colAttr);\n       },\n\n       clearTableMappings: function(table, colAttr) {\n           $(table).find(\"[\" + colAttr + \"]\").removeAttr(colAttr);\n       },\n\n       _mapColIndices: function(table, colAttr) {\n           var registeredColumns = {};\n\n           for (var rowIndex = 0; rowIndex < table.rows.length; rowIndex++) {\n               var cells = table.rows[rowIndex].cells;\n               var colIndex = 0;\n               for (var cellIndex = 0; cellIndex < cells.length; cellIndex++) {\n                   var cell = cells[cellIndex];\n\n                   if (cell.rowSpan > 1) {\n                       this._mapColspan(cell, rowIndex, colIndex, registeredColumns);\n                   }\n\n                   if (registeredColumns[rowIndex]) {\n                       while (registeredColumns[rowIndex][colIndex]) {\n                           colIndex++;\n                       }\n                   }\n\n                   cell.setAttribute(colAttr, colIndex);\n\n                   if (cell.colSpan > 1) {\n                       colIndex = colIndex + cell.colSpan - 1;\n                   }\n                   colIndex++;\n               }\n           }\n       },\n\n       _mapColspan: function(cell, rowIndex, colIndex, registeredColumns) {\n           var rowSpan = cell.rowSpan,\n               colSpan = cell.colSpan,\n               index;\n\n           for (var ci = 0; ci < colSpan; ci++) {\n               index = colIndex + ci;\n\n               for (var ri = rowIndex + 1; ri < rowIndex + rowSpan; ri++) {\n\n                   if (!registeredColumns[ri]) {\n                       registeredColumns[ri] = {};\n                       registeredColumns[ri].length = 0;\n                   }\n\n                   if (registeredColumns[rowIndex]) {\n                       while (registeredColumns[rowIndex][index]) {\n                           index++;\n                       }\n                   }\n\n                   registeredColumns[ri][index] = true;\n                   registeredColumns[ri].length++;\n               }\n           }\n\n       },\n\n       associateWithIds: function(table) {\n           var that = this;\n           var numberOfTheadRows = 0;\n           var tableRows = table.rows;\n           var numberOfTableRows = tableRows.length;\n           var theadMatrix = [];\n           var tbodyMatrix = [];\n           var theadRows, i;\n\n           if (table.tHead) {\n               theadRows = table.tHead.rows;\n               numberOfTheadRows = theadRows.length;\n           } else {\n               numberOfTheadRows = that._getNumberOfHeaderRows(table);\n               theadRows = [];\n               for (i = 0; i < numberOfTheadRows; i++) {\n                   theadRows.push(tableRows[i]);\n               }\n           }\n           for (i = 0; i < numberOfTheadRows; i++) {\n               theadMatrix.push([]);\n           }\n           for (i = 0; i < numberOfTableRows; i++) {\n               tbodyMatrix.push([]);\n           }\n\n           that._generateIdsForColumns(theadMatrix, theadRows);\n           that._generateIdsForRows(theadMatrix, tbodyMatrix, numberOfTheadRows, tableRows);\n           that._assignIds(theadMatrix, tbodyMatrix, numberOfTheadRows, tableRows);\n       },\n\n       _generateIdsForColumns: function(theadMatrix, theadRows) {\n           var timestamp = new Date().getTime();\n           var numberOfTheadRows = theadRows ? theadRows.length : 0;\n           var row, cells, cell, col, id, colspan, rowspan, i, j, k, l;\n\n           for (i = 0; i < numberOfTheadRows; i++) {\n               row = theadRows[i];\n               cells = row.cells;\n               col = 0;\n\n               for (j = 0; j < cells.length; j++) {\n                   cell = cells[j];\n                   id = \"table\" + i + j + (++timestamp);\n                   cell.setAttribute(\"id\", id);\n                   colspan = cell.getAttribute(\"colspan\") || 1;\n                   rowspan = cell.getAttribute(\"rowspan\") || 1;\n\n                   while (theadMatrix[i][j + col]) {\n                       col += 1;\n                   }\n\n                   for (k = 0; k < rowspan; k++) {\n                       for (l = 0; l < colspan; l++) {\n                           theadMatrix[i + k][j + col + l] = id;\n                       }\n                   }\n               }\n           }\n       },\n\n       _generateIdsForRows: function(theadMatrix, tbodyMatrix, numberOfTheadRows, tableRows) {\n           var that = this;\n           var timestamp = new Date().getTime();\n           var numberOfTableRows = tableRows.length;\n           var row, cells, cell, col, id, colspan, rowspan, i, j, k, l, colIndex, headers;\n\n           var pushHeaderId = function(row) {\n               headers.push(row[colIndex]);\n           };\n\n           for (i = numberOfTheadRows; i < numberOfTableRows; i++) {\n               row = tableRows[i];\n               cells = $(row.cells).filter(\"th\");\n               col = 0;\n\n               for (j = 0; j < cells.length; j++) {\n                   cell = cells[j];\n                   id = \"table\" + i + j + (++timestamp);\n                   cell.setAttribute(\"id\", id);\n                   colspan = cell.getAttribute(\"colspan\") || 1;\n                   rowspan = cell.getAttribute(\"rowspan\") || 1;\n\n                   while (tbodyMatrix[i][j + col]) {\n                       col += 1;\n                   }\n\n                   for (k = 0; k < rowspan; k++) {\n                       for (l = 0; l < colspan; l++) {\n                           tbodyMatrix[i + k][j + col + l] = id;\n                       }\n                   }\n\n                   colIndex = cell.getAttribute(\"col-index\");\n                   headers = [];\n                   theadMatrix.forEach(pushHeaderId);\n                   headers = headers.filter(that._onlyUnique);\n                   cell.setAttribute(\"headers\", headers.join(\" \").trim());\n               }\n           }\n       },\n\n       _assignIds: function(theadMatrix, tbodyMatrix, numberOfTheadRows, tableRows) {\n           var that = this;\n           var numberOfTableRows = tableRows.length;\n           var row, cells, cell, i, j, colIndex, headers;\n\n           var pushHeaderId = function(row) {\n               headers.push(row[colIndex]);\n           };\n\n           for (i = numberOfTheadRows; i < numberOfTableRows; i++) {\n               row = tableRows[i];\n               cells = $(row.cells).filter(\"td\");\n\n               for (j = 0; j < cells.length; j++) {\n                   cell = cells[j];\n                   colIndex = cell.getAttribute(\"col-index\");\n                   headers = tbodyMatrix[i].slice();\n\n                   theadMatrix.forEach(pushHeaderId);\n                   headers = headers.filter(that._onlyUnique);\n                   cell.setAttribute(\"headers\", headers.join(\" \").trim());\n               }\n           }\n       },\n\n       _getNumberOfColumns: function(table) {\n           var cells = $(table).find(\"th, td\");\n           var numberOfCols = 0;\n           var cell, i, currentIndex;\n\n           for (i = 0; i < cells.length; i++) {\n               cell = cells[i];\n               currentIndex = Number(cell.getAttribute(\"col-index\")) + 1;\n               if (currentIndex > numberOfCols) {\n                   numberOfCols = currentIndex;\n               }\n           }\n\n           return numberOfCols;\n       },\n\n       _getNumberOfHeaderColumns: function(table, numberOfHeaderRows) {\n           var rows = table.rows;\n           var numberOfCols = 0;\n           var currentIndex, row, i, j, cell;\n\n           for (i = numberOfHeaderRows; i < rows.length; i++) {\n               row = rows[i];\n\n               for (j = 0; j < row.cells.length; j++) {\n                   cell = row.cells[j];\n\n                   if (this.is(cell, \"th\")) {\n                       currentIndex = Number(cell.getAttribute(\"col-index\")) + 1;\n                       if (currentIndex > numberOfCols) {\n                           numberOfCols = currentIndex;\n                       }\n                   }\n               }\n           }\n\n           return numberOfCols;\n       },\n\n       _getNumberOfHeaderRows: function(table) {\n           var rows = table.rows;\n           var thead = table.tHead;\n           var number = thead && table.tHead.rows ? table.tHead.rows.length : 0;\n           var j, row, cell, length;\n\n           if (number === 0) {\n               row = rows[0];\n               length = row.cells && row.cells.length;\n\n               while (row && length && this.is(row.cells[0], \"th\")) {\n                   for (j = 0; j < length; j++) {\n                       cell = row ? row.cells[j] : null;\n\n                       if (!this.is(cell, \"th\")) {\n                           row = null;\n                       }\n                   }\n\n                   if (row) {\n                       number += 1;\n                       row = this.next(row);\n                       length = row && row.cells && row.cells.length;\n                   }\n               }\n           }\n\n           return number;\n       },\n\n       // End: Table Utilities\n\n       _onlyUnique: function(value, index, self) {\n           return self.indexOf(value) === index;\n       }\n   };\n\n   kendo.ui.editor.Dom = Dom;\n\n   })(window.kendo.jQuery);\n\n   (function($, undefined$1) {\n\n   // Imports ================================================================\n   var kendo = window.kendo;\n   var Editor = kendo.ui.editor;\n   var dom = Editor.Dom;\n   var extend = $.extend;\n\n   var fontSizeMappings = 'xx-small,x-small,small,medium,large,x-large,xx-large'.split(',');\n   var quoteRe = /\"/g; //\"\n   var brRe = /<br[^>]*>/i;\n   var pixelRe = /^\\d+(\\.\\d*)?(px)?$/i;\n   var emptyPRe = /<p>(?:&nbsp;)?<\\/p>/i;\n   var cssDeclaration = /(\\*?[-#\\/\\*\\\\\\w]+(?:\\[[0-9a-z_-]+\\])?)\\s*:\\s*((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^\\)]*?\\)|[^};])+)/g;\n   var sizzleAttr = /^sizzle-\\d+/i;\n   var scriptAttr = /^k-script-/i;\n   var onerrorRe = /\\s*onerror\\s*=\\s*(?:'|\")?([^'\">\\s]*)(?:'|\")?/i;\n   var br = '<br class=\"k-br\">';\n   var bomSpan = \"<span class='k-br'>\\ufeff</span>\";\n\n   var div = document.createElement(\"div\");\n   div.innerHTML = \" <hr>\";\n   var supportsLeadingWhitespace = div.firstChild.nodeType === 3;\n   div = null;\n   var isFunction = kendo.isFunction;\n\n   var TD = \"td\";\n\n   var Serializer = {\n       toEditableHtml: function(html) {\n           return (html || \"\")\n               .replace(/<!\\[CDATA\\[(.*)?\\]\\]>/g, \"<!--[CDATA[$1]]-->\")\n               .replace(/<(\\/?)script([^>]*)>/ig, \"<$1k:script$2>\")\n               .replace(/<img([^>]*)>/ig, function(match) {\n                   return match.replace(onerrorRe, \"\");\n               })\n               .replace(/(<\\/?img[^>]*>)[\\r\\n\\v\\f\\t ]+/ig, \"$1\")\n               .replace(/^<(table|blockquote)/i, br + '<$1')\n               .replace(/^[\\s]*(&nbsp;|\\u00a0)/i, '$1')\n               .replace(/<\\/(table|blockquote)>$/i, '</$1>' + br);\n       },\n\n       _toEditableImmutables: function(body) {\n           var immutable = Editor.Immutables.immutable,\n               emptyTextNode = dom.emptyTextNode,\n               first = body.firstChild,\n               last = body.lastChild;\n\n           while (emptyTextNode(first)) {\n               first = first.nextSibling;\n           }\n\n           while (emptyTextNode(last)) {\n               last = last.previousSibling;\n           }\n\n           if (first && immutable(first)) {\n               $(bomSpan).prependTo(body);\n           }\n\n           if (last && immutable(last)) {\n               $(bomSpan).appendTo(body);\n           }\n       },\n\n       _fillEmptyElements: function(body) {\n           // fills empty elements to allow them to be focused\n           $(body).find(\"p,td\").each(function() {\n               var p = $(this);\n               if (/^\\s*$/g.test(p.text()) && !p.find(\"img,input\").length) {\n                   var node = this;\n                   while (node.children[0] && node.children[0].nodeType != 3) {\n                       node = node.children[0];\n                   }\n\n                   if (node.nodeType == 1 && !dom.empty[dom.name(node)]) {\n                       if (dom.is(node, \"td\")) {\n                           node.innerHTML = kendo.ui.editor.emptyTableCellContent;\n                       }\n                       else {\n                           node.innerHTML = kendo.ui.editor.emptyElementContent;\n                       }\n                   }\n               }\n           });\n       },\n\n       _removeSystemElements: function(body) {\n           // removes persisted system elements\n           $(\".k-paste-container\", body).remove();\n       },\n\n       _resetOrderedLists: function(root) {\n           // fix for IE9 OL bug -- https://connect.microsoft.com/IE/feedback/details/657695/ordered-list-numbering-changes-from-correct-to-0-0\n           var ols = root.getElementsByTagName(\"ol\"), i, ol, originalStart;\n\n           for (i = 0; i < ols.length; i++) {\n               ol = ols[i];\n               originalStart = ol.getAttribute(\"start\");\n\n               ol.setAttribute(\"start\", 1);\n\n               if (originalStart) {\n                   ol.setAttribute(\"start\", originalStart);\n               } else {\n                   ol.removeAttribute(originalStart);\n               }\n           }\n       },\n\n       _preventScriptExecution: function(root) {\n           $(root).find(\"*\").each(function() {\n               var attributes = this.attributes;\n               var attribute, i, l, name;\n               var attributesToRemove = [];\n\n               for (i = 0, l = attributes.length; i < l; i++) {\n                   attribute = attributes[i];\n                   name = attribute.nodeName;\n\n                   if (attribute.specified && /^on/i.test(name)) {\n                       this.setAttribute(\"k-script-\" + name, attribute.value);\n                       attributesToRemove.push(name);\n                   }\n               }\n\n               for (i = 0, l = attributesToRemove.length; i < l; i++) {\n                   this.removeAttribute(attributesToRemove[i]);\n               }\n           });\n       },\n\n       htmlToDom: function(html, root, options) {\n           var browser = kendo.support.browser;\n           var msie = browser.msie;\n           var o = options || {};\n           var immutables = o.immutables;\n\n           html = Serializer.toEditableHtml(html);\n\n           if (isFunction(o.custom)) {\n               html = o.custom(html) || html;\n           }\n           root.innerHTML = html;\n\n           if (immutables) {\n               immutables.deserialize(root);\n           }\n\n           if (msie) {\n               // unicode characters denormalize the DOM tree in IE9\n               dom.normalize(root);\n\n               Serializer._resetOrderedLists(root);\n           }\n\n           Serializer._preventScriptExecution(root);\n\n           Serializer._fillEmptyElements(root);\n\n           Serializer._removeSystemElements(root);\n\n           Serializer._toEditableImmutables(root);\n\n           // add k-table class to all tables\n           $(\"table\", root).addClass(\"k-table\");\n\n           return root;\n       },\n\n       domToXhtml: function(root, options) {\n           var result = [];\n           var immutables = options && options.immutables;\n\n           function semanticFilter(attributes) {\n               return $.grep(attributes, function(attr) {\n                   return attr.name != \"style\";\n               });\n           }\n\n           function mapStart(node, tag) {\n               result.push('<' + tag);\n               attr(node);\n               result.push('>');\n           }\n\n           var tagMap = {\n               iframe: {\n                   start: function(node) { mapStart(node, \"iframe\"); },\n                   end: function() { result.push('</iframe>'); }\n               },\n               'k:script': {\n                   start: function(node) { mapStart(node, \"script\"); },\n                   end: function() { result.push('</script>'); },\n                   skipEncoding: true\n               },\n               span: {\n                   canOptimize: true,\n                   semantic: true,\n                   start: function(node) {\n                       var style = node.style;\n\n                       var attributes = specifiedAttributes(node);\n                       var semanticAttributes = semanticFilter(attributes);\n\n                       if (semanticAttributes.length) {\n                           result.push(\"<span\"); attr(node, semanticAttributes); result.push(\">\");\n                       }\n\n                       if (style.textDecoration == \"underline\") {\n                           result.push(\"<u>\");\n                       }\n\n                       var font = [];\n                       if (style.color) {\n                           font.push('color=\"' + dom.toHex(style.color) + '\"');\n                       }\n\n                       if (style.fontFamily) {\n                           font.push('face=\"' + style.fontFamily + '\"');\n                       }\n\n                       if (style.fontSize) {\n                           var size = $.inArray(style.fontSize, fontSizeMappings);\n                           font.push('size=\"' + size + '\"');\n                       }\n\n                       // Apply the rest of the inline styles back\n                       var inlineStyles = [];\n                       var ignoredStylePrefixes = [\"text-decoration\", \"color\", \"font\"];\n\n                       for (let i = 0; i < style.length; i++) {\n                           var inlineStyle = style[i];\n\n                           if (ignoredStylePrefixes.filter(prop => inlineStyle.startsWith(prop)).length <= 0) {\n                               inlineStyles.push(`${inlineStyle}: ${style[inlineStyle]}`);\n                           }\n                       }\n\n                       if (inlineStyles.length) {\n                           font.push('style=\"' + inlineStyles.join(\";\") + '\"');\n                       }\n\n                       if (font.length) {\n                           result.push(\"<font \" + font.join(\" \") + \">\");\n                       }\n                   },\n                   end: function(node) {\n                       var style = node.style;\n\n                       if (style.color || style.fontFamily || style.fontSize) {\n                           result.push(\"</font>\");\n                       }\n\n                       if (style.textDecoration == \"underline\") {\n                           result.push(\"</u>\");\n                       }\n\n                       if (semanticFilter(specifiedAttributes(node)).length) {\n                           result.push(\"</span>\");\n                       }\n                   }\n               },\n               strong: {\n                   semantic: true,\n                   start: function(node) { mapStart(node, \"b\"); },\n                   end: function() { result.push('</b>'); }\n               },\n               em: {\n                   semantic: true,\n                   start: function(node) { mapStart(node, \"i\"); },\n                   end: function() { result.push('</i>'); }\n               },\n               b: {\n                   semantic: false,\n                   start: function(node) { mapStart(node, \"strong\"); },\n                   end: function() { result.push('</strong>'); }\n               },\n               i: {\n                   semantic: false,\n                   start: function(node) { mapStart(node, \"em\"); },\n                   end: function() { result.push('</em>'); }\n               },\n               u: {\n                   semantic: false,\n                   start: function(node) {\n                       result.push('<span');\n\n                       var attributes = specifiedAttributes(node);\n                       var style = $(attributes).filter(function(i, item) { return item.name == \"style\"; })[0];\n                       var styleObj = { nodeName: \"style\", value: \"text-decoration:underline;\" };\n\n                       if (style) {\n                           styleObj.value = style.value;\n                           if (!/text-decoration/i.test(styleObj.value)) {\n                               styleObj.value = \"text-decoration:underline;\" + styleObj.value;\n                           }\n                           attributes.splice($.inArray(style, attributes), 1);\n                       }\n                       attributes.push(styleObj);\n\n                       attr(node, attributes);\n                       result.push('>');\n                   },\n                   end: function() { result.push('</span>'); }\n               },\n               font: {\n                   canOptimize: true,\n                   semantic: false,\n                   start: function(node) {\n                       result.push('<span style=\"');\n\n                       var color = node.getAttribute('color');\n                       var size = fontSizeMappings[node.getAttribute('size')];\n                       var face = node.getAttribute('face');\n\n                       if (color) {\n                           result.push('color:');\n                           result.push(dom.toHex(color));\n                           result.push(';');\n                       }\n\n                       if (face) {\n                           result.push('font-family:');\n                           result.push(face);\n                           result.push(';');\n                       }\n\n                       if (size) {\n                           result.push('font-size:');\n                           result.push(size);\n                           result.push(';');\n                       }\n\n                       result.push('\">');\n                   },\n                   end: function() {\n                       result.push('</span>');\n                   }\n               }\n           };\n\n           tagMap.script = tagMap[\"k:script\"];\n\n           options = options || {};\n\n           if (typeof options.semantic == \"undefined\") {\n               options.semantic = true;\n           }\n\n           function cssProperties(cssText) {\n               var trim = kendo.trim;\n               var css = trim(cssText);\n               var match;\n               var property, value;\n               var properties = [];\n\n               cssDeclaration.lastIndex = 0;\n\n               while (true) {\n                   match = cssDeclaration.exec(css);\n\n                   if (!match) {\n                       break;\n                   }\n\n                   property = trim(match[1].toLowerCase());\n                   value = trim(match[2]);\n\n                   if (property == \"font-size-adjust\" || property == \"font-stretch\") {\n                       continue;\n                   }\n\n                   if (property.indexOf('color') >= 0) {\n                       value = dom.toHex(value);\n                   } else if (property.indexOf('font') >= 0) {\n                       value = value.replace(quoteRe, \"'\");\n                   } else if (/\\burl\\(/g.test(value)) {\n                       value = value.replace(quoteRe, \"\");\n                   }\n\n                   properties.push({ property: property, value: value });\n               }\n\n               return properties;\n           }\n\n           function styleAttr(cssText) {\n               var properties = cssProperties(cssText);\n               var i;\n\n               for (i = 0; i < properties.length; i++) {\n                   result.push(properties[i].property);\n                   result.push(':');\n                   result.push(properties[i].value);\n                   result.push(';');\n               }\n           }\n\n           function specifiedAttributes(node) {\n               var result = [];\n               var attributes = node.attributes;\n               var attribute, i, l;\n               var name, value, specified;\n\n               for (i = 0, l = attributes.length; i < l; i++) {\n                   attribute = attributes[i];\n\n                   name = attribute.nodeName;\n                   value = attribute.value;\n                   specified = attribute.specified;\n\n                   // In IE < 8 the 'value' attribute is not returned as 'specified'. The same goes for type=\"text\"\n                   if (name == 'value' && 'value' in node && node.value) {\n                       specified = true;\n                   } else if (name == 'type' && value == 'text') {\n                       specified = true;\n                   } else if (name == \"class\" && !value) {\n                       specified = false;\n                   } else if (sizzleAttr.test(name)) {\n                       specified = false;\n                   } else if (name == 'complete') {\n                       specified = false;\n                   } else if (name == 'altHtml') {\n                       specified = false;\n                   } else if (name == 'start' && dom.is(node, \"ul\")) {\n                       specified = false;\n                   } else if (name == 'start' && dom.is(node, \"ol\") && value == \"1\") {\n                       specified = false;\n                   } else if (name.indexOf('_moz') >= 0) {\n                       specified = false;\n                   } else if (scriptAttr.test(name)) {\n                       specified = !!options.scripts;\n                   } else if (name == 'data-role' && value == 'resizable' && (dom.is(node, \"tr\") || dom.is(node, \"td\"))) {\n                       specified = false;\n                   }\n\n                   if (specified) {\n                       result.push(attribute);\n                   }\n               }\n\n               return result;\n           }\n\n           function attr(node, attributes) {\n               var i, l, attribute, name, value;\n\n               attributes = attributes || specifiedAttributes(node);\n\n               if (dom.is(node, 'img')) {\n                   var width = node.style.width,\n                       height = node.style.height,\n                       $node = $(node);\n\n                   if (width && pixelRe.test(width)) {\n                       $node.attr('width', parseInt(width, 10));\n                       dom.unstyle(node, { width: undefined$1 });\n                   }\n\n                   if (height && pixelRe.test(height)) {\n                       $node.attr('height', parseInt(height, 10));\n                       dom.unstyle(node, { height: undefined$1 });\n                   }\n               }\n\n               if (!attributes.length) {\n                   return;\n               }\n\n               // Remove the following if everything seems to be in order.\n               // https://github.com/telerik/kendo-ui-core/issues/3639\n               // attributes.sort(function (a, b) {\n               //     return a.nodeName > b.nodeName ? 1 : a.nodeName < b.nodeName ? -1 : 0;\n               // });\n\n               for (i = 0, l = attributes.length; i < l; i++) {\n                   attribute = attributes[i];\n                   name = attribute.nodeName;\n                   value = attribute.value;\n\n                   if (name == \"class\" && value == \"k-table\") {\n                       continue;\n                   }\n\n                   name = name.replace(scriptAttr, \"\");\n\n                   result.push(' ');\n                   result.push(name);\n                   result.push('=\"');\n\n                   if (name == 'style') {\n                       styleAttr(value || node.style.cssText);\n                   } else if (name == 'src' || name == 'href') {\n                       result.push(kendo.htmlEncode(node.getAttribute(name, 2)));\n                   } else {\n                       result.push(dom.fillAttrs[name] ? name : value);\n                   }\n\n                   result.push('\"');\n               }\n           }\n\n           function children(node, skip, skipEncoding) {\n               for (var childNode = node.firstChild; childNode; childNode = childNode.nextSibling) {\n                   child(childNode, skip, skipEncoding);\n               }\n           }\n\n           function text(node) {\n               return node.nodeValue.replace(/\\ufeff/g, \"\");\n           }\n\n           function isEmptyBomNode(node) {\n               if (dom.isBom(node)) {\n                   do {\n                       node = node.parentNode;\n\n                       if (dom.is(node, TD) && node.childNodes.length === 1) {\n                           return true;\n                       }\n\n                       if (node.childNodes.length !== 1) {\n                           return false;\n                       }\n                   } while (!dom.isBlock(node));\n\n                   return true;\n               }\n\n               return false;\n           }\n\n           function child(node, skip, skipEncoding) {\n               var nodeType = node.nodeType,\n                   tagName, mapper,\n                   parent, value, previous, jqNode;\n\n               if (immutables && Editor.Immutables.immutable(node)) {\n                   result.push(immutables.serialize(node));\n               } else if (nodeType == 1) {\n                   tagName = dom.name(node);\n                   jqNode = $(node);\n\n                   if (jqNode.hasClass(\"k-element-resize-handle-wrapper\") || jqNode.hasClass(\"k-column-resize-handle-wrapper\") || jqNode.hasClass(\"k-row-resize-handle-wrapper\")) {\n                       return;\n                   }\n\n                   if (!tagName || dom.insignificant(node)) {\n                       return;\n                   }\n\n                   if (!options.scripts && (tagName == \"script\" || tagName == \"k:script\")) {\n                       return;\n                   }\n\n                   mapper = tagMap[tagName];\n\n                   if (mapper) {\n                       if (mapper.canOptimize &&\n                           options.optimizeTags &&\n                           shouldOptimize(node)) {\n                               children(node, false, mapper.skipEncoding);\n                           return;\n                       }\n\n                       if (typeof mapper.semantic == \"undefined\" ||\n                           (options.semantic ^ mapper.semantic)) {\n                           mapper.start(node);\n                           children(node, false, mapper.skipEncoding);\n                           mapper.end(node);\n                           return;\n                       }\n                   }\n\n                   result.push('<');\n                   result.push(tagName);\n\n                   attr(node);\n\n                   if (dom.empty[tagName]) {\n                       result.push(' />');\n                   } else {\n                       result.push('>');\n                       children(node, skip || dom.is(node, 'pre'));\n                       result.push('</');\n                       result.push(tagName);\n                       result.push('>');\n                   }\n               } else if (nodeType == 3) {\n                   if (isEmptyBomNode(node)) {\n                       result.push('&nbsp;');\n                       return;\n                   }\n\n                   value = text(node);\n\n                   if (!skip && supportsLeadingWhitespace) {\n                       parent = node.parentNode;\n                       previous = node.previousSibling;\n\n                       if (!previous) {\n                            previous = (dom.isInline(parent) ? parent : node).previousSibling;\n                       }\n\n                       if (!previous || previous.innerHTML === \"\" || dom.isBlock(previous)) {\n                           if (options.keepEOL) {\n                               value = value.replace(/[\\r\\n\\v\\f\\t ]+/, ' ');\n                           } else {\n                               value = value.replace(/^[\\r\\n\\v\\f\\t ]+/, '');\n                           }\n                       }\n\n                       value = value.replace(/ +/, ' ');\n                   }\n\n                   result.push(skipEncoding ? value : dom.encode(value, options));\n\n               } else if (nodeType == 4) {\n                   result.push('<![CDATA[');\n                   result.push(node.data);\n                   result.push(']]>');\n               } else if (nodeType == 8) {\n                   if (node.data.indexOf('[CDATA[') < 0) {\n                       result.push('<!--');\n                       result.push(node.data);\n                       result.push('-->');\n                   } else {\n                       result.push('<!');\n                       result.push(node.data);\n                       result.push('>');\n                   }\n               }\n           }\n\n           function shouldOptimize(node) {\n               return node.attributes.length === 0;\n           }\n\n           function textOnly(root) {\n               var childrenCount = root.childNodes.length;\n               var textChild = childrenCount && root.firstChild.nodeType == 3;\n\n               return textChild && (childrenCount == 1 || (childrenCount == 2 && dom.insignificant(root.lastChild)));\n           }\n\n           function runCustom() {\n               if (kendo.isFunction(options.custom)) {\n                   result = options.custom(result) || result;\n               }\n           }\n\n           if (textOnly(root)) {\n               result = dom.encode(text(root.firstChild).replace(/[\\r\\n\\v\\f\\t ]+/, ' '), options);\n               runCustom();\n\n               return result;\n           }\n\n           children(root);\n           result = result.join('');\n           runCustom();\n\n           // if serialized dom contains only whitespace elements, consider it empty (required field validation)\n           if (result.replace(brRe, \"\").replace(emptyPRe, \"\") === \"\") {\n               return \"\";\n           }\n\n           return result;\n       }\n\n   };\n\n   extend(Editor, {\n       Serializer: Serializer\n   });\n\n   })(window.kendo.jQuery);\n\n   (function($) {\n\n       // Imports ================================================================\n       var kendo = window.kendo,\n           Class = kendo.Class,\n           extend = $.extend,\n           Editor = kendo.ui.editor,\n           browser = kendo.support.browser,\n           dom = Editor.Dom,\n           findNodeIndex = dom.findNodeIndex,\n           isDataNode = dom.isDataNode,\n           findClosestAncestor = dom.findClosestAncestor,\n           getNodeLength = dom.getNodeLength,\n           normalize = dom.normalize;\n\n   var SelectionUtils = {\n       selectionFromWindow: function(window) {\n           if (!window) {\n               return;\n           }\n\n           if (!(\"getSelection\" in window)) {\n               return new W3CSelection(window.document);\n           }\n\n           return window.getSelection();\n       },\n\n       selectionFromRange: function(range) {\n           var rangeDocument = RangeUtils.documentFromRange(range);\n           return SelectionUtils.selectionFromDocument(rangeDocument);\n       },\n\n       selectionFromDocument: function(document) {\n           return SelectionUtils.selectionFromWindow(dom.windowFromDocument(document));\n       }\n   };\n\n   var W3CRange = Class.extend({\n       init: function(doc) {\n           $.extend(this, {\n               ownerDocument: doc, /* not part of the spec; used when cloning ranges, traversing the dom and creating fragments */\n               startContainer: doc,\n               endContainer: doc,\n               commonAncestorContainer: doc,\n               startOffset: 0,\n               endOffset: 0,\n               collapsed: true\n           });\n       },\n\n       // Positioning Methods\n       setStart: function(node, offset) {\n           this.startContainer = node;\n           this.startOffset = offset;\n           updateRangeProperties(this);\n           fixIvalidRange(this, true);\n       },\n\n       setEnd: function(node, offset) {\n           this.endContainer = node;\n           this.endOffset = offset;\n           updateRangeProperties(this);\n           fixIvalidRange(this, false);\n       },\n\n       setStartBefore: function(node) {\n           this.setStart(node.parentNode, findNodeIndex(node));\n       },\n\n       setStartAfter: function(node) {\n           this.setStart(node.parentNode, findNodeIndex(node) + 1);\n       },\n\n       setEndBefore: function(node) {\n           this.setEnd(node.parentNode, findNodeIndex(node));\n       },\n\n       setEndAfter: function(node) {\n           this.setEnd(node.parentNode, findNodeIndex(node) + 1);\n       },\n\n       selectNode: function(node) {\n           this.setStartBefore(node);\n           this.setEndAfter(node);\n       },\n\n       selectNodeContents: function(node) {\n           this.setStart(node, 0);\n           this.setEnd(node, node[node.nodeType === 1 ? 'childNodes' : 'nodeValue'].length);\n       },\n\n       collapse: function(toStart) {\n           var that = this;\n\n           if (toStart) {\n               that.setEnd(that.startContainer, that.startOffset);\n           } else {\n               that.setStart(that.endContainer, that.endOffset);\n           }\n       },\n\n       // Editing Methods\n\n       deleteContents: function() {\n           var that = this,\n               range = that.cloneRange();\n\n           if (that.startContainer != that.commonAncestorContainer) {\n               that.setStartAfter(findClosestAncestor(that.commonAncestorContainer, that.startContainer));\n           }\n\n           that.collapse(true);\n\n           (function deleteSubtree(iterator) {\n               while (iterator.next()) {\n                   if (iterator.hasPartialSubtree()) {\n                       deleteSubtree(iterator.getSubtreeIterator());\n                   } else {\n                       iterator.remove();\n                   }\n               }\n           })(new RangeIterator(range));\n       },\n\n       cloneContents: function() {\n           // clone subtree\n           var document = RangeUtils.documentFromRange(this);\n           return (function cloneSubtree(iterator) {\n                   var node, frag = document.createDocumentFragment();\n\n                   while (node = iterator.next()) {\n                       node = node.cloneNode(!iterator.hasPartialSubtree());\n\n                       if (iterator.hasPartialSubtree()) {\n                           node.appendChild(cloneSubtree(iterator.getSubtreeIterator()));\n                       }\n\n                       frag.appendChild(node);\n                   }\n\n                   return frag;\n           })(new RangeIterator(this));\n       },\n\n       extractContents: function() {\n           var that = this,\n               range = that.cloneRange();\n\n           if (that.startContainer != that.commonAncestorContainer) {\n               that.setStartAfter(findClosestAncestor(that.commonAncestorContainer, that.startContainer));\n           }\n\n           that.collapse(true);\n\n           var document = RangeUtils.documentFromRange(that);\n\n           return (function extractSubtree(iterator) {\n               var node, frag = document.createDocumentFragment();\n\n               while (node = iterator.next()) {\n                   if (iterator.hasPartialSubtree()) {\n                       node = node.cloneNode(false);\n                       node.appendChild(extractSubtree(iterator.getSubtreeIterator()));\n                   } else {\n                       iterator.remove(that.originalRange);\n                   }\n\n                   frag.appendChild(node);\n               }\n\n               return frag;\n           })(new RangeIterator(range));\n       },\n\n       insertNode: function(node) {\n           var that = this;\n\n           if (isDataNode(that.startContainer)) {\n               if (that.startOffset != that.startContainer.nodeValue.length) {\n                   dom.splitDataNode(that.startContainer, that.startOffset);\n               }\n\n               dom.insertAfter(node, that.startContainer);\n           } else {\n               dom.insertAt(that.startContainer, node, that.startOffset);\n           }\n\n           that.setStart(that.startContainer, that.startOffset);\n       },\n\n       cloneRange: function() {\n           // fast copy\n           return $.extend(new W3CRange(this.ownerDocument), {\n               startContainer: this.startContainer,\n               endContainer: this.endContainer,\n               commonAncestorContainer: this.commonAncestorContainer,\n               startOffset: this.startOffset,\n               endOffset: this.endOffset,\n               collapsed: this.collapsed,\n\n               originalRange: this /* not part of the spec; used to update the original range when calling extractContents() on clones */\n           });\n       },\n\n       // used for debug purposes\n       toString: function() {\n           var startNodeName = this.startContainer.nodeName,\n               endNodeName = this.endContainer.nodeName;\n\n           return [startNodeName == \"#text\" ? this.startContainer.nodeValue : startNodeName, '(', this.startOffset, ') : ',\n                   endNodeName == \"#text\" ? this.endContainer.nodeValue : endNodeName, '(', this.endOffset, ')'].join('');\n       }\n   });\n\n   W3CRange.fromNode = function(node) {\n       return new W3CRange(node.ownerDocument);\n   };\n\n   /* can be used in Range.compareBoundaryPoints if we need it one day */\n   function compareBoundaries(start, end, startOffset, endOffset) {\n       if (start == end) {\n           return endOffset - startOffset;\n       }\n\n       // end is child of start\n       var container = end;\n       while (container && container.parentNode != start) {\n           container = container.parentNode;\n       }\n\n       if (container) {\n           return findNodeIndex(container) - startOffset;\n       }\n\n       // start is child of end\n       container = start;\n       while (container && container.parentNode != end) {\n           container = container.parentNode;\n       }\n\n       if (container) {\n           return endOffset - findNodeIndex(container) - 1;\n       }\n\n       // deep traversal\n       var root = dom.commonAncestor(start, end);\n       var startAncestor = start;\n\n       while (startAncestor && startAncestor.parentNode != root) {\n           startAncestor = startAncestor.parentNode;\n       }\n\n       if (!startAncestor) {\n           startAncestor = root;\n       }\n\n       var endAncestor = end;\n       while (endAncestor && endAncestor.parentNode != root) {\n           endAncestor = endAncestor.parentNode;\n       }\n\n       if (!endAncestor) {\n           endAncestor = root;\n       }\n\n       if (startAncestor == endAncestor) {\n           return 0;\n       }\n\n       return findNodeIndex(endAncestor) - findNodeIndex(startAncestor);\n   }\n\n   function fixIvalidRange(range, toStart) {\n       function isInvalidRange(range) {\n           try {\n               return compareBoundaries(range.startContainer, range.endContainer, range.startOffset, range.endOffset) < 0;\n           } catch (ex) {\n               // range was initially invalid (e.g. when cloned from invalid range) - it must be fixed\n               return true;\n           }\n       }\n\n       if (isInvalidRange(range)) {\n           if (toStart) {\n               range.commonAncestorContainer = range.endContainer = range.startContainer;\n               range.endOffset = range.startOffset;\n           } else {\n               range.commonAncestorContainer = range.startContainer = range.endContainer;\n               range.startOffset = range.endOffset;\n           }\n\n           range.collapsed = true;\n       }\n   }\n\n   function updateRangeProperties(range) {\n       range.collapsed = range.startContainer == range.endContainer && range.startOffset == range.endOffset;\n\n       var node = range.startContainer;\n       while (node && node != range.endContainer && !dom.isAncestorOf(node, range.endContainer)) {\n           node = node.parentNode;\n       }\n\n       range.commonAncestorContainer = node;\n   }\n\n   var RangeIterator = Class.extend({\n       init: function(range) {\n           $.extend(this, {\n               range: range,\n               _current: null,\n               _next: null,\n               _end: null\n           });\n\n           if (range.collapsed) {\n               return;\n           }\n\n           var root = range.commonAncestorContainer;\n\n           this._next = range.startContainer == root && !isDataNode(range.startContainer) ?\n           range.startContainer.childNodes[range.startOffset] :\n           findClosestAncestor(root, range.startContainer);\n\n           this._end = range.endContainer == root && !isDataNode(range.endContainer) ?\n           range.endContainer.childNodes[range.endOffset] :\n           findClosestAncestor(root, range.endContainer).nextSibling;\n       },\n\n       hasNext: function() {\n           return !!this._next;\n       },\n\n       next: function() {\n           var that = this,\n               current = that._current = that._next;\n           that._next = that._current && that._current.nextSibling != that._end ?\n           that._current.nextSibling : null;\n\n           if (isDataNode(that._current)) {\n               if (that.range.endContainer == that._current) {\n                   current = current.cloneNode(true);\n                   current.deleteData(that.range.endOffset, current.length - that.range.endOffset);\n               }\n\n               if (that.range.startContainer == that._current) {\n                   current = current.cloneNode(true);\n                   current.deleteData(0, that.range.startOffset);\n               }\n           }\n\n           return current;\n       },\n\n       traverse: function(callback) {\n           var that = this,\n               current;\n\n           function next() {\n               that._current = that._next;\n               that._next = that._current && that._current.nextSibling != that._end ? that._current.nextSibling : null;\n               return that._current;\n           }\n\n           while (current = next()) {\n               if (that.hasPartialSubtree()) {\n                   that.getSubtreeIterator().traverse(callback);\n               } else {\n                   callback(current);\n               }\n           }\n\n           return current;\n       },\n\n       remove: function(originalRange) {\n           var that = this,\n               inStartContainer = that.range.startContainer == that._current,\n               inEndContainer = that.range.endContainer == that._current,\n               start, end, delta;\n\n           if (isDataNode(that._current) && (inStartContainer || inEndContainer)) {\n               start = inStartContainer ? that.range.startOffset : 0;\n               end = inEndContainer ? that.range.endOffset : that._current.length;\n               delta = end - start;\n\n               if (originalRange && (inStartContainer || inEndContainer)) {\n                   if (that._current == originalRange.startContainer && start <= originalRange.startOffset) {\n                       originalRange.startOffset -= delta;\n                   }\n\n                   if (that._current == originalRange.endContainer && end <= originalRange.endOffset) {\n                       originalRange.endOffset -= delta;\n                   }\n               }\n\n               that._current.deleteData(start, delta);\n           } else {\n               var parent = that._current.parentNode;\n\n               if (originalRange && (that.range.startContainer == parent || that.range.endContainer == parent)) {\n                   var nodeIndex = findNodeIndex(that._current);\n\n                   if (parent == originalRange.startContainer && nodeIndex <= originalRange.startOffset) {\n                       originalRange.startOffset -= 1;\n                   }\n\n                   if (parent == originalRange.endContainer && nodeIndex < originalRange.endOffset) {\n                       originalRange.endOffset -= 1;\n                   }\n               }\n\n               dom.remove(that._current);\n           }\n       },\n\n       hasPartialSubtree: function() {\n           return !isDataNode(this._current) &&\n           (dom.isAncestorOrSelf(this._current, this.range.startContainer) ||\n               dom.isAncestorOrSelf(this._current, this.range.endContainer));\n       },\n\n       getSubtreeIterator: function() {\n           return new RangeIterator(this.getSubRange());\n       },\n\n       getSubRange: function() {\n           var that = this,\n               subRange = that.range.cloneRange();\n           subRange.selectNodeContents(that._current);\n           if (dom.isAncestorOrSelf(that._current, that.range.startContainer)) {\n               subRange.setStart(that.range.startContainer, that.range.startOffset);\n           }\n           if (dom.isAncestorOrSelf(that._current, that.range.endContainer)) {\n               subRange.setEnd(that.range.endContainer, that.range.endOffset);\n           }\n\n           return subRange;\n       }\n   });\n\n   var W3CSelection = Class.extend({\n       init: function(doc) {\n           this.ownerDocument = doc;\n           this.rangeCount = 1;\n       },\n\n       addRange: function(range) {\n           var textRange = this.ownerDocument.body.createTextRange();\n\n           // end container should be adopted first in order to prevent selection with negative length\n           adoptContainer(textRange, range, false);\n           adoptContainer(textRange, range, true);\n\n           textRange.select();\n       },\n\n       removeAllRanges: function() {\n           var selection = this.ownerDocument.selection;\n\n           if (selection.type != \"None\") {\n               selection.empty();\n           }\n       },\n\n       getRangeAt: function() {\n           var textRange,\n               range = new W3CRange(this.ownerDocument),\n               selection = this.ownerDocument.selection,\n               element, commonAncestor;\n\n           try {\n               textRange = selection.createRange();\n               element = textRange.item ? textRange.item(0) : textRange.parentElement();\n               if (element.ownerDocument != this.ownerDocument) {\n                   return range;\n               }\n           } catch (ex) {\n               return range;\n           }\n\n           if (selection.type == \"Control\") {\n               range.selectNode(textRange.item(0));\n           } else {\n               commonAncestor = textRangeContainer(textRange);\n               adoptEndPoint(textRange, range, commonAncestor, true);\n               adoptEndPoint(textRange, range, commonAncestor, false);\n\n               if (range.startContainer.nodeType == 9) {\n                   range.setStart(range.endContainer, range.startOffset);\n               }\n\n               if (range.endContainer.nodeType == 9) {\n                   range.setEnd(range.startContainer, range.endOffset);\n               }\n\n               if (textRange.compareEndPoints(\"StartToEnd\", textRange) === 0) {\n                   range.collapse(false);\n               }\n\n               var startContainer = range.startContainer,\n                   endContainer = range.endContainer,\n                   body = this.ownerDocument.body;\n\n               if (!range.collapsed && range.startOffset === 0 && range.endOffset == getNodeLength(range.endContainer) && // check for full body selection\n                   !(startContainer == endContainer && isDataNode(startContainer) && startContainer.parentNode == body)) { // but not when single textnode is selected\n                   var movedStart = false,\n                       movedEnd = false;\n\n                   while (findNodeIndex(startContainer) === 0 && startContainer == startContainer.parentNode.firstChild && startContainer != body) {\n                       startContainer = startContainer.parentNode;\n                       movedStart = true;\n                   }\n\n                   while (findNodeIndex(endContainer) == getNodeLength(endContainer.parentNode) - 1 && endContainer == endContainer.parentNode.lastChild && endContainer != body) {\n                       endContainer = endContainer.parentNode;\n                       movedEnd = true;\n                   }\n\n                   if (startContainer == body && endContainer == body && movedStart && movedEnd) {\n                       range.setStart(startContainer, 0);\n                       range.setEnd(endContainer, getNodeLength(body));\n                   }\n               }\n           }\n\n           return range;\n       }\n   });\n\n   function textRangeContainer(textRange) {\n       var left = textRange.duplicate(),\n           right = textRange.duplicate();\n\n       left.collapse(true);\n       right.collapse(false);\n\n       return dom.commonAncestor(textRange.parentElement(), left.parentElement(), right.parentElement());\n   }\n\n   function adoptContainer(textRange, range, start) {\n       // find anchor node and offset\n       var container = range[start ? \"startContainer\" : \"endContainer\"],\n           offset = range[start ? \"startOffset\" : \"endOffset\"],\n           textOffset = 0,\n           isData = isDataNode(container),\n           anchorNode = isData ? container : container.childNodes[offset] || null,\n           anchorParent = isData ? container.parentNode : container,\n           doc = range.ownerDocument,\n           cursor = doc.body.createTextRange(),\n           cursorNode;\n\n       // visible data nodes need a text offset\n       if (container.nodeType == 3 || container.nodeType == 4) {\n           textOffset = offset;\n       }\n\n       if (!anchorParent) {\n           anchorParent = doc.body;\n       }\n\n       if (anchorParent.nodeName.toLowerCase() == \"img\") {\n           cursor.moveToElementText(anchorParent);\n           cursor.collapse(false);\n           textRange.setEndPoint(start ? \"StartToStart\" : \"EndToStart\", cursor);\n       } else {\n           // create a cursor element node to position range (since we can't select text nodes)\n           cursorNode = anchorParent.insertBefore(dom.create(doc, \"a\"), anchorNode);\n\n           cursor.moveToElementText(cursorNode);\n           dom.remove(cursorNode);\n           cursor[start ? \"moveStart\" : \"moveEnd\"](\"character\", textOffset);\n           cursor.collapse(false);\n           textRange.setEndPoint(start ? \"StartToStart\" : \"EndToStart\", cursor);\n       }\n   }\n\n   function adoptEndPoint(textRange, range, commonAncestor, start) {\n       var cursorNode = dom.create(range.ownerDocument, \"a\"),\n           cursor = textRange.duplicate(),\n           comparison = start ? \"StartToStart\" : \"StartToEnd\",\n           result, parent, target,\n           previous, next,\n           args, index,\n           appended = false;\n\n       cursorNode.innerHTML = \"\\ufeff\";\n       cursor.collapse(start);\n\n       parent = cursor.parentElement();\n\n       if (!dom.isAncestorOrSelf(commonAncestor, parent)) {\n           parent = commonAncestor;\n       }\n\n       // detect range end points\n       // insert cursorNode within the textRange parent and move the cursor until it gets outside of the textRange\n       do {\n           if (appended) {\n               parent.insertBefore(cursorNode, cursorNode.previousSibling);\n           } else {\n               parent.appendChild(cursorNode);\n               appended = true;\n           }\n           cursor.moveToElementText(cursorNode);\n       } while ((result = cursor.compareEndPoints(comparison, textRange)) > 0 && cursorNode.previousSibling);\n\n       target = cursorNode.nextSibling;\n\n       if (result == -1 && isDataNode(target)) {\n           cursor.setEndPoint(start ? \"EndToStart\" : \"EndToEnd\", textRange);\n\n           dom.remove(cursorNode);\n\n           args = [target, cursor.text.length];\n       } else {\n           previous = !start && cursorNode.previousSibling;\n           next = start && cursorNode.nextSibling;\n\n           if (isDataNode(next)) {\n               args = [next, 0];\n           } else if (isDataNode(previous)) {\n               args = [previous, previous.length];\n           } else {\n               index = findNodeIndex(cursorNode);\n\n               if (parent.nextSibling && index == parent.childNodes.length - 1) {\n                   args = [parent.nextSibling, 0];\n               } else {\n                   args = [parent, index];\n               }\n           }\n\n           dom.remove(cursorNode);\n       }\n\n       range[start ? \"setStart\" : \"setEnd\"](...args);\n   }\n\n   var RangeEnumerator = Class.extend({\n       init: function(range) {\n           this.enumerate = function() {\n               var nodes = [];\n\n               function visit(node) {\n                   if (dom.is(node, \"img\") || (node.nodeType == 3 && (!dom.isEmptyspace(node) || node.nodeValue == \"\\ufeff\"))) {\n                       nodes.push(node);\n                   } else {\n                       node = node.firstChild;\n                       while (node) {\n                           visit(node);\n                           node = node.nextSibling;\n                       }\n                   }\n               }\n\n               new RangeIterator(range).traverse(visit);\n\n               return nodes;\n           };\n       }\n   });\n\n   var ImmutablesRangeIterator = RangeIterator.extend({\n       hasPartialSubtree: function() {\n           var immutable = Editor.Immutables && Editor.Immutables.immutable;\n           return immutable && !immutable(this._current) && RangeIterator.fn.hasPartialSubtree.call(this);\n       },\n\n       getSubtreeIterator: function() {\n           return new ImmutablesRangeIterator(this.getSubRange());\n       }\n   });\n\n   var ImmutablesRangeEnumerator = Class.extend({\n       init: function(range) {\n           this.enumerate = function() {\n               var nodes = [];\n               var immutable = Editor.Immutables && Editor.Immutables.immutable;\n               function visit(node) {\n                   if (immutable && !immutable(node)) {\n                       if (dom.is(node, \"img\") || (node.nodeType == 3 && (!dom.isEmptyspace(node) || node.nodeValue == \"\\ufeff\"))) {\n                           nodes.push(node);\n                       } else {\n                           node = node.firstChild;\n                           while (node) {\n                               visit(node);\n                               node = node.nextSibling;\n                           }\n                       }\n                   }\n               }\n\n               new ImmutablesRangeIterator(range).traverse(visit);\n\n               return nodes;\n           };\n       }\n   });\n\n   var RestorePoint = Class.extend({\n       init: function(range, body, options) {\n           var that = this;\n           that.range = range;\n           that.rootNode = RangeUtils.documentFromRange(range);\n           that.body = body || that.getEditable(range);\n           if (dom.name(that.body) != \"body\") {\n               that.rootNode = that.body;\n           }\n\n           that.startContainer = that.nodeToPath(range.startContainer);\n           that.endContainer = that.nodeToPath(range.endContainer);\n           that.startOffset = that.offset(range.startContainer, range.startOffset);\n           that.endOffset = that.offset(range.endContainer, range.endOffset);\n\n           that.immutables = options && options.immutables;\n\n           if (that.immutables) {\n               that.serializedImmutables = Editor.Immutables.removeImmutables(that.body);\n           }\n\n           that.html = that.body.innerHTML;\n\n           if (that.immutables && !that.serializedImmutables.empty) {\n               Editor.Immutables.restoreImmutables(that.body, that.serializedImmutables);\n           }\n       },\n\n       index: function(node) {\n           var result = 0,\n               lastType = node.nodeType;\n\n           while (node = node.previousSibling) {\n               var nodeType = node.nodeType;\n\n               if (nodeType != 3 || lastType != nodeType) {\n                   result ++;\n               }\n\n               lastType = nodeType;\n           }\n\n           return result;\n       },\n\n       getEditable: function(range) {\n           var root = range.commonAncestorContainer;\n\n           while (root && (root.nodeType == 3 || root.attributes && (!root.attributes.contentEditable || root.attributes.contentEditable.nodeValue.toLowerCase() == \"false\"))) {\n               root = root.parentNode;\n           }\n\n           return root;\n       },\n\n       restoreHtml: function() {\n           var that = this;\n\n           dom.removeChildren(that.body);\n           that.body.innerHTML = that.html;\n           if (that.immutables && !that.serializedImmutables.empty) {\n               Editor.Immutables.restoreImmutables(that.body, that.serializedImmutables);\n           }\n       },\n\n       offset: function(node, value) {\n           if (node.nodeType == 3) {\n               while ((node = node.previousSibling) && node.nodeType == 3) {\n                   value += node.nodeValue.length;\n               }\n           }\n\n           return value;\n       },\n\n       nodeToPath: function(node) {\n           var path = [];\n\n           while (node != this.rootNode) {\n               path.push(this.index(node));\n               node = node.parentNode;\n           }\n\n           return path;\n       },\n\n       toRangePoint: function(range, start, path, denormalizedOffset) {\n           var node = this.rootNode,\n               length = path.length,\n               offset = denormalizedOffset;\n\n           while (length-- && node) {\n               node = node.childNodes[path[length]];\n           }\n\n           while (node && node.nodeType == 3 && node.nodeValue.length < offset) {\n               offset -= node.nodeValue.length;\n               node = node.nextSibling;\n           }\n\n           if (node && offset >= 0) {\n               range[start ? 'setStart' : 'setEnd'](node, offset);\n           }\n       },\n\n       toRange: function() {\n           var that = this,\n               result = that.range.cloneRange();\n\n           that.toRangePoint(result, true, that.startContainer, that.startOffset);\n           that.toRangePoint(result, false, that.endContainer, that.endOffset);\n\n           return result;\n       }\n\n   });\n\n   var Marker = Class.extend({\n       init: function() {\n           this.caret = null;\n       },\n\n       addCaret: function(range) {\n           var that = this;\n           var caret = that.caret = dom.create(RangeUtils.documentFromRange(range), 'span', { className: 'k-marker' });\n           range.insertNode(caret);\n\n           dom.stripBomNode(caret.previousSibling);\n           dom.stripBomNode(caret.nextSibling);\n\n           range.selectNode(caret);\n           return caret;\n       },\n\n       removeCaret: function(range) {\n           var that = this,\n               previous = that.caret.previousSibling,\n               startOffset = 0;\n\n           if (previous) {\n               startOffset = isDataNode(previous) ? previous.nodeValue.length : findNodeIndex(previous);\n           }\n\n           var container = that.caret.parentNode;\n           var containerIndex = previous ? findNodeIndex(previous) : 0;\n\n           dom.remove(that.caret);\n           normalize(container);\n\n           var node = container.childNodes[containerIndex];\n\n           if (isDataNode(node)) {\n               range.setStart(node, startOffset);\n           } else if (node) {\n               var textNode = dom.lastTextNode(node);\n               if (textNode) {\n                   range.setStart(textNode, textNode.nodeValue.length);\n               } else {\n                   range[previous ? 'setStartAfter' : 'setStartBefore'](node);\n               }\n           } else {\n               if (!browser.msie && !container.innerHTML) {\n                   container.innerHTML = '<br _moz_dirty=\"\" />';\n               }\n\n               range.selectNodeContents(container);\n           }\n           range.collapse(true);\n       },\n\n       add: function(range, expand) {\n           var that = this;\n\n           var collapsed = range.collapsed && !RangeUtils.isExpandable(range);\n           var doc = RangeUtils.documentFromRange(range);\n\n           if (expand && range.collapsed) {\n               that.addCaret(range);\n               range = RangeUtils.expand(range);\n           }\n\n           var rangeBoundary = range.cloneRange();\n\n           rangeBoundary.collapse(false);\n           that.end = dom.create(doc, 'span', { className: 'k-marker' });\n           rangeBoundary.insertNode(that.end);\n\n           rangeBoundary = range.cloneRange();\n           rangeBoundary.collapse(true);\n           that.start = that.end.cloneNode(true);\n           rangeBoundary.insertNode(that.start);\n\n           that._removeDeadMarkers(that.start, that.end);\n\n           if (collapsed) {\n               var bom = doc.createTextNode(\"\\ufeff\");\n               dom.insertAfter(bom.cloneNode(), that.start);\n               dom.insertBefore(bom, that.end);\n           }\n\n           normalize(range.commonAncestorContainer);\n\n           range.setStartBefore(that.start);\n           range.setEndAfter(that.end);\n\n           return range;\n       },\n\n       _removeDeadMarkers: function(start, end) {\n           if (start.previousSibling && start.previousSibling.nodeValue == \"\\ufeff\") {\n               dom.remove(start.previousSibling);\n           }\n\n           if (end.nextSibling && end.nextSibling.nodeValue == \"\\ufeff\") {\n               dom.remove(end.nextSibling);\n           }\n       },\n\n       _normalizedIndex: function(node) {\n           var index = findNodeIndex(node);\n           var pointer = node;\n\n           while (pointer.previousSibling) {\n               if (pointer.nodeType == 3 && pointer.previousSibling.nodeType == 3) {\n                   index--;\n               }\n\n               pointer = pointer.previousSibling;\n           }\n\n           return index;\n       },\n\n       remove: function(range) {\n           var that = this,\n               start = that.start,\n               end = that.end,\n               shouldNormalizeStart,\n               shouldNormalizeEnd,\n               shouldNormalize;\n\n           normalize(range.commonAncestorContainer);\n\n           while (!start.nextSibling && start.parentNode) {\n               start = start.parentNode;\n           }\n\n           while (!end.previousSibling && end.parentNode) {\n               end = end.parentNode;\n           }\n\n           // merely accessing the siblings will solve range issues in IE\n           shouldNormalizeStart = (start.previousSibling && start.previousSibling.nodeType == 3) &&\n                                  (start.nextSibling && start.nextSibling.nodeType == 3);\n\n           shouldNormalizeEnd = (end.previousSibling && end.previousSibling.nodeType == 3) &&\n                                (end.nextSibling && end.nextSibling.nodeType == 3);\n\n           shouldNormalize = shouldNormalizeStart && shouldNormalizeEnd;\n\n           start = start.nextSibling;\n           end = end.previousSibling;\n\n           var isBomSelected = start === end && dom.isBom(start);\n           if (isBomSelected && start.length > 1) {\n               start.nodeValue = start.nodeValue.charAt(0);\n           }\n\n           var collapsed = isBomSelected;\n           var collapsedToStart = false;\n           // collapsed range\n           if (start == that.end) {\n               collapsedToStart = !!that.start.previousSibling;\n               start = end = that.start.previousSibling || that.end.nextSibling;\n               collapsed = true;\n           }\n\n           dom.remove(that.start);\n           dom.remove(that.end);\n\n           if (!start || !end) {\n               range.selectNodeContents(range.commonAncestorContainer);\n               range.collapse(true);\n               return;\n           }\n\n           var startOffset = collapsed ? isDataNode(start) ? start.nodeValue.length : start.childNodes.length : 0;\n           var endOffset = isDataNode(end) ? end.nodeValue.length : end.childNodes.length;\n\n           if (start.nodeType == 3) {\n               while (start.previousSibling && start.previousSibling.nodeType == 3) {\n                   start = start.previousSibling;\n                   startOffset += start.nodeValue.length;\n               }\n           }\n\n           if (end.nodeType == 3) {\n               while (end.previousSibling && end.previousSibling.nodeType == 3) {\n                   end = end.previousSibling;\n                   endOffset += end.nodeValue.length;\n               }\n           }\n\n           var startParent = start.parentNode;\n           var endParent = end.parentNode;\n           var startIndex = this._normalizedIndex(start);\n           var endIndex = this._normalizedIndex(end);\n\n           normalize(startParent);\n           if (start.nodeType == 3) {\n               start = startParent.childNodes[startIndex];\n           }\n\n           normalize(endParent);\n           if (end.nodeType == 3) {\n               end = endParent.childNodes[endIndex];\n           }\n\n           if (collapsed) {\n               if (start.nodeType == 3) {\n                   range.setStart(start, startOffset);\n               } else {\n                   range[collapsedToStart ? 'setStartAfter' : 'setStartBefore'](start);\n               }\n\n               range.collapse(true);\n\n           } else {\n               if (start.nodeType == 3) {\n                   range.setStart(start, startOffset);\n               } else {\n                   range.setStartBefore(start);\n               }\n\n               if (end.nodeType == 3) {\n                   range.setEnd(end, endOffset);\n               } else {\n                   range.setEndAfter(end);\n               }\n           }\n\n           if (that.caret) {\n               that.removeCaret(range);\n           }\n       }\n   });\n\n   var boundary = /[\\u0009-\\u000d]|\\u0020|\\u00a0|\\ufeff|\\.|,|;|:|!|\\(|\\)|\\?/;\n\n   var RangeUtils = {\n       nodes: function(range) {\n           var nodes = RangeUtils.textNodes(range);\n           if (!nodes.length) {\n               range.selectNodeContents(range.commonAncestorContainer);\n               nodes = RangeUtils.textNodes(range);\n               if (!nodes.length) {\n                   nodes = dom.significantChildNodes(range.commonAncestorContainer);\n               }\n           }\n           return nodes;\n       },\n\n       textNodes: function(range) {\n           var allNodes = new RangeEnumerator(range).enumerate(),\n               result = allNodes.filter(function(node) {\n                   return dom.allowsTextContent(node.parentElement);\n               });\n\n           return result;\n       },\n\n       editableTextNodes: function(range) {\n           var nodes = [],\n               immutableParent = Editor.Immutables && Editor.Immutables.immutableParent,\n               result = [];\n\n           if (immutableParent && !immutableParent(range.commonAncestorContainer)) {\n               nodes = new ImmutablesRangeEnumerator(range).enumerate();\n               result = nodes.filter(function(node) {\n                   return dom.allowsTextContent(node.parentElement);\n               });\n           }\n\n           return result;\n       },\n\n       documentFromRange: function(range) {\n           var startContainer = range.startContainer;\n           return startContainer.nodeType == 9 ? startContainer : startContainer.ownerDocument;\n       },\n\n       createRange: function(document) {\n           return document.createRange();\n       },\n\n       selectRange: function(range) {\n           var image = RangeUtils.image(range);\n           if (image) {\n               range.setStartAfter(image);\n               range.setEndAfter(image);\n           }\n           var selection = SelectionUtils.selectionFromRange(range);\n           selection.removeAllRanges();\n           selection.addRange(range);\n       },\n\n       stringify: function(range) {\n           return kendo.format(\n               \"{0}:{1} - {2}:{3}\",\n               dom.name(range.startContainer), range.startOffset,\n               dom.name(range.endContainer), range.endOffset\n           );\n       },\n\n       split: function(range, node, trim) {\n           function partition(start) {\n               var partitionRange = range.cloneRange();\n               partitionRange.collapse(start);\n               partitionRange[start ? 'setStartBefore' : 'setEndAfter'](node);\n               var contents = partitionRange.extractContents();\n               if (trim) {\n                   contents = dom.trim(contents);\n               }\n               dom[start ? 'insertBefore' : 'insertAfter'](contents, node);\n           }\n           partition(true);\n           partition(false);\n       },\n\n       mapAll: function(range, map) {\n           var nodes = [];\n\n           new RangeIterator(range).traverse(function(node) {\n               var mapped = map(node);\n\n               if (mapped && $.inArray(mapped, nodes) < 0) {\n                   nodes.push(mapped);\n               }\n           });\n\n           return nodes;\n       },\n\n       getAll: function(range, predicate) {\n           var selector = predicate;\n\n           if (typeof predicate == \"string\") {\n               predicate = function(node) {\n                   return dom.is(node, selector);\n               };\n           }\n\n           return RangeUtils.mapAll(range, function(node) {\n               if (predicate(node)) {\n                   return node;\n               }\n           });\n       },\n\n       getMarkers: function(range) {\n           return RangeUtils.getAll(range, function(node) {\n               return node.className == 'k-marker';\n           });\n       },\n\n       image: function(range) {\n           var nodes = RangeUtils.getAll(range, \"img\");\n\n           if (nodes.length == 1) {\n               return nodes[0];\n           }\n       },\n\n       isStartOf: function(originalRange, node) {\n           if (originalRange.startOffset !== 0) {\n               return false;\n           }\n\n           var range = originalRange.cloneRange();\n\n           while (range.startOffset === 0 && range.startContainer != node) {\n               var index = dom.findNodeIndex(range.startContainer);\n               var parent = range.startContainer.parentNode;\n\n               while (index > 0 && parent[index - 1] && dom.insignificant(parent[index - 1])) {\n                   index--;\n               }\n\n               range.setStart(parent, index);\n           }\n\n           return range.startOffset === 0 && range.startContainer == node;\n       },\n\n       isEndOf: function(originalRange, node) {\n           var range = originalRange.cloneRange();\n\n           range.collapse(false);\n\n           var start = range.startContainer;\n\n           if (dom.isDataNode(start) && range.startOffset == dom.getNodeLength(start)) {\n               range.setStart(start.parentNode, dom.findNodeIndex(start) + 1);\n               range.collapse(true);\n           }\n\n           range.setEnd(node, dom.getNodeLength(node));\n\n           var nodes = [];\n\n           function visit(node) {\n               if (!dom.insignificant(node) && !(dom.isDataNode(node) && /^[\\ufeff]*$/.test(node.nodeValue))) {\n                   nodes.push(node);\n               }\n           }\n\n           new RangeIterator(range).traverse(visit);\n\n           return !nodes.length;\n       },\n\n       wrapSelectedElements: function(range) {\n           var startEditable = dom.editableParent(range.startContainer);\n           var endEditable = dom.editableParent(range.endContainer);\n\n           while (range.startOffset === 0 && range.startContainer != startEditable) {\n               range.setStart(range.startContainer.parentNode, dom.findNodeIndex(range.startContainer));\n           }\n\n           function isEnd(offset, container) {\n               var length = dom.getNodeLength(container);\n\n               if (offset == length) {\n                   return true;\n               }\n\n               for (var i = offset; i < length; i++) {\n                   if (!dom.insignificant(container.childNodes[i])) {\n                       return false;\n                   }\n               }\n\n               return true;\n           }\n\n           while (isEnd(range.endOffset, range.endContainer) && range.endContainer != endEditable) {\n               range.setEnd(range.endContainer.parentNode, dom.findNodeIndex(range.endContainer) + 1);\n           }\n\n           return range;\n       },\n\n       expand: function(range) {\n           var result = range.cloneRange();\n\n           var startContainer = result.startContainer.childNodes[result.startOffset === 0 ? 0 : result.startOffset - 1];\n           var endContainer = result.endContainer.childNodes[result.endOffset];\n\n           if (!isDataNode(startContainer) || !isDataNode(endContainer)) {\n               return result;\n           }\n\n           var beforeCaret = startContainer.nodeValue;\n           var afterCaret = endContainer.nodeValue;\n\n           if (!beforeCaret || !afterCaret) {\n               return result;\n           }\n\n           var startOffset = beforeCaret.split('').reverse().join('').search(boundary);\n           var endOffset = afterCaret.search(boundary);\n\n           if (!startOffset || !endOffset) {\n               return result;\n           }\n\n           endOffset = endOffset == -1 ? afterCaret.length : endOffset;\n           startOffset = startOffset == -1 ? 0 : beforeCaret.length - startOffset;\n\n           result.setStart(startContainer, startOffset);\n           result.setEnd(endContainer, endOffset);\n\n           return result;\n       },\n\n       isExpandable: function(range) {\n           var node = range.startContainer;\n           var rangeDocument = RangeUtils.documentFromRange(range);\n\n           if (node == rangeDocument || node == rangeDocument.body) {\n               return false;\n           }\n\n           var result = range.cloneRange();\n\n           var value = node.nodeValue;\n           if (!value) {\n               return false;\n           }\n\n           var beforeCaret = value.substring(0, result.startOffset);\n           var afterCaret = value.substring(result.startOffset);\n\n           var startOffset = 0, endOffset = 0;\n\n           if (beforeCaret) {\n               startOffset = beforeCaret.split('').reverse().join('').search(boundary);\n           }\n\n           if (afterCaret) {\n               endOffset = afterCaret.search(boundary);\n           }\n\n           return startOffset && endOffset;\n       }\n   };\n\n   extend(Editor, {\n       SelectionUtils: SelectionUtils,\n       W3CRange: W3CRange,\n       RangeIterator: RangeIterator,\n       W3CSelection: W3CSelection,\n       RangeEnumerator: RangeEnumerator,\n       RestorePoint: RestorePoint,\n       Marker: Marker,\n       RangeUtils: RangeUtils\n   });\n\n   })(window.kendo.jQuery);\n\n   (function($, undefined$1) {\n       var kendo = window.kendo,\n           Class = kendo.Class,\n           Editor = kendo.ui.editor,\n           dom = Editor.Dom,\n           template = kendo.template,\n           RangeUtils = Editor.RangeUtils,\n           complexBlocks = [\"ul\", \"ol\", \"tbody\", \"thead\", \"table\"],\n           toolsToBeUpdated = [\n               \"bold\",\n               \"italic\",\n               \"underline\",\n               \"strikethrough\",\n               \"superscript\",\n               \"subscript\",\n               \"forecolor\",\n               \"backcolor\",\n               \"fontname\",\n               \"fontsize\",\n               \"createlink\",\n               \"unlink\",\n               \"autolink\",\n               \"addcolumnleft\",\n               \"addcolumnright\",\n               \"addrowabove\",\n               \"addrowbelow\",\n               \"deleterow\",\n               \"deletecolumn\",\n               \"mergecells\",\n               \"formatting\",\n               \"cleanformatting\" ],\n           IMMUTABALE = \"k-immutable\",\n           IMMUTABALE_MARKER_SELECTOR = \"[\" + IMMUTABALE + \"]\",\n           IMMUTABLE_SELECTOR = \"[contenteditable='false']\";\n\n       var rootCondition = function(node) {\n           return $(node).is(\"body,.k-editor\");\n       };\n\n       var immutable = function(node) {\n           return node.getAttribute && node.getAttribute(\"contenteditable\") == \"false\";\n       };\n\n       var immutableParent = function(node) {\n           return dom.closestBy(node, immutable, rootCondition);\n       };\n\n       var expandImmutablesIn = function(range) {\n           var startImmutableParent = immutableParent(range.startContainer);\n           var endImmutableParent = immutableParent(range.endContainer);\n\n           if (startImmutableParent || endImmutableParent) {\n               if (startImmutableParent) {\n                   range.setStartBefore(startImmutableParent);\n               }\n               if (endImmutableParent) {\n                   range.setEndAfter(endImmutableParent);\n               }\n           }\n       };\n\n       var immutablesContext = function(range) {\n           if (immutableParent(range.commonAncestorContainer)) {\n               return true;\n           } else if (immutableParent(range.startContainer) || immutableParent(range.endContainer)) {\n               var editableNodes = RangeUtils.editableTextNodes(range);\n               if (editableNodes.length === 0) {\n                   return true;\n               }\n           }\n           return false;\n       };\n\n       var randomId = function(length) {\n           var result = '';\n           var chars = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\n           for (var i = length || 10; i > 0; --i) {\n               result += chars.charAt(Math.round(Math.random() * (chars.length - 1)));\n           }\n           return result;\n       };\n\n       var removeImmutables = function(root) {\n           var serializedImmutables = { empty: true }, nodeName, id, serialized;\n            $(root).find(IMMUTABLE_SELECTOR).each(function(i, node) {\n               nodeName = dom.name(node);\n               id = randomId();\n               serialized = \"<\" + nodeName + \" \" + IMMUTABALE + \"='\" + id + \"'></\" + nodeName + \">\";\n               serializedImmutables[id] = { node: node, style: $(node).attr(\"style\") };\n               serializedImmutables.empty = false;\n               $(node).replaceWith(serialized);\n           });\n\n           return serializedImmutables;\n       };\n\n       var restoreImmutables = function(root, serializedImmutables) {\n           var id, immutable;\n           $(root).find(IMMUTABALE_MARKER_SELECTOR).each(function(i, node) {\n               id = node.getAttribute(IMMUTABALE);\n               immutable = serializedImmutables[id];\n               $(node).replaceWith(immutable.node);\n               if (immutable.style != $(immutable.node).attr(\"style\")) {\n                   $(immutable.node).removeAttr(\"style\").attr(\"style\", immutable.style);\n               }\n           });\n       };\n\n       var deletingKey = function(keyCode) {\n           var keys = kendo.keys;\n           return keyCode === keys.BACKSPACE || keyCode == keys.DELETE;\n       };\n       var updateToolOptions = function(tool) {\n           var options = tool ? tool.options : undefined$1;\n           if (options && options.finder) {\n               options.finder._initOptions({ immutables: true });\n           }\n       };\n\n       var Immutables = Class.extend({\n           init: function(editor) {\n               this.editor = editor;\n               this.serializedImmutables = {};\n               this.options = $.extend({}, editor && editor.options && editor.options.immutables);\n\n               var tools = kendo.ui.Editor.defaultTools;\n               updateToolOptions(tools.justifyLeft);\n               updateToolOptions(tools.justifyCenter);\n               updateToolOptions(tools.justifyRight);\n               updateToolOptions(tools.justifyFull);\n           },\n\n           serialize: function(node) {\n               var result = this._toHtml(node),\n                   id;\n\n               if (result.indexOf(IMMUTABALE) === -1) {\n                   id = this.randomId();\n                   result = result.replace(/>/, ' ' + IMMUTABALE + '=\"' + id + '\">');\n               } else {\n                   id = result.match(/k-immutable\\s*=\\s*['\"](.*)['\"]/)[1];\n               }\n\n               this.serializedImmutables[id] = node;\n               return result;\n           },\n\n           _toHtml: function(node) {\n               var serialization = this.options.serialization;\n               var serializationType = typeof serialization;\n               var nodeName;\n\n               switch (serializationType) {\n                   case \"string\":\n                       return template(serialization)(node);\n                   case \"function\":\n                       return serialization(node);\n                   default:\n                       nodeName = dom.name(node);\n                       return \"<\" + nodeName + \"></\" + nodeName + \">\";\n               }\n           },\n\n           deserialize: function(node) {\n               var that = this;\n               var deserialization = this.options.deserialization;\n\n               $(IMMUTABALE_MARKER_SELECTOR, node).each(function() {\n                   var id = this.getAttribute(IMMUTABALE);\n                   var immutable = that.serializedImmutables[id];\n                   if (kendo.isFunction(deserialization)) {\n                       deserialization(this, immutable);\n                   }\n                   $(this).replaceWith(immutable);\n               });\n\n               that.serializedImmutables = {};\n           },\n\n           randomId: function(length) {\n               return randomId(length);\n           },\n\n           keydown: function(e, range) {\n               var isDeleting = deletingKey(e.keyCode);\n               var shouldCancelEvent = (isDeleting && this._cancelDeleting(e, range)) ||\n                   (!isDeleting && this._cancelTyping(e, range));\n\n               if (shouldCancelEvent) {\n                   e.preventDefault();\n                   return true;\n               }\n           },\n\n           _cancelTyping: function(e, range) {\n               var editor = this.editor;\n               var keyboard = editor.keyboard;\n\n               return range.collapsed && !keyboard.typingInProgress &&\n                   keyboard.isTypingKey(e) && immutablesContext(range);\n           },\n\n           _cancelDeleting: function(e, range) {\n               var keys = kendo.keys;\n               var backspace = e.keyCode === keys.BACKSPACE;\n               var del = e.keyCode == keys.DELETE;\n\n               if (!backspace && !del) {\n                   return false;\n               }\n               var cancelDeleting = false;\n               if (range.collapsed) {\n                   if (immutablesContext(range)) {\n                       return true;\n                   }\n                   var immutable = this.nextImmutable(range, del);\n                   if (immutable && backspace) {\n                       var closestSelectionLi = dom.closest(range.commonAncestorContainer, \"li\");\n                       if (closestSelectionLi) {\n                           var closestImmutableLi = dom.closest(immutable, \"li\");\n                           if (closestImmutableLi && closestImmutableLi !== closestSelectionLi) {\n                               return cancelDeleting;\n                           }\n                       }\n                   }\n                   if (immutable && !dom.tableCell(immutable)) {\n                       if (dom.parentOfType(immutable, complexBlocks) === dom.parentOfType(range.commonAncestorContainer, complexBlocks)) {\n                           while (immutable && immutable.parentNode.childNodes.length == 1) {\n                               immutable = immutable.parentNode;\n                           }\n                           if (dom.tableCell(immutable)) {\n                               return cancelDeleting;\n                           }\n                           this._removeImmutable(immutable, range);\n                       }\n                       cancelDeleting = true;\n                   }\n               }\n               return cancelDeleting;\n           },\n\n           nextImmutable: function(range, forwards) {\n               var commonContainer = range.commonAncestorContainer;\n               if (dom.isBom(commonContainer) || ((forwards && RangeUtils.isEndOf(range, commonContainer)) || (!forwards && RangeUtils.isStartOf(range, commonContainer)))) {\n                   var next = this._nextNode(commonContainer, forwards);\n                   if (next && dom.isBlock(next) && !immutableParent(next)) {\n                       while (next && next.children && next.children[forwards ? 0 : next.children.length - 1]) {\n                           next = next.children[forwards ? 0 : next.children.length - 1];\n                       }\n                   }\n                   return immutableParent(next);\n               }\n           },\n\n           _removeImmutable: function(immutable, range) {\n               var editor = this.editor;\n               var startRestorePoint = new Editor.RestorePoint(range, editor.body);\n               dom.remove(immutable);\n               Editor._finishUpdate(editor, startRestorePoint);\n           },\n\n           _nextNode: function(node, forwards) {\n               var sibling = forwards ? \"nextSibling\" : \"previousSibling\";\n               var current = node, next;\n               while (current && !next && !dom.isChildOfBaseContainer(current)) {\n                   next = current[sibling];\n                   if (next && dom.isDataNode(next) && /^\\s|[\\ufeff]$/.test(next.nodeValue)) {\n                       current = next;\n                       next = current[sibling];\n                   }\n                   if (!next) {\n                       current = current.parentNode;\n                   }\n               }\n               return next;\n           }\n       });\n\n       Immutables.immutable = immutable;\n       Immutables.immutableParent = immutableParent;\n       Immutables.expandImmutablesIn = expandImmutablesIn;\n       Immutables.immutablesContext = immutablesContext;\n       Immutables.toolsToBeUpdated = toolsToBeUpdated;\n       Immutables.removeImmutables = removeImmutables;\n       Immutables.restoreImmutables = restoreImmutables;\n\n       Editor.Immutables = Immutables;\n   })(window.kendo.jQuery);\n\n   (function($) {\n\n       // Imports ================================================================\n       var kendo = window.kendo,\n           Class = kendo.Class,\n           editorNS = kendo.ui.editor,\n           dom = editorNS.Dom,\n           RestorePoint = editorNS.RestorePoint,\n           Marker = editorNS.Marker,\n           extend = $.extend;\n\n   function finishUpdate(editor, startRestorePoint) {\n       var endRestorePoint = editor.selectionRestorePoint = new RestorePoint(editor.getRange(), editor.body);\n       var command = new GenericCommand(startRestorePoint, endRestorePoint);\n       command.editor = editor;\n\n       editor.undoRedoStack.push(command);\n       editor._refreshTools();\n\n       return endRestorePoint;\n   }\n\n   var Command = Class.extend({\n       init: function(options) {\n           this.options = options;\n           this.restorePoint = new RestorePoint(options.range, options.body, { immutables: options.immutables });\n           this.marker = new Marker();\n           this.formatter = options.formatter;\n       },\n\n       getRange: function() {\n           return this.restorePoint.toRange();\n       },\n\n       lockRange: function(expand) {\n           return this.marker.add(this.getRange(), expand);\n       },\n\n       releaseRange: function(range) {\n           this.marker.remove(range);\n           this.editor.selectRange(range);\n       },\n\n       undo: function() {\n           var point = this.restorePoint;\n           point.restoreHtml();\n           this.editor.selectRange(point.toRange());\n       },\n\n       redo: function() {\n           this.exec();\n       },\n\n       createDialog: function(content, options) {\n           var editor = this.editor;\n\n           return $(content).appendTo(document.body)\n               .kendoWindow(extend({}, editor.options.dialogOptions, options))\n               .closest(\".k-window\")\n               .addClass(\"k-editor-window\")\n               .toggleClass(\"k-rtl\", kendo.support.isRtl(editor.wrapper)).end();\n       },\n\n       exec: function() {\n           var range = this.lockRange(true);\n           this.formatter.editor = this.editor;\n           this.formatter.toggle(range);\n           this.releaseRange(range);\n       },\n\n       postExec: function() {\n           this.editor._handleSpaceAndNewLines();\n       },\n\n       immutables: function() {\n           return this.editor && this.editor.options.immutables;\n       },\n\n       expandImmutablesIn: function(range) {\n           if (this.immutables()) {\n               kendo.ui.editor.Immutables.expandImmutablesIn(range);\n               this.restorePoint = new RestorePoint(range, this.editor.body);\n           }\n       },\n\n       _actionButtonsTemplate: function({ messages, insertButtonIcon, cancelButtonIcon }) {\n           return '<div class=\"k-actions k-actions-start k-actions-horizontal k-window-buttons\">' +\n           kendo.html.renderButton(`<button class=\"k-dialog-insert\">${messages.dialogInsert}</button>`, { themeColor: \"primary\", icon: insertButtonIcon }) +\n           kendo.html.renderButton(`<button class=\"k-dialog-close\">${messages.dialogCancel}</button>`, { icon: cancelButtonIcon }) +\n       '</div>';\n       }\n   });\n\n   var GenericCommand = Class.extend({\n       init: function(startRestorePoint, endRestorePoint) {\n           this.body = startRestorePoint.body;\n           this.startRestorePoint = startRestorePoint;\n           this.endRestorePoint = endRestorePoint;\n       },\n\n       redo: function() {\n           dom.removeChildren(this.body);\n\n           this.body.innerHTML = this.endRestorePoint.html;\n           this.editor.selectRange(this.endRestorePoint.toRange());\n       },\n\n       undo: function() {\n           dom.removeChildren(this.body);\n\n           this.body.innerHTML = this.startRestorePoint.html;\n           this.editor.selectRange(this.startRestorePoint.toRange());\n       }\n   });\n\n   extend(editorNS, {\n       _finishUpdate: finishUpdate,\n       Command: Command,\n       GenericCommand: GenericCommand\n   });\n\n   })(window.kendo.jQuery);\n\n   (function($, undefined$1) {\n\n   var kendo = window.kendo,\n       extend = $.extend,\n       Editor = kendo.ui.editor,\n       EditorUtils = Editor.EditorUtils,\n       Command = Editor.Command,\n       Tool = Editor.Tool,\n       dom = Editor.Dom;\n\n   var ViewHtmlCommand = Command.extend({\n       init: function(options) {\n           var cmd = this;\n           cmd.options = options;\n           Command.fn.init.call(cmd, options);\n           cmd.attributes = null;\n           cmd.async = true;\n       },\n\n       exec: function() {\n           var that = this,\n               editor = that.editor,\n               options = editor.options,\n               messages = editor.options.messages,\n               dialog = $(kendo.template(ViewHtmlCommand.template)(messages)).appendTo(document.body),\n               textarea = \".k-editor-textarea > textarea\",\n               content, comments;\n\n           options.serialization.immutables = editor.immutables;\n\n           comments = dom.getAllComments(editor.body);\n\n           content = EditorUtils.cacheComments(editor.value(), comments);\n           content = ViewHtmlCommand.indent(content);\n           content = EditorUtils.retrieveComments(content, comments);\n\n           options.serialization.immutables = undefined$1;\n\n           function apply(e) {\n               options.deserialization.immutables = editor.immutables;\n               editor.value(dialog.find(textarea).val());\n               options.deserialization.immutables = undefined$1;\n\n               close(e);\n\n               if (that.change) {\n                   that.change();\n               }\n\n               editor.trigger(\"change\");\n           }\n\n           function close(e) {\n               e.preventDefault();\n\n               dialog.data(\"kendoWindow\").destroy();\n\n               if (editor.immutables) {\n                   editor.immutables.serializedImmutables = {};\n               }\n\n               editor.focus();\n           }\n\n           let window = this.createDialog(dialog, {\n               title: messages.viewHtml,\n               _footerTemplate: ViewHtmlCommand._footerTemplate,\n               _footerMessages: messages,\n               width: 600,\n               height: 400,\n               resizable: true,\n               close: close,\n               visible: false\n           })\n               .find(textarea).val(content).end()\n               .data(\"kendoWindow\");\n\n               window.center().open();\n\n               window.wrapper.find(\".k-dialog-update\").on(\"click\", apply).end();\n               window.wrapper.find(\".k-dialog-close\").on(\"click\", close).end();\n           dialog.find(textarea).trigger(\"focus\");\n       }\n   });\n\n   extend(ViewHtmlCommand, {\n       template: () =>\n       '<div class=\"k-editor-dialog k-popup-edit-form k-viewhtml-dialog\">' +\n           '<span class=\"k-input k-textarea k-input-solid k-input-md k-rounded-md k-editor-textarea\"><textarea class=\"k-input-inner !k-overflow-auto !k-resize-none\"></textarea></span>' +\n       '</div>',\n       _footerTemplate: ({ dialogUpdate, dialogCancel }) =>\n       `<div class=\"k-actions k-actions-start k-actions-horizontal k-window-actions\">` +\n           kendo.html.renderButton(`<button class=\"k-dialog-update\">${kendo.htmlEncode(dialogUpdate)}</button>`, { themeColor: \"primary\", icon: \"check\" }) +\n           kendo.html.renderButton(`<button class=\"k-dialog-close\">${kendo.htmlEncode(dialogCancel)}</button>`, { icon: \"cancel-outline\" }) +\n       `</div>`,\n       indent: function(content) {\n           return content.replace(/<\\/(p|li|ul|ol|h[1-6]|table|tr|td|th)>/ig, \"</$1>\\n\")\n                         .replace(/<(ul|ol)([^>]*)><li/ig, \"<$1$2>\\n<li\")\n                         .replace(/<br \\/>/ig, \"<br />\\n\")\n                         .replace(/\\n$/, \"\");\n       }\n   });\n\n   kendo.ui.editor.ViewHtmlCommand = ViewHtmlCommand;\n\n   Editor.EditorUtils.registerTool(\"viewHtml\", new Tool({ command: ViewHtmlCommand }));\n\n   })(window.kendo.jQuery);\n\n   (function($) {\n\n   var kendo = window.kendo,\n       extend = $.extend,\n       Editor = kendo.ui.editor,\n       Tool = Editor.Tool,\n       Command = Editor.Command,\n       EditorUtils = Editor.EditorUtils;\n\n   var FormatCommand = Command.extend({\n       init: function(options) {\n           options.formatter = options.formatter();\n           var finder = options.formatter.finder;\n           if (finder && EditorUtils.formatByName(\"immutable\", finder.format)) {\n               finder._initOptions({ immutables: options.immutables });\n               options.finder && options.finder._initOptions({ immutables: options.immutables });\n           }\n           Command.fn.init.call(this, options);\n       }\n   });\n\n   var FormatTool = Tool.extend({\n       init: function(options) {\n           Tool.fn.init.call(this, options);\n       },\n\n       command: function(commandArguments) {\n           var that = this;\n\n           return new FormatCommand(extend(commandArguments, {\n               formatter: that.options.formatter,\n               finder: that.options.finder\n           }));\n       },\n\n       update: function(ui, nodes) {\n           var isFormatted = this.options.finder.isFormatted(nodes),\n               toolbar = ui.closest(\".k-toolbar\").getKendoToolBar();\n\n           if (toolbar && ui.getKendoToggleButton()) {\n               toolbar.toggle(ui, isFormatted);\n           }\n       }\n   });\n\n   $.extend(Editor, {\n       FormatCommand: FormatCommand,\n       FormatTool: FormatTool\n   });\n\n   })(window.kendo.jQuery);\n\n   (function($) {\n\n   var kendo = window.kendo,\n       Class = kendo.Class,\n       Editor = kendo.ui.editor,\n       formats = kendo.ui.Editor.fn.options.formats,\n       Tool = Editor.Tool,\n       FormatTool = Editor.FormatTool,\n       dom = Editor.Dom,\n       RangeUtils = Editor.RangeUtils,\n       extend = $.extend,\n       registerTool = Editor.EditorUtils.registerTool,\n       registerFormat = Editor.EditorUtils.registerFormat,\n       MOUSEDOWN_NS = \"mousedown.kendoEditor\",\n       KEYDOWN_NS = \"keydown.kendoEditor\",\n       KMARKER = \"k-marker\";\n\n   var InlineFormatFinder = Class.extend({\n       init: function(format) {\n           this.format = format;\n       },\n\n       numberOfSiblings: function(referenceNode) {\n           var textNodesCount = 0,\n               elementNodesCount = 0,\n               markerCount = 0,\n               parentNode = referenceNode.parentNode,\n               node;\n\n           for (node = parentNode.firstChild; node; node = node.nextSibling) {\n               if (node != referenceNode) {\n                   if (node.className == KMARKER) {\n                       markerCount++;\n                   } else if (node.nodeType == 3) {\n                       textNodesCount++;\n                   } else {\n                       elementNodesCount++;\n                   }\n               }\n           }\n\n           if (markerCount > 1 && parentNode.firstChild.className == KMARKER && parentNode.lastChild.className == KMARKER) {\n               // full node selection\n               return 0;\n           } else {\n               return elementNodesCount + textNodesCount;\n           }\n       },\n\n       findSuitable: function(sourceNode, skip) {\n           if (!skip && this.numberOfSiblings(sourceNode) > 0) {\n               return null;\n           }\n\n           var node = sourceNode.parentNode;\n           var tags = this.format[0].tags;\n\n           while (!dom.ofType(node, tags)) {\n               if (this.numberOfSiblings(node) > 0) {\n                   return null;\n               }\n\n               node = node.parentNode;\n           }\n\n           return node;\n       },\n\n       findFormat: function(sourceNode) {\n           var format = this.format,\n               attrEquals = dom.attrEquals,\n               i, len, node, tags, attributes;\n\n           for (i = 0, len = format.length; i < len; i++) {\n               node = sourceNode;\n               tags = format[i].tags;\n               attributes = format[i].attr;\n\n               if (node && dom.ofType(node, tags) && attrEquals(node, attributes)) {\n                   return node;\n               }\n\n               while (node) {\n                   node = dom.parentOfType(node, tags);\n                   if (node && attrEquals(node, attributes)) {\n                       return node;\n                   }\n               }\n           }\n\n           return null;\n       },\n\n       isFormatted: function(nodes) {\n           var i, len;\n\n           for (i = 0, len = nodes.length; i < len; i++) {\n               if (this.findFormat(nodes[i])) {\n                   return true;\n               }\n           }\n           return false;\n       }\n   });\n\n   var InlineFormatter = Class.extend({\n       init: function(format, values) {\n           this.finder = new InlineFormatFinder(format);\n           this.attributes = extend({}, format[0].attr, values);\n           this.tag = format[0].tags[0];\n       },\n\n       wrap: function(node) {\n           return dom.wrap(node, dom.create(node.ownerDocument, this.tag, this.attributes));\n       },\n\n       activate: function(range, nodes) {\n           if (this.finder.isFormatted(nodes)) {\n               this.split(range);\n               this.remove(nodes);\n           } else {\n               this.apply(nodes);\n           }\n       },\n\n       toggle: function(range) {\n           var textNodes = this.immutables() ? RangeUtils.editableTextNodes : RangeUtils.textNodes;\n           var nodes = textNodes(range);\n\n           if (nodes.length > 0) {\n               this.activate(range, nodes);\n           }\n       },\n\n       immutables: function() {\n           return this.editor && this.editor.options.immutables;\n       },\n\n       apply: function(nodes) {\n           var formatNodes = [];\n           var i, l, node, formatNode;\n\n           if (nodes.length > 1) {\n               for (i = 0, l = nodes.length; i < l; i++) {\n                   node = nodes[i];\n                   formatNode = this.format(node, true);\n                   formatNodes.push(formatNode);\n\n               }\n           } else {\n               node = nodes[0];\n               this.format(node, false);\n           }\n\n           this.consolidate(formatNodes);\n       },\n\n       format: function(node, outerMostInline) {\n           var formatNode = this.finder.findSuitable(node);\n           var attributes = this.attributes;\n           var styleAttr = attributes ? attributes.style || {} : {};\n\n           if (formatNode) {\n               if (dom.is(formatNode, \"font\")) {\n                   if (styleAttr.color) {\n                       formatNode.removeAttribute(\"color\");\n                   }\n                   if (styleAttr.fontName) {\n                       formatNode.removeAttribute(\"face\");\n                   }\n                   if (styleAttr.fontSize) {\n                       formatNode.removeAttribute(\"size\");\n                   }\n               }\n               dom.attr(formatNode, attributes);\n           } else {\n               if (outerMostInline) {\n                   while (!dom.isBlock(node.parentNode) && node.parentNode.childNodes.length == 1 && node.parentNode.contentEditable !== 'true') {\n                       node = node.parentNode;\n                   }\n               }\n\n               formatNode = this.wrap(node);\n           }\n\n           return formatNode;\n       },\n\n       remove: function(nodes) {\n           var i, l, formatNode;\n\n           for (i = 0, l = nodes.length; i < l; i++) {\n               formatNode = this.finder.findFormat(nodes[i]);\n               if (formatNode) {\n                   if (this.attributes && this.attributes.style) {\n                       dom.unstyle(formatNode, this.attributes.style);\n                       if (!formatNode.style.cssText && !formatNode.attributes[\"class\"]) {\n                           dom.unwrap(formatNode);\n                       }\n                   } else {\n                       dom.unwrap(formatNode);\n                   }\n               }\n           }\n       },\n\n       split: function(range) {\n           var nodes = RangeUtils.textNodes(range);\n           var l = nodes.length;\n           var i, formatNode;\n\n           if (l > 0) {\n               for (i = 0; i < l; i++) {\n                   formatNode = this.finder.findFormat(nodes[i]);\n                   if (formatNode) {\n                       RangeUtils.split(range, formatNode, true);\n                   }\n               }\n           }\n       },\n\n       consolidate: function(nodes) {\n           var node, last;\n\n           while (nodes.length > 1) {\n               node = nodes.pop();\n               last = nodes[nodes.length - 1];\n\n               if (node.previousSibling && node.previousSibling.className == KMARKER) {\n                   last.appendChild(node.previousSibling);\n               }\n\n               if (node.tagName == last.tagName &&\n                   node.previousSibling == last &&\n                   node.style.cssText == last.style.cssText &&\n                   node.className === last.className) {\n\n                   while (node.firstChild) {\n                       last.appendChild(node.firstChild);\n                   }\n\n                   dom.remove(node);\n               }\n           }\n       }\n   });\n\n   var GreedyInlineFormatFinder = InlineFormatFinder.extend({\n       init: function(format, greedyProperty, fontAttr, defaultValue) {\n           this.format = format;\n           this.greedyProperty = greedyProperty;\n           this.fontAttr = fontAttr;\n           this.defaultValue = defaultValue;\n           InlineFormatFinder.fn.init.call(this, format);\n       },\n\n       getInlineCssValue: function(node) {\n           var attributes = node.attributes;\n           var trim = kendo.trim;\n           var i, l, attribute, name, attributeValue, css, pair, cssIndex, len;\n           var propertyAndValue, property, value;\n\n           if (!attributes) {\n               return;\n           }\n\n           for (i = 0, l = attributes.length; i < l; i++) {\n               attribute = attributes[i];\n               name = attribute.nodeName;\n               attributeValue = attribute.nodeValue;\n\n               if (attribute.specified && name == \"style\") {\n\n                   css = trim(attributeValue || node.style.cssText).split(\";\");\n\n                   for (cssIndex = 0, len = css.length; cssIndex < len; cssIndex++) {\n                       pair = css[cssIndex];\n                       if (pair.length) {\n                           propertyAndValue = pair.split(\":\");\n                           property = trim(propertyAndValue[0].toLowerCase());\n                           value = trim(propertyAndValue[1]);\n\n                           if (property != this.greedyProperty) {\n                               continue;\n                           }\n\n                           return property.indexOf(\"color\") >= 0 ? dom.toHex(value) : value;\n                       }\n                   }\n               }\n\n               if (this.fontAttr && attribute.specified && name == this.fontAttr) {\n                   property = attribute.nodeValue;\n                   value = attribute.nodeValue;\n\n                   return property.indexOf(\"color\") >= 0 ? dom.toHex(value) : value;\n               }\n           }\n       },\n\n       getFormatInner: function(node) {\n           var $node = $(dom.isDataNode(node) ? node.parentNode : node);\n           var parents = $node.parentsUntil(\"[contentEditable]\").addBack().toArray().reverse();\n           var i, len, value;\n\n           for (i = 0, len = parents.length; i < len; i++) {\n               value = this.greedyProperty == \"className\" ? parents[i].className : this.getInlineCssValue(parents[i]);\n\n               if (value) {\n                   return value;\n               }\n           }\n\n           return this.defaultValue || \"inherit\";\n       },\n\n       getFormat: function(nodes) {\n           var result = this.getFormatInner(nodes[0]), i, len;\n\n           for (i = 1, len = nodes.length; i < len; i++) {\n               if (result != this.getFormatInner(nodes[i])) {\n                   return \"\";\n               }\n           }\n\n           return result;\n       },\n\n       isFormatted: function(nodes) {\n           return this.getFormat(nodes) !== \"\";\n       }\n   });\n\n   var GreedyInlineFormatter = InlineFormatter.extend({\n       init: function(format, values, greedyProperty) {\n           InlineFormatter.fn.init.call(this, format, values);\n\n           this.values = values;\n           this.finder = new GreedyInlineFormatFinder(format, greedyProperty);\n\n           if (greedyProperty) {\n               this.greedyProperty = kendo.toCamelCase(greedyProperty);\n           }\n\n       },\n\n       activate: function(range, nodes) {\n           var greedyProperty = this.greedyProperty;\n           var action = \"apply\";\n\n           this.split(range);\n\n           if (greedyProperty && this.values.style[greedyProperty] == \"inherit\") {\n               action = \"remove\";\n           }\n\n           this[action](nodes);\n       }\n   });\n\n   var InlineFormatTool = FormatTool.extend({\n       init: function(options) {\n           FormatTool.fn.init.call(this, extend(options, {\n               finder: new InlineFormatFinder(options.format),\n               formatter: function() { return new InlineFormatter(options.format); }\n           }));\n       }\n   });\n\n   var DelayedExecutionTool = Tool.extend({\n       update: function(ui, nodes) {\n           var list = ui.data(this.type);\n\n           list.close();\n           list.value(this.finder.getFormat(nodes));\n       }\n   });\n\n   var FontTool = DelayedExecutionTool.extend({\n       init: function(options) {\n           Tool.fn.init.call(this, options);\n\n           // IE has single selection hence we are using select box instead of combobox\n           this.type = \"kendoComboBox\";\n           this.format = [{ tags: [\"span\", \"font\"] }];\n           this.finder = new GreedyInlineFormatFinder(this.format, options.cssAttr, options.fontAttr);\n       },\n\n       command: function(commandArguments) {\n           var options = this.options,\n               format = this.format,\n               style = {};\n\n           return new Editor.FormatCommand(extend(commandArguments, {\n               formatter: function() {\n                   style[options.domAttr] = commandArguments.value;\n\n                   return new GreedyInlineFormatter(format, { style: style }, options.cssAttr);\n               }\n           }));\n       },\n\n       initialize: function(ui, editor) {\n           var options = this.options,\n               toolName = options.name,\n               dataSource,\n               range,\n               widget = ui.data(\"kendoComboBox\"),\n               defaultValue = [];\n\n           if (!widget) {\n               return;\n           }\n\n           if (options.defaultValue) {\n              defaultValue = [{\n                   text: editor.options.messages[options.defaultValue[0].text],\n                   value: options.defaultValue[0].value\n              }];\n           }\n\n           dataSource = defaultValue.concat(options.items ? options.items : (editor.options[toolName] || [] ));\n           widget.setDataSource(dataSource);\n\n           widget.bind(\"change\", (e) => {\n               editor._range = range;\n               if (e.sender.value() !== \"\") {\n                   Tool.exec(editor, toolName, e.sender.value());\n               }\n           });\n\n           widget.bind(\"close\", () => {\n               setTimeout(function() {\n                   editor._deleteSavedRange();\n               },0);\n           });\n\n           widget.value(\"inherit\");\n\n           widget.wrapper.on(MOUSEDOWN_NS, \".k-select,.k-input-button,.k-input\", function() {\n               var newRange = editor.getRange();\n               range = editor._containsRange(newRange) ? newRange : range;\n           })\n           .on(KEYDOWN_NS, function(e) {\n               if (e.keyCode === kendo.keys.ENTER) {\n                   editor._deleteSavedRange();\n                   e.preventDefault();\n               }\n           });\n       }\n\n   });\n\n   var ColorTool = Tool.extend({\n       init: function(options) {\n           Tool.fn.init.call(this, options);\n\n           this.format = [{ tags: [\"span\",\"font\"] }];\n           this.finder = new GreedyInlineFormatFinder(this.format, options.cssAttr);\n       },\n\n       options: {\n           palette: \"websafe\",\n           columns: 18\n       },\n\n       update: function() {\n           this._widget.close();\n       },\n\n       command: function(commandArguments) {\n           var options = this.options,\n               format = this.format,\n               style = {};\n\n           return new Editor.FormatCommand(extend(commandArguments, {\n               formatter: function() {\n                   style[options.domAttr] = commandArguments.value;\n\n                   return new GreedyInlineFormatter(format, { style: style }, options.cssAttr);\n               }\n           }));\n       },\n\n       initialize: function(ui, editor) {\n           var that = this,\n               toolName = that.options.name,\n               component = this._widget = ui.getKendoColorPicker();\n\n           if (!component) {\n               return;\n           }\n\n           component.bind(\"change\", () => {\n               var color = component.value();\n\n               if (color) {\n                   Tool.exec(editor, toolName, color);\n               }\n\n               delete that.storedRange;\n               delete that._inputFocused;\n\n               editor.focus();\n           });\n\n           component.bind(\"open\", () => {\n               that.storedRange = editor.getRange();\n\n               component._popup.element.on(MOUSEDOWN_NS, function(e) {\n                   if (!$(e.target).is(\"input.k-color-value\")) {\n                       e.preventDefault();\n                   }\n               });\n\n               if (!component._popup.element.is(\"[unselectable='on']\")) {\n                   component._popup.element\n                       .attr({ unselectable: \"on\" })\n                       .find(\"*:not(input)\").attr(\"unselectable\", \"on\")\n                       .end().find(\"input\").on(\"focus\", function() {\n                           that._inputFocused = true;\n                       });\n               }\n\n               component._popup.one(\"activate\", () => {\n                   component._popup.element.find(\".k-colorpalette\").trigger(\"focus\");\n               });\n           });\n\n           component.bind(\"close\", (e) => {\n               component._popup.element.off(MOUSEDOWN_NS);\n           });\n\n           component.unbind(\"activate\").bind(\"activate\", (e) => {\n               if (!component._value || component._value.toCssRgba() === \"rgba(255, 255, 255, 0)\") {\n                   return;\n               }\n\n               component.trigger(\"change\");\n           });\n\n           component.wrapper\n               .attr({ unselectable: \"on\" })\n               .find(\"*:not(input)\").attr(\"unselectable\", \"on\");\n\n           component.value(\"transparent\");\n       }\n   });\n\n   extend(Editor, {\n       InlineFormatFinder: InlineFormatFinder,\n       InlineFormatter: InlineFormatter,\n       DelayedExecutionTool: DelayedExecutionTool,\n       GreedyInlineFormatFinder: GreedyInlineFormatFinder,\n       GreedyInlineFormatter: GreedyInlineFormatter,\n       InlineFormatTool: InlineFormatTool,\n       FontTool: FontTool,\n       ColorTool: ColorTool\n   });\n\n   registerFormat(\"bold\", [ { tags: [\"strong\", \"b\"] }, { tags: [\"span\"], attr: { style: { fontWeight: \"bold\" } } } ]);\n   registerTool(\"bold\", new InlineFormatTool({\n       key: \"B\",\n       ctrl: true,\n       format: formats.bold,\n       ui: {\n           togglable: true\n       }\n   }));\n\n   registerFormat(\"italic\", [ { tags: [\"em\", \"i\"] }, { tags: [\"span\"], attr: { style: { fontStyle: \"italic\" } } } ]);\n   registerTool(\"italic\", new InlineFormatTool({\n       key: \"I\",\n       ctrl: true,\n       format: formats.italic,\n       ui: {\n           togglable: true\n       }\n   }));\n\n   registerFormat(\"underline\", [ { tags: [\"span\"], attr: { style: { textDecoration: \"underline\" } } }, { tags: [\"u\"] } ]);\n   registerTool(\"underline\", new InlineFormatTool({\n       key: \"U\",\n       ctrl: true,\n       format: formats.underline,\n       ui: {\n           togglable: true\n       }\n   }));\n\n   registerFormat(\"strikethrough\", [ { tags: [\"del\", \"strike\"] }, { tags: [\"span\"], attr: { style: { textDecoration: \"line-through\" } } } ]);\n   registerTool(\"strikethrough\", new InlineFormatTool({\n       format: formats.strikethrough,\n       ui: {\n           togglable: true\n       }\n   }));\n\n   registerFormat(\"superscript\", [ { tags: [\"sup\"] } ]);\n   registerTool(\"superscript\", new InlineFormatTool({\n       format: formats.superscript,\n       ui: {\n           togglable: true\n       }\n   }));\n\n   registerFormat(\"subscript\", [ { tags: [\"sub\"] } ]);\n   registerTool(\"subscript\", new InlineFormatTool({\n       format: formats.subscript,\n       ui: {\n           togglable: true\n       }\n   }));\n\n   registerTool(\"foreColor\", new ColorTool({\n       cssAttr: \"color\",\n       fontAttr: \"color\",\n       domAttr: \"color\",\n       name: \"foreColor\",\n       ui: {\n           type: \"component\",\n           overflow: \"never\",\n           component: \"ColorPicker\",\n           componentOptions: {\n               views: [\"palette\"],\n               toolIcon: \"foreground-color\",\n               palette: \"websafe\",\n               columns: 18,\n               preview: false,\n               input: false,\n               buttons: false,\n               commandOn: \"change\",\n               closeOnSelect: true\n           }\n       }\n   }));\n\n   registerTool(\"backColor\", new ColorTool({\n       cssAttr: \"background-color\",\n       domAttr: \"backgroundColor\",\n       name: \"backColor\",\n       ui: {\n           type: \"component\",\n           overflow: \"never\",\n           component: \"ColorPicker\",\n           componentOptions: {\n               views: [\"palette\"],\n               toolIcon: \"droplet\",\n               palette: \"websafe\",\n               columns: 18,\n               preview: false,\n               input: false,\n               buttons: false,\n               commandOn: \"change\",\n               closeOnSelect: true\n           }\n       }\n   }));\n\n   registerTool(\"fontName\", new FontTool({\n       cssAttr: \"font-family\",\n       fontAttr: \"face\",\n       domAttr: \"fontFamily\",\n       name: \"fontName\",\n       defaultValue: [{ text: \"fontNameInherit\", value: \"inherit\" }],\n       ui: {\n           type: \"component\",\n           component: \"ComboBox\",\n           componentOptions: {\n               dataValueField: \"value\",\n               dataTextField: \"text\",\n               valuePrimitive: true\n           },\n           overflow: \"never\"\n       }\n   }));\n\n   registerTool(\"fontSize\", new FontTool({\n       cssAttr: \"font-size\",\n       fontAttr: \"size\",\n       domAttr: \"fontSize\",\n       name: \"fontSize\",\n       defaultValue: [{ text: \"fontSizeInherit\", value: \"inherit\" }],\n       ui: {\n           type: \"component\",\n           component: \"ComboBox\",\n           componentOptions: {\n               dataValueField: \"value\",\n               dataTextField: \"text\",\n               valuePrimitive: true\n           },\n           overflow: \"never\"\n       }\n   }));\n\n   })(window.kendo.jQuery);\n\n   (function($, undefined$1) {\n\n   var kendo = window.kendo,\n       encode = kendo.htmlEncode,\n       Class = kendo.Class,\n       extend = $.extend,\n       Editor = kendo.ui.editor,\n       dom = Editor.Dom,\n       RangeUtils = Editor.RangeUtils,\n       Command = Editor.Command,\n       Tool = Editor.Tool,\n       InlineFormatter = Editor.InlineFormatter,\n       InlineFormatFinder = Editor.InlineFormatFinder,\n       textNodes = RangeUtils.textNodes,\n       editableTextNodes = RangeUtils.editableTextNodes,\n       registerTool = Editor.EditorUtils.registerTool,\n       keys = kendo.keys;\n\n   var HTTP_PROTOCOL = \"http://\";\n   var protocolRegExp = /^\\w*:\\/\\//;\n   var endLinkCharsRegExp = /[\\w\\/\\$\\-_\\*\\?]/i;\n\n   var LinkFormatFinder = Class.extend({\n       findSuitable: function(sourceNode) {\n           return dom.parentOfType(sourceNode, [\"a\"]);\n       }\n   });\n\n   var LinkFormatter = Class.extend({\n       init: function() {\n           this.finder = new LinkFormatFinder();\n       },\n\n       apply: function(range, attributes) {\n           var nodes = this.immutables ? editableTextNodes(range) : textNodes(range);\n           var markers, doc, formatter, a, parent;\n\n           if (attributes.innerText) {\n               doc = RangeUtils.documentFromRange(range);\n               markers = RangeUtils.getMarkers(range);\n\n               range.deleteContents();\n               a = dom.create(doc, \"a\", attributes);\n               range.insertNode(a);\n\n               parent = a.parentNode;\n               if (dom.name(parent) == \"a\") {\n                   dom.insertAfter(a, parent);\n               }\n\n               if (dom.emptyNode(parent)) {\n                   dom.remove(parent);\n               }\n\n               // move range and markers after inserted link\n               var ref = a;\n               for (var i = 0; i < markers.length; i++) {\n                   dom.insertAfter(markers[i], ref);\n                   ref = markers[i];\n               }\n\n               if (markers.length) {\n                   dom.insertBefore(doc.createTextNode(\"\\ufeff\"), markers[1] || markers[0]);\n                   dom.insertAfter(doc.createTextNode(\"\\ufeff\"), markers[1] || markers[0]);\n                   range.setStartBefore(markers[0]);\n                   range.setEndAfter(markers[markers.length - 1]);\n               }\n           } else {\n               formatter = new InlineFormatter([{ tags: [\"a\"] }], attributes);\n               formatter.finder = this.finder;\n               formatter.apply(nodes);\n           }\n       }\n   });\n\n   var UnlinkCommand = Command.extend({\n       init: function(options) {\n           var that = this;\n           options.formatter = /** @ignore */ {\n               toggle: function(range) {\n                   var nodes = that.immutables() ? editableTextNodes(range) : textNodes(range);\n                   new InlineFormatter([{ tags: [\"a\"] }]).remove(nodes);\n               }\n           };\n           this.options = options;\n           Command.fn.init.call(this, options);\n       }\n   });\n\n   var LinkCommand = Command.extend({\n       init: function(options) {\n           var that;\n           this.options = options;\n           Command.fn.init.call(this, options);\n           this.formatter = new LinkFormatter();\n\n           if (!options.url) {\n               this.attributes = null;\n               this.async = true;\n           } else {\n               this.exec = function() {\n                   this.formatter.immutables = that && that.immutables();\n                   this.formatter.apply(options.range, {\n                       href: options.url,\n                       innerText: options.text || options.url,\n                       target: options.target\n                   });\n               };\n           }\n       },\n\n       exec: function() {\n           var messages = this.editor.options.messages;\n           this._initialText = \"\";\n           this._range = this.lockRange(true);\n           this.formatter.immutables = this.immutables();\n\n           var nodes = textNodes(this._range);\n           var a = nodes.length ? this.formatter.finder.findSuitable(nodes[0]) : null;\n           var img = nodes.length && dom.name(nodes[0]) == \"img\";\n\n           var dialog = this.createDialog(\"<div/>\", {\n               title: messages.createLink,\n               minWidth: 340,\n               close: this._close.bind(this),\n               visible: false\n           }).data(\"kendoWindow\");\n\n           this._form = this._createForm(dialog);\n\n           if (a) {\n               this._range.selectNodeContents(a);\n               nodes = textNodes(this._range);\n           }\n\n           this._initialText = this.linkText(nodes);\n\n           dialog.wrapper\n               .find(\".k-dialog-insert\").on(\"click\", this._apply.bind(this)).end()\n               .find(\".k-dialog-close\").on(\"click\", this._close.bind(this)).end()\n               .find(\".k-form-field input\").on(\"keydown\", this._keydown.bind(this)).end()\n               .find(\"#k-editor-link-url\").val(this.linkUrl(a)).end()\n               .find(\"#k-editor-link-text\").val(this._initialText).end()\n               .find(\"#k-editor-link-title\").val(a ? a.title : \"\").end()\n               .find(\"#k-editor-link-target\").prop(\"checked\", a ? a.target == \"_blank\" : false).end()\n               .find(\".k-editor-link-text-row\").toggle(!img);\n\n           this._dialog = dialog.center().open();\n\n           $(\"#k-editor-link-url\", dialog.element).trigger(\"focus\").select();\n       },\n\n       _createForm: function(dialog) {\n           var that = this;\n           var formElement = $(\"<div/>\").appendTo(dialog.element);\n           var messages = that.editor.options.messages;\n           var form = formElement.kendoForm({\n               renderButtons: false,\n               items: [\n                   {\n                       field: \"k-editor-link-url\",\n                       label: encode(messages.linkWebAddress),\n                       title: encode(messages.linkWebAddress),\n                       editor: \"TextBox\"\n                   },\n                   {\n                       field: \"k-editor-link-text\",\n                       label: encode(messages.linkText),\n                       title: encode(messages.linkText),\n                       editor: \"TextBox\"\n                   },\n                   {\n                       field: \"k-editor-link-title\",\n                       label: encode(messages.linkToolTip),\n                       title: encode(messages.linkToolTip),\n                       editor: \"TextBox\"\n                   },\n                   {\n                       field: \"k-editor-link-target\",\n                       editorOptions: {\n                           label: encode(messages.linkOpenInNewWindow)\n                       },\n                       label: \"\",\n                       title: encode(messages.linkOpenInNewWindow),\n                       editor: \"CheckBox\"\n                   }\n               ]\n           }).data(\"kendoForm\");\n\n           formElement.find(\"#k-editor-link-text\").parents(\".k-form-field\").addClass(\"k-editor-link-text-row\");\n\n           dialog.element.after($(that._actionButtonsTemplate({ messages, insertButtonIcon: \"link\", cancelButtonIcon: \"cancel-outline\" })));\n\n           return form;\n       },\n\n       _keydown: function(e) {\n           var keys = kendo.keys;\n\n           if (e.keyCode == keys.ENTER) {\n               this._apply(e);\n           } else if (e.keyCode == keys.ESC) {\n               this._close(e);\n           }\n       },\n\n       _apply: function(e) {\n           var element = this._dialog.element;\n           var href = $(\"#k-editor-link-url\", element).val();\n           var title, text, target;\n           var textInput = $(\"#k-editor-link-text\", element);\n\n           if (href && href != HTTP_PROTOCOL) {\n\n               if (href.indexOf(\"@\") > 0 && !/^(\\w+:)|(\\/\\/)/i.test(href)) {\n                   href = \"mailto:\" + href;\n               }\n\n               this.attributes = { href: href };\n\n               title = $(\"#k-editor-link-title\", element).val();\n               if (title) {\n                   this.attributes.title = title;\n               }\n\n               if (textInput.is(\":visible\")) {\n                   text = kendo.trim(textInput.val());\n                   if (!text && !this._initialText) {\n                       this.attributes.innerText = href;\n                   } else if (text && (text !== this._initialText)) {\n                       this.attributes.innerText = dom.stripBom(text);\n                   }\n               }\n\n               target = $(\"#k-editor-link-target\", element).is(\":checked\");\n               this.attributes.target = target ? \"_blank\" : null;\n\n               this.formatter.apply(this._range, this.attributes);\n           }\n\n           this._close(e);\n\n           if (this.change) {\n               this.change();\n           }\n       },\n\n       _close: function(e) {\n           e.preventDefault();\n           this._form.destroy();\n           this._dialog.destroy();\n\n           dom.windowFromDocument(RangeUtils.documentFromRange(this._range)).focus();\n\n           this.releaseRange(this._range);\n       },\n\n       linkUrl: function(anchor) {\n           if (anchor) {\n               // IE < 8 returns absolute url if getAttribute is not used\n               return anchor.getAttribute(\"href\", 2);\n           }\n\n           return HTTP_PROTOCOL;\n       },\n\n       linkText: function(nodes) {\n           var text = \"\";\n           var i;\n\n           for (i = 0; i < nodes.length; i++) {\n               text += nodes[i].nodeValue;\n           }\n\n           return dom.stripBom(text || \"\");\n       },\n\n       redo: function() {\n           var range = this.lockRange(true);\n\n           this.formatter.apply(range, this.attributes);\n           this.releaseRange(range);\n       }\n\n   });\n\n   var AutoLinkCommand = Command.extend({\n       init: function(options) {\n           Command.fn.init.call(this, options);\n\n           this.formatter = new LinkFormatter();\n       },\n\n       exec: function() {\n           var detectedLink = this.detectLink();\n           if (!detectedLink) {\n               return;\n           }\n\n           var range = this.getRange();\n           var linkMarker = new kendo.ui.editor.Marker();\n           var linkRange = range.cloneRange();\n\n           linkRange.setStart(detectedLink.start.node, detectedLink.start.offset);\n           linkRange.setEnd(detectedLink.end.node, detectedLink.end.offset);\n\n           range = this.lockRange();\n           linkMarker.add(linkRange);\n\n           this.formatter.apply(linkRange, {\n               href: this._ensureWebProtocol(detectedLink.text)\n           });\n\n           linkMarker.remove(linkRange);\n           this.releaseRange(range);\n       },\n\n       detectLink: function() {\n           var range = this.getRange();\n           var startNode = range.startContainer;\n           var startOffset = range.startOffset;\n           var prev = startNode.previousSibling;\n           if (!prev && ((dom.isBom(startNode) && !startNode.nextSibling) || (!startOffset && dom.isDataNode(startNode)))) {\n               startNode = startNode.parentNode;\n               startOffset = 0;\n           }\n           var traverser = new LeftDomTextTraverser({\n               node: startNode,\n               offset: startOffset,\n               cancelAtNode: function(node) { return node && dom.name(node) === \"a\"; }\n           });\n\n           var detection = new DomTextLinkDetection(traverser);\n           return detection.detectLink();\n       },\n\n       changesContent: function() {\n           return !!this.detectLink();\n       },\n\n       _ensureWebProtocol: function(linkText) {\n           var hasProtocol = this._hasProtocolPrefix(linkText);\n           return hasProtocol ? linkText : this._prefixWithWebProtocol(linkText);\n       },\n\n       _hasProtocolPrefix: function(linkText) {\n           return protocolRegExp.test(linkText);\n       },\n\n       _prefixWithWebProtocol: function(linkText) {\n           return HTTP_PROTOCOL + linkText;\n       }\n   });\n\n   var UnlinkTool = Tool.extend({\n       init: function(options) {\n           this.options = options;\n           this.finder = new InlineFormatFinder([{ tags: [\"a\"] }]);\n\n           Tool.fn.init.call(this, $.extend(options, { command: UnlinkCommand }));\n       },\n\n       update: function(ui, nodes) {\n           var isLink = this.finder.isFormatted(nodes),\n               toolbar = ui.closest(\".k-toolbar\").data(\"kendoToolBar\");\n\n           if (isLink) {\n               toolbar.enable(ui, true);\n           } else {\n               toolbar.enable(ui, false);\n           }\n       }\n   });\n\n   var DomTextLinkDetection = Class.extend({\n       init: function(traverser) {\n           this.traverser = traverser;\n           this.start = DomPos();\n           this.end = DomPos();\n           this.text = \"\";\n       },\n\n       detectLink: function() {\n           var node = this.traverser.node;\n           var offset = this.traverser.offset;\n           if (dom.isDataNode(node)) {\n               var text = node.data.substring(0, offset);\n               if (/\\s{2}$/.test(dom.stripBom(text))) {\n                   return;\n               }\n           } else if (offset === 0) {//heuristic for new line\n               var p = dom.closestEditableOfType(node, dom.blockElements);\n               if (p && p.previousSibling) {\n                   this.traverser.init({\n                       node: p.previousSibling\n                   });\n               }\n           }\n\n           this.traverser.traverse(this._detectEnd.bind(this));\n           if (!this.end.blank()) {\n               this.traverser = this.traverser.clone(this.end);\n               this.traverser.traverse(this._detectStart.bind(this));\n\n               if (!this._isLinkDetected()) {\n                   var puntuationOptions = this.traverser.extendOptions(this.start);\n                   var puntuationTraverser = new RightDomTextTraverser(puntuationOptions);\n                   puntuationTraverser.traverse(this._skipStartPuntuation.bind(this));\n                   if (!this._isLinkDetected()) {\n                       this.start = DomPos();\n                   }\n               }\n           }\n\n           if (this.start.blank()) {\n               return null;\n           } else {\n               return {\n                   start: this.start,\n                   end: this.end,\n                   text: this.text\n               };\n           }\n       },\n\n       _isLinkDetected: function() {\n           return protocolRegExp.test(this.text) || /^w{3}\\./i.test(this.text);\n       },\n\n       _detectEnd: function(text, node) {\n           var i = lastIndexOfRegExp(text, endLinkCharsRegExp);\n           if (i > -1) {\n               this.end.node = node;\n               this.end.offset = i + 1;\n\n               return false;\n           }\n       },\n\n       _detectStart: function(text, node) {\n           var i = lastIndexOfRegExp(text, /\\s/);\n           var ii = i + 1;\n           this.text = text.substring(ii) + this.text;\n\n           this.start.node = node;\n           this.start.offset = ii;\n\n           if (i > -1) {\n               return false;\n           }\n       },\n\n       _skipStartPuntuation: function(text, node, offset) {\n           var i = indexOfRegExp(text, /\\w/);\n           var ii = i;\n           if (i === -1) {\n               ii = text.length;\n           }\n\n           this.text = this.text.substring(ii);\n           this.start.node = node;\n           this.start.offset = ii + (offset | 0);\n\n           if (i > -1) {\n               return false;\n           }\n       }\n   });\n\n   function lastIndexOfRegExp(str, search) {\n       var i = str.length;\n       while (i-- && !search.test(str[i])) {}\n\n       return i;\n   }\n   function indexOfRegExp(str, search) {\n       var r = search.exec(str);\n\n       return r ? r.index : -1;\n   }\n\n   var DomPos = function() {\n       return {\n           node: null,\n           offset: null,\n           blank: function() {\n               return this.node === null && this.offset === null;\n           }\n       };\n   };\n\n   var DomTextTraverser = Class.extend({\n       init: function(options) {\n           this.node = options.node;\n           this.offset = options.offset === undefined$1 ? (dom.isDataNode(this.node) && this.node.length) || 0 : options.offset;\n           this.cancelAtNode = options.cancelAtNode || this.cancelAtNode || $.noop;\n       },\n\n       traverse: function(callback) {\n           if (!callback) {\n               return;\n           }\n           this.cancel = false;\n           this._traverse(callback, this.node, this.offset);\n       },\n\n       _traverse: function(callback, node, offset) {\n           if (!node || this.cancel) {\n               return;\n           }\n           if (node.nodeType === 3) {\n               var text = node.data;\n               if (offset !== undefined$1) {\n                   text = this.subText(text, offset);\n               }\n               this.cancel = (callback(text, node, offset) === false);\n           }\n           else {\n               var edgeNode = this.edgeNode(node);\n               this.cancel = this.cancel || this.cancelAtNode(edgeNode);\n               return this._traverse(callback, edgeNode);\n           }\n\n           var next = this.next(node);\n           if (!next) {\n               var parent = node.parentNode;\n               while (!next && dom.isInline(parent)) {\n                   next = this.next(parent);\n                   parent = parent.parentNode;\n               }\n           }\n           this.cancel = this.cancel || this.cancelAtNode(next);\n           this._traverse(callback, next);\n       },\n\n       extendOptions: function(o) {\n           return $.extend({\n               node: this.node,\n               offset: this.offset,\n               cancelAtNode: this.cancelAtNode\n           }, o || {});\n       },\n\n       edgeNode: function(node) {},\n       next: function(node) {},\n       subText: function(text, offset) {}\n\n   });\n\n   var LeftDomTextTraverser = DomTextTraverser.extend({\n       subText: function(text, splitIndex) {\n           return text.substring(0, splitIndex);\n       },\n\n       next: function(node) {\n           return node.previousSibling;\n       },\n\n       edgeNode: function(node) {\n           return node.lastChild;\n       },\n\n       clone: function(options) {\n           var o = this.extendOptions(options);\n           return new LeftDomTextTraverser(o);\n       }\n   });\n\n   var RightDomTextTraverser = DomTextTraverser.extend({\n       subText: function(text, splitIndex) {\n           return text.substring(splitIndex);\n       },\n\n       next: function(node) {\n           return node.nextSibling;\n       },\n\n       edgeNode: function(node) {\n           return node.firstChild;\n       },\n\n       clone: function(options) {\n           var o = this.extendOptions(options);\n           return new RightDomTextTraverser(o);\n       }\n   });\n\n   extend(kendo.ui.editor, {\n       LinkFormatFinder: LinkFormatFinder,\n       LinkFormatter: LinkFormatter,\n       UnlinkCommand: UnlinkCommand,\n       LinkCommand: LinkCommand,\n       AutoLinkCommand: AutoLinkCommand,\n       UnlinkTool: UnlinkTool,\n       DomTextLinkDetection: DomTextLinkDetection,\n       LeftDomTextTraverser: LeftDomTextTraverser,\n       RightDomTextTraverser: RightDomTextTraverser\n   });\n\n   registerTool(\"createLink\", new Tool({ key: \"K\", ctrl: true, command: LinkCommand }));\n   registerTool(\"unlink\", new UnlinkTool({ key: \"K\", ctrl: true, shift: true, ui: { enable: false } }));\n   registerTool(\"autoLink\", new Tool({ key: [keys.ENTER, keys.SPACEBAR], keyPressCommand: true, command: AutoLinkCommand }));\n\n   })(window.kendo.jQuery);\n\n   (function($) {\n\n   var kendo = window.kendo,\n       Class = kendo.Class,\n       extend = $.extend,\n       Editor = kendo.ui.editor,\n       formats = kendo.ui.Editor.fn.options.formats,\n       dom = Editor.Dom,\n       FormatTool = Editor.FormatTool,\n       EditorUtils = Editor.EditorUtils,\n       registerTool = EditorUtils.registerTool,\n       registerFormat = EditorUtils.registerFormat,\n       RangeUtils = Editor.RangeUtils;\n\n   var BlockFormatFinder = Class.extend({\n       init: function(format) {\n           this.format = format;\n       },\n\n       contains: function(node, children) {\n           var i, len, child;\n\n           for (i = 0, len = children.length; i < len; i++) {\n               child = children[i];\n               if (!child || !dom.isAncestorOrSelf(node, child)) {\n                   return false;\n               }\n           }\n\n           return true;\n       },\n\n       findSuitable: function(nodes) {\n           var format = this.format,\n               suitable = [],\n               i, len, candidate;\n\n           for (i = 0, len = nodes.length; i < len; i++) {\n               for (var f = format.length - 1; f >= 0; f--) {\n                   candidate = dom.ofType(nodes[i], format[f].tags) ? nodes[i] : dom.closestEditableOfType(nodes[i], format[f].tags);\n                   if (candidate) {\n                       break;\n                   }\n               }\n\n               if (!candidate || candidate.contentEditable === 'true') {\n                   return [];\n               }\n\n               if ($.inArray(candidate, suitable) < 0) {\n                   suitable.push(candidate);\n               }\n           }\n\n           this._resolveListsItems(suitable);\n\n           for (i = 0, len = suitable.length; i < len; i++) {\n               if (this.contains(suitable[i], suitable)) {\n                   return [suitable[i]];\n               }\n           }\n\n           return suitable;\n       },\n       _resolveListsItems: function(nodes) {\n           var i, node, wrapper;\n           for (i = 0; i < nodes.length; i++) {\n               node = nodes[i];\n               wrapper = dom.is(node, \"li\") ? node : dom.wrapper(node);\n               wrapper = wrapper && dom.list(wrapper) ? wrapper.children[0] : wrapper;\n               if (dom.is(wrapper, \"li\")) {\n                   nodes[i] = wrapper;\n               }\n           }\n       },\n\n       findFormat: function(sourceNode, until) {\n           var format = this.format,\n               i, len, node, tags, attributes;\n           var editableParent = dom.editableParent(sourceNode);\n           var immutables = this.options && this.options.immutables;\n           var ImmutablesNS = Editor.Immutables;\n\n           for (i = 0, len = format.length; i < len; i++) {\n               node = sourceNode;\n               tags = format[i].tags;\n               attributes = format[i].attr;\n\n               if (immutables && tags && tags[0] == \"immutable\") {\n                   var immutable = ImmutablesNS.immutableParent(node);\n                   if (immutable && dom.attrEquals(immutable, attributes)) {\n                       return node;\n                   }\n               }\n\n               while (node && dom.isAncestorOf(editableParent, node)) {\n                   if (dom.ofType(node, tags) && dom.attrEquals(node, attributes)) {\n                       return node;\n                   }\n\n                   if (until && until(node)) {\n                       break;\n                   }\n\n                   node = node.parentNode;\n               }\n           }\n           return null;\n       },\n\n       getFormat: function(nodes) {\n           var that = this,\n               findFormat = function(node) {\n                       return that.findFormat(dom.isDataNode(node) ? node.parentNode : node);\n                   },\n               result = findFormat(nodes[0]),\n               i, len;\n\n           if (!result) {\n               return \"\";\n           }\n\n           for (i = 1, len = nodes.length; i < len; i++) {\n               if (result != findFormat(nodes[i])) {\n                   return \"\";\n               }\n           }\n\n           return result.nodeName.toLowerCase();\n       },\n\n       isFormatted: function(nodes, until) {\n           for (var i = 0, len = nodes.length; i < len; i++) {\n               if (!this.findFormat(nodes[i], until)) {\n                   return false;\n               }\n           }\n\n           return true;\n       }\n   });\n\n   var BlockFormatter = Class.extend({\n       init: function(format, values) {\n           this.format = format;\n           this.values = values;\n           this.finder = new BlockFormatFinder(format);\n       },\n\n       wrap: function(tag, attributes, nodes) {\n\n           var commonAncestor = nodes.length == 1 ? dom.blockParentOrBody(nodes[0]) : dom.commonAncestor.apply(null, nodes);\n\n           if (dom.isInline(commonAncestor)) {\n               commonAncestor = dom.blockParentOrBody(commonAncestor);\n           }\n\n           var ancestors = dom.significantChildNodes(commonAncestor),\n               position = dom.findNodeIndex(ancestors[0]),\n               wrapper = dom.create(commonAncestor.ownerDocument, tag, attributes),\n               i, ancestor;\n\n           for (i = 0; i < ancestors.length; i++) {\n               ancestor = ancestors[i];\n               if (dom.isBlock(ancestor)) {\n                   dom.attr(ancestor, attributes);\n\n                   if (wrapper.childNodes.length) {\n                       dom.insertBefore(wrapper, ancestor);\n                       wrapper = wrapper.cloneNode(false);\n                   }\n\n                   position = dom.findNodeIndex(ancestor) + 1;\n\n                   continue;\n               }\n\n               wrapper.appendChild(ancestor);\n           }\n\n           if (wrapper.firstChild) {\n               dom.insertAt(commonAncestor, wrapper, position);\n           }\n       },\n\n       apply: function(nodes) {\n           var format, values = this.values;\n\n           function attributes(format) {\n               return extend({}, format && format.attr, values);\n           }\n\n           this._handleImmutables(nodes, true);\n\n           var images = dom.filter(\"img\", nodes);\n           var imageFormat = EditorUtils.formatByName(\"img\", this.format);\n           var imageAttributes = attributes(imageFormat);\n           $.each(images, function() {\n               dom.attr(this, imageAttributes);\n           });\n\n           // only images were selected, no need to wrap\n           if (images.length == nodes.length) {\n               return;\n           }\n\n           var nonImages = dom.filter(\"img\", nodes, true);\n           var formatNodes = this.finder.findSuitable(nonImages);\n\n           if (formatNodes.length) {\n               for (var i = 0, len = formatNodes.length; i < len; i++) {\n                   format = EditorUtils.formatByName(dom.name(formatNodes[i]), this.format);\n                   dom.attr(formatNodes[i], attributes(format));\n               }\n           } else {\n               format = this.format[0];\n               this.wrap(format.tags[0], attributes(format), nonImages);\n           }\n       },\n\n       _handleImmutables: function(nodes, applyFormatting) {\n           if (!this.immutables()) {\n               return;\n           }\n           var immutableFormat = EditorUtils.formatByName(\"immutable\", this.format);\n           if (!immutableFormat) {\n               return;\n           }\n           var ImmutablesNS = Editor.Immutables;\n           var l = nodes.length - 1;\n           for (var i = l; i >= 0; i--) {\n               var immutableParent = ImmutablesNS.immutableParent(nodes[i]);\n               if (!immutableParent) {\n                   continue;\n               }\n               if (immutableParent !== nodes[i + 1]) {\n                   if (applyFormatting) {\n                       dom.attr(immutableParent, immutableFormat.attr);\n                   } else {\n                       dom.unstyle(immutableParent, immutableFormat.attr.style);\n                   }\n               }\n               nodes.splice(i, 1);\n           }\n       },\n\n       immutables: function() {\n           return this.editor && this.editor.options.immutables;\n       },\n\n       remove: function(nodes) {\n           var i, l, formatNode, namedFormat, name;\n\n           this._handleImmutables(nodes, false);\n\n           for (i = 0, l = nodes.length; i < l; i++) {\n               formatNode = this.finder.findFormat(nodes[i]);\n               if (formatNode) {\n                   name = dom.name(formatNode);\n                   namedFormat = EditorUtils.formatByName(name, this.format);\n                   if (namedFormat.attr.style) {\n                       dom.unstyle(formatNode, namedFormat.attr.style);\n                   }\n                   if (namedFormat.attr.className) {\n                       dom.removeClass(formatNode, namedFormat.attr.className);\n                   }\n               }\n           }\n       },\n\n       toggle: function(range) {\n           var that = this,\n               nodes = dom.filterBy(RangeUtils.nodes(range), dom.htmlIndentSpace, true);\n\n           if (that.finder.isFormatted(nodes)) {\n               that.remove(nodes);\n           } else {\n               that.apply(nodes);\n           }\n       }\n   });\n\n   var GreedyBlockFormatter = Class.extend({\n       init: function(format, values) {\n           var that = this;\n           that.format = format;\n           that.values = values;\n           that.finder = new BlockFormatFinder(format);\n       },\n\n       apply: function(nodes) {\n           var format = this.format;\n           var blocks = dom.blockParents(nodes);\n           var formatTag = format[0].tags[0];\n           var i, len, list, formatter, range;\n           var element;\n           var tagName;\n           var block;\n           var immutalbeParent;\n\n           if (blocks.length) {\n               for (i = 0, len = blocks.length; i < len; i++) {\n                   block = blocks[i];\n                   immutalbeParent = this.immutables() && Editor.Immutables.immutableParent(block);\n\n                   if (!immutalbeParent) {\n                       tagName = dom.name(block);\n\n                       if (tagName == \"li\") {\n                           list = block.parentNode;\n                           formatter = new Editor.ListFormatter(list.nodeName.toLowerCase(), formatTag);\n                           range = this.editor.createRange();\n                           range.selectNode(blocks[i]);\n                           formatter.toggle(range);\n                       } else if (formatTag && (tagName == \"td\" || block.attributes.contentEditable)) {\n                           new BlockFormatter(format, this.values).apply(block.childNodes);\n                       } else {\n                           element = dom.changeTag(block, formatTag);\n                           dom.attr(element, format[0].attr);\n                       }\n                   }\n               }\n           } else {\n               var blockFormatter = new BlockFormatter(format, this.values);\n               blockFormatter.editor = this.editor;\n               blockFormatter.apply(nodes);\n           }\n       },\n\n       toggle: function(range) {\n           var nodes = RangeUtils.textNodes(range);\n           if (!nodes.length) {\n               range.selectNodeContents(range.commonAncestorContainer);\n               nodes = RangeUtils.textNodes(range);\n               if (!nodes.length) {\n                   nodes = dom.significantChildNodes(range.commonAncestorContainer);\n               }\n           }\n\n           this.apply(nodes);\n       },\n\n       immutables: function() {\n           return this.editor && this.editor.options.immutables;\n       }\n   });\n\n   var BlockFormatTool = FormatTool.extend({ init: function(options) {\n           FormatTool.fn.init.call(this, extend(options, {\n               finder: new BlockFormatFinder(options.format),\n               formatter: function() {\n                   return new BlockFormatter(options.format);\n               }\n           }));\n       }\n   });\n\n   extend(Editor, {\n       BlockFormatFinder: BlockFormatFinder,\n       BlockFormatter: BlockFormatter,\n       GreedyBlockFormatter: GreedyBlockFormatter,\n       BlockFormatTool: BlockFormatTool\n   });\n\n   var listElements = [\"ul\",\"ol\",\"li\"];\n\n   registerFormat(\"justifyLeft\", [\n       { tags: dom.nonListBlockElements, attr: { style: { textAlign: \"left\" } } },\n       { tags: [\"img\"], attr: { style: { \"float\": \"left\", display: \"\", marginLeft: \"\", marginRight: \"\" } } },\n       { tags: [\"immutable\"], attr: { style: { \"float\": \"left\", display: \"\", marginLeft: \"\", marginRight: \"\" } } },\n       { tags: listElements, attr: { style: { textAlign: \"left\", listStylePosition: \"\" } } }\n   ]);\n   registerTool(\"justifyLeft\", new BlockFormatTool({\n       format: formats.justifyLeft,\n       ui: {\n           togglable: true,\n           group: \"align\"\n       }\n   }));\n\n   registerFormat(\"justifyCenter\", [\n       { tags: dom.nonListBlockElements, attr: { style: { textAlign: \"center\" } } },\n       { tags: [\"img\"], attr: { style: { display: \"block\", marginLeft: \"auto\", marginRight: \"auto\", \"float\": \"\" } } },\n       { tags: [\"immutable\"], attr: { style: { display: \"block\", marginLeft: \"auto\", marginRight: \"auto\", \"float\": \"\" } } },\n       { tags: listElements, attr: { style: { textAlign: \"center\", listStylePosition: \"inside\" } } }\n   ]);\n   registerTool(\"justifyCenter\", new BlockFormatTool({\n       format: formats.justifyCenter,\n       ui: {\n           togglable: true,\n           group: \"align\"\n       }\n   }));\n\n   registerFormat(\"justifyRight\", [\n       { tags: dom.nonListBlockElements, attr: { style: { textAlign: \"right\" } } },\n       { tags: [\"img\"], attr: { style: { \"float\": \"right\", display: \"\", marginLeft: \"\", marginRight: \"\" } } },\n       { tags: [\"immutable\"], attr: { style: { \"float\": \"right\", display: \"\", marginLeft: \"\", marginRight: \"\" } } },\n       { tags: listElements, attr: { style: { textAlign: \"right\", listStylePosition: \"inside\" } } }\n   ]);\n   registerTool(\"justifyRight\", new BlockFormatTool({\n       format: formats.justifyRight,\n       ui: {\n           togglable: true,\n           group: \"align\"\n       }\n   }));\n\n   registerFormat(\"justifyFull\", [\n       { tags: dom.nonListBlockElements, attr: { style: { textAlign: \"justify\" } } },\n       { tags: [\"img\"], attr: { style: { display: \"block\", marginLeft: \"auto\", marginRight: \"auto\", \"float\": \"\" } } },\n       { tags: [\"immutable\"], attr: { style: { display: \"block\", marginLeft: \"auto\", marginRight: \"auto\", \"float\": \"\" } } },\n       { tags: listElements, attr: { style: { textAlign: \"justify\", listStylePosition: \"\" } } }\n   ]);\n   registerTool(\"justifyFull\", new BlockFormatTool({\n       format: formats.justifyFull,\n       ui: {\n           togglable: true,\n           group: \"align\"\n       }\n   }));\n\n   })(window.kendo.jQuery);\n\n   (function($) {\n\n   // Imports ================================================================\n   var kendo = window.kendo,\n       Class = kendo.Class,\n       extend = $.extend,\n       Editor = kendo.ui.editor,\n       dom = Editor.Dom,\n       RangeUtils = Editor.RangeUtils,\n       Command = Editor.Command,\n       FormatTool = Editor.FormatTool,\n       BlockFormatFinder = Editor.BlockFormatFinder,\n       textNodes = RangeUtils.textNodes,\n       registerTool = Editor.EditorUtils.registerTool;\n\n   var ListFormatFinder = BlockFormatFinder.extend({\n       init: function(options) {\n           this.tag = options.tag;\n           this.attr = options.attr;\n           this.altAttr = options.altAttr;\n\n           var tags = this.tags = [this.tag == 'ul' ? 'ol' : 'ul', this.tag];\n           var format = [{ tags: tags, attr: this.attr }];\n\n           if (this.altAttr) {\n               format.push({\n                   tags: tags,\n                   attr: this.altAttr\n               });\n           }\n\n           BlockFormatFinder.fn.init.call(this, format);\n       },\n\n       matchesType: function(node) {\n           return dom.attrEquals(node, this.attr) || (this.altAttr && dom.attrEquals(node, this.altAttr));\n       },\n\n       isList: function(node) {\n           return dom.list(node);\n       },\n\n       isFormatted: function(nodes) {\n           var formatNodes = [];\n           var formatNode, i;\n\n           for (i = 0; i < nodes.length; i++) {\n               formatNode = this.findFormat(nodes[i], this.isList);\n\n               if (formatNode && dom.name(formatNode) == this.tag && this.matchesType(formatNode)) {\n                   formatNodes.push(formatNode);\n               }\n           }\n\n           if (formatNodes.length < 1) {\n               return false;\n           }\n\n           if (formatNodes.length != nodes.length) {\n               return false;\n           }\n\n           // check if sequential lists are selected\n           for (i = 0; i < formatNodes.length; i++) {\n               if (formatNodes[i].parentNode != formatNode.parentNode) {\n                   break;\n               }\n\n               if (formatNodes[i] != formatNode) {\n                   return false;\n               }\n           }\n\n           return true;\n       },\n\n       findSuitable: function(nodes) {\n           var candidate = this.findFormat(nodes[0], this.isList);\n\n           if (candidate && dom.name(candidate) == this.tag) {\n               return candidate;\n           }\n\n           return null;\n       }\n\n   });\n\n   var ListFormatter = Class.extend({\n       init: function(options, unwrapTag) {\n           var that = this;\n           options = $.isPlainObject(options) ? options : { tag: options, attr: null };\n           that.tag = options.tag;\n           that.attr = options.attr;\n           that.finder = new ListFormatFinder(options);\n           that.unwrapTag = unwrapTag;\n       },\n\n       isList: function(node) {\n           return dom.list(node);\n       },\n\n       immutables: function() {\n           return this.editor && !!this.editor.options.immutables;\n       },\n\n       wrap: function(list, nodes) {\n           var li = dom.create(list.ownerDocument, \"li\"),\n               i, node,\n               isImmutable = this.immutables() ? Editor.Immutables.immutable : $.noop;\n\n           for (i = 0; i < nodes.length; i++) {\n               node = nodes[i];\n\n               if (dom.is(node, 'li')) {\n                   list.appendChild(node);\n                   continue;\n               }\n\n               if (this.isList(node)) {\n                   while (node.firstChild) {\n                       list.appendChild(node.firstChild);\n                   }\n                   continue;\n               }\n\n               if (dom.is(node, \"td\")) {\n                   while (node.firstChild) {\n                       li.appendChild(node.firstChild);\n                   }\n                   list.appendChild(li);\n                   node.appendChild(list);\n                   list = list.cloneNode(false);\n                   li = li.cloneNode(false);\n                   continue;\n               }\n\n               li.appendChild(node);\n\n               if (dom.isBlock(node)) {\n                   list.appendChild(li);\n                   if (!isImmutable(node)) {\n                       dom.unwrap(node);\n                   }\n                   li = li.cloneNode(false);\n               }\n           }\n\n           if (li.firstChild) {\n               list.appendChild(li);\n           }\n       },\n\n       containsAny: function(parent, nodes) {\n           for (var i = 0; i < nodes.length; i++) {\n               if (dom.isAncestorOrSelf(parent, nodes[i])) {\n                   return true;\n               }\n           }\n\n           return false;\n       },\n\n       suitable: function(candidate, nodes) {\n           if (candidate.className == \"k-marker\") {\n               var sibling = candidate.nextSibling;\n\n               if (sibling && dom.isBlock(sibling)) {\n                   return false;\n               }\n\n               sibling = candidate.previousSibling;\n\n               if (sibling && dom.isBlock(sibling)) {\n                   return false;\n               }\n           }\n\n           return this.containsAny(candidate, nodes) || dom.isInline(candidate) || candidate.nodeType == 3;\n       },\n\n       _parentLists: function(node) {\n           var editable = dom.closestEditable(node);\n\n           return $(node).parentsUntil(editable, \"ul,ol\");\n       },\n\n       split: function(range) {\n           var nodes = textNodes(range);\n           var start, end, parents;\n\n           if (nodes.length) {\n               start = dom.parentOfType(nodes[0], ['li']);\n               end = dom.parentOfType(nodes[nodes.length - 1], ['li']);\n               range.setStartBefore(start);\n               range.setEndAfter(end);\n\n               for (var i = 0, l = nodes.length; i < l; i++) {\n                   var formatNode = this.finder.findFormat(nodes[i]);\n                   if (formatNode) {\n                       parents = this._parentLists(formatNode);\n                       if (parents.length) {\n                           RangeUtils.split(range, parents.last()[0], true);\n                       } else {\n                           RangeUtils.split(range, formatNode, true);\n                       }\n                   }\n               }\n           }\n       },\n\n       merge: function(tag, formatNode) {\n           var prev = formatNode.previousSibling, next;\n\n           while (prev && (prev.className == \"k-marker\" || (prev.nodeType == 3 && dom.isWhitespace(prev)))) {\n               prev = prev.previousSibling;\n           }\n\n           // merge with previous list\n           if (prev && dom.name(prev) == tag && this.finder.matchesType(prev)) {\n               while (formatNode.firstChild) {\n                   prev.appendChild(formatNode.firstChild);\n               }\n               dom.remove(formatNode);\n               formatNode = prev;\n           }\n\n           next = formatNode.nextSibling;\n           while (next && (next.className == \"k-marker\" || (next.nodeType == 3 && dom.isWhitespace(next)))) {\n               next = next.nextSibling;\n           }\n\n           // merge with next list\n           if (next && dom.name(next) == tag && this.finder.matchesType(next)) {\n               while (formatNode.lastChild) {\n                   next.insertBefore(formatNode.lastChild, next.firstChild);\n               }\n               dom.remove(formatNode);\n           }\n       },\n\n       breakable: function(node) {\n           return (\n               node != node.ownerDocument.body &&\n               !/table|tbody|thead|tr|td/.test(dom.name(node)) &&\n               !node.attributes.contentEditable\n           );\n       },\n\n       findSuitableNode: function(nodes) {\n           var that = this,\n               finder = that.finder,\n               tag = that.tag,\n               formatNode;\n\n           formatNode = finder.findSuitable(nodes);\n\n           if (!formatNode) {\n               // Find the opposite tag\n               finder = new ListFormatFinder({ tag: tag == \"ul\" ? \"ol\" : \"ul\" });\n               formatNode = finder.findSuitable(nodes);\n           }\n\n           if (!formatNode) {\n               // Find the same tag\n               finder = new ListFormatFinder({ tag: tag });\n               formatNode = finder.findSuitable(nodes);\n               formatNode = formatNode && that.finder.matchesType(formatNode) ? null : formatNode;\n           }\n\n\n           return formatNode;\n       },\n\n       applyOnSection: function(section, nodes) {\n           var tag = this.tag;\n           var attr = this.attr;\n           var commonAncestor = dom.closestSplittableParent(nodes);\n\n           var ancestors = [];\n           var formatNode = this.findSuitableNode(nodes);\n\n           var childNodes;\n\n           if (/table|tbody|thead/.test(dom.name(commonAncestor))) {\n               childNodes = $.map(nodes, function(node) {\n                   return dom.parentOfType(node, [\"td\"]);\n               });\n           } else {\n               childNodes = dom.significantChildNodes(commonAncestor);\n\n               if ($.grep(childNodes, dom.isBlock).length) {\n                   childNodes = $.grep(childNodes, (function(node) {\n                       return this.containsAny(node, nodes);\n                   }).bind(this));\n               }\n\n               if (!childNodes.length) {\n                   childNodes = nodes;\n               }\n           }\n\n           function pushAncestor() {\n               ancestors.push(this);\n           }\n\n           for (var i = 0; i < childNodes.length; i++) {\n               var child = childNodes[i];\n               var suitable = (!formatNode || !dom.isAncestorOrSelf(formatNode, child)) && this.suitable(child, nodes);\n\n               if (!suitable) {\n                   continue;\n               }\n\n               if (formatNode && this.isList(child)) {\n                   // merging lists\n                   $.each(child.children, pushAncestor);\n                   dom.remove(child);\n               } else {\n                   ancestors.push(child);\n               }\n           }\n\n           if (ancestors.length == childNodes.length && this.breakable(commonAncestor)) {\n               ancestors = [commonAncestor];\n           }\n\n           if (!formatNode) {\n               formatNode = dom.create(commonAncestor.ownerDocument, tag, attr);\n               if (dom.isBlock(ancestors[0])) {\n                   dom.mergeAttributes(ancestors[0], formatNode);\n               }\n               dom.insertBefore(formatNode, ancestors[0]);\n           }\n\n           this.wrap(formatNode, ancestors);\n\n           while (dom.isBom(formatNode.nextSibling)) {\n               dom.remove(formatNode.nextSibling);\n           }\n\n           if (!this.finder.matchesType(formatNode)) {\n               formatNode.removeAttribute(\"type\");\n               formatNode.style.listStyleType = \"\";\n               dom.mergeAttributes(dom.create(commonAncestor.ownerDocument, tag, attr), formatNode, true);\n           }\n\n           if (formatNode && formatNode.getAttribute(\"type\") === \"\") {\n               formatNode.removeAttribute(\"type\");\n           }\n\n           if (!dom.is(formatNode, tag)) {\n               dom.changeTag(formatNode, tag);\n           }\n\n           this.merge(tag, formatNode);\n       },\n\n       apply: function(nodes) {\n           var i = 0,\n               sections = [],\n               lastSection,\n               lastNodes,\n               section,\n               node,\n               l = nodes.length,\n               immutableParent = this.immutables() ? Editor.Immutables.immutableParent : $.noop;\n\n           function addLastSection() {\n               if (lastSection) {\n                   sections.push({\n                       section: lastSection,\n                       nodes: lastNodes\n                   });\n               }\n           }\n\n           // split nodes into sections that need to be different lists\n           for (i = 0; i < l; i++) {\n               node = immutableParent(nodes[i]) || nodes[i];\n               section = dom.closestEditable(node, [\"td\",\"th\",\"body\"]);\n               if (!lastSection || section != lastSection) {\n                   addLastSection();\n                   lastNodes = [node];\n                   lastSection = section;\n               } else {\n                   lastNodes.push(node);\n               }\n           }\n\n           addLastSection();\n\n           for (i = 0; i < sections.length; i++) {\n               this.applyOnSection(sections[i].section, sections[i].nodes);\n           }\n       },\n\n       unwrap: function(ul) {\n           var fragment = ul.ownerDocument.createDocumentFragment(),\n               unwrapTag = this.unwrapTag,\n               parents,\n               li,\n               p,\n               child;\n\n           for (li = ul.firstChild; li; li = li.nextSibling) {\n               p = dom.create(ul.ownerDocument, unwrapTag || 'p');\n\n               while (li.firstChild) {\n                   child = li.firstChild;\n\n                   if (dom.isBlock(child)) {\n\n                       if (p.firstChild) {\n                           fragment.appendChild(p);\n                           p = dom.create(ul.ownerDocument, unwrapTag || 'p');\n                       }\n\n                       fragment.appendChild(child);\n                   } else {\n                       p.appendChild(child);\n                   }\n               }\n\n               if (p.firstChild) {\n                   fragment.appendChild(p);\n               }\n           }\n\n           parents = this._parentLists(ul);\n\n           if (parents[0]) {\n               dom.insertAfter(fragment, parents.last()[0]);\n               parents.last().remove();\n           } else {\n               dom.insertAfter(fragment, ul);\n           }\n\n           dom.remove(ul);\n       },\n\n       remove: function(nodes) {\n           var formatNode;\n           for (var i = 0, l = nodes.length; i < l; i++) {\n               formatNode = this.finder.findFormat(nodes[i]);\n\n               if (formatNode) {\n                   this.unwrap(formatNode);\n               }\n           }\n       },\n\n       toggle: function(range) {\n           var that = this,\n               nodes = textNodes(range),\n               ancestor = range.commonAncestorContainer;\n\n           if (!nodes.length) {\n               range.selectNodeContents(ancestor);\n               nodes = textNodes(range);\n               if (!nodes.length) {\n                   var text = ancestor.ownerDocument.createTextNode(\"\");\n                   range.startContainer.appendChild(text);\n                   nodes = [text];\n                   range.selectNode(text.parentNode);\n               }\n           }\n           nodes = dom.filterBy(nodes, dom.htmlIndentSpace, true);\n           if (that.finder.isFormatted(nodes)) {\n               that.split(range);\n               that.remove(nodes);\n           } else {\n               that.apply(nodes);\n           }\n       }\n\n   });\n\n   var ListCommand = Command.extend({\n       init: function(options) {\n           options.formatter = new ListFormatter({ tag: options.tag, attr: options.attr });\n           Command.fn.init.call(this, options);\n       }\n   });\n\n   var ListTool = FormatTool.extend({\n       init: function(options) {\n           this.options = options;\n\n           FormatTool.fn.init.call(this, extend(options, {\n               finder: new ListFormatFinder(options)\n           }));\n       },\n\n       command: function(commandArguments) {\n           return new ListCommand(extend(commandArguments, { tag: this.options.tag, attr: this.options.attr }));\n       }\n   });\n\n   extend(Editor, {\n       ListFormatFinder: ListFormatFinder,\n       ListFormatter: ListFormatter,\n       ListCommand: ListCommand,\n       ListTool: ListTool\n   });\n\n   registerTool(\"insertUnorderedList\", new ListTool({ tag: 'ul', attr: { style: { listStyleType: \"\" }, type: \"\" }, ui: { togglable: true, group: \"lists\" } }));\n   registerTool(\"insertOrderedList\", new ListTool({ tag: 'ol', attr: { style: { listStyleType: \"\" }, type: \"\" }, ui: { togglable: true, group: \"lists\" } }));\n   registerTool(\"insertUpperRomanList\", new ListTool({ tag: 'ol', attr: { style: { listStyleType: \"upper-roman\" } }, altAttr: { type: \"I\" }, ui: { togglable: true, group: \"lists\" } }));\n   registerTool(\"insertLowerRomanList\", new ListTool({ tag: 'ol', attr: { style: { listStyleType: \"lower-roman\" } }, altAttr: { type: \"i\" }, ui: { togglable: true, group: \"lists\" } }));\n\n   })(window.kendo.jQuery);\n\n   (function($) {\n\n   var kendo = window.kendo,\n       Editor = kendo.ui.editor,\n       Tool = Editor.Tool,\n       DelayedExecutionTool = Editor.DelayedExecutionTool,\n       Command = Editor.Command,\n       dom = Editor.Dom,\n       EditorUtils = Editor.EditorUtils,\n       RangeUtils = Editor.RangeUtils,\n       registerTool = EditorUtils.registerTool;\n\n\n   var FormattingTool = DelayedExecutionTool.extend({\n       init: function(options) {\n           var that = this;\n           Tool.fn.init.call(that, kendo.deepExtend({}, that.options, options));\n\n           that.type = \"kendoDropDownList\";\n\n           that.finder = {\n               getFormat: function() { return \"\"; }\n           };\n       },\n\n       options: {\n           items: [\n               { text: \"Paragraph\", value: \"p\" },\n               { text: \"Quotation\", value: \"blockquote\" },\n               { text: \"Heading 1\", value: \"h1\" },\n               { text: \"Heading 2\", value: \"h2\" },\n               { text: \"Heading 3\", value: \"h3\" },\n               { text: \"Heading 4\", value: \"h4\" },\n               { text: \"Heading 5\", value: \"h5\" },\n               { text: \"Heading 6\", value: \"h6\" }\n           ],\n           width: 110\n       },\n\n       toFormattingItem: function(item) {\n           var value = item.value;\n\n           if (!value) {\n               return item;\n           }\n\n           if (item.tag || item.className) {\n               return item;\n           }\n\n           var dot = value.indexOf(\".\");\n\n           if (dot === 0) {\n               item.className = value.substring(1);\n           } else if (dot == -1) {\n               item.tag = value;\n           } else {\n               item.tag = value.substring(0, dot);\n               item.className = value.substring(dot + 1);\n           }\n\n           return item;\n       },\n\n       command: function(args) {\n           var that = this;\n           var item = args.value;\n\n           item = this.toFormattingItem(item);\n\n           return new Editor.FormatCommand({\n               range: args.range,\n               formatter: function() {\n                   var formatter,\n                       tags = (item.tag || item.context || \"span\").split(\",\"),\n                       format = [{\n                           tags: tags,\n                           attr: { className: item.className || \"\" }\n                       }];\n\n                   if ($.inArray(tags[0], dom.inlineElements) >= 0) {\n                       formatter = new Editor.GreedyInlineFormatter(format);\n                   } else {\n                       formatter = new Editor.GreedyBlockFormatter(format);\n                   }\n\n                   formatter.editor = that.editor;\n                   return formatter;\n               }\n           });\n       },\n\n       decorate: function(body) {\n           var component = this.component,\n               dataSource = component.dataSource,\n               items = dataSource.data(),\n               i, tag, className, style;\n\n           if (body) {\n               component.list.css(\"background-color\", dom.getEffectiveBackground($(body)));\n           }\n\n           if (this.component && this.component.options && this.component.options.unsafeInline !== false) {\n               for (i = 0; i < items.length; i++) {\n                   tag = items[i].tag || \"span\";\n                   className = items[i].className;\n\n                   style = dom.inlineStyle(body, tag, { className: className });\n\n                   style = style.replace(/\"/g, \"'\");\n\n                   items[i].style = style + \";display:inline-block\";\n               }\n           }\n\n           dataSource.trigger(\"change\");\n       },\n\n       initialize: function(ui, editor) {\n           var options = this.options;\n           var toolName = options.name;\n           var that = this;\n           var component = ui.getKendoDropDownList();\n\n           if (!component) {\n               return;\n           }\n\n           that.editor = editor;\n           that.component = component;\n\n           // must be moved to themes\n           ui.closest(\".k-dropdownlist\").width(options.width);\n\n           component.setOptions({\n               optionLabel: editor.options.messages.formatting,\n               change: () => {\n                   var dataItem = component.dataItem();\n\n                   if (dataItem) {\n                       Tool.exec(editor, toolName, dataItem.toJSON());\n                   }\n               },\n               dataBound: function() {\n                   var i, items = component.dataSource.data(),\n                       optionLabel = component.list.parent().find(\".k-list-optionlabel\");\n\n                   for (i = 0; i < items.length; i++) {\n                       items[i] = that.toFormattingItem(items[i]);\n                   }\n\n                   if (optionLabel.length) {\n                       optionLabel.remove();\n                   }\n               }\n           });\n       },\n\n       getFormattingValue: function(items, nodes) {\n           for (var i = 0; i < items.length; i++) {\n               var item = items[i];\n               var tag = item.tag || item.context || \"\";\n               var className = item.className ? \".\" + item.className : \"\";\n               var selector = tag + className;\n\n               var element = $(nodes[0]).closest(selector)[0];\n\n               if (!element) {\n                   continue;\n               }\n\n               if (nodes.length == 1) {\n                   return item.value;\n               }\n\n               for (var n = 1; n < nodes.length; n++) {\n                   if (!$(nodes[n]).closest(selector)[0]) {\n                       break;\n                   } else if (n == nodes.length - 1) {\n                       return item.value;\n                   }\n               }\n           }\n\n           return \"\";\n       },\n\n       update: function(ui, nodes) {\n           var selectBox = $(ui).data(this.type);\n           // necessary until formatBlock is deleted\n           if (!selectBox) {\n               return;\n           }\n\n           var dataSource = selectBox.dataSource,\n               items = dataSource.data(),\n               i, context,\n               ancestor = dom.commonAncestor.apply(null, nodes);\n\n           if (ancestor != dom.closestEditable(ancestor) && this._ancestor == ancestor) {\n               return;\n           } else {\n               this._ancestor = ancestor;\n           }\n\n           for (i = 0; i < items.length; i++) {\n               context = items[i].context;\n\n               items[i].visible = !context || !!$(ancestor).closest(context).length;\n           }\n\n           dataSource.filter([{ field: \"visible\", operator: \"eq\", value: true }]);\n\n           DelayedExecutionTool.fn.update.call(this, ui, nodes);\n\n           selectBox.value(this.getFormattingValue(dataSource.view(), nodes));\n\n           selectBox.wrapper.toggleClass(\"k-disabled\", !dataSource.view().length);\n       },\n\n       destroy: function() {\n           this._ancestor = null;\n       }\n   });\n\n   var CleanFormatCommand = Command.extend({\n       exec: function() {\n           var range = this.lockRange(true);\n           this.tagsToClean = this.options.remove || \"strong,em,span,sup,sub,del,b,i,u,font\".split(\",\");\n\n           RangeUtils.wrapSelectedElements(range);\n\n           var nodes = RangeUtils.mapAll(range, function(node) {\n               return node;\n           });\n\n\n           for (var c = nodes.length - 1; c >= 0; c--) {\n               var node = nodes[c];\n               if (!this.immutableParent(node)) {\n                   this.clean(node);\n               }\n           }\n\n           this.releaseRange(range);\n       },\n\n       clean: function(node) {\n           if (!node || dom.isMarker(node)) {\n               return;\n           }\n\n           var name = dom.name(node);\n\n           if (name == \"ul\" || name == \"ol\") {\n               var listFormatter = new Editor.ListFormatter(name);\n               var prev = node.previousSibling;\n               var next = node.nextSibling;\n\n               listFormatter.unwrap(node);\n\n               // clean contents\n               for (; prev && prev != next; prev = prev.nextSibling) {\n                   this.clean(prev);\n               }\n           } else if (name == \"blockquote\") {\n               dom.changeTag(node, \"p\");\n           } else if (node.nodeType == 1 && !dom.insignificant(node)) {\n               for (var i = node.childNodes.length - 1; i >= 0; i--) {\n                   this.clean(node.childNodes[i]);\n               }\n\n               node.removeAttribute(\"style\");\n               node.removeAttribute(\"class\");\n           } else {\n               unwrapListItem(node);\n           }\n\n           if ($.inArray(name, this.tagsToClean) > -1) {\n               dom.unwrap(node);\n           }\n       },\n\n       immutableParent: function(node) {\n           return this.immutables() && Editor.Immutables.immutableParent(node);\n       }\n   });\n\n\n   function unwrapListItem(node) {\n       var li = dom.closestEditableOfType(node, [\"li\"]);\n       if (li) {\n           var listFormatter = new Editor.ListFormatter(dom.name(li.parentNode));\n           var range = kendo.ui.editor.W3CRange.fromNode(node);\n           range.selectNode(li);\n           listFormatter.toggle(range);\n       }\n   }\n\n   $.extend(Editor, {\n       FormattingTool: FormattingTool,\n       CleanFormatCommand: CleanFormatCommand\n   });\n\n   registerTool(\"formatting\", new FormattingTool({\n       ui: {\n           type: \"component\",\n           component: \"DropDownList\",\n           componentOptions: {\n               dataTextField: \"text\",\n               dataValueField: \"value\",\n               highlightFirst: false,\n               autoWidth: true,\n               template: kendo.template(\n                   (data) => `<span unselectable=\"on\" ${data.style ? `class=\"k-d-block\" style=\"display:block;${data.style || \"\"}` : \"\"}\">${kendo.htmlEncode(data.text)}</span>`\n               )\n           },\n           overflow: \"never\"\n       }\n   }));\n\n   registerTool(\"cleanFormatting\", new Tool({ command: CleanFormatCommand }));\n\n   })(window.kendo.jQuery);\n\n   (function($, undefined$1) {\n\n   var kendo = window.kendo,\n       extend = $.extend,\n       encode = kendo.htmlEncode,\n       Editor = kendo.ui.editor,\n       EditorUtils = Editor.EditorUtils,\n       dom = Editor.Dom,\n       registerTool = EditorUtils.registerTool,\n       RangeUtils = Editor.RangeUtils,\n       Command = Editor.Command,\n       keys = kendo.keys,\n       KEDITORIMAGEURL = \"#k-editor-image-url\",\n       KEDITORIMAGETITLE = \"#k-editor-image-title\",\n       KEDITORIMAGEWIDTH = \"#k-editor-image-width\",\n       KEDITORIMAGEHEIGHT = \"#k-editor-image-height\";\n\n   var ImageCommand = Command.extend({\n       init: function(options) {\n           var that = this;\n           Command.fn.init.call(that, options);\n\n           that.async = true;\n           that.attributes = {};\n       },\n\n       insertImage: function(img, range) {\n           var attributes = this.attributes;\n           var doc = RangeUtils.documentFromRange(range);\n\n           if (attributes.src && attributes.src != \"http://\") {\n\n               var removeIEAttributes = function() {\n                   setTimeout(function() {\n                       if (!attributes.width) {\n                           img.removeAttribute(\"width\");\n                       }\n\n                       if (!attributes.height) {\n                           img.removeAttribute(\"height\");\n                       }\n\n                       img.removeAttribute(\"complete\");\n                   });\n               };\n\n               if (!img) {\n                   img = dom.create(doc, \"img\", attributes);\n                   img.onload = img.onerror = removeIEAttributes;\n\n                   range.deleteContents();\n                   range.insertNode(img);\n\n                   if (!img.nextSibling) {\n                       dom.insertAfter(doc.createTextNode(\"\\ufeff\"), img);\n                   }\n\n                   removeIEAttributes();\n\n                   range.setStartAfter(img);\n                   range.setEndAfter(img);\n                   RangeUtils.selectRange(range);\n                   return true;\n               } else {\n                   img.onload = img.onerror = removeIEAttributes;\n                   dom.attr(img, attributes);\n                   removeIEAttributes();\n               }\n           }\n\n           return false;\n       },\n\n       redo: function() {\n           var that = this,\n               range = that.lockRange();\n\n           if (!that.insertImage(RangeUtils.image(range), range)) {\n               that.releaseRange(range);\n           }\n       },\n\n       exec: function() {\n           var that = this,\n               range = that.lockRange(),\n               applied = false,\n               img = RangeUtils.image(range),\n               imageWidth = img && img.getAttribute(\"width\") || \"\",\n               imageHeight = img && img.getAttribute(\"height\") || \"\",\n               dialog,\n               form,\n               isIE = kendo.support.browser.msie,\n               options = that.editor.options,\n               messages = options.messages,\n               imageBrowser = options.imageBrowser,\n               showBrowser = !!(kendo.ui.ImageBrowser && imageBrowser && imageBrowser.transport && imageBrowser.transport.read !== undefined$1),\n               dialogOptions = {\n                   title: messages.insertImage,\n                   visible: false,\n                   resizable: showBrowser\n               };\n\n           this.expandImmutablesIn(range);\n\n           function apply(e) {\n               var element = dialog.element,\n                   w = parseInt(element.find(KEDITORIMAGEWIDTH).val(), 10),\n                   h = parseInt(element.find(KEDITORIMAGEHEIGHT).val(), 10);\n\n               that.attributes = {\n                   src: element.find(KEDITORIMAGEURL).val().replace(/ /g, \"%20\"),\n                   alt: element.find(KEDITORIMAGETITLE).val()\n               };\n\n               that.attributes.width = null;\n               that.attributes.height = null;\n\n               if (!isNaN(w) && w > 0) {\n                   that.attributes.width = w;\n               }\n\n               if (!isNaN(h) && h > 0) {\n                   that.attributes.height = h;\n               }\n\n               applied = that.insertImage(img, range);\n\n               close(e);\n\n               if (that.change) {\n                   that.change();\n               }\n\n               that.editor._handleSpaceAndNewLines();\n           }\n\n           function close(e) {\n               e.preventDefault();\n               form.destroy();\n               dialog.destroy();\n\n               dom.windowFromDocument(RangeUtils.documentFromRange(range)).focus();\n               if (!applied) {\n                   that.releaseRange(range);\n               }\n           }\n\n           function keyDown(e) {\n               if (e.keyCode == keys.ENTER) {\n                   apply(e);\n               } else if (e.keyCode == keys.ESC) {\n                   close(e);\n               }\n           }\n\n           dialogOptions.close = close;\n\n           if (showBrowser) {\n               dialogOptions.width = 750;\n           }\n           dialogOptions.minWidth = 350;\n\n           dialog = this.createDialog(\"<div/>\", dialogOptions).data(\"kendoWindow\");\n\n           form = that._createForm(dialog, showBrowser);\n\n           dialog.element.toggleClass(\"k-filebrowser-dialog\", showBrowser);\n           dialog.wrapper\n           .find(\".k-dialog-insert\").on(\"click\", apply).end()\n           .find(\".k-dialog-close\").on(\"click\", close).end()\n           .find(\".k-form-field input\").on(\"keydown\", keyDown).end()\n           // IE < 8 returns absolute url if getAttribute is not used\n           .find(KEDITORIMAGEURL).val(img ? img.getAttribute(\"src\", 2) : \"http://\").end()\n           .find(KEDITORIMAGETITLE).val(img ? img.alt : \"\").end()\n           .find(KEDITORIMAGEWIDTH).val(imageWidth).end()\n           .find(KEDITORIMAGEHEIGHT).val(imageHeight).end();\n\n           var element = dialog.element;\n           if (showBrowser) {\n               this._imageBrowser = new kendo.ui.ImageBrowser(\n                   element.find(\".k-imagebrowser\"),\n                   extend({}, imageBrowser)\n               );\n\n               this._imageBrowser.bind(\"change\", function(ev) {\n                   if (ev.selected.get(\"type\") === \"f\") {\n                       element.find(KEDITORIMAGEURL).val(this.value());\n                   }\n               });\n\n               this._imageBrowser.bind(\"apply\", apply);\n           }\n\n           if (isIE) {\n               var dialogHeight = element.closest(\".k-window\").height();\n               element.css(\"max-height\", dialogHeight);\n           }\n           dialog.center().open();\n           element.find(KEDITORIMAGEURL).trigger(\"focus\").select();\n       },\n\n       _createForm: function(dialog, showBrowser) {\n           var that = this;\n           var formElement = $(\"<div/>\").appendTo(dialog.element);\n           var messages = that.editor.options.messages;\n           var form = formElement.kendoForm({\n               renderButtons: false,\n               items: [\n                   {\n                       field: \"k-editor-image-url\",\n                       label: encode(messages.imageWebAddress),\n                       editor: \"TextBox\"\n                   },\n                   {\n                       field: \"k-editor-image-title\",\n                       label: encode(messages.imageAltText),\n                       editor: \"TextBox\"\n                   },\n                   {\n                       field: \"k-editor-image-width\",\n                       label: encode(messages.imageWidth),\n                       editor: \"TextBox\"\n                   },\n                   {\n                       field: \"k-editor-image-height\",\n                       label: encode(messages.imageHeight),\n                       editor: \"TextBox\"\n                   }\n               ]\n           }).data(\"kendoForm\");\n\n           if (showBrowser) {\n               formElement.prepend($('<div class=\"k-filebrowser k-imagebrowser\"></div>'));\n           }\n\n           dialog.element.after($(that._actionButtonsTemplate({ messages, insertButtonIcon: \"image-add\", cancelButtonIcon: \"cancel-outline\" })));\n\n           return form;\n       }\n\n   });\n\n   kendo.ui.editor.ImageCommand = ImageCommand;\n\n   registerTool(\"insertImage\", new Editor.Tool({ command: ImageCommand }));\n\n   })(window.kendo.jQuery);\n\n   (function($, undefined$1) {\n\n   var kendo = window.kendo,\n       extend = $.extend,\n       Editor = kendo.ui.editor,\n       EditorUtils = Editor.EditorUtils,\n       Command = Editor.Command,\n       Tool = Editor.Tool,\n       registerTool = EditorUtils.registerTool,\n       loadingOverlay = '<div contenteditable=\"false\" class=\"k-loading-mask\" style=\"width: 100%; height: 100%; position: absolute; top: 0px; left: 0px;\"><div class=\"k-loading-image\"></div><div class=\"k-loading-color\"></div></div>';\n\n   var ImportCommand = Command.extend({\n       exec: function() {\n           (this.editor._uploadWidget || this._initializeUploadWidget()).element.click();\n       },\n\n       _initializeUploadWidget: function() {\n           var cmd = this;\n           var editor = cmd.editor;\n           var importOptions = editor.options[\"import\"];\n           var upload = $('<input id=\"editorImport\" name=\"files\" type=\"file\" />').kendoUpload({\n               success: cmd._onUploadSuccess.bind(cmd),\n               progress: cmd._onUploadProgress.bind(cmd),\n               select: cmd._onUploadSelect.bind(cmd),\n               error: cmd._onUploadError.bind(cmd),\n               complete: cmd._onUploadComplete.bind(cmd),\n               showFileList: false,\n               multiple: false,\n               async: {\n                   saveUrl: importOptions.proxyURL,\n                   autoUpload: true,\n                   saveField: \"file\"\n               },\n               validation: {\n                   allowedExtensions: importOptions.allowedExtensions,\n                   maxFileSize: importOptions.maxFileSize\n               }\n           }).getKendoUpload();\n\n           editor._uploadWidget = upload;\n\n           return upload;\n       },\n       _onUploadComplete: function(ev) {\n           this._trigger(\"complete\", ev);\n           ev.sender.clearAllFiles();\n\n           this._removeLoadingOverlay();\n       },\n       _onUploadSuccess: function(ev) {\n           this.editor.value(ev.response.html.replace(/<\\/?body>/ig, \"\"));\n           this._trigger(\"success\", ev);\n       },\n       _onUploadProgress: function(ev) {\n           this._trigger(\"progress\", ev);\n       },\n       _onUploadSelect: function(ev) {\n           this._trigger(\"select\", ev);\n           if (!ev.files[0].validationErrors) {\n               this._initLoadingOverlay();\n           }\n       },\n       _onUploadError: function(ev) {\n           this._trigger(\"error\", ev);\n       },\n\n       _trigger: function(eventType, uploadEvent) {\n           var editor = this.editor;\n           var importOptions = editor.options[\"import\"];\n           if (typeof importOptions[eventType] === \"function\") {\n               importOptions[eventType].call(editor, uploadEvent);\n           }\n       },\n\n       _initLoadingOverlay: function() {\n           var editable = this.editor.body;\n           if (Editor.Dom.is(editable, \"body\")) {\n               this._iframeWrapper = this._container =\n                   this.editor.wrapper.find(\"iframe\").parent()\n                   .css({ position: \"relative\" }).append(loadingOverlay);\n           } else {\n               this._container = $(editable).append(loadingOverlay);\n           }\n\n           kendo.ui.progress(this._container, true);\n       },\n\n       _removeLoadingOverlay: function() {\n           kendo.ui.progress(this._container, false);\n           $(this._iframeWrapper).css({\n               position: \"\"\n           });\n\n           delete this._container;\n           delete this._iframeWrapper;\n       }\n   });\n\n   extend(Editor, {\n       ImportCommand: ImportCommand\n   });\n\n   registerTool(\"import\", new Tool({\n       command: ImportCommand,\n       ui: {\n           showText: \"both\"\n       }\n   }));\n\n   }(window.kendo.jQuery));\n\n   (function($) {\n\n       // Imports ================================================================\n       var kendo = window.kendo,\n           editorNS = kendo.ui.editor,\n           Command = editorNS.Command,\n           GenericCommand = editorNS.GenericCommand,\n           EditorUtils = editorNS.EditorUtils,\n           registerTool = EditorUtils.registerTool,\n           Tool = editorNS.Tool,\n           RestorePoint = editorNS.RestorePoint,\n           extend = $.extend;\n\n   var InsertHtmlCommand = Command.extend({\n       init: function(options) {\n           Command.fn.init.call(this, options);\n\n           this.managesUndoRedo = true;\n       },\n\n       exec: function() {\n           var editor = this.editor;\n           var options = this.options;\n           var range = options.range;\n           var body = editor.body;\n           var startRestorePoint = new RestorePoint(range, body);\n           var html = options.html || options.value || '';\n\n           editor.selectRange(range);\n\n           editor.clipboard.paste(html, options);\n\n           if (options.postProcess) {\n               options.postProcess(editor, editor.getRange());\n           }\n\n           var genericCommand = new GenericCommand(startRestorePoint, new RestorePoint(editor.getRange(), body));\n           genericCommand.editor = editor;\n           editor.undoRedoStack.push(genericCommand);\n\n           editor.focus();\n       }\n   });\n\n   var InsertHtmlTool = Tool.extend({\n       initialize: function(ui, editor) {\n           var options = this.options,\n               dataSource = options.items ? options.items : editor.options.insertHtml,\n               component = ui.getKendoDropDownList();\n\n           if (!component) {\n               return;\n           }\n\n           component.one(\"open\", () => {\n               var optionLabel = component.list.parent().find(\".k-list-optionlabel\");\n\n               if (optionLabel.length) {\n                   optionLabel.remove();\n               }\n           });\n\n           component.setOptions({\n               dataSource: dataSource,\n               optionLabel: editor.options.messages.insertHtml\n           });\n           component.bind(\"change\", () => {\n               Tool.exec(editor, 'insertHtml', component.value());\n           });\n       },\n\n       command: function(commandArguments) {\n           return new InsertHtmlCommand(commandArguments);\n       },\n\n       update: function(ui) {\n           var component = ui.data(\"kendoDropDownList\");\n           component.close();\n           component.value(null);\n       }\n   });\n\n   extend(editorNS, {\n       InsertHtmlCommand: InsertHtmlCommand,\n       InsertHtmlTool: InsertHtmlTool\n   });\n\n   registerTool(\"insertHtml\", new InsertHtmlTool({\n       ui: {\n           initialValue: \"Insert HTML\",\n           type: \"component\",\n           component: \"DropDownList\",\n           componentOptions: {\n               dataTextField: \"text\",\n               dataValueField: \"value\",\n               autoSize: true,\n               highlightFirst: false\n           },\n           overflow: \"never\"\n       }\n   }));\n\n   })(window.kendo.jQuery);\n\n   (function($, undefined$1) {\n\n   var kendo = window.kendo,\n       extend = $.extend,\n       Editor = kendo.ui.editor,\n       EditorUtils = Editor.EditorUtils,\n       Command = Editor.Command,\n       Tool = Editor.Tool,\n       registerTool = EditorUtils.registerTool,\n       defaultExportAsItems = [\n           { text: 'Docx', value: 'docx' },\n           { text: 'Rtf', value: 'rtf' },\n           { text: 'Pdf', value: 'pdf' },\n           { text: 'Html', value: 'html' },\n           { text: 'Plain Text', value: 'txt' }\n       ];\n\n   var ExportAsCommand = Command.extend({\n       init: function(options) {\n           var cmd = this;\n           cmd.options = options;\n           Command.fn.init.call(cmd, options);\n           cmd.attributes = null;\n           cmd.exportType = options.exportType;\n       },\n\n       exec: function() {\n           var cmd = this;\n           var range = this.lockRange(true);\n           cmd.postToProxy();\n           cmd.releaseRange(range);\n       },\n\n       postToProxy: function() {\n           this.generateForm().appendTo('body').submit().remove();\n       },\n\n       generateForm: function() {\n           var cmd = this;\n           var exportAsOptions = cmd.editor.options.exportAs;\n           var form = $('<form>').attr({\n               action: exportAsOptions && exportAsOptions.proxyURL || \"\",\n               method: 'POST'\n           });\n\n           form.append([\n               cmd.valueInput(),\n               cmd.exportTypeInput(),\n               cmd.fileNameInput(),\n               cmd.antiForgeryInput()\n           ]);\n\n           return form;\n       },\n\n       valueInput: function() {\n           var editor = this.editor;\n           return $('<input>').attr({\n               value: editor.encodedValue(),\n               name: 'value',\n               type: 'hidden'\n           });\n       },\n\n       exportTypeInput: function() {\n           var cmd = this;\n           return $('<input>').attr({\n               value: cmd.exportType,\n               name: 'exportType',\n               type: 'hidden'\n           });\n\n       },\n\n       fileNameInput: function() {\n           var editor = this.editor;\n           var exportAsOptions = editor.options.exportAs;\n           var fileName = exportAsOptions && exportAsOptions.fileName || editor.element.attr(\"id\") || \"editor\";\n           return $('<input>').attr({\n               value: fileName,\n               name: 'fileName',\n               type: 'hidden'\n           });\n       },\n\n       antiForgeryInput: function() {\n           var csrf_param = $(\"meta[name=csrf-param],meta[name=_csrf_header]\").attr(\"content\");\n\n           return $(\"input[name^='__RequestVerificationToken']\").clone()\n                       .add($(\"input[name^='\" + csrf_param + \"']\").clone());\n       }\n   });\n\n   var ExportAsTool = Tool.extend({\n       init: function(options) {\n           var tool = this;\n           Tool.fn.init.call(tool, kendo.deepExtend({}, tool.options, options));\n           tool.type = 'kendoDropDownList';\n       },\n\n       options: {\n           items: defaultExportAsItems\n       },\n\n       command: function(args) {\n           var value = args.value;\n           return new Editor.ExportAsCommand({\n               range: args.range,\n               exportType: value.exportType\n           });\n       },\n\n       initialize: function(ui, editor) {\n           var tool = this,\n               component = ui.getKendoDropDownList();\n\n           tool.editor = editor;\n\n           component.bind(\"change\", this.changeHandler.bind(this));\n       },\n\n       changeHandler: function(e) {\n           this._exec(e.sender.value());\n           e.sender.value(null);\n           e.sender.wrapper.find(\".k-export-tool-text\").text(kendo.htmlEncode(this.editor.options.messages.exportAs));\n       },\n\n       update: function(ui, editor) {\n           var component = ui.data(\"kendoDropDownList\");\n\n           component.close();\n           component.value(null);\n           ui.closest(\".k-dropdownlist\").find(\".k-export-tool-text\").text(kendo.htmlEncode(this.editor.options.messages.exportAs));\n       },\n\n       _exec: function(value) {\n           if (value) {\n               Tool.exec(this.editor, this.options.name, { exportType: value } );\n           }\n       },\n\n       destroy: function() {\n           this._ancestor = null;\n       }\n   });\n\n   extend(Editor, {\n       ExportAsTool: ExportAsTool,\n       ExportAsCommand: ExportAsCommand\n   });\n\n   registerTool('exportAs', new ExportAsTool({\n       ui: {\n           type: \"component\",\n           overflow: \"never\",\n           component: \"DropDownList\",\n           componentOptions: {\n               dataTextField: \"text\",\n               dataValueField: \"value\",\n               valuePrimitive: true,\n               value: null,\n               width: \"140px\",\n               highlightFirst: false,\n               autoWidth: true,\n               itemTemplate: (data) => `<span class=\"k-link k-menu-link\" data-value=\"${data.value}\">${data.text}</strong></span>`,\n               icon: \"export\",\n               valueTemplate: () => `<span class=\"k-editor-export\">${kendo.ui.icon({ icon: \"export\", iconClass: \"k-button-icon\" })}<span class=\"k-export-tool-text\"></span></span>`\n           }\n       }\n   }));\n\n   }(window.kendo.jQuery));\n\n   (function($, undefined$1) {\n\n   // Imports ================================================================\n   var kendo = window.kendo,\n       Class = kendo.Class,\n       extend = $.extend,\n       Editor = kendo.ui.editor,\n       dom = Editor.Dom,\n       EditorUtils = Editor.EditorUtils,\n       registerTool = EditorUtils.registerTool,\n       Command = Editor.Command,\n       Tool = Editor.Tool,\n       RangeUtils = Editor.RangeUtils,\n       blockElements = dom.blockElements,\n       BlockFormatFinder = Editor.BlockFormatFinder,\n       BlockFormatter = Editor.BlockFormatter;\n\n   function indent(node, value) {\n       var isRtl = $(node).css(\"direction\") == \"rtl\",\n           indentDirection = isRtl ? \"Right\" : \"Left\",\n           property = dom.name(node) != \"td\" ? \"margin\" + indentDirection : \"padding\" + indentDirection;\n       if (value === undefined$1) {\n           return node.style[property] || 0;\n       } else if (value > 0) {\n           node.style[property] = value + \"px\";\n       } else {\n           node.style[property] = \"\";\n\n           if (!node.style.cssText) {\n               node.removeAttribute(\"style\");\n           }\n       }\n   }\n\n   var IndentFormatter = Class.extend({\n       init: function() {\n           this.finder = new BlockFormatFinder([{ tags: dom.blockElements }]);\n       },\n\n       apply: function(nodes) {\n           nodes = dom.filterBy(nodes, dom.htmlIndentSpace, true);\n           var formatNodes = this.finder.findSuitable(nodes),\n               targets = [],\n               i, len, formatNode, parentList, sibling;\n\n           formatNodes = this.mapImmutables(formatNodes);\n\n           if (formatNodes.length) {\n               for (i = 0, len = formatNodes.length; i < len; i++) {\n                   if (dom.is(formatNodes[i], \"li\")) {\n                       if (!$(formatNodes[i]).index()) {\n                           targets.push(formatNodes[i].parentNode);\n                       } else if ($.inArray(formatNodes[i].parentNode, targets) < 0) {\n                           targets.push(formatNodes[i]);\n                       }\n                   } else {\n                       targets.push(formatNodes[i]);\n                   }\n               }\n\n               while (targets.length) {\n                   formatNode = targets.shift();\n                   if (dom.is(formatNode, \"li\")) {\n                       parentList = formatNode.parentNode;\n                       sibling = $(formatNode).prev(\"li\");\n                       var siblingList = sibling.find(\"ul,ol\").last();\n\n                       var nestedList = $(formatNode).children(\"ul,ol\")[0];\n\n                       if (nestedList && sibling[0]) {\n                           if (siblingList[0]) {\n                              siblingList.append(formatNode);\n                              siblingList.append($(nestedList).children());\n                              dom.remove(nestedList);\n                           } else {\n                               sibling.append(nestedList);\n                               nestedList.insertBefore(formatNode, nestedList.firstChild);\n                           }\n                       } else {\n                           nestedList = sibling.children(\"ul,ol\")[0];\n                           if (!nestedList) {\n                               nestedList = dom.create(formatNode.ownerDocument, dom.name(parentList), this.getListTypeAttr(parentList));\n                               sibling.append(nestedList);\n                           }\n\n                           while (formatNode && formatNode.parentNode == parentList) {\n                               nestedList.appendChild(formatNode);\n                               formatNode = targets.shift();\n                           }\n                       }\n                   } else {\n                       var marginLeft = parseInt(indent(formatNode), 10) + 30;\n                       indent(formatNode, marginLeft);\n\n                       for (var targetIndex = 0; targetIndex < targets.length; targetIndex++) {\n                           if ($.contains(formatNode, targets[targetIndex])) {\n                               targets.splice(targetIndex, 1);\n                           }\n                       }\n                   }\n               }\n           } else {\n               var formatter = new BlockFormatter([{ tags: [\"p\"] }], { style: { marginLeft: 30 } });\n\n               formatter.apply(nodes);\n           }\n       },\n\n       getListTypeAttr: function(list) {\n           var type = list.getAttribute(\"type\");\n           var styleType = list.style.listStyleType;\n\n           return type ? { type: type } : { style: { listStyleType: styleType } };\n       },\n\n       mapImmutables: function(nodes) {\n           if (!this.immutables) {\n               return nodes;\n           } else {\n               var immutables = [];\n               return $.map(nodes, function(node) {\n                   var immutable = Editor.Immutables.immutableParent(node);\n                   if (immutable) {\n                       if ($.inArray(immutable, immutables) === -1) {\n                           immutables.push(immutable);\n                       } else {\n                           return null;\n                       }\n                   }\n                   return immutable || node;\n               });\n           }\n       },\n\n       remove: function(nodes) {\n           nodes = dom.filterBy(nodes, dom.htmlIndentSpace, true);\n           var formatNodes = this.finder.findSuitable(nodes),\n               targetNode, i, len, list, listParent, siblings,\n               formatNode, marginLeft;\n\n           formatNodes = this.mapImmutables(formatNodes);\n\n           for (i = 0, len = formatNodes.length; i < len; i++) {\n               formatNode = $(formatNodes[i]);\n\n               if (formatNode.is(\"li\")) {\n                   list = formatNode.parent();\n                   listParent = list.parent();\n                   // listParent will be ul or ol in case of invalid dom - <ul><li></li><ul><li></li></ul></ul>\n                   if (listParent.is(\"li,ul,ol\") && !indent(list[0])) {\n                       // skip already processed nodes\n                       if (targetNode && $.contains(targetNode, listParent[0])) {\n                           continue;\n                       }\n\n                       siblings = formatNode.nextAll(\"li\");\n                       if (siblings.length) {\n                           $(list[0].cloneNode(false)).appendTo(formatNode).append(siblings);\n                       }\n\n                       if (listParent.is(\"li\")) {\n                           formatNode.insertAfter(listParent);\n                       } else {\n                           formatNode.appendTo(listParent);\n                       }\n\n                       if (!list.children(\"li\").length) {\n                           list.remove();\n                       }\n\n                       continue;\n                   } else {\n                       if (targetNode == list[0]) {\n                           // removing format on sibling LI elements\n                           continue;\n                       }\n                       targetNode = list[0];\n                   }\n               } else {\n                   targetNode = formatNodes[i];\n               }\n\n               marginLeft = parseInt(indent(targetNode), 10) - 30;\n               indent(targetNode, marginLeft);\n           }\n       }\n\n   });\n\n   var IndentCommand = Command.extend({\n       init: function(options) {\n           var that = this;\n           options.formatter = /** @ignore */ {\n               toggle: (function(range) {\n                   var indentFormatter = new IndentFormatter();\n                   indentFormatter.immutables = this.editor && this.editor.options.immutables;\n                   indentFormatter.apply(RangeUtils.nodes(range));\n               }).bind(that)\n           };\n           Command.fn.init.call(this, options);\n       }\n   });\n\n   var OutdentCommand = Command.extend({\n       init: function(options) {\n           var that = this;\n           options.formatter = {\n               toggle: (function(range) {\n                   var indentFormatter = new IndentFormatter();\n                   indentFormatter.immutables = this.editor && this.editor.options.immutables;\n                   indentFormatter.remove(RangeUtils.nodes(range));\n               }).bind(that)\n           };\n           Command.fn.init.call(this, options);\n       }\n   });\n\n   var OutdentTool = Tool.extend({\n       init: function(options) {\n           Tool.fn.init.call(this, options);\n\n           this.finder = new BlockFormatFinder([{ tags: blockElements }]);\n       },\n\n       initialize: function(ui, editor) {\n           $.extend(this.options, {\n               immutables: editor && editor.options.immutables\n           });\n       },\n\n       update: function(ui, nodes) {\n           var suitableNodes = this.finder.findSuitable(nodes),\n               toolbar = ui.closest(\".k-toolbar\").data(\"kendoToolBar\"),\n               isOutdentable, listParentsCount, i, len, suitable, immutableParent;\n\n           for (i = 0, len = suitableNodes.length; i < len; i++) {\n               suitable = suitableNodes[i];\n\n               if (this.options.immutables) {\n                   immutableParent = Editor.Immutables.immutableParent(suitable);\n\n                   if (immutableParent) {\n                       suitable = immutableParent;\n                   }\n               }\n\n               isOutdentable = indent(suitable);\n\n               if (!isOutdentable) {\n                   listParentsCount = $(suitable).parents(\"ul,ol\").length;\n                   isOutdentable = (dom.is(suitable, \"li\") && (listParentsCount > 1 || indent(suitable.parentNode))) ||\n                                   (dom.ofType(suitable, [\"ul\",\"ol\"]) && listParentsCount > 0);\n               }\n\n               if (isOutdentable) {\n                   toolbar.enable(ui, true);\n                   return;\n               }\n           }\n\n           toolbar.enable(ui, false);\n       }\n   });\n\n   extend(Editor, {\n       IndentFormatter: IndentFormatter,\n       IndentCommand: IndentCommand,\n       OutdentCommand: OutdentCommand,\n       OutdentTool: OutdentTool\n   });\n\n   registerTool(\"indent\", new Tool({ command: IndentCommand }));\n   registerTool(\"outdent\", new OutdentTool({ command: OutdentCommand, ui: { enable: false } }));\n\n   })(window.kendo.jQuery);\n\n   (function($) {\n\n   // Imports ================================================================\n   var kendo = window.kendo,\n       extend = $.extend,\n       editorNS = kendo.ui.editor,\n       dom = editorNS.Dom,\n       Command = editorNS.Command,\n       Tool = editorNS.Tool,\n       BlockFormatter = editorNS.BlockFormatter,\n       normalize = dom.normalize,\n       RangeUtils = editorNS.RangeUtils,\n       registerTool = editorNS.EditorUtils.registerTool;\n\n   var ParagraphCommand = Command.extend({\n       init: function(options) {\n           this.options = options;\n           Command.fn.init.call(this, options);\n       },\n\n       _insertMarker: function(doc, range) {\n           var marker = dom.create(doc, 'a'), container;\n           marker.className = \"k-marker\";\n\n           range.insertNode(marker);\n\n           if (!marker.parentNode) {\n               // inserting paragraph in Firefox full body range\n               container = range.commonAncestorContainer;\n               container.innerHTML = \"\";\n               container.appendChild(marker);\n           }\n\n           normalize(marker.parentNode);\n\n           return marker;\n       },\n\n       _moveFocus: function(range, candidate) {\n           if (dom.isEmpty(candidate)) {\n               range.setStartBefore(candidate);\n           } else {\n               range.selectNodeContents(candidate);\n\n               var focusNode = RangeUtils.textNodes(range)[0];\n\n               if (!focusNode) {\n                   while (candidate.childNodes.length && !dom.is(candidate.firstChild, \"br\")) {\n                       candidate = candidate.firstChild;\n                   }\n\n                   focusNode = candidate;\n               }\n\n               if (dom.isEmpty(focusNode)) {\n                   range.setStartBefore(focusNode);\n               } else {\n                   if (dom.emptyNode(focusNode)) {\n                       focusNode.innerHTML = \"\\ufeff\";\n                   }\n                   var startNode = focusNode.firstChild || focusNode;\n                   if (dom.isDataNode(startNode)) {\n                       range.setStart(startNode, 0);\n                   } else {\n                       range.setStartBefore(startNode);\n                   }\n               }\n           }\n       },\n\n       shouldTrim: function(range) {\n           var blocks = 'p,h1,h2,h3,h4,h5,h6'.split(','),\n               startInBlock = dom.parentOfType(range.startContainer, blocks),\n               endInBlock = dom.parentOfType(range.endContainer, blocks);\n           return (startInBlock && !endInBlock) || (!startInBlock && endInBlock);\n       },\n\n       _blankAfter: function(node) {\n           while (node && (dom.isMarker(node) || dom.stripBom(node.nodeValue) === \"\")) {\n               node = node.nextSibling;\n           }\n\n           return !node;\n       },\n\n       exec: function() {\n           const range = this.getRange();\n           const doc = RangeUtils.documentFromRange(range);\n           let parent, previous, next, paragraph, marker, li, heading, tableNode, rng,\n           shouldTrim;\n           const emptyParagraphContent = editorNS.emptyElementContent;\n\n           this.expandImmutablesIn(range);\n\n           shouldTrim = this.shouldTrim(range);\n\n           range.deleteContents();\n           marker = this._insertMarker(doc, range);\n\n           dom.stripBomNode(marker.previousSibling);\n           dom.stripBomNode(marker.nextSibling);\n\n           li = dom.closestEditableOfType(marker, ['li']);\n           heading = dom.closestEditableOfType(marker, 'h1,h2,h3,h4,h5,h6'.split(','));\n           tableNode = dom.is(marker.parentNode, 'table') && marker.parentNode;\n\n           if (li) {\n               // hitting 'enter' in empty li\n               if (dom.emptyNode(li)) {\n                   paragraph = dom.create(doc, 'p');\n\n                   if (dom.next(li)) {\n                       rng = range.cloneRange();\n                       rng.selectNode(li);\n\n                       RangeUtils.split(rng, li.parentNode);\n                   }\n\n                   const br = $(\"br\", li);\n                   if (br.length == 1) {\n                       br.remove();\n                   }\n\n                   const parentNode = li.parentNode;\n                   const parentChildrenLength = li.parentNode.children.length;\n                   const firstChild = parentChildrenLength >= 1 && li.childNodes.length == 1 && li.children[0];\n\n                   dom.insertAfter(paragraph, parentNode);\n                   dom.remove(parentChildrenLength == 1 ? li.parentNode : li);\n\n                   if (firstChild && firstChild !== marker) {\n                       paragraph.appendChild(firstChild);\n                       paragraph.appendChild(marker);\n                   } else {\n                       paragraph.innerHTML = emptyParagraphContent;\n                   }\n                   next = paragraph;\n               }\n           } else if (heading && this._blankAfter(marker)) {\n               paragraph = this._insertParagraphAfter(heading);\n               dom.remove(marker);\n               next = paragraph;\n           } else if (tableNode) {\n               paragraph = this._insertParagraphAfter(tableNode);\n               dom.remove(marker);\n               next = paragraph;\n           }\n\n           if (!next) {\n               if (!(li || heading)) {\n                   new BlockFormatter([{ tags: ['p'] }]).apply([marker]);\n               }\n\n               range.selectNode(marker);\n\n               const headingDomName = heading ? dom.name(heading) : 'p';\n               parent = dom.parentOfType(marker, [li ? 'li' : headingDomName]);\n\n               RangeUtils.split(range, parent, shouldTrim);\n\n               previous = parent.previousSibling;\n\n               if (dom.is(previous, 'li') && previous.firstChild && !dom.is(previous.firstChild, 'br')) {\n                   previous = previous.firstChild;\n               }\n\n               next = parent.nextSibling;\n\n               this.clean(previous, { links: true });\n               this.clean(next, { links: true });\n\n               if (dom.is(next, 'li') && next.firstChild && !dom.is(next.firstChild, 'br')) {\n                   next = next.firstChild;\n               }\n\n               dom.remove(parent);\n\n               // normalize updates the caret display in Gecko\n               normalize(previous);\n           }\n\n           normalize(next);\n\n           this._moveFocus(range, next);\n\n           range.collapse(true);\n\n           dom.scrollTo(next, true);\n\n           RangeUtils.selectRange(range);\n       },\n\n       _insertParagraphAfter: function(node) {\n           var range = this.getRange();\n           var doc = RangeUtils.documentFromRange(range);\n           var emptyElementContent = editorNS.emptyElementContent;\n           var paragraph = dom.create(doc, 'p');\n\n           dom.insertAfter(paragraph, node);\n           paragraph.innerHTML = emptyElementContent;\n\n           return paragraph;\n       },\n\n       clean: function(node, options) {\n           var root = node;\n\n           if (node.firstChild && dom.is(node.firstChild, 'br')) {\n               dom.remove(node.firstChild);\n           }\n\n           if (dom.isDataNode(node) && !node.nodeValue) {\n               node = node.parentNode;\n           }\n\n           if (node) {\n               var siblings = false;\n               while (node.firstChild && node.firstChild.nodeType == 1) {\n                   siblings = siblings || (dom.significantNodes(node.childNodes).length > 1);\n                   node = node.firstChild;\n               }\n\n               if (!dom.isEmpty(node) && node.className != \"k-br\" && /^\\s*$/.test(node.innerHTML) && !siblings) {\n                   $(root).find(\".k-br\").remove();\n                   node.innerHTML = editorNS.emptyElementContent;\n               }\n\n               if (options && options.links) {\n                   while (node != root) {\n                       if (dom.is(node, \"a\") && dom.emptyNode(node)) {\n                           dom.unwrap(node);\n                           break;\n                       }\n                       node = node.parentNode;\n                   }\n               }\n           }\n       }\n   });\n\n   var NewLineCommand = Command.extend({\n       init: function(options) {\n           this.options = options;\n           Command.fn.init.call(this, options);\n       },\n\n       exec: function() {\n           var range = this.getRange();\n           this.expandImmutablesIn(range);\n\n           var br = dom.create(RangeUtils.documentFromRange(range), 'br');\n           var node = range.startContainer;\n           var filler;\n           var browser = kendo.support.browser;\n           var oldIE = browser.msie && browser.version < 11;\n           var tableNode = dom.is(node, 'table') && node;\n           var kbrParent;\n\n           range.deleteContents();\n           if (tableNode) {\n               dom.insertAfter(br, tableNode);\n           } else {\n               kbrParent = $(node).closest('.k-br');\n               range.insertNode(br);\n\n               if (kbrParent.length) {\n                   // pressing enter in an k-br node\n                   dom.unwrap(kbrParent[0]);\n               }\n           }\n\n           normalize(br.parentNode);\n\n           if (!oldIE && (!br.nextSibling || dom.isWhitespace(br.nextSibling))) {\n               // Gecko and WebKit cannot put the caret after only one br.\n               if (!!br.nextSibling && dom.isWhitespace(br.nextSibling)) {\n                   $(br.nextSibling).remove();\n               }\n               filler = br.cloneNode(true);\n               filler.className = 'k-br';\n               dom.insertAfter(filler, br);\n           }\n\n           range.setStartAfter(br);\n           range.collapse(true);\n\n           dom.scrollTo(br.nextSibling || br, true);\n\n           RangeUtils.selectRange(range);\n       }\n   });\n\n   extend(editorNS, {\n       ParagraphCommand: ParagraphCommand,\n       NewLineCommand: NewLineCommand\n   });\n\n   registerTool(\"insertLineBreak\", new Tool({ key: 13, shift: true, command: NewLineCommand }));\n   registerTool(\"insertParagraph\", new Tool({ key: 13, command: ParagraphCommand }));\n\n   })(window.kendo.jQuery);\n\n   (function($, undefined$1) {\n\n   var kendo = window.kendo,\n       extend = $.extend,\n       encode = kendo.htmlEncode,\n       Editor = kendo.ui.editor,\n       EditorUtils = Editor.EditorUtils,\n       dom = Editor.Dom,\n       registerTool = EditorUtils.registerTool,\n       RangeUtils = Editor.RangeUtils,\n       Command = Editor.Command,\n       LinkFormatter = Editor.LinkFormatter,\n       textNodes = RangeUtils.textNodes,\n       keys = kendo.keys,\n       KEDITORFILEURL = \"#k-editor-file-url\",\n       KEDITORFILETEXT = \"#k-editor-file-text\",\n       KEDITORFILETITLE = \"#k-editor-file-title\";\n\n   var FileCommand = Command.extend({\n       init: function(options) {\n           var that = this;\n           Command.fn.init.call(that, options);\n\n           that.formatter = new LinkFormatter();\n\n           that.async = true;\n           that.attributes = {};\n       },\n\n       insertFile: function(file, range) {\n           var attributes = this.attributes;\n           var doc = RangeUtils.documentFromRange(range);\n\n           if (attributes.href && attributes.href != \"http://\") {\n\n               if (!file) {\n                   file = dom.create(doc, \"a\", { href: attributes.href });\n                   file.innerHTML = attributes.innerHTML;\n                   file.title = attributes.title;\n\n                   range.deleteContents();\n                   range.insertNode(file);\n\n                   if (!file.nextSibling) {\n                       dom.insertAfter(doc.createTextNode(\"\\ufeff\"), file);\n                   }\n\n                   range.setStartAfter(file);\n                   range.setEndAfter(file);\n                   RangeUtils.selectRange(range);\n                   return true;\n               } else {\n                   dom.attr(file, attributes);\n               }\n           }\n\n           return false;\n       },\n\n       redo: function() {\n           var that = this,\n               range = that.lockRange();\n\n           this.formatter.apply(range, this.attributes);\n           that.releaseRange(range);\n       },\n\n       exec: function() {\n           var that = this,\n               range = that.lockRange(),\n               nodes = textNodes(range),\n               applied = false,\n               file = nodes.length ? this.formatter.finder.findSuitable(nodes[0]) : null,\n               dialog,\n               form,\n               isIE = kendo.support.browser.msie,\n               options = that.editor.options,\n               messages = options.messages,\n               fileBrowser = options.fileBrowser,\n               showBrowser = !!(kendo.ui.FileBrowser && fileBrowser && fileBrowser.transport && fileBrowser.transport.read !== undefined$1),\n               dialogOptions = {\n                   title: messages.insertFile,\n                   visible: false,\n                   resizable: showBrowser\n               };\n\n           this.expandImmutablesIn(range);\n\n           function apply(e) {\n               var element = dialog.element,\n                   href = element.find(KEDITORFILEURL).val().replace(/ /g, \"%20\"),\n                   innerHTML = element.find(KEDITORFILETEXT).val(),\n                   title = element.find(KEDITORFILETITLE).val();\n\n               that.attributes = {\n                   href: href,\n                   innerHTML: innerHTML !== \"\" ? innerHTML : href,\n                   title: title\n               };\n\n               applied = that.insertFile(file, range);\n\n               close(e);\n\n               if (that.change) {\n                   that.change();\n               }\n           }\n\n           function close(e) {\n               e.preventDefault();\n               form.destroy();\n               dialog.destroy();\n\n               dom.windowFromDocument(RangeUtils.documentFromRange(range)).focus();\n               if (!applied) {\n                   that.releaseRange(range);\n               }\n           }\n\n           function keyDown(e) {\n               if (e.keyCode == keys.ENTER) {\n                   apply(e);\n               } else if (e.keyCode == keys.ESC) {\n                   close(e);\n               }\n           }\n\n           dialogOptions.close = close;\n\n           if (showBrowser) {\n               dialogOptions.width = 750;\n           }\n           dialogOptions.minWidth = 350;\n\n           dialog = this.createDialog(\"<div/>\", dialogOptions).data(\"kendoWindow\");\n           form = that._createForm(dialog, showBrowser);\n\n           dialog.element.toggleClass(\"k-filebrowser-dialog\", showBrowser);\n           dialog.wrapper\n           .find(\".k-dialog-insert\").on(\"click\", apply).end()\n           .find(\".k-dialog-close\").on(\"click\", close).end()\n           .find(\".k-form-field input\").on(\"keydown\", keyDown).end()\n           // IE < 8 returns absolute url if getAttribute is not used\n           .find(KEDITORFILEURL).val(file ? file.getAttribute(\"href\", 2) : \"http://\").end()\n           .find(KEDITORFILETEXT).val(file ? file.innerText : \"\").end()\n           .find(KEDITORFILETITLE).val(file ? file.title : \"\").end();\n\n           var element = dialog.element;\n           if (showBrowser) {\n               that._fileBrowser = new kendo.ui.FileBrowser(\n                   element.find(\".k-filebrowser\"),\n                   extend({}, fileBrowser)\n               );\n\n               that._fileBrowser.bind(\"change\", function(ev) {\n                   if (ev.selected.get(\"type\") === \"f\") {\n                       element.find(KEDITORFILEURL).val(this.value());\n                   }\n               } );\n\n               that._fileBrowser.bind(\"apply\", apply);\n           }\n\n           if (isIE) {\n               var dialogHeight = element.closest(\".k-window\").height();\n               element.css(\"max-height\", dialogHeight);\n           }\n           dialog.center().open();\n           element.find(KEDITORFILEURL).trigger(\"focus\").select();\n       },\n\n       _createForm: function(dialog, showBrowser) {\n           var that = this;\n           var formElement = $(\"<div/>\").appendTo(dialog.element);\n           var messages = that.editor.options.messages;\n\n           var form = formElement.kendoForm({\n               renderButtons: false,\n               items: [\n                   {\n                       field: \"k-editor-file-url\",\n                       label: encode(messages.fileWebAddress),\n                       editor: \"TextBox\"\n                   },\n                   {\n                       field: \"k-editor-file-text\",\n                       label: encode(messages.fileText),\n                       editor: \"TextBox\"\n                   },\n                   {\n                       field: \"k-editor-file-title\",\n                       label: encode(messages.fileTitle),\n                       editor: \"TextBox\"\n                   }\n               ]\n           }).data(\"kendoForm\");\n\n           if (showBrowser) {\n               formElement.prepend($('<div class=\"k-filebrowser\"></div>'));\n           }\n\n           dialog.element.after($(that._actionButtonsTemplate({ messages, insertButtonIcon: \"file-add\", cancelButtonIcon: \"cancel-outline\" })));\n\n           return form;\n       }\n\n   });\n\n   kendo.ui.editor.FileCommand = FileCommand;\n\n   registerTool(\"insertFile\", new Editor.Tool({ command: FileCommand }));\n\n   })(window.kendo.jQuery);\n\n   (function($, undefined$1) {\n\n   var kendo = window.kendo,\n       extend = $.extend,\n       Editor = kendo.ui.editor,\n       dom = Editor.Dom,\n       RangeUtils = Editor.RangeUtils,\n       Command = Editor.Command,\n\n       NS = \"kendoEditor\",\n       ACTIVESTATE = \"k-active\",\n       SELECTEDSTATE = \"k-selected\",\n       SCOPE = \"scope\",\n       ROW = \"row\",\n       COL = \"col\",\n       ROWGROUP = \"rowgroup\",\n       COLGROUP = \"colgroup\",\n       COLSPAN = \"colspan\",\n       ROWSPAN = \"rowspan\",\n       TABLE = \"table\",\n       THEAD = \"thead\",\n       TBODY = \"tbody\",\n       TR = \"tr\",\n       TD = \"td\",\n       TH = \"th\",\n\n       Tool = Editor.Tool,\n       InsertHtmlCommand = Editor.InsertHtmlCommand,\n       BlockFormatFinder = Editor.BlockFormatFinder,\n       BlockFormatTool = Editor.BlockFormatTool,\n       FormatCommand = Editor.FormatCommand,\n       registerTool = Editor.EditorUtils.registerTool,\n       registerFormat = Editor.EditorUtils.registerFormat,\n       formats = kendo.ui.Editor.fn.options.formats,\n       getTouches = kendo.getTouches;\n   var template = kendo.template;\n\n   var columnTemplate = ({ width, content }) => `<td style=\"width:${width}%;\">${content}</td>`;\n\n   var tableFormatFinder = new BlockFormatFinder([{ tags: [TABLE] }]);\n\n   var TableCommand = InsertHtmlCommand.extend({\n       init: function(options) {\n           var o = $.extend({\n               postProcess: this.postProcess,\n               skipCleaners: true\n           }, options || {});\n\n           InsertHtmlCommand.fn.init.call(this, o);\n       },\n       _tableHtml: function(rows, columns) {\n           rows = rows || 1;\n           columns = columns || 1;\n           var columnHtml = template(columnTemplate)({ width: 100 / columns, content: Editor.emptyTableCellContent });\n           var rowHeight = 100 / rows;\n\n           return \"<table class='k-table' data-last>\" +\n                       new Array(rows + 1).join(\n                       \"<tr style='height:\" + rowHeight + \"%;'>\" +\n                           new Array(columns + 1).join(columnHtml) +\n                       \"</tr>\") +\n                  \"</table>\";\n       },\n\n       postProcess: function(editor, range) {\n           var insertedTable = $(\"table[data-last]\", editor.document).removeAttr(\"data-last\");\n\n           range.setStart(insertedTable.find(TD)[0], 0);\n           range.collapse(true);\n\n           editor.selectRange(range);\n       },\n\n       exec: function() {\n           var options = this.options;\n           options.html = this._tableHtml(options.rows, options.columns);\n\n           InsertHtmlCommand.fn.exec.call(this);\n       }\n   });\n\n   var PopupTool = Tool.extend({\n       initialize: function(ui, editor) {\n           var that = this;\n           var btn = $(\"<button>\" + editor.options.messages.tableWizard + \"</button>\");\n           var popup = $(this.options.popupTemplate).appendTo(\"body\").kendoPopup({\n               anchor: ui,\n               copyAnchorStyles: false,\n               open: this._open.bind(this),\n               activate: this._activate.bind(this),\n               close: this._close.bind(this)\n           }).data(\"kendoPopup\");\n\n           ui.on(\"click\", this._toggle.bind(this))\n             .on(\"keydown\", this._keydown.bind(this));\n\n           this._editor = editor;\n           this._popup = popup;\n\n           editor.tablePopup = this._popup;\n\n           var tableWizard = new Editor.TableWizardTool({\n               command: Editor.TableWizardCommand,\n               insertNewTable: true\n           });\n\n           registerTool(\"tableWizardInsert\", tableWizard);\n\n           btn.appendTo(popup.element);\n           btn.kendoButton({\n               icon: \"table-wizard\"\n           });\n\n           btn.on(\"click\", () => {\n               that._editor.exec(\"tableWizardInsert\");\n           });\n       },\n\n       popup: function() {\n           return this._popup;\n       },\n\n       _activate: $.noop,\n\n       _open: function() {\n           this._popup.options.anchor.addClass(ACTIVESTATE);\n       },\n\n       _close: function() {\n           this._popup.options.anchor.removeClass(ACTIVESTATE);\n       },\n\n       _keydown: function(e) {\n           var that = this,\n               keys = kendo.keys,\n               key = e.keyCode;\n\n           if (key == keys.ESC) {\n               that._popup.close();\n           } else if (key == keys.DOWN && e.altKey) {\n               that._popup.open();\n               that._setTableSize({ row: 1, col: 1 });\n           } else if (key === keys.ENTER) {\n               setTimeout(() => {\n                   that._setTableSize({ row: 1, col: 1 });\n               });\n           }\n       },\n\n       _toggle: function(e) {\n           var button = $(e.target).closest(\".k-tool\");\n\n           if (!button.hasClass(\"k-disabled\")) {\n               this.popup().toggle();\n           }\n       },\n\n       update: function(ui) {\n           var popup = this.popup();\n\n           if (popup.wrapper && popup.wrapper.css(\"display\") == \"block\") {\n               popup.close();\n           }\n\n           ui.removeClass(\"k-hover\");\n       },\n\n       destroy: function() {\n           if (this._popup) {\n               this._popup.destroy();\n           }\n       }\n   });\n\n   var InsertTableTool = PopupTool.extend({\n       init: function(options) {\n           this.cols = 8;\n           this.rows = 6;\n\n           PopupTool.fn.init.call(this, $.extend(options, {\n               command: TableCommand,\n               popupTemplate:\n                   \"<div class='k-ct-popup'>\" +\n                       \"<div>\" +\n                           new Array(this.cols * this.rows + 1).join(\"<span class='k-ct-cell k-disabled'></span>\") +\n                       \"</div>\" +\n                       \"<div class='k-status'></div>\" +\n                   \"</div>\"\n           }));\n       },\n\n       _activate: function() {\n           var that = this,\n               element = that._popup.element,\n               cells = element.find(\".k-ct-cell\"),\n               firstCell = cells.eq(0),\n               lastCell = cells.eq(cells.length - 1),\n               start = kendo.getOffset(firstCell),\n               end = kendo.getOffset(lastCell),\n               cols = that.cols,\n               rows = that.rows,\n               cellWidth, cellHeight;\n\n           element.find(\"*\").addBack().attr(\"unselectable\", \"on\");\n\n           end.left += lastCell[0].offsetWidth;\n           end.top += lastCell[0].offsetHeight;\n\n           cellWidth = (end.left - start.left) / cols;\n           cellHeight = (end.top - start.top) / rows;\n\n           function tableFromLocation(e) {\n               var w = $(window);\n               return {\n                   row: Math.floor((e.clientY + w.scrollTop() - start.top) / cellHeight) + 1,\n                   col: Math.floor((e.clientX + w.scrollLeft() - start.left) / cellWidth) + 1\n               };\n           }\n\n           element.autoApplyNS(NS)\n               .on(\"mousemove\", \".k-ct-cell\", function(e) {\n                   that._setTableSize(tableFromLocation(e));\n               })\n               .on(\"mouseleave\", \".k-ct-cell\", function() {\n                   that._setTableSize();\n               })\n               .on(\"down\", \".k-ct-cell\", function(e) {\n                   e.preventDefault();\n                   var touch = getTouches(e)[0];\n                   that._exec(tableFromLocation(touch.location));\n               });\n       },\n\n       _valid: function(size) {\n           return size && size.row > 0 && size.col > 0 && size.row <= this.rows && size.col <= this.cols;\n       },\n\n       _exec: function(size) {\n           if (this._valid(size)) {\n               this._editor.exec(\"createTable\", {\n                   rows: size.row,\n                   columns: size.col\n               });\n               this._popup.close();\n           }\n       },\n\n       _setTableSize: function(size) {\n           var element = this._popup.element;\n           var status = element.find(\".k-status\");\n           var cells = element.find(\".k-ct-cell\");\n           var cols = this.cols;\n           var messages = this._editor.options.messages;\n\n           if (this._valid(size)) {\n               status.text(kendo.format(messages.createTableHint, size.row, size.col));\n\n               cells.each(function(i) {\n                   $(this).toggleClass(\n                       SELECTEDSTATE,\n                       i % cols < size.col && i / cols < size.row\n                   );\n               });\n           } else {\n               status.text(messages.createTable);\n               cells.removeClass(SELECTEDSTATE);\n           }\n       },\n\n       _keydown: function(e) {\n           var initiallyVisible = this._popup.visible();\n\n           PopupTool.fn._keydown.call(this, e);\n\n           if (!this._popup.visible()) {\n               return;\n           }\n\n           var keys = kendo.keys;\n           var key = e.keyCode;\n           var cells = this._popup.element.find(\".k-ct-cell\");\n           var focus = Math.max(cells.filter(\".k-selected\").last().index(), 0);\n           var selectedRows = Math.floor(focus / this.cols);\n           var selectedColumns = focus % this.cols;\n\n           var changed = false,\n               button;\n\n           if (key == keys.DOWN && !e.altKey) {\n               changed = true;\n               selectedRows++;\n           } else if (key == keys.UP) {\n               changed = true;\n               selectedRows--;\n           } else if (key == keys.RIGHT) {\n               changed = true;\n               selectedColumns++;\n           } else if (key == keys.LEFT) {\n               changed = true;\n               selectedColumns--;\n           } else if (key == keys.TAB) {\n               button = this._popup.element.find(\".k-button\");\n\n               if (button.length > 0) {\n                   changed = true;\n                   button.trigger(\"focus\");\n               }\n           }\n\n           var tableSize = {\n               row: Math.max(1, Math.min(this.rows, selectedRows + 1)),\n               col: Math.max(1, Math.min(this.cols, selectedColumns + 1))\n           };\n\n           if (key == keys.ENTER && initiallyVisible) {\n               this._exec(tableSize);\n           } else {\n               this._setTableSize(tableSize);\n           }\n\n           if (changed) {\n               e.preventDefault();\n               e.stopImmediatePropagation();\n           }\n       },\n\n       _open: function() {\n           var messages = this._editor.options.messages;\n\n           PopupTool.fn._open.call(this);\n\n           this.popup().element\n               .find(\".k-status\").text(messages.createTable).end()\n               .find(\".k-ct-cell\").removeClass(SELECTEDSTATE);\n       },\n\n       _close: function() {\n           PopupTool.fn._close.call(this);\n           this.popup().element.off(\".\" + NS);\n       }\n   });\n\n   var TableModificationCommand = Command.extend({\n       undo: function() {\n           var point = this.restorePoint;\n           point.restoreHtml();\n\n           $(this.editor.body).find(\".k-element-resize-handle-wrapper\")\n               .each(function(index,el) {\n                   el.remove();\n               });\n\n           this.editor.selectRange(point.toRange());\n       },\n       _clearColIndexAttr: function(table) {\n           dom.clearTableMappings(table, \"col-index\");\n       },\n       _mapColIndices: function(table) {\n           dom.reMapTableColumns(table, \"col-index\");\n       },\n       _findRowSpanCell: function(parent, rowIndex, colIndex) {\n           var row, cell;\n\n           for (var i = rowIndex; i >= 0; i--) {\n               row = parent.rows[i];\n               cell = $(row).find(\"[col-index=\" + colIndex + \"]\");\n\n               if (cell.length) {\n                   return cell;\n               }\n           }\n       },\n       _resetElementResizing: function(editor) {\n           editor._destroyResizings();\n           editor._initializeColumnResizing();\n           editor._initializeRowResizing();\n           editor._initializeElementResizing();\n       },\n       _findNextTdInRow: function(row, colIndex) {\n           var lastTd = row.find(\"td:last-child\"),\n               lastIndex = parseInt(lastTd.attr(\"col-index\"), 10) + lastTd.prop(\"colSpan\") - 1,\n               td;\n\n           for (var i = colIndex; i <= lastIndex; i++) {\n               td = row.find(\"[col-index=\" + i + \"]\");\n               if (td.length) {\n                   return td;\n               }\n           }\n       },\n       _adjustColgroups: function(row, table) {\n           var colElements = table.getElementsByTagName(COL),\n               colgroupElements = table.getElementsByTagName(COLGROUP),\n               cells = row.cells,\n               numberOfCells = cells.length,\n               i, colgroup, cell;\n\n           while (colElements.length > 0) {\n               colElements[0].remove();\n           }\n           while (colgroupElements.length > 0) {\n               colgroupElements[0].remove();\n           }\n\n           for (i = numberOfCells - 1; i >= 0; i--) {\n               cell = cells[i];\n               if (cell.getAttribute(SCOPE) === COLGROUP) {\n                   colgroup = dom.createEmptyNode(this.editor.document, COLGROUP);\n                   colgroup.setAttribute(\"span\", cell.getAttribute(COLSPAN));\n                   table.prepend(colgroup);\n               } else {\n                   table.prepend(dom.createEmptyNode(this.editor.document, COL));\n               }\n           }\n       },\n       _associateHeaderIds: function(table) {\n           dom.clearTableMappings(table, \"col-index\");\n           dom.reMapTableColumns(table, \"col-index\");\n           $(table).find(\"th, td\").removeAttr(\"id headers\");\n           dom.associateWithIds(table);\n       },\n       _getNumberOfColumns: function(table) {\n           return dom._getNumberOfColumns(table, \"td, th\");\n       }\n   });\n\n   var InsertRowCommand = TableModificationCommand.extend({\n       exec: function() {\n           var range = this.lockRange(true),\n               td = dom.closest(range.endContainer, [TD, TH]),\n               table = dom.closest(td, TABLE),\n               position = this.options.position || \"after\",\n               cellCount, row, cell,\n               newRow, rowIndex, rowSpanIndex, createdCell;\n\n           if (!table || (this.immutables() && Editor.Immutables.immutableParent(td))) {\n               this.releaseRange(range);\n               return;\n           }\n\n           this._mapColIndices(table);\n\n           row = td.parentNode;\n           rowIndex = dom.findNodeIndex(row, true);\n\n           if (td.rowSpan > 1 && position === \"after\") {\n               row = table.rows[rowIndex + td.rowSpan - 1];\n           }\n\n           cellCount = this._getNumberOfColumns(table);\n           newRow = row.cloneNode(true);\n           $(newRow).empty();\n\n           for (var i = 0; i < cellCount; i = i + cell.prop(\"colSpan\")) {\n               cell = $(row).find(\"[col-index=\" + i + \"]\");\n\n               if (cell.length) {\n                   if (cell.prop(\"rowSpan\") > 1 && position === \"after\" && cell) {\n                       cell.attr(ROWSPAN, cell.prop(\"rowSpan\") + 1);\n                   } else {\n                       this._appendCell(newRow, cell);\n                   }\n               } else {\n                   rowIndex = dom.findNodeIndex(row, true);\n                   cell = this._findRowSpanCell(row.parentElement, rowIndex, i);\n                   rowSpanIndex = cell.closest(TR).index();\n\n                   if (rowSpanIndex + cell.prop(\"rowSpan\") - 1 === rowIndex && position === \"after\") {\n                       this._appendCell(newRow, cell);\n                   } else {\n                       cell.attr(ROWSPAN, cell.prop(\"rowSpan\") + 1);\n                   }\n               }\n\n               createdCell = $(newRow).find(\"[col-index=\" + i + \"]\");\n               if (createdCell.attr(SCOPE) === ROWGROUP && !createdCell.attr(ROWSPAN)) {\n                   createdCell.attr(SCOPE, ROW);\n               }\n           }\n\n           if (position == \"before\") {\n               dom.insertBefore(newRow, row);\n           } else {\n               dom.insertAfter(newRow, row);\n           }\n\n           if ($(table).find(\"[headers]\").length > 0) {\n               this._associateHeaderIds(table);\n           }\n\n           this._clearColIndexAttr(table);\n           this.releaseRange(range);\n\n           this._resetElementResizing(this.editor);\n       },\n       _appendCell: function(row, cell) {\n           var newCell;\n\n           newCell = cell.clone();\n           newCell.html(Editor.emptyTableCellContent);\n           newCell.removeAttr(ROWSPAN);\n           newCell.appendTo(row);\n       }\n   });\n\n   var InsertColumnCommand = TableModificationCommand.extend({\n       exec: function() {\n           var range = this.lockRange(true),\n               td = dom.closest(range.endContainer, [TD, TH]),\n               table = dom.closest(td, TABLE),\n               colElements = table.getElementsByTagName(COL),\n               colgroupElements = table.getElementsByTagName(COLGROUP),\n               columnIndex,\n               i,\n               rows = table && table.rows,\n               cell,\n               newCell,\n               position = this.options.position || \"after\";\n\n\n           if (!td || (this.immutables() && Editor.Immutables.immutableParent(td))) {\n               this.releaseRange(range);\n               return;\n           }\n\n           this._mapColIndices(table);\n\n           columnIndex = parseInt(td.getAttribute(\"col-index\"),10);\n\n           if (td.colSpan > 1 && position === \"after\") {\n               td.setAttribute(\"col-index\", columnIndex + td.colSpan - 1);\n               columnIndex = columnIndex + td.colSpan - 1;\n           }\n\n           for (i = 0; i < rows.length; i++) {\n               cell = this._processForColSpan(rows[i], columnIndex, position, td);\n\n               if (!cell) {\n                   continue;\n               }\n\n               newCell = cell.cloneNode();\n               newCell.innerHTML = Editor.emptyTableCellContent;\n               newCell.removeAttribute(COLSPAN);\n\n               if (newCell.getAttribute(SCOPE) && newCell.getAttribute(SCOPE) === COLGROUP) {\n                   newCell.setAttribute(SCOPE, COL);\n               }\n\n               if (position == \"before\") {\n                   dom.insertBefore(newCell, cell);\n               } else {\n                   dom.insertAfter(newCell, cell);\n               }\n\n               this._resizeCells(newCell, cell);\n           }\n\n           if (colElements.length > 0 || colgroupElements.length > 0) {\n               this._adjustColgroups(rows[0], table);\n           }\n\n           if ($(table).find(\"[headers]\").length > 0) {\n               this._associateHeaderIds(table);\n           }\n\n           this._clearColIndexAttr(table);\n           this.releaseRange(range);\n\n           this._resetElementResizing(this.editor);\n       },\n       _processForColSpan: function(row, columnIndex, position, selectedCell) {\n           var cell,\n               colSpanEffect,\n               index = columnIndex - 1;\n\n           cell = $(row).find(\"[col-index=\" + columnIndex + \"]\")[0];\n\n           if (cell && cell.colSpan > 1 && position === \"after\" && cell !== selectedCell) {\n               cell.colSpan += 1;\n               return;\n           }\n\n           if (cell) {\n               return cell;\n           }\n\n           for (index; index >= 0; index--) {\n               cell = $(row).find(\"[col-index=\" + index + \"]\")[0];\n\n               if (cell && cell.colSpan > 1) {\n                   break;\n               }\n           }\n\n           if (!cell) {\n               return;\n           }\n\n           colSpanEffect = parseInt(cell.getAttribute(\"col-index\"),10) + cell.colSpan - 1;\n\n           if (colSpanEffect === columnIndex && position === \"after\") {\n               return cell;\n           } else if (columnIndex <= colSpanEffect) {\n               cell.setAttribute(COLSPAN, cell.colSpan + 1);\n           }\n       },\n       _resizeCells: function(newCell, cell) {\n           var width = newCell.style.width,\n           parsedWidth, unit, calculatedWidth;\n\n           if (!width) {\n               return;\n           }\n\n           parsedWidth = parseFloat(width);\n           unit = width.slice(parsedWidth.toString().length);\n           calculatedWidth = (parsedWidth / 2) + unit;\n\n           newCell.style.width = calculatedWidth;\n           cell.style.width = calculatedWidth;\n       }\n   });\n\n   var DeleteRowCommand = TableModificationCommand.extend({\n       exec: function() {\n           var range = this.lockRange();\n           var rows = RangeUtils.mapAll(range, function(node) {\n               return $(node).closest(TR)[0];\n           });\n           var td = dom.closest(range.endContainer, [TD, TH]);\n           var row = rows[0];\n           var rowSpan = td ? td.rowSpan : 1;\n           var rowIndex = $(rows[0]).index();\n           var table = dom.closest(row, TABLE);\n           var rowParent = row.parentElement;\n           var focusElement;\n\n           if (!table || (this.immutables() && Editor.Immutables.immutableParent(row))) {\n               this.releaseRange(range);\n               return;\n           }\n\n           for (var x = 0; x < rowSpan; x++) {\n               if (rows.indexOf(rowParent.rows[rowIndex + x]) < 0) {\n                   rows.push(rowParent.rows[rowIndex + x]);\n               }\n           }\n\n           if (table.rows.length <= rows.length) {\n               focusElement = dom.next(table);\n               if (!focusElement || dom.insignificant(focusElement)) {\n                   focusElement = dom.prev(table);\n               }\n\n               if (focusElement && focusElement.rows) {\n                   focusElement = focusElement.rows[0].cells[0];\n               }\n\n               dom.remove(table);\n               this._resetElementResizing(this.editor);\n           } else if (rowParent.rows.length <= rows.length) {\n               focusElement = rowParent.nextSibling;\n\n               if (!focusElement) {\n                   focusElement = rowParent.previousSibling;\n               }\n\n               dom.remove(rowParent);\n           } else {\n               this._mapColIndices(table);\n\n               for (var i = 0; i < rows.length; i++) {\n                   row = rows[i];\n                   dom.removeTextSiblings(row);\n                   focusElement = dom.next(row) || dom.prev(row);\n                   focusElement = focusElement.cells[0];\n\n                   // IE needs to focus the new row before removing the old one\n                   this._focusElement(range, focusElement);\n                   focusElement = null;\n\n                   this._handleRowSpanCells(table, row);\n\n                   dom.remove(row);\n               }\n\n               this._clearColIndexAttr(table);\n           }\n\n           if ($(table).find(\"[headers]\").length > 0) {\n               this._associateHeaderIds(table);\n           } else if (dom.is(rowParent, THEAD) && $(table).find(\"[scope]\").length > 0) {\n               this._adjustColgroups(rowParent.rows[0], table);\n           }\n\n           if (focusElement) {\n               this._focusElement(range, focusElement);\n           }\n\n           this._resetElementResizing(this.editor);\n       },\n       _focusElement: function(range, node) {\n           range.setStart(node, 0);\n           range.collapse(true);\n           this.editor.selectRange(range);\n       },\n       _handleRowSpanCells: function(table, row) {\n           var index, cell, adjacentCell, nextRow, rowIndex = dom.findNodeIndex(row, true),\n               firstRow = table.rows[0],\n               lastCell = firstRow.cells[firstRow.cells.length - 1],\n               lastIndex = parseInt(lastCell.getAttribute(\"col-index\"),10) + lastCell.colSpan - 1;\n\n           for (index = 0; index <= lastIndex; index = index + cell.prop(\"colSpan\")) {\n               cell = $(row).find(\"[col-index=\" + index + \"]\");\n\n               if (cell.length && cell.prop(\"rowSpan\") > 1) {\n                   nextRow = table.rows[rowIndex + 1];\n                   adjacentCell = $(nextRow).find(\"[col-index=\" + (index + 1) + \"]\");\n\n                   if (adjacentCell.length) {\n                       adjacentCell.before(cell);\n                   } else {\n                       $(nextRow).append(cell);\n                   }\n                   this._reduceRowSpan(cell);\n               }\n\n               if (!cell.length) {\n                   cell = this._findRowSpanCell(row.parentElement, rowIndex, index);\n                   this._reduceRowSpan(cell);\n               }\n           }\n       },\n       _reduceRowSpan: function(td) {\n           var rowSpanValue = td.prop(\"rowSpan\") - 1;\n\n           if (rowSpanValue <= 1) {\n               td.removeAttr(ROWSPAN);\n               if (td.attr(SCOPE) === ROWGROUP) {\n                   td.attr(SCOPE, ROW);\n               }\n           } else {\n               td.attr(ROWSPAN, rowSpanValue);\n           }\n       }\n   });\n\n   var DeleteColumnCommand = TableModificationCommand.extend({\n       exec: function() {\n           var range = this.lockRange(),\n               td = dom.closest(range.endContainer, [TD, TH]),\n               table = dom.closest(td, TABLE),\n               rows = table && table.rows,\n               columnCount = rows && rows[0].cells.length,\n               colElements = table.getElementsByTagName(COL),\n               colgroupElements = table.getElementsByTagName(COLGROUP),\n               focusElement, columnIndex, i, cell, x;\n\n           if (!td || (this.immutables() && Editor.Immutables.immutableParent(td))) {\n               this.releaseRange(range);\n               return;\n           }\n\n           if (columnCount == 1 || td.colSpan == columnCount) {\n               focusElement = dom.next(table);\n               if (!focusElement || dom.insignificant(focusElement)) {\n                   focusElement = dom.prev(table);\n               }\n\n               if (focusElement && focusElement.rows) {\n                   focusElement = focusElement.rows[0].cells[0];\n               }\n\n               dom.remove(table);\n               this._resetElementResizing(this.editor);\n           } else {\n               dom.removeTextSiblings(td);\n\n               focusElement = dom.next(td) || dom.prev(td);\n\n               this._mapColIndices(table);\n\n               columnIndex = parseInt(td.getAttribute(\"col-index\"), 10);\n\n               for (x = 0; x < td.colSpan; x++) {\n                   for (i = 0; i < rows.length; i = i + (cell.prop(\"rowSpan\") || 1)) {\n                       cell = $(rows[i]).find(\"[col-index=\" + (columnIndex + x) + \"]\");\n\n                       if (cell.length && cell.prop(\"colSpan\") <= 1) {\n                           cell.remove();\n                       } else {\n                           this._handleColSpanCells(rows[i], columnIndex + x);\n                       }\n                   }\n               }\n\n               this._clearColIndexAttr(table);\n           }\n\n           if (colElements.length > 0 || colgroupElements.length > 0) {\n               this._adjustColgroups(rows[0], table);\n           }\n\n           if ($(table).find(\"[headers]\").length > 0) {\n               this._associateHeaderIds(table);\n           }\n\n           if (focusElement) {\n               range.setStart(focusElement, 0);\n               range.collapse(true);\n               this.editor.selectRange(range);\n           }\n\n           this._resetElementResizing(this.editor);\n       },\n       _handleColSpanCells: function(row, colIndex) {\n           var cell = $(row).find(\"[col-index=\" + colIndex + \"]\");\n\n           if (cell.length && cell.prop(\"colSpan\") > 1) {\n               var clone = cell.clone(true);\n               cell.after(clone);\n               this._reduceColSpan(clone);\n               clone.attr(\"col-index\", parseInt(cell.attr(\"col-index\"),10) + 1);\n               cell.remove();\n               return;\n           }\n\n           for (var i = colIndex; i >= 0; i--) {\n               cell = $(row).find(\"[col-index=\" + i + \"]\");\n\n               if (cell.length) {\n                   this._reduceColSpan(cell);\n                   cell.attr(\"col-index\", parseInt(cell.attr(\"col-index\"),10) + 1);\n                   return;\n               }\n           }\n       },\n       _reduceColSpan: function(td) {\n           var colSpanValue = td.prop(\"colSpan\") - 1;\n\n           if (colSpanValue <= 1) {\n               td.removeAttr(COLSPAN);\n               if (td.attr(SCOPE) === COLGROUP) {\n                   td.attr(SCOPE, COL);\n               }\n           } else {\n               td.attr(COLSPAN, colSpanValue);\n           }\n       }\n   });\n\n   var MergeCellsHorizontallyCommand = TableModificationCommand.extend({\n       exec: function() {\n           var range = this.lockRange(),\n               td = dom.closest(range.endContainer, [TD, TH]),\n               table, row, columnIndex, nextTd, colspan;\n\n               if (!td) {\n                   this.releaseRange(range);\n                   return;\n               }\n\n               table = dom.closest(td, TABLE);\n               row = td.parentNode;\n               columnIndex = dom.findNodeIndex(td, true);\n               nextTd = row.children[columnIndex + 1];\n\n               if (this.immutables() && Editor.Immutables.immutableParent(td)) {\n                   this.releaseRange(range);\n                   return;\n               }\n\n               this._mapColIndices(table);\n\n               columnIndex = parseInt($(td).attr(\"col-index\"), 10);\n               nextTd = $(row).find(\"[col-index=\" + (columnIndex + 1 + this._getColspan(td) - 1) + \"]\").get(0);\n\n               if (!nextTd || nextTd.rowSpan !== td.rowSpan || td.tagName !== nextTd.tagName) {\n                   this._clearColIndexAttr(table);\n                   this.releaseRange(range);\n                   return;\n               }\n\n               colspan = this._getColspan(td) + this._getColspan(nextTd);\n\n               $(td).prop(COLSPAN, colspan)\n                    .append(dom.emptyNode(nextTd) ? \"\" : \"<br/>\" + nextTd.innerHTML);\n\n               $(td).width(td.offsetWidth);\n               $(nextTd).remove();\n\n               if (td.getAttribute(SCOPE) === COL) {\n                   td.setAttribute(SCOPE, COLGROUP);\n               }\n               if (td.getAttribute(SCOPE) === COLGROUP) {\n                   this._adjustColgroups(row, table);\n               }\n\n               if ($(table).find(\"[headers]\").length > 0) {\n                   this._associateHeaderIds(table);\n               }\n\n               this._clearColIndexAttr(table);\n               this.releaseRange(range);\n               this._resetElementResizing(this.editor);\n       },\n       _getColspan: function(td) {\n           return parseInt(td.getAttribute(COLSPAN), 10) || 1;\n       }\n   });\n\n   var MergeCellsVerticallyCommand = TableModificationCommand.extend({\n       exec: function() {\n           var range = this.lockRange(),\n               td = dom.closest(range.endContainer, [TD, TH]),\n               tr, parent, table, columnIndex, rowIndex, targetRow, bottomTd;\n\n               if (!td) {\n                   this.releaseRange(range);\n                   return;\n               }\n\n               tr = dom.closest(td, TR);\n               parent = dom.closest(td, [THEAD, TBODY]);\n               table = dom.closest(td, TABLE);\n               columnIndex = dom.findNodeIndex(td, true);\n               rowIndex = dom.findNodeIndex(tr, true);\n\n               if (rowIndex + 1 === parent.rows.length) {\n                   this.releaseRange(range);\n                   return;\n               }\n\n               targetRow = parent.rows[rowIndex + this._getRowspan(td)];\n               bottomTd = targetRow && targetRow.children[columnIndex];\n\n               if (this.immutables() && Editor.Immutables.immutableParent(td)) {\n                   this.releaseRange(range);\n                   return;\n               }\n\n               this._mapColIndices(table);\n\n               columnIndex = $(td).attr(\"col-index\");\n               bottomTd = $(targetRow).find(\"[col-index=\" + columnIndex + \"]\").get(0);\n\n               if (!bottomTd || bottomTd.colSpan !== td.colSpan || td.tagName !== bottomTd.tagName) {\n                   this._clearColIndexAttr(table);\n                   this.releaseRange(range);\n                   return;\n               }\n\n               $(td).prop(ROWSPAN, this._getRowspan(td) + this._getRowspan(bottomTd))\n                    .append(dom.emptyNode(bottomTd) ? \"\" : \"<br/>\" + bottomTd.innerHTML);\n\n               if (td.getAttribute(SCOPE) === ROW) {\n                   td.setAttribute(SCOPE, ROWGROUP);\n               }\n\n               $(bottomTd).remove();\n\n               if ($(table).find(\"[headers]\").length > 0) {\n                   this._associateHeaderIds(table);\n               }\n\n               this._clearColIndexAttr(table);\n               this.releaseRange(range);\n       },\n       _getRowspan: function(td) {\n           return parseInt(td.getAttribute(ROWSPAN), 10) || 1;\n       }\n   });\n\n   var SplitCellCommand = TableModificationCommand.extend({\n       exec: function() {\n           var range = this.lockRange(),\n               type = this.options.type,\n               attr = type === \"row\" ? COLSPAN : ROWSPAN,\n               td = dom.closest(range.endContainer, [TD, TH]),\n               parent = dom.closest(td, [THEAD, TBODY]),\n               table = dom.closest(td, TABLE),\n               emptyTd = dom.createEmptyNode(this.editor.document, td.nodeName.toLowerCase());\n\n           if (!td || (this.immutables() && Editor.Immutables.immutableParent(td))) {\n               this.releaseRange(range);\n               return;\n           }\n\n           this._mapColIndices(table);\n\n           if (type === \"row\" && $(td).is(\"[\" + attr + \"]\")) {\n               this._splitCellHorizontally(td, parent, attr, emptyTd);\n           } else if (type === \"column\" && $(td).is(\"[\" + attr + \"]\")) {\n               this._splitCellVertically(td, parent, attr, emptyTd);\n           }\n\n           if ($(td).prop(attr.toLowerCase()) <= 1) {\n               $(td).removeAttr(attr);\n           }\n\n           if ($(table).find(\"[headers]\").length > 0) {\n               this._associateHeaderIds(table);\n           }\n\n           this._clearColIndexAttr(table);\n           this.releaseRange(range);\n       },\n       _getRowspanValue: function(td) {\n           return parseInt(td.getAttribute(ROWSPAN), 10);\n       },\n       _getColspanValue: function(td) {\n           return parseInt(td.getAttribute(COLSPAN), 10);\n       },\n       _splitCellHorizontally: function(td, parent, attr, emptyTd) {\n           var rowSpan = td.rowSpan,\n               colSpan = td.colSpan,\n               tdToAdd = $(emptyTd),\n               colSpanResult = Math.floor(colSpan / 2);\n\n               if (colSpanResult > 1) {\n                   tdToAdd.attr(COLSPAN, colSpanResult);\n               }\n\n               if (rowSpan > 1) {\n                   tdToAdd.attr(ROWSPAN, rowSpan);\n               }\n\n               $(td).prop(attr, colSpan - colSpanResult)\n                   .after(tdToAdd);\n\n               $(td).width(td.offsetWidth);\n               tdToAdd.width(tdToAdd[0].offsetWidth);\n\n               if (td.hasAttribute(SCOPE)) {\n                   if (td.getAttribute(SCOPE) === COLGROUP) {\n                       tdToAdd.attr(SCOPE, COL);\n                       if (!td.getAttribute(COLSPAN) || td.getAttribute(COLSPAN) === \"1\") {\n                           td.setAttribute(SCOPE, COL);\n                       }\n\n                       this._adjustColgroups(td.parentNode, parent.parentNode);\n                   } else {\n                       tdToAdd.attr(SCOPE, td.getAttribute(SCOPE));\n                   }\n               }\n       },\n       _splitCellVertically: function(td, parent, attr, emptyTd) {\n           var tr = dom.closest(td,TR),\n               columnIndex = parseInt($(td).attr(\"col-index\"), 10),\n               rowIndex = dom.findNodeIndex(tr, true),\n               rowSpan = td.rowSpan,\n               colSpan = td.colSpan,\n               rowSpanResult = Math.floor(rowSpan / 2),\n               targetRow = $(parent).find(TR).eq(rowIndex + rowSpan - rowSpanResult),\n               nextTd = this._findNextTdInRow(targetRow, columnIndex + colSpan),\n               tdToAdd = $(emptyTd);\n\n               if (rowSpanResult > 1) {\n                   tdToAdd.attr(ROWSPAN, rowSpanResult);\n               }\n               if (colSpan > 1) {\n                   tdToAdd.attr(COLSPAN, colSpan);\n               }\n\n               if (nextTd && nextTd.length) {\n                   nextTd.before(tdToAdd);\n               } else {\n                   targetRow.append(tdToAdd);\n               }\n\n               $(td).prop(attr, rowSpan - rowSpanResult);\n\n               if (td.hasAttribute(SCOPE)) {\n                   if (td.getAttribute(SCOPE) === ROWGROUP) {\n                       tdToAdd.attr(SCOPE, ROW);\n                       if (!td.getAttribute(ROWSPAN) || td.getAttribute(ROWSPAN) === \"1\") {\n                           td.setAttribute(SCOPE, ROW);\n                       }\n                   } else {\n                       tdToAdd.attr(SCOPE, td.getAttribute(SCOPE));\n                   }\n               }\n       }\n   });\n\n   var TableModificationTool = Tool.extend({\n       command: function(options) {\n           var commandsMap = {\n               row: {\n                   insert: InsertRowCommand,\n                   \"delete\": DeleteRowCommand,\n                   merge: MergeCellsHorizontallyCommand,\n                   split: SplitCellCommand\n               },\n               column: {\n                   insert: InsertColumnCommand,\n                   \"delete\": DeleteColumnCommand,\n                   merge: MergeCellsVerticallyCommand,\n                   split: SplitCellCommand\n               }\n           };\n\n           options = extend(options, this.options);\n           options.action = options.action || \"insert\";\n\n           return new commandsMap[options.type][options.action](options);\n       },\n\n       update: function(ui, nodes) {\n           var isFormatted = !tableFormatFinder.isFormatted(nodes),\n               toolbar = ui.closest(\".k-toolbar\").getKendoToolBar();\n\n           if (isFormatted === true) {\n               toolbar.hide(ui);\n           } else {\n               toolbar.show(ui);\n           }\n       }\n   });\n\n   var TableFormatCommand = FormatCommand.extend({\n       exec: function() {\n           var that = this;\n           var editor = that.editor;\n\n           FormatCommand.fn.exec.call(this);\n\n           if (editor.elementResizing) {\n               editor.elementResizing._showResizeHandles();\n           }\n       }\n   });\n\n   // var tableAlignFormatFinder = BlockFormatFinder.extend({\n\n   // });\n\n   var TableFormatTool = BlockFormatTool.extend({\n       update: function(ui, nodes) {\n           var isTable = !tableFormatFinder.isFormatted(nodes),\n               isFormatted = this.options.finder.isFormatted(nodes, this.isTable),\n               toolbar = ui.closest(\".k-toolbar\").getKendoToolBar();\n\n           if (toolbar) {\n               toolbar.toggle(ui, isFormatted);\n           }\n\n           if (isTable === true) {\n               toolbar.hide(ui);\n           } else {\n               toolbar.show(ui);\n           }\n       },\n       command: function(commandArguments) {\n           var that = this;\n\n           return new TableFormatCommand(extend(commandArguments, {\n               formatter: that.options.formatter\n           }));\n       },\n       isTable: function(node) {\n           return dom.is(node, \"table\");\n       }\n   });\n\n   extend(kendo.ui.editor, {\n       PopupTool: PopupTool,\n       TableCommand: TableCommand,\n       InsertTableTool: InsertTableTool,\n       TableFormatTool: TableFormatTool,\n       TableFormatCommand: TableFormatCommand,\n       TableModificationTool: TableModificationTool,\n       InsertRowCommand: InsertRowCommand,\n       InsertColumnCommand: InsertColumnCommand,\n       DeleteRowCommand: DeleteRowCommand,\n       DeleteColumnCommand: DeleteColumnCommand,\n       MergeCellsHorizontallyCommand: MergeCellsHorizontallyCommand,\n       MergeCellsVerticallyCommand: MergeCellsVerticallyCommand,\n       SplitCellCommand: SplitCellCommand\n   });\n\n\n   registerTool(\"createTable\", new InsertTableTool({ ui: { popup: true, overflow: \"never\" } }));\n\n   registerTool(\"addColumnLeft\", new TableModificationTool({ type: \"column\", position: \"before\" }));\n   registerTool(\"addColumnRight\", new TableModificationTool({ type: \"column\" }));\n   registerTool(\"addRowAbove\", new TableModificationTool({ type: \"row\", position: \"before\" }));\n   registerTool(\"addRowBelow\", new TableModificationTool({ type: \"row\" }));\n   registerTool(\"deleteRow\", new TableModificationTool({ type: \"row\", action: \"delete\" }));\n   registerTool(\"deleteColumn\", new TableModificationTool({ type: \"column\", action: \"delete\" }));\n   registerTool(\"mergeCellsHorizontally\", new TableModificationTool({ type: \"row\", action: \"merge\" }));\n   registerTool(\"mergeCellsVertically\", new TableModificationTool({ type: \"column\", action: \"merge\" }));\n   registerTool(\"splitCellHorizontally\", new TableModificationTool({ type: \"row\", action: \"split\" }));\n   registerTool(\"splitCellVertically\", new TableModificationTool({ type: \"column\", action: \"split\" }));\n\n   registerFormat(\"tableAlignLeft\", [\n       { tags: [\"table\"], attr: { style: { marginLeft: \"\", marginRight: \"auto\" } } },\n       { tags: [\"table\"], attr: { align: \"left\" } }\n   ]);\n   registerTool(\"tableAlignLeft\", new TableFormatTool({\n       format: formats.tableAlignLeft,\n       ui: {\n           togglable: true,\n           group: \"tableAlign\"\n       }\n   }));\n\n   registerFormat(\"tableAlignCenter\", [\n       { tags: [\"table\"], attr: { style: { marginLeft: \"auto\", marginRight: \"auto\" } } },\n       { tags: [\"table\"], attr: { align: \"center\" } }\n   ]);\n   registerTool(\"tableAlignCenter\", new TableFormatTool({\n       format: formats.tableAlignCenter,\n       ui: {\n           togglable: true,\n           group: \"tableAlign\"\n       }\n   }));\n\n   registerFormat(\"tableAlignRight\", [\n       { tags: [\"table\"], attr: { style: { marginLeft: \"auto\", marginRight: \"\" } } },\n       { tags: [\"table\"], attr: { align: \"right\" } }\n   ]);\n   registerTool(\"tableAlignRight\", new TableFormatTool({\n       format: formats.tableAlignRight,\n       ui: {\n           togglable: true,\n           group: \"tableAlign\"\n       }\n   }));\n\n   })(window.kendo.jQuery);\n\n   (function($) {\n\n       // Imports ================================================================\n       var kendo = window.kendo,\n           Class = kendo.Class,\n           editorNS = kendo.ui.editor,\n           RangeUtils = editorNS.RangeUtils,\n           dom = editorNS.Dom,\n           RestorePoint = editorNS.RestorePoint,\n           Marker = editorNS.Marker,\n           browser = kendo.support.browser,\n           extend = $.extend;\n\n   var Clipboard = Class.extend({\n       init: function(editor) {\n           this.editor = editor;\n           var pasteCleanup = editor.options.pasteCleanup;\n           this.nonSplittableTagsOnPaste = editor.options.nonSplittableTagsOnPaste || [];\n           this.cleaners = [\n               new ScriptCleaner(pasteCleanup),\n               new TabCleaner(pasteCleanup),\n               new MSWordFormatCleaner(pasteCleanup),\n               new WebkitFormatCleaner(pasteCleanup),\n               new HtmlTagsCleaner(pasteCleanup),\n               new HtmlAttrCleaner(pasteCleanup),\n               new HtmlContentCleaner(pasteCleanup),\n               new CustomCleaner(pasteCleanup) //always keep at end\n           ];\n       },\n\n       htmlToFragment: function(html) {\n           var editor = this.editor,\n               doc = editor.document,\n               container = dom.create(doc, 'div'),\n               fragment = doc.createDocumentFragment();\n\n           container.innerHTML = html;\n\n           while (container.firstChild) {\n               fragment.appendChild(container.firstChild);\n           }\n\n           return fragment;\n       },\n\n       isBlock: function(html) {\n           return (/<(div|p|ul|ol|table|h[1-6])/i).test(html);\n       },\n\n       _startModification: function() {\n           var range;\n           var restorePoint;\n           var editor = this.editor;\n\n           if (this._inProgress) {\n               return;\n           }\n\n           this._inProgress = true;\n\n           range = editor.getRange();\n           restorePoint = new RestorePoint(range, editor.body);\n\n           dom.persistScrollTop(editor.document);\n\n           return { range: range, restorePoint: restorePoint };\n       },\n\n       _endModification: function(modificationInfo) {\n           editorNS._finishUpdate(this.editor, modificationInfo.restorePoint);\n\n           this.editor._selectionChange();\n\n           this._inProgress = false;\n       },\n\n       _contentModification: function(before, after) {\n           var that = this;\n           var editor = that.editor;\n           var modificationInfo = that._startModification();\n\n           if (!modificationInfo) {\n               return;\n           }\n\n           before.call(that, editor, modificationInfo.range);\n\n           setTimeout(function() {\n               after.call(that, editor, modificationInfo.range);\n\n               that._endModification(modificationInfo);\n           });\n       },\n\n       _removeBomNodes: function(range) {\n           var nodes = RangeUtils.textNodes(range);\n\n           for (var i = 0; i < nodes.length; i++) {\n               nodes[i].nodeValue = dom.stripBom(nodes[i].nodeValue) || nodes[i].nodeValue;\n           }\n       },\n\n       _onBeforeCopy: function(range) {\n           var marker = new Marker();\n           marker.add(range);\n\n           this._removeBomNodes(range);\n\n           marker.remove(range);\n\n           this.editor.selectRange(range);\n       },\n\n       oncopy: function() {\n           this._onBeforeCopy(this.editor.getRange());\n       },\n\n       oncut: function() {\n           this._onBeforeCopy(this.editor.getRange());\n           this._contentModification($.noop, $.noop);\n       },\n\n       _fileToDataURL: function(blob) {\n           var deferred = $.Deferred();\n\n           var reader = new FileReader();\n\n           if (!(blob instanceof window.File) && blob.getAsFile) {\n               blob = blob.getAsFile();\n           }\n\n           reader.onload = deferred.resolve.bind(deferred);\n\n           reader.readAsDataURL(blob);\n\n           return deferred.promise();\n       },\n\n       _triggerPaste: function(html, options) {\n           var args = { html: html || \"\" };\n\n           args.html = args.html.replace(/\\ufeff/g, \"\");\n\n           this.editor.trigger(\"paste\", args);\n\n           this.paste(args.html, options || {});\n       },\n\n       _handleImagePaste: function(e) {\n           if (!('FileReader' in window) || (browser.msie && browser.version > 10)) {\n               return;\n           }\n\n           var clipboardData = e.clipboardData || e.originalEvent.clipboardData ||\n                       window.clipboardData || {};\n\n           var items = clipboardData.items || clipboardData.files;\n\n           return this._insertImages(items);\n       },\n\n       _insertImages: function(items) {\n           if (!items) {\n               return;\n           }\n\n           var images = $.grep(items, function(item) { return (/^image\\//i).test(item.type); });\n           var html = $.grep(items, function(item) { return (/^text\\/html/i).test(item.type); });\n\n           if (html.length || !images.length) {\n               return;\n           }\n\n           var modificationInfo = this._startModification();\n\n           if (!modificationInfo) {\n               return;\n           }\n\n           $.when.apply($, $.map(images, this._fileToDataURL))\n               .done((function() {\n                   var results = Array.prototype.slice.call(arguments);\n                   var html = $.map(results, function(e) {\n                       return '<img src=\"' + e.target.result + '\" />';\n                   }).join(\"\");\n\n                   this._triggerPaste(html);\n\n                   this._endModification(modificationInfo);\n               }).bind(this));\n\n           return true;\n       },\n\n       onpaste: function(e) {\n           if (this.editor.body.contentEditable === \"false\") {\n               return;\n           }\n\n           if (this._handleImagePaste(e)) {\n               e.preventDefault();\n               return;\n           }\n\n           this.expandImmutablesIn();\n\n           this._contentModification(\n               function beforePaste(editor, range) {\n                   var clipboardNode = dom.create(editor.document, 'div', {\n                           className: 'k-paste-container',\n                           innerHTML: \"\\ufeff\"\n                       });\n                   var browser = kendo.support.browser;\n                   var body = editor.body;\n\n                   this._decoreateClipboardNode(clipboardNode, body);\n\n                   body.appendChild(clipboardNode);\n\n                   //Browser scrolls to clipboardNode\n                   if (browser.webkit) {\n                       this._moveToCaretPosition(clipboardNode, range);\n                   }\n\n                   // text ranges are slow in IE10-, DOM ranges are buggy in IE9-10\n                   if (browser.msie && browser.version < 11) {\n                       e.preventDefault();\n                       var r = editor.createRange();\n                       r.selectNodeContents(clipboardNode);\n                       editor.selectRange(r);\n                       var textRange = editor.document.body.createTextRange();\n                       textRange.moveToElementText(clipboardNode);\n                       $(body).off('paste');\n                       textRange.execCommand('Paste');\n                       $(body).on('paste', this.onpaste.bind(this));\n                   } else {\n                       var clipboardRange = editor.createRange();\n                       clipboardRange.selectNodeContents(clipboardNode);\n                       editor.selectRange(clipboardRange);\n                   }\n\n                   range.deleteContents();\n               },\n               function afterPaste(editor, range) {\n                   var html = \"\", containers;\n\n                   editor.selectRange(range);\n\n                   containers = $(editor.body).children(\".k-paste-container\");\n\n                   containers.each(function() {\n                       var lastChild = this.lastChild;\n\n                       if (lastChild && dom.is(lastChild, 'br')) {\n                           dom.remove(lastChild);\n                       }\n\n                       html += this.innerHTML;\n                   });\n\n                   containers.remove();\n\n                   this._triggerPaste(html, { clean: true });\n               }\n           );\n       },\n       ondragover: function(e) {\n           if (browser.msie || browser.edge) {\n               e.stopPropagation();\n               e.preventDefault();\n           }\n       },\n       ondrop: function(e) {\n           if (!('FileReader' in window)) {\n               return;\n           }\n\n           var dataTransfer = (e.originalEvent || e).dataTransfer || {};\n           var items = dataTransfer.items || dataTransfer.files;\n\n           if (this._insertImages(items)) {\n               e.preventDefault();\n           }\n       },\n       _decoreateClipboardNode: function(node, body) {\n           if (!browser.msie && !browser.webkit) {\n               return;\n           }\n\n           node = $(node);\n           node.css({\n               borderWidth: \"0px\",\n               width: \"0px\",\n               height: \"0px\",\n               overflow: \"hidden\",\n               margin: \"0\",\n               padding: \"0\"\n           });\n\n           if (browser.msie) {\n               //node inherits BODY styles and this causes the browser to add additional\n               var documentElement = $(body.ownerDocument.documentElement);\n\n               node.css({\n                   fontVariant: \"normal\",\n                   fontWeight: \"normal\",\n                   lineSpacing: \"normal\",\n                   lineHeight: \"normal\",\n                   textDecoration: \"none\"\n               });\n               var color = documentElement.css(\"color\");\n               if (color) {\n                   node.css(\"color\", color);\n               }\n               var fontFamily = documentElement.css(\"fontFamily\");\n               if (fontFamily) {\n                   node.css(\"fontFamily\", fontFamily);\n               }\n               var fontSize = documentElement.css(\"fontSize\");\n               if (fontSize) {\n                   node.css(\"fontSize\", fontSize);\n               }\n           }\n       },\n       _moveToCaretPosition: function(node, range) {\n           var that = this;\n           var body = that.editor.body;\n           var nodeOffset = dom.offset(node, body);\n           var caretOffset = that._caretOffset(range, body);\n           var translateX = caretOffset.left - nodeOffset.left;\n           var translateY = caretOffset.top - nodeOffset.top;\n           var translate = \"translate(\" + translateX + \"px,\" + translateY + \"px)\";\n\n           $(node).css({\n               \"-webkit-transform\": translate,\n               \"transform\": translate\n           });\n       },\n       _caretOffset: function(range, body) {\n           var editor = this.editor;\n           var caret = dom.create(editor.document, 'span', { innerHTML: \"\\ufeff\" });\n           var startContainer = range.startContainer;\n           var rangeChanged;\n\n           if (range.collapsed) {\n               var isStartTextNode = dom.isDataNode(startContainer);\n               if (isStartTextNode && (dom.isBom(startContainer) || range.startOffset === 0)) {\n                   dom.insertBefore(caret, startContainer);\n               } else if (isStartTextNode && range.startOffset === startContainer.length) {\n                   dom.insertAfter(caret, startContainer);\n               } else {\n                   range.insertNode(caret);\n                   rangeChanged = true;\n               }\n           } else {\n               startContainer = startContainer === body ?\n                   startContainer.childNodes[range.startOffset] : startContainer;\n               dom.insertBefore(caret, startContainer);\n           }\n\n           var offset = dom.offset(caret, body);\n           var prev = caret.previousSibling;\n           var next = caret.nextSibling;\n\n           dom.remove(caret);\n\n           if (rangeChanged && dom.isDataNode(prev) && dom.isDataNode(next) && !dom.isBom(prev) && !dom.isBom(next)) {\n               var prevLength = prev.length;\n               next.data = prev.data + next.data;\n               range.setStart(next, prevLength);\n               dom.remove(prev);\n\n               range.collapse(true);\n               editor.selectRange(range);\n           }\n\n           return offset;\n       },\n\n       expandImmutablesIn: function(range) {\n           var editor = this.editor;\n           if (editor && editor.options.immutables) {\n               var body = editor.body;\n               range = range || editor.getRange();\n               kendo.ui.editor.Immutables.expandImmutablesIn(range);\n               if (range.startContainer === body && range.startOffset === 0) {\n                   var doc = body.ownerDocument;\n                   var bomNode = doc.createTextNode(\"\\ufeff\");\n                   body.insertBefore(bomNode, body.childNodes[0]);\n                   range.setStartBefore(bomNode);\n               }\n               editor.selectRange(range);\n           }\n       },\n\n       splittableParent: function(block, node) {\n           var parentNode, body;\n\n           if (block) {\n               return dom.closestEditableOfType(node, ['p', 'ul', 'ol']) || node.parentNode;\n           }\n\n           parentNode = node.parentNode;\n           body = node.ownerDocument.body;\n\n           if (dom.isInline(parentNode)) {\n               while (parentNode.parentNode != body && !dom.isBlock(parentNode.parentNode)) {\n                   parentNode = parentNode.parentNode;\n               }\n           }\n\n           return parentNode;\n       },\n\n       paste: function(html, options) {\n           var editor = this.editor,\n               nonSplittableTagsOnPaste = this.nonSplittableTagsOnPaste,\n               preventSplit = false,\n               unwrapPasted = false,\n               i, l, childNodes, isList;\n\n           this.expandImmutablesIn();\n\n           options = extend({ clean: false, split: true }, options);\n\n           if (!options.skipCleaners) {\n               for (i = 0, l = this.cleaners.length; i < l; i++) {\n                   if (this.cleaners[i].applicable(html)) {\n                       html = this.cleaners[i].clean(html);\n                   }\n               }\n           }\n\n           if (options.clean) {\n               // remove br elements which immediately precede block elements\n               html = html.replace(/(<br>(\\s|&nbsp;)*)+(<\\/?(div|p|li|col|t))/ig, \"$3\");\n               // remove empty inline elements\n               html = html.replace(/<(a|span)[^>]*><\\/\\1>/ig, \"\");\n           }\n\n           html = html.replace(/<(a|span|font)([^>]*)> <\\/\\1>/ig, \"<$1$2>&nbsp;</$1>\");\n\n           // It is possible in IE to copy just <li> tags\n           html = html.replace(/^<li/i, '<ul><li').replace(/li>$/g, 'li></ul>');\n\n           var block = this.isBlock(html);\n\n           editor.focus();\n           var range = editor.getRange();\n           range.deleteContents();\n\n           if (range.startContainer == editor.document) {\n               range.selectNodeContents(editor.body);\n           }\n\n           var marker = new Marker();\n           var caret = marker.addCaret(range);\n\n           var parent = this.splittableParent(block, caret);\n           var unwrap = false;\n\n           for (i = 0; i < nonSplittableTagsOnPaste.length; i++) {\n               const splitter = nonSplittableTagsOnPaste[i],\n                   tag = splitter.tag || splitter;\n\n               if (dom.is(parent, tag)) {\n                   preventSplit = true;\n                   unwrapPasted = splitter.unwrap !== false;\n                   break;\n               }\n           }\n\n           var splittable = parent != editor.body && !dom.is(parent, \"td\") && !preventSplit;\n\n           if (options.split && splittable && (block || dom.isInline(parent))) {\n               range.selectNode(caret);\n               RangeUtils.split(range, parent, true);\n               unwrap = true;\n           }\n\n           var fragment = this.htmlToFragment(html);\n\n           if (fragment.firstChild && fragment.firstChild.className === \"k-paste-container\") {\n               var fragmentsHtml = [];\n               for (i = 0, l = fragment.childNodes.length; i < l; i++) {\n                   fragmentsHtml.push(fragment.childNodes[i].innerHTML);\n               }\n\n               fragment = this.htmlToFragment(fragmentsHtml.join('<br />'));\n           }\n\n           childNodes = fragment.childNodes;\n\n           if (unwrapPasted) {\n               isList = dom.list(childNodes[0]);\n               dom.unwrap(childNodes[0]);\n\n               if (isList) {\n                   range.selectNode(caret.parentNode);\n               }\n           }\n\n           $(childNodes)\n               .filter(\"table\").addClass(\"k-table\").end()\n               .find(\"table\").addClass(\"k-table\");\n\n           $(childNodes).each(function(index, elm) {\n              if (dom.isBlock(elm) && !dom.isSelfClosing(elm) && elm.innerHTML === \"\") {\n                   elm.appendChild(editor.document.createTextNode(\"\\ufeff\"));\n              }\n           });\n\n           range.insertNode(fragment);\n\n           parent = this.splittableParent(block, caret);\n           if (unwrap) {\n               while (caret.parentNode != parent) {\n                   dom.unwrap(caret.parentNode);\n               }\n\n               dom.unwrap(caret.parentNode);\n           }\n\n           dom.normalize(range.commonAncestorContainer);\n           caret.style.display = 'inline';\n           dom.restoreScrollTop(editor.document);\n           dom.scrollTo(caret);\n           marker.removeCaret(range);\n\n           var rangeEnd = range.commonAncestorContainer.parentNode;\n           if (range.collapsed && dom.name(rangeEnd) == \"tbody\" || range.collapsed && dom.name(rangeEnd) == \"thead\") {\n               range.setStartAfter($(rangeEnd).closest(\"table\")[0]);\n               range.collapse(true);\n           }\n\n           var focusedTable = $(range.commonAncestorContainer.parentNode).closest(\"table\");\n\n           if (focusedTable.get(0)) {\n               var siblingNodes = focusedTable.parent().contents();\n               var lastSiblingIndex = siblingNodes.length - 1;\n               var lastSibling = siblingNodes.get(lastSiblingIndex);\n\n               while (lastSibling.nodeValue !== null && (lastSibling.nodeValue === \" \" || lastSibling.nodeValue === \"\")) {\n                   lastSiblingIndex -= 1;\n                   lastSibling = siblingNodes.get(lastSiblingIndex);\n               }\n\n               if (lastSibling === focusedTable.get(0) && !focusedTable.parents(\"table\").length) {\n                   dom.insertAfter(dom.createEmptyNode(editor.document, \"p\"), focusedTable[0]);\n               }\n           }\n\n           editor._handleSpaceAndNewLines();\n           editor.selectRange(range);\n       }\n   });\n\n   var Cleaner = Class.extend({\n       init: function(options) {\n           this.options = options || {};\n           this.replacements = [];\n       },\n\n       clean: function(html, customReplacements) {\n           var that = this,\n               replacements = customReplacements || that.replacements,\n               i, l;\n\n           for (i = 0, l = replacements.length; i < l; i += 2) {\n               html = html.replace(replacements[i], replacements[i + 1]);\n           }\n\n           return html;\n       }\n   });\n\n   var ScriptCleaner = Cleaner.extend({\n       init: function(options) {\n           Cleaner.fn.init.call(this, options);\n\n           this.replacements = [\n               /<(\\/?)script([^>]*)>/i, \"<$1telerik:script$2>\"\n           ];\n       },\n\n       applicable: function(html) {\n           return !this.options.none && (/<script[^>]*>/i).test(html);\n       }\n   });\n\n   var TabCleaner = Cleaner.extend({\n       init: function(options) {\n           Cleaner.fn.init.call(this, options);\n\n           var replacement = ' ';\n           this.replacements = [\n               /<span\\s+class=\"Apple-tab-span\"[^>]*>\\s*<\\/span>/gi, replacement,\n               /\\t/gi, replacement,\n               /&nbsp;&nbsp; &nbsp;/gi, replacement\n           ];\n       },\n\n       applicable: function(html) {\n           return (/&nbsp;&nbsp; &nbsp;|class=\"?Apple-tab-span/i).test(html);\n       }\n   });\n\n   var MSWordFormatCleaner = Cleaner.extend({\n       init: function(options) {\n           Cleaner.fn.init.call(this, options);\n\n           this.junkReplacements = [\n               /<\\?xml[^>]*>/gi, '',\n               /<!--(.|\\n)*?-->/g, '', /* comments */\n               /&quot;/g, \"'\", /* encoded quotes (in attributes) */\n               /<o:p>&nbsp;<\\/o:p>/ig, '&nbsp;',\n               /<\\/?(meta|link|style|o:|v:|x:)[^>]*>((?:.|\\n)*?<\\/(meta|link|style|o:|v:|x:)[^>]*>)?/ig, '', /* external references and namespaced tags */\n               /<\\/o>/g, ''\n           ];\n           this.replacements = this.junkReplacements.concat([\n               /(?:<br>&nbsp;[\\s\\r\\n]+|<br>)*(<\\/?(h[1-6]|hr|p|div|table|tbody|thead|tfoot|th|tr|td|li|ol|ul|caption|address|pre|form|blockquote|dl|dt|dd|dir|fieldset)[^>]*>)(?:<br>&nbsp;[\\s\\r\\n]+|<br>)*/g, '$1',\n               /<br><br>/g, '<BR><BR>',\n               /<br>\\n/g, '<br/>',\n               /<br>(?!\\n)/g, ' ',\n               /<table([^>]*)>(\\s|&nbsp;)+<t/gi, '<table$1><t',\n               /<tr[^>]*>(\\s|&nbsp;)*<\\/tr>/gi, '',\n               /<tbody[^>]*>(\\s|&nbsp;)*<\\/tbody>/gi, '',\n               /<table[^>]*>(\\s|&nbsp;)*<\\/table>/gi, '',\n               /<BR><BR>/g, '<br>',\n               /^\\s*(&nbsp;)+/gi, '',\n               /(&nbsp;|<br[^>]*>)+\\s*$/gi, '',\n               /mso-[^;\"]*;?/ig, '', /* office-related CSS attributes */\n               /<(\\/?)b(\\s[^>]*)?>/ig, '<$1strong$2>',\n               /<(\\/?)font(\\s[^>]*)?>/ig, this.convertFontMatch,\n               /<(\\/?)i(\\s[^>]*)?>/ig, '<$1em$2>',\n               /style=([\"|'])\\s*\\1/g, '', /* empty style attributes */\n               /(<br[^>]*>)?\\n/g, function($0, $1) { return $1 ? $0 : ' '; } /* phantom extra line feeds */\n           ]);\n       },\n\n       convertFontMatch: function(match, closing, args) {\n           var faceRe = /face=['\"]([^'\"]+)['\"]/i;\n           var face = faceRe.exec(args);\n           var family = args && face && face[1];\n\n           if (closing) {\n               return '</span>';\n           } else if (family) {\n               return '<span style=\"font-family:' + family + '\">';\n           } else {\n               return '<span>';\n           }\n       },\n\n       applicable: function(html) {\n           return (/class=\"?Mso/i).test(html) ||\n                  (/style=\"[^\"]*mso-/i).test(html) ||\n                  (/urn:schemas-microsoft-com:office/).test(html);\n       },\n\n       stripEmptyAnchors: function(html) {\n           return html.replace(/<a([^>]*)>\\s*<\\/a>/ig, function(a, attributes) {\n               if (!attributes || attributes.indexOf(\"href\") < 0) {\n                   return \"\";\n               }\n\n               return a;\n           });\n       },\n\n       listType: function(p, listData) {\n           var html = p.innerHTML;\n           var text = dom.innerText(p);\n\n           var startingSymbol;\n           var matchSymbol = html.match(/^(?:<span [^>]*texhtml[^>]*>)?<span [^>]*(?:Symbol|Wingdings)[^>]*>([^<]+)/i);\n           var symbol = matchSymbol && matchSymbol[1];\n           var isNumber = /^[a-z\\d]/i.test(symbol);//including alpha-numeric and roman numerals\n\n           var trimStartText = function(text) {\n               return text.replace(/^(?:&nbsp;|[\\u00a0\\n\\r\\s])+/, '');\n           };\n\n           if (matchSymbol) {\n               startingSymbol = true;\n           }\n\n           html = html.replace(/<\\/?\\w+[^>]*>/g, '').replace(/&nbsp;/g, '\\u00a0');\n\n           if ((!startingSymbol && /^[\\u2022\\u00b7\\u00a7\\u00d8o]\\u00a0+/.test(html)) ||\n               (startingSymbol && /^.\\u00a0+/.test(html)) ||\n               (symbol && !isNumber && listData)) {\n               return {\n                   tag: 'ul',\n                   style: this._guessUnorderedListStyle(trimStartText(text))\n               };\n           }\n\n           if (/^\\s*\\w+[\\.\\)][\\u00a0 ]{2,}/.test(html)) {\n               return {\n                   tag: 'ol',\n                   style: this._guessOrderedListStyle(trimStartText(text))\n               };\n           }\n       },\n\n       _convertToLi: function(p) {\n           var content;\n\n           if (p.childNodes.length == 1) {\n               content = p.firstChild.nodeType === dom.nodeTypes.TEXT_NODE ? dom.innerText(p) : p.firstChild.innerHTML.replace(/^\\w+[\\.\\)](&nbsp;)+ /, \"\");\n               content = this._checkForBullet(content);\n           } else {\n               content = this._getHtmlNoBullet(p);\n           }\n\n           dom.remove(p);\n\n           return dom.create(document, 'li', { innerHTML: content });\n       },\n\n       _checkForBullet: function(html) {\n           var p = dom.create(document, 'p', { innerHTML: html });\n           var bulletRgx = /^\\s*\\w+[\\.\\)]\\s+/;\n\n           if (bulletRgx.test(p.innerText)) {\n               return this._getHtmlNoBullet(p);\n           }\n\n           return html;\n       },\n\n       _getHtmlNoBullet: function(element) {\n           var content,\n               name = dom.name(element);\n\n           dom.remove(element.firstChild);\n\n           // check for roman numerals\n           if (element.firstChild.nodeType == 3) {\n               if (/^[ivxlcdm]+\\.$/i.test(element.firstChild.nodeValue)) {\n                   dom.remove(element.firstChild);\n               }\n           }\n\n           if (/^(&nbsp;|\\s)+$/i.test(element.firstChild.innerHTML)) {\n               dom.remove(element.firstChild);\n           }\n\n           if (name != \"p\") {\n               content = \"<\" + name + \">\" + element.innerHTML + \"</\" + name + \">\";\n           } else {\n               content = element.innerHTML;\n           }\n\n           return content;\n       },\n\n       _guessUnorderedListStyle: function(symbol) {\n           if (/^[\\u2022\\u00b7\\u00FC\\u00D8\\u002dv-]/.test(symbol)) {\n               return null;//return \"disc\"; //default CSS value\n           } else if (/^o/.test(symbol)) {\n               return \"circle\";\n           } else {\n               return \"square\";\n           }\n       },\n       _guessOrderedListStyle: function(symbol) {\n           var listType = null;\n           if (!/^\\d/.test(symbol)) {\n               listType = (/^[a-z]/.test(symbol) ? 'lower-' : 'upper-') +\n                          (/^[ivxlcdm]/i.test(symbol) ? 'roman' : 'alpha');\n           }\n\n           return listType;\n       },\n\n       extractListLevels: function(html) {\n           var msoListRegExp = /style=['\"]?[^'\"]*?mso-list:\\s?[a-zA-Z]+(\\d+)\\s[a-zA-Z]+(\\d+)\\s(\\w+)/gi;\n\n           html = html.replace(msoListRegExp, function(match, list, level) {\n               return kendo.format('data-list=\"{0}\" data-level=\"{1}\" {2}', list, level, match);\n           });\n\n           return html;\n       },\n\n       _createList: function(type, styleType) {\n           return dom.create(document, type, {\n               style: { listStyleType: styleType }\n           });\n       },\n\n       lists: function(placeholder) {\n           var blockChildren = $(placeholder).find(dom.blockElements.join(',')),\n               lastMargin = -1,\n               name,\n               levels = {},\n               li,\n               rootMargin,\n               rootIndex,\n               lastRootLi,\n               isLastRootLi,\n               rootList,\n               i, p, type, margin, list, listData,\n               acceptedNameTags = [\"p\", \"h1\", \"h2\", \"h3\", \"h4\", \"h5\", \"h6\"],\n               isParentTable = false;\n\n           for (i = 0; i < blockChildren.length; i++) {\n               p = blockChildren[i];\n               listData = $(p).data();\n               var listIndex = listData.list;\n               name = dom.name(p);\n               isParentTable = !!$(p).parents(\"table\").length;\n\n               if (isParentTable) {\n                   continue;\n               }\n\n               var listType = this.listType(p, listData);\n               type = listType && listType.tag;\n\n               if (!type || acceptedNameTags.indexOf(name) < 0) {\n                   if (!p.innerHTML) {\n                       dom.remove(p);\n                   } else if (li && !isLastRootLi) {\n                       li.appendChild(p);\n                   }\n                   continue;\n               }\n\n               // not supported list levels in ie\n               if (browser.msie) {\n                   continue;\n               }\n\n               margin = listData.level || parseFloat(p.style.marginLeft || 0);\n\n               var levelType = type + listIndex;\n               if (!levels[margin]) {\n                   levels[margin] = {};\n               }\n\n               if (!rootMargin || rootMargin < 0) {\n                   rootMargin = margin;\n                   rootIndex = listIndex;\n                   lastRootLi = $(placeholder).find(\"[data-list='\" + rootIndex + \"']\").last()[0];\n                   rootList = this._createList(type, listType.style);\n                   dom.insertBefore(rootList, p);\n                   lastMargin = margin;\n                   levels[margin][levelType] = rootList;\n               }\n\n               isLastRootLi = lastRootLi === p;\n\n               list = levels[margin][levelType];\n\n               if (margin > lastMargin || !list) {\n                   list = this._createList(type, listType.style);\n                   levels[margin][levelType] = list;\n                   li.appendChild(list);\n               }\n\n               li = this._convertToLi(p);\n               list.appendChild(li);\n\n               if (isLastRootLi) {\n                   rootMargin = lastMargin = -1;\n               } else {\n                   lastMargin = margin;\n               }\n           }\n       },\n\n       removeAttributes: function(element) {\n           var attributes = element.attributes,\n               i = attributes.length,\n               significantStyles = [],\n               isSignificantCss = function(val) {\n                   var significantCss = [\"border\", \"background\", \"padding\"];\n\n                   return significantCss.filter(function(cssAttr) {\n                       return val.trim().indexOf(cssAttr) === 0;\n                   }).length > 0;\n               },\n               addSignificantStyles = function(val) {\n                   if (isSignificantCss(val)) {\n                       significantStyles.push(val.trim());\n                   }\n               },\n               attr, attributeName, attributeValues;\n\n           while (i--) {\n               if (dom.name(attributes[i]) != \"colspan\") {\n                   attr = attributes[i];\n                   attributeName = attr.name;\n\n                   if (attributeName === \"style\" && (element.nodeName === \"TD\" || element.nodeName === \"TH\")) {\n                       attributeValues = attr.value.split(\";\");\n                       attributeValues.forEach(addSignificantStyles);\n                   }\n\n                   element.removeAttributeNode(attributes[i]);\n               }\n           }\n\n           if (significantStyles.length > 0) {\n               element.setAttribute(\"style\", significantStyles.join(\";\"));\n           }\n       },\n\n       createColGroup: function(row) {\n           var cells = row.cells;\n           var table = $(row).closest(\"table\");\n           var colgroup = table.children(\"colgroup\");\n\n           if (cells.length < 2) {\n               return;\n           } else if (colgroup.length) {\n               cells = colgroup.children();\n               colgroup[0].parentNode.removeChild(colgroup[0]);\n           }\n\n           colgroup = $($.map(cells, function(cell) {\n                   var width = cell.width;\n                   if (width && parseInt(width, 10) !== 0) {\n                       return kendo.format('<col style=\"width:{0}px;\"/>', width);\n                   }\n\n                   return \"<col />\";\n               }).join(\"\"));\n\n           // jquery 1.9/2.0 discrepancy\n           if (!colgroup.is(\"colgroup\")) {\n               colgroup = $(\"<colgroup/>\").append(colgroup);\n           }\n\n           colgroup.prependTo(table);\n       },\n\n       convertHeaders: function(row) {\n           var cells = row.cells,\n               i,\n               boldedCells = $.map(cells, function(cell) {\n                   var child = $(cell).children(\"p\").children(\"strong\")[0];\n\n                   if (child && dom.name(child) == \"strong\") {\n                       return child;\n                   }\n               });\n\n           if (boldedCells.length == cells.length) {\n               for (i = 0; i < boldedCells.length; i++) {\n                   dom.unwrap(boldedCells[i]);\n               }\n\n               $(row).closest(\"table\")\n                   .find(\"colgroup\").after(\"<thead></thead>\").end()\n                   .find(\"thead\").append(row);\n\n               for (i = 0; i < cells.length; i++) {\n                   dom.changeTag(cells[i], \"th\");\n               }\n           }\n       },\n\n       removeParagraphs: function(cells) {\n           var i, j, len, cell, paragraphs;\n\n           for (i = 0; i < cells.length; i++) {\n               this.removeAttributes(cells[i]);\n\n               // remove paragraphs and insert line breaks between them\n               cell = $(cells[i]);\n               paragraphs = cell.children(\"p\");\n\n               for (j = 0, len = paragraphs.length; j < len; j++) {\n                   if (j < len - 1) {\n                       dom.insertAfter(dom.create(document, \"br\"), paragraphs[j]);\n                   }\n\n                   dom.unwrap(paragraphs[j]);\n               }\n           }\n       },\n\n       removeTextNodes: function(trs) {\n           var i, j, childNodes, currentNode, row;\n\n           for (i = 0; i < trs.length; i++) {\n               row = trs[i];\n               childNodes = row.childNodes;\n\n               for (j = 0; j < childNodes.length; j++) {\n                   currentNode = childNodes[j];\n\n                   if (currentNode.nodeType === dom.nodeTypes.TEXT_NODE) {\n                       row.removeChild(currentNode);\n                   }\n               }\n           }\n       },\n\n       tables: function(placeholder) {\n           var tables = $(placeholder).find(\"table\"),\n               that = this,\n               rows,\n               firstRow, longestRow, i, j;\n\n           for (i = 0; i < tables.length; i++) {\n               rows = tables[i].rows;\n               longestRow = firstRow = rows[0];\n\n               for (j = 1; j < rows.length; j++) {\n                   if (rows[j].cells.length > longestRow.cells.length) {\n                       longestRow = rows[j];\n                   }\n               }\n\n               that.createColGroup(longestRow);\n               that.convertHeaders(firstRow);\n\n               that.removeAttributes(tables[i]);\n\n               that.removeParagraphs(tables.eq(i).find(\"td,th\"));\n\n               that.removeTextNodes(tables.eq(i).find(\"tr\"));\n           }\n       },\n\n       headers: function(placeholder) {\n           var titles = $(placeholder).find(\"p.MsoTitle\");\n\n           for (var i = 0; i < titles.length; i++) {\n               dom.changeTag(titles[i], \"h1\");\n           }\n       },\n\n       removeFormatting: function(placeholder) {\n           $(placeholder).find(\"*\").each(function() {\n               $(this).css({\n                   fontSize: \"\",\n                   fontFamily: \"\"\n               });\n\n               if (!this.getAttribute(\"style\") && !this.style.cssText) {\n                   this.removeAttribute(\"style\");\n               }\n           });\n       },\n\n       clean: function(html) {\n           var that = this, placeholder;\n           var filters = this.options;\n\n           if (filters.none) {\n               html = Cleaner.fn.clean.call(that, html, this.junkReplacements);\n               html = that.stripEmptyAnchors(html);\n           } else {\n\n               html = filters.msConvertLists ? this.extractListLevels(html) : html;\n               html = Cleaner.fn.clean.call(that, html);\n               html = that.stripEmptyAnchors(html);\n\n               placeholder = dom.create(document, 'div', { innerHTML: html });\n               that.headers(placeholder);\n\n               if (filters.msConvertLists) {\n                   that.lists(placeholder);\n               }\n               that.tables(placeholder);\n\n               if (filters.msAllFormatting) {\n                   that.removeFormatting(placeholder);\n               }\n\n               html = placeholder.innerHTML.replace(/(<[^>]*)\\s+class=\"?[^\"\\s>]*\"?/ig, '$1');\n           }\n\n           return html;\n       }\n   });\n\n   var WebkitFormatCleaner = Cleaner.extend({\n       init: function(options) {\n           Cleaner.fn.init.call(this, options);\n\n           this.replacements = [\n               /\\s+class=\"Apple-style-span[^\"]*\"/gi, '',\n               /<(div|p|h[1-6])\\s+style=\"[^\"]*\"/gi, '<$1',\n               /^<div>(.*)<\\/div>$/, '$1'\n           ];\n       },\n\n       applicable: function(html) {\n           return (/class=\"?Apple-style-span|style=\"[^\"]*-webkit-nbsp-mode/i).test(html);\n       }\n   });\n\n   var DomCleaner = Cleaner.extend({\n       clean: function(html) {\n           var container = dom.create(document, 'div', { innerHTML: html });\n           container = this.cleanDom(container);\n           return container.innerHTML;\n       },\n\n       cleanDom: function(container) {\n           return container;\n       }\n   });\n\n   var HtmlTagsCleaner = DomCleaner.extend({\n       cleanDom: function(container) {\n           var tags = this.collectTags();\n\n           $(container).find(tags).each(function() {\n               dom.unwrap(this);\n           });\n\n           return container;\n       },\n\n       collectTags: function() {\n           if (this.options.span) {\n               return \"span\";\n           }\n       },\n\n       applicable: function() {\n           return this.options.span;\n       }\n   });\n\n   var HtmlAttrCleaner = DomCleaner.extend({\n       cleanDom: function(container) {\n           var attributes = this.collectAttr();\n           var nodes = $(container).find(\"[\" + attributes.join(\"],[\") + \"]\");\n           nodes.removeAttr(attributes.join(\" \"));\n\n           return container;\n       },\n\n       collectAttr: function() {\n           if (this.options.css) {\n               return [\"class\", \"style\"];\n           }\n\n           return [];\n       },\n\n       applicable: function() {\n           return this.options.css;\n       }\n   });\n\n   var TextContainer = function() {\n       this.text = \"\";\n       this.add = function(text) {\n           this.text += text;\n       };\n   };\n\n   var HtmlTextLines = Class.extend({\n       init: function(separators) {\n           this.separators = separators || {\n                   text: \" \",\n                   line: \"<br/>\"\n               };\n           this.lines = [];\n           this.inlineBlockText = [];\n           this.resetLine();\n       },\n\n       appendText: function(text) {\n           if (text.nodeType === 3) {\n               text = text.nodeValue;\n           }\n\n           this.textContainer.add(text);\n       },\n\n       appendInlineBlockText: function(text) {\n           this.inlineBlockText.push(text);\n       },\n\n       flashInlineBlockText: function() {\n           if (this.inlineBlockText.length) {\n               this.appendText(this.inlineBlockText.join(\" \"));\n               this.inlineBlockText = [];\n           }\n       },\n\n       endLine: function() {\n           this.flashInlineBlockText();\n           this.resetLine();\n       },\n\n       html: function() {\n           var separators = this.separators;\n           var result = \"\";\n           var lines = this.lines;\n\n           this.flashInlineBlockText();\n\n           for (var i = 0, il = lines.length, il1 = il - 1; i < il; i++) {\n               var line = lines[i];\n               for (var j = 0, jl = line.length, jl1 = jl - 1; j < jl; j++) {\n                   var text = line[j].text;\n                   result += text;\n                   if (j !== jl1) {\n                       result += separators.text;\n                   }\n               }\n               if (i !== il1) {\n                   result += separators.line;\n               }\n           }\n\n           return result;\n       },\n\n       resetLine: function() {\n           this.textContainer = new TextContainer();\n           this.line = [];\n           this.line.push(this.textContainer);\n           this.lines.push(this.line);\n       }\n   });\n\n   var DomEnumerator = Class.extend({\n       init: function(callback) {\n           this.callback = callback;\n       },\n       enumerate: function(node) {\n           if (!node) {\n               return;\n           }\n\n           var preventDown = this.callback(node);\n\n           var child = node.firstChild;\n           if (!preventDown && child) {\n               this.enumerate(child);\n           }\n\n           this.enumerate(node.nextSibling);\n       }\n   });\n\n   var HtmlContentCleaner = Cleaner.extend({\n       init: function(options) {\n           Cleaner.fn.init.call(this, options);\n           this.hasText = false; //unpleasant flag to prevent an empty line at the beginning of the generated content.\n           this.enumerator = new DomEnumerator(this.buildText.bind(this));\n       },\n\n       clean: function(html) {\n           var container = dom.create(document, 'div', { innerHTML: html });\n\n           return this.cleanDom(container);\n       },\n\n       cleanDom: function(container) {\n           this.separators = this.getDefaultSeparators();\n           this.htmlLines = new HtmlTextLines(this.separators);\n           this.enumerator.enumerate(container.firstChild);\n           this.hasText = false;\n\n           return this.htmlLines.html();\n       },\n\n       buildText: function(node) {\n           if (dom.isDataNode(node)) {\n               if (dom.isEmptyspace(node)) {\n                   return;\n               }\n               this.htmlLines.appendText(node.nodeValue.replace('\\n', this.separators.line));\n               this.hasText = true;\n           } else if (dom.isBlock(node) && this.hasText) {\n               var action = this.actions[dom.name(node)] || this.actions.block;\n               return action(this, node);\n           } else if (dom.isBr(node)) {\n               this.htmlLines.appendText(this.separators.line);\n           }\n       },\n\n       applicable: function() {\n           var o = this.options;\n           return o.all || o.keepNewLines;\n       },\n\n       getDefaultSeparators: function() {\n           if (this.options.all) {\n               return { text: \" \", line: \" \" };\n           } else {\n               return { text: \" \", line: \"<br/>\" };\n           }\n       },\n\n       actions: {\n           ul: $.noop,\n           ol: $.noop,\n           table: $.noop,\n           thead: $.noop,\n           tbody: $.noop,\n           td: function(cleaner, node) {\n               var tdCleaner = new HtmlContentCleaner({ all: true });\n\n               var cellText = tdCleaner.cleanDom(node);\n               cleaner.htmlLines.appendInlineBlockText(cellText);\n\n               return true;\n           },\n\n           block: function(cleaner) {\n               cleaner.htmlLines.endLine();\n           }\n       }\n   });\n\n   var CustomCleaner = Cleaner.extend({\n       clean: function(html) {\n           return this.options.custom(html);\n       },\n\n       applicable: function() {\n           return typeof(this.options.custom) === \"function\";\n       }\n   });\n\n   extend(editorNS, {\n       Clipboard: Clipboard,\n       Cleaner: Cleaner,\n       ScriptCleaner: ScriptCleaner,\n       TabCleaner: TabCleaner,\n       MSWordFormatCleaner: MSWordFormatCleaner,\n       WebkitFormatCleaner: WebkitFormatCleaner,\n       HtmlTagsCleaner: HtmlTagsCleaner,\n       HtmlAttrCleaner: HtmlAttrCleaner,\n       HtmlContentCleaner: HtmlContentCleaner,\n       HtmlTextLines: HtmlTextLines,\n       CustomCleaner: CustomCleaner\n   });\n\n   })(window.kendo.jQuery);\n\n   (function($) {\n\n   // Imports ================================================================\n   var kendo = window.kendo,\n       Class = kendo.Class,\n       editorNS = kendo.ui.editor,\n       RangeUtils = editorNS.RangeUtils,\n       dom = editorNS.Dom,\n       RestorePoint = editorNS.RestorePoint,\n       Marker = editorNS.Marker,\n       browser = kendo.support.browser,\n       bomSpan = \"<span  class='k-br'>\\ufeff</span>\",\n       extend = $.extend;\n   var nodeTypes = dom.nodeTypes;\n   var PREVIOUS_SIBLING = \"previousSibling\";\n\n   function selected(node, range) {\n       return range.startContainer === node && range.endContainer === node &&\n           range.startOffset === 0 && range.endOffset == node.childNodes.length;\n   }\n\n   function getSibling(node, direction, condition) {\n       var sibling = node ? node[direction] : null;\n\n       while (sibling && !condition(sibling)) {\n           sibling = sibling[direction];\n       }\n\n       return sibling;\n   }\n\n   var tableCells = \"td,th,caption\";\n   var tableCellsWrappers = \"table,tbody,thead,tfoot,tr\";\n   var tableElements = tableCellsWrappers + \",\" + tableCells;\n   var inTable = function(range) { return !range.collapsed && $(range.commonAncestorContainer).is(tableCellsWrappers); };\n\n   var RemoveTableContent = Class.extend({\n       remove: function(range) {\n           var that = this;\n           var marker = new Marker();\n           marker.add(range, false);\n\n           var nodes = RangeUtils.getAll(range, function(node) { return $(node).is(tableElements); });\n           var doc = RangeUtils.documentFromRange(range);\n           var start = marker.start;\n           var end = marker.end;\n           var cellsTypes = tableCells.split(\",\");\n           var startCell = dom.parentOfType(start, cellsTypes);\n           var endCell = dom.parentOfType(end, cellsTypes);\n           that._removeContent(start, startCell, true);\n           that._removeContent(end, endCell, false);\n           $(nodes).each(function(i, node) {\n               node = $(node);\n               (node.is(tableCells) ? node : node.find(tableCells)).each(function(j, cell) {\n                   cell.innerHTML = \"&#65279;\";\n               });\n           });\n           if (startCell && !start.previousSibling) {\n               dom.insertBefore(doc.createTextNode(\"\\ufeff\"), start);\n           }\n           if (endCell && !end.nextSibling) {\n               dom.insertAfter(doc.createTextNode(\"\\ufeff\"), end);\n           }\n           if (startCell) {\n               range.setStartBefore(start);\n           } else if (nodes[0]) {\n               startCell = $(nodes[0]);\n               startCell = startCell.is(tableCells) ? startCell : startCell.find(tableCells).first();\n               if (startCell.length) {\n                   range.setStart(startCell.get(0), 0);\n               }\n           }\n\n           range.collapse(true);\n\n           dom.remove(start);\n           dom.remove(end);\n       },\n       _removeContent: function(start, top, forwards) {\n           if (top) {\n               var sibling = forwards ? \"nextSibling\" : \"previousSibling\",\n                   next,\n                   getNext = function(node) {\n                       while (node && !node[sibling]) {\n                           node = node.parentNode;\n                       }\n                       return node && $.contains(top, node) ? node[sibling] : null;\n                   };\n               start = getNext(start);\n               while (start) {\n                   next = getNext(start);\n                   dom.remove(start);\n                   start = next;\n               }\n           }\n       }\n   });\n\n   var TypingHandler = Class.extend({\n       init: function(editor) {\n           this.editor = editor;\n       },\n\n       keydown: function(e) {\n           var that = this,\n               editor = that.editor,\n               keyboard = editor.keyboard,\n               isTypingKey = keyboard.isTypingKey(e),\n               evt = extend($.Event(), e);\n\n           that.editor.trigger(\"keydown\", evt);\n\n           if (evt.isDefaultPrevented() || (e && e.isDefaultPrevented())) {\n               e.preventDefault();\n               return true;\n           }\n\n           if (!evt.isDefaultPrevented() && isTypingKey && !keyboard.isTypingInProgress()) {\n               var range = editor.getRange();\n               var body = editor.body;\n               that.startRestorePoint = new RestorePoint(range, body);\n\n               if (inTable(range)) {\n                   var removeTableContent = new RemoveTableContent(editor);\n                   removeTableContent.remove(range);\n                   editor.selectRange(range);\n               }\n\n               if (browser.webkit && !range.collapsed && selected(body, range)) {\n                   body.innerHTML = \"\";\n               }\n\n               if (editor.immutables && editorNS.Immutables.immutablesContext(range)) {\n                   var backspaceHandler = new editorNS.BackspaceHandler(editor);\n                   backspaceHandler.deleteSelection(range);\n               }\n\n               keyboard.startTyping(function() {\n                   that._removeBomSpan();\n                   that.endRestorePoint = editorNS._finishUpdate(editor, that.startRestorePoint);\n               });\n\n               return true;\n           }\n\n           return false;\n       },\n\n       keyup: function(e) {\n           var keyboard = this.editor.keyboard;\n\n           this.editor.trigger(\"keyup\", e);\n\n           if (keyboard.isTypingInProgress()) {\n               keyboard.endTyping();\n               return true;\n           }\n\n           return false;\n       },\n\n       _removeBomSpan: function() {\n           var node = this.editor.getRange().commonAncestorContainer;\n\n           if (!dom.emptyNode(node)) {\n               if (node.nodeType === 3) {\n                   node = node.parentNode;\n               }\n\n               if (dom.insignificant(node)) {\n                   // typing in an insignificant node\n                   // make it significant\n                   node.textContent = dom.stripBom(node.textContent);\n                   dom.unwrap(node);\n               }\n           }\n       }\n   });\n\n   var BackspaceHandler = Class.extend({\n       init: function(editor) {\n           this.editor = editor;\n       },\n       _addCaret: function(container) {\n           var caret = dom.create(this.editor.document, \"a\");\n\n           // Only if not Chrome: Make sure to include cared in the formatted inline node\n           if (!kendo.support.browser.chrome && container.firstChild &&\n               container.firstChild.nodeType === nodeTypes.ELEMENT_NODE) {\n\n               container = container.firstChild;\n           }\n\n           dom.insertAt(container, caret, 0);\n           dom.stripBomNode(caret.previousSibling);\n           dom.stripBomNode(caret.nextSibling);\n           return caret;\n       },\n       _restoreCaret: function(caret) {\n           var range = this.editor.createRange();\n\n           if (!caret.nextSibling && dom.isDataNode(caret.previousSibling)) {\n               range.setStart(caret.previousSibling, caret.previousSibling.length);\n           } else {\n               range.setStartAfter(caret);\n           }\n\n           range.collapse(true);\n           this.editor.selectRange(range);\n           dom.remove(caret);\n       },\n       _handleDelete: function(range) {\n           var node = range.endContainer;\n           var block = dom.closestEditableOfType(node, dom.blockElements);\n\n           if (block && editorNS.RangeUtils.isEndOf(range, block)) {\n               // join with next sibling\n               var next = dom.next(block);\n               if (!next || dom.name(next) != \"p\") {\n                   return false;\n               }\n\n               var caretPlaceholder = dom.significantChildNodes(next)[0];\n               caretPlaceholder = (caretPlaceholder && dom.isInline(caretPlaceholder)) ? caretPlaceholder : next;\n               var caret = this._addCaret(caretPlaceholder);\n\n               this._merge(block, next);\n\n               this._restoreCaret(caret);\n\n               return true;\n           }\n\n           return false;\n       },\n       _cleanBomBefore: function(range) {\n           var offset = range.startOffset;\n           var node = range.startContainer;\n           var text = node.nodeValue;\n           var count = 0;\n           while (offset - count >= 0 && text[offset - count - 1] == \"\\ufeff\") {\n               count++;\n           }\n\n           if (count > 0) {\n               node.deleteData(offset - count, count);\n\n               range.setStart(node, Math.max(0, offset - count));\n               range.collapse(true);\n\n               this.editor.selectRange(range);\n           }\n       },\n       _handleBackspace: function(range) {\n           var node = range.startContainer;\n           var li = dom.closestEditableOfType(node, ['li']);\n           var block = dom.closestEditableOfType(node, 'p,h1,h2,h3,h4,h5,h6'.split(','));\n           var editor = this.editor;\n           var previousSibling;\n\n           if (dom.isDataNode(node)) {\n               if (range.collapsed && /^\\s[\\ufeff]+$/.test(node.nodeValue)) {\n                   range.setStart(node, 0);\n                   range.setEnd(node, node.length);\n                   editor.selectRange(range);\n                   return false;\n               }\n               this._cleanBomBefore(range);\n           }\n\n           previousSibling = getSibling(block, PREVIOUS_SIBLING, function(sibling) {\n               return !dom.htmlIndentSpace(sibling);\n           });\n\n           //deleting the first list item with empty content in IE results in invalid range\n           if (range.collapsed && range.startOffset !== range.endOffset && range.startOffset < 0) {\n               range.startOffset = 0;\n               range.endOffset = 0;\n               editor.selectRange(range);\n           }\n\n           var startAtLi = li && editorNS.RangeUtils.isStartOf(range, li);\n           var liIndex = li && $(li).index();\n           var startAtNonFirstLi = startAtLi && liIndex > 0;\n           if (startAtNonFirstLi) {\n               block = li;\n               previousSibling = dom.prev(li);\n           }\n\n           if (block && previousSibling && dom.is(previousSibling, 'table') && editorNS.RangeUtils.isStartOf(range, block)) {\n               if (block.innerText === '') {\n                   block.innerHTML = '\\ufeff';\n               }\n               return true;\n           }\n\n           // outdent\n           if (editorNS.RangeUtils.isStartOf(range, block) && parseInt(block.style.marginLeft,10) > 0) {\n               editor.exec(\"outdent\");\n               return true;\n           }\n\n           // unwrap block\n           if ((block && previousSibling && editorNS.RangeUtils.isStartOf(range, block)) || startAtNonFirstLi) {\n               var caretPlaceholder = dom.significantChildNodes(block)[0];\n               caretPlaceholder = (caretPlaceholder && dom.isInline(caretPlaceholder) && !dom.isImg(caretPlaceholder)) ? caretPlaceholder : block;\n\n               var caret = this._addCaret(caretPlaceholder);\n               this._merge(previousSibling, block);\n               this._restoreCaret(caret);\n\n               return true;\n           }\n\n           // unwrap li element\n           if (startAtLi && liIndex === 0) {\n               var child = li.firstChild;\n               if (!child) {\n                   li.innerHTML = editorNS.emptyElementContent;\n                   child = li.firstChild;\n               }\n\n               var formatter = new editorNS.ListFormatter(dom.name(li.parentNode), \"p\");\n               range.selectNodeContents(li);\n               formatter.toggle(range);\n\n               if (dom.insignificant(child)) {\n                   range.setStartBefore(child);\n               } else {\n                   range.setStart(child, 0);\n               }\n\n               editor.selectRange(range);\n\n               return true;\n           }\n\n           var rangeStartNode = node.childNodes[range.startOffset - 1];\n           var linkRange = range;\n           var anchor = rangeStartNode && dom.closestEditableOfType(rangeStartNode, ['a']);\n           var previousNode = getSibling(rangeStartNode || node, PREVIOUS_SIBLING, function(sibling) {\n               return !dom.isDataNode(sibling) || (!dom.isBom(sibling) && sibling.length > 0);\n           });\n           if (anchor || ((range.startOffset === 0 || rangeStartNode) && dom.is(previousNode, \"a\"))) {\n               anchor = anchor || previousNode;\n               linkRange = editor.createRange();\n               linkRange.setStart(anchor, anchor.childNodes.length);\n               linkRange.collapse(true);\n           }\n\n           anchor = anchor || dom.closestEditableOfType(rangeStartNode || linkRange.startContainer, ['a']);\n           var isEndOfLink = anchor && editorNS.RangeUtils.isEndOf(linkRange, anchor);\n           if (isEndOfLink) {\n               var command = new editorNS.UnlinkCommand({ range: linkRange, body: editor.body, immutables: !!editor.immutables });\n               editor.execCommand(command);\n               editor._selectionChange();\n           }\n           return false;\n       },\n       _handleSelection: function(range) {\n           var ancestor = range.commonAncestorContainer;\n           var table = dom.closest(ancestor, \"table\");\n           var emptyParagraphContent = editorNS.emptyElementContent;\n           var editor = this.editor;\n           var parentElementOrNode;\n\n           if (inTable(range)) {\n               var removeTableContent = new RemoveTableContent(editor);\n               removeTableContent.remove(range);\n               editor.selectRange(range);\n               return true;\n           }\n\n           var marker = new Marker();\n           marker.add(range, false);\n\n           if (range.commonAncestorContainer === editor.body) {\n               this._surroundFullyContent(marker, range);\n           }\n\n           if (editor.immutables) {\n               this._handleImmutables(marker);\n           }\n\n           this._surroundFullySelectedAnchor(marker, range);\n\n           range.setStartAfter(marker.start);\n           range.setEndBefore(marker.end);\n\n           var start = range.startContainer;\n           var end = range.endContainer;\n\n           range.deleteContents();\n\n           if (end.tagName.toLocaleLowerCase() === \"li\" && dom.emptyNode(end)) {\n               range.selectNode(end);\n               range.deleteContents();\n           }\n\n           if (table && $(table).text() === \"\") {\n               range.selectNode(table);\n               range.deleteContents();\n           }\n\n           ancestor = range.commonAncestorContainer;\n\n           if (dom.name(ancestor) === \"p\" && ancestor.innerHTML === \"\") {\n               ancestor.innerHTML = emptyParagraphContent;\n               range.setStart(ancestor, 0);\n           }\n\n           this._join(start, end);\n\n           dom.insertAfter(editor.document.createTextNode(\"\\ufeff\"), marker.start);\n           marker.remove(range);\n\n           start = range.startContainer;\n           if (dom.name(start) == \"tr\") {\n               start = start.childNodes[Math.max(0, range.startOffset - 1)];\n               range.setStart(start, dom.getNodeLength(start));\n           }\n\n           range.collapse(true);\n\n           editor.selectRange(range);\n\n           parentElementOrNode = start.parentElement || start.parentNode;\n\n           if (dom.isDataNode(start) && !dom.emptyNode(parentElementOrNode)) {\n               this._cleanBomBefore(range);\n           }\n\n           return true;\n       },\n       _handleImmutables: function(marker) {\n           var immutableParent = editorNS.Immutables.immutableParent;\n           var startImmutable = immutableParent(marker.start);\n           var endImmutable = immutableParent(marker.start);\n           if (startImmutable) {\n               dom.insertBefore(marker.start, startImmutable);\n           }\n           if (endImmutable) {\n               dom.insertAfter(marker.end, endImmutable);\n           }\n           if (startImmutable) {\n               dom.remove(startImmutable);\n           }\n           if (endImmutable && endImmutable.parentNode) {\n               dom.remove(endImmutable);\n           }\n       },\n       _surroundFullyContent: function(marker, range) {\n           var children = range.commonAncestorContainer.children,\n               startParent = children[0],\n               endParent = children[children.length - 1];\n\n           this._moveMarker(marker, range, startParent, endParent);\n       },\n       _surroundFullySelectedAnchor: function(marker, range) {\n           var start = marker.start,\n               startParent = $(start).closest(\"a\").get(0),\n               end = marker.end,\n               endParent = $(end).closest(\"a\").get(0);\n\n           this._moveMarker(marker, range, startParent, endParent);\n       },\n       _moveMarker: function(marker, range, startParent, endParent) {\n           var start = marker.start,\n               end = marker.end;\n\n           if (startParent && RangeUtils.isStartOf(range, startParent)) {\n               dom.insertBefore(start, startParent);\n           }\n\n           if (endParent && RangeUtils.isEndOf(range, endParent)) {\n               dom.insertAfter(end, endParent);\n           }\n       },\n       _root: function(node) {\n           while (node && dom.name(node) != \"body\" && node.parentNode && dom.name(node.parentNode) != \"body\") {\n               node = node.parentNode;\n           }\n\n           return node;\n       },\n       _join: function(start, end) {\n           start = this._root(start);\n           end = this._root(end);\n\n           if (start != end && dom.is(end, \"p\")) {\n               this._merge(start, end);\n           }\n       },\n       _merge: function(dest, src) {\n           dom.removeTrailingBreak(dest);\n\n           while (dest && src.firstChild) {\n               if (dest.nodeType == 1) {\n                   dest = dom.list(dest) ? dest.children[dest.children.length - 1] : dest;\n\n                   if (dest) {\n                       dest.appendChild(src.firstChild);\n                   }\n               } else if (dest.nodeType === nodeTypes.TEXT_NODE) {\n                   this._mergeWithTextNode(dest, src.firstChild);\n               } else {\n                   dest.parentNode.appendChild(src.firstChild);\n               }\n           }\n\n           dom.remove(src);\n       },\n\n       _mergeWithTextNode: function(textNode, appendedNode) {\n           if (textNode && textNode.nodeType === nodeTypes.TEXT_NODE) {\n               if (textNode.nextSibling && this._isCaret(textNode.nextSibling)) {\n                   dom.insertAfter(appendedNode, textNode.nextSibling);\n               }\n               else {\n                   dom.insertAfter(appendedNode, textNode);\n               }\n           }\n       },\n\n       _isCaret: function(element) {\n           return $(element).is(\"a\");\n       },\n\n       keydown: function(e) {\n           var method, startRestorePoint;\n           var editor = this.editor;\n           var range = editor.getRange();\n           var keyCode = e.keyCode;\n           var keys = kendo.keys;\n           var backspace = keyCode === keys.BACKSPACE;\n           var del = keyCode == keys.DELETE;\n\n           if (editor.immutables && editor.immutables.keydown(e, range)) {\n               return;\n           }\n\n           if ((backspace || del) && !range.collapsed) {\n               method = \"_handleSelection\";\n           } else if (backspace) {\n               method = \"_handleBackspace\";\n           } else if (del) {\n               method = \"_handleDelete\";\n           }\n\n           if (!method) {\n               return;\n           }\n\n           startRestorePoint = new RestorePoint(range, editor.body);\n\n           if (this[method](range)) {\n               e.preventDefault();\n\n               editorNS._finishUpdate(editor, startRestorePoint);\n           }\n       },\n       deleteSelection: function(range) {\n           this._handleSelection(range);\n       },\n       keyup: $.noop\n   });\n\n   var SystemHandler = Class.extend({\n       init: function(editor) {\n           this.editor = editor;\n           this.systemCommandIsInProgress = false;\n       },\n\n       createUndoCommand: function() {\n           this.startRestorePoint = this.endRestorePoint = editorNS._finishUpdate(this.editor, this.startRestorePoint);\n       },\n\n       changed: function() {\n           if (this.startRestorePoint) {\n               return this.startRestorePoint.html != this.editor.body.innerHTML;\n           }\n\n           return false;\n       },\n\n       keydown: function(e) {\n           var that = this,\n               editor = that.editor,\n               keyboard = editor.keyboard;\n\n           if (keyboard.isModifierKey(e)) {\n\n               if (keyboard.isTypingInProgress()) {\n                   keyboard.endTyping(true);\n               }\n\n               that.startRestorePoint = new RestorePoint(editor.getRange(), editor.body);\n               return true;\n           }\n\n           if (keyboard.isSystem(e)) {\n               that.systemCommandIsInProgress = true;\n\n               if (that.changed()) {\n                   that.systemCommandIsInProgress = false;\n                   that.createUndoCommand();\n               }\n\n               return true;\n           }\n\n           return false;\n       },\n\n       keyup: function() {\n           var that = this;\n\n           if (that.systemCommandIsInProgress && that.changed()) {\n               that.systemCommandIsInProgress = false;\n               that.createUndoCommand();\n               return true;\n           }\n\n           return false;\n       }\n   });\n\n   var SelectAllHandler = Class.extend({\n       init: function(editor) {\n           this.editor = editor;\n       },\n\n       keydown: function(e) {\n           if (!browser.webkit || e.isDefaultPrevented() ||\n               !(e.ctrlKey && e.keyCode == 65 && !e.altKey && !e.shiftKey)) {\n               return;\n           }\n           if (this.editor.options.immutables) {\n               this._toSelectableImmutables();\n           }\n           this._selectEditorBody();\n       },\n\n       _selectEditorBody: function() {\n           var editor = this.editor;\n           var range = editor.getRange();\n           range.selectNodeContents(editor.body);\n\n           setTimeout(function() {\n               editor.selectRange(range);\n           });\n       },\n\n       _toSelectableImmutables: function() {\n           var editor = this.editor,\n               body = editor.body,\n               immutable = editorNS.Immutables.immutable,\n               emptyTextNode = dom.emptyTextNode,\n               first = body.firstChild,\n               last = body.lastChild;\n\n           while (emptyTextNode(first)) {\n               first = first.nextSibling;\n           }\n\n           while (emptyTextNode(last)) {\n               last = last.previousSibling;\n           }\n\n           if (first && immutable(first)) {\n               $(bomSpan).prependTo(body);\n           }\n\n           if (last && immutable(last)) {\n               $(bomSpan).appendTo(body);\n           }\n       },\n\n       keyup: $.noop\n   });\n\n   var Keyboard = Class.extend({\n       init: function(handlers) {\n           this.handlers = handlers;\n           this.typingInProgress = false;\n       },\n\n       isCharacter: function(keyCode) {\n           return (keyCode >= 48 && keyCode <= 90) || (keyCode >= 96 && keyCode <= 111) ||\n                  (keyCode >= 186 && keyCode <= 192) || (keyCode >= 219 && keyCode <= 222) ||\n                  keyCode == 229;\n       },\n\n       toolFromShortcut: function(tools, e) {\n           var key = String.fromCharCode(e.keyCode),\n               toolName,\n               toolOptions,\n               modifier = this._getShortcutModifier(e, navigator.platform);\n\n           for (toolName in tools) {\n               toolOptions = $.extend({ ctrl: false, alt: false, shift: false }, tools[toolName].options);\n\n               if ((toolOptions.key == key || toolOptions.key == e.keyCode) &&\n                   toolOptions.ctrl == modifier &&\n                   toolOptions.alt == e.altKey &&\n                   toolOptions.shift == e.shiftKey) {\n                   return toolName;\n               }\n           }\n       },\n\n       _getShortcutModifier: function(e, platform) {\n           var mac = platform.toUpperCase().indexOf('MAC') >= 0;\n           return mac ? e.metaKey : e.ctrlKey;\n       },\n\n       toolsFromShortcut: function(tools, e) {\n           var key = String.fromCharCode(e.keyCode),\n               toolName,\n               o,\n               matchesKey,\n               found = [];\n           var matchKey = function(toolKey) { return toolKey == key || toolKey == e.keyCode || toolKey == e.charCode; };\n\n           for (toolName in tools) {\n               o = $.extend({ ctrl: false, alt: false, shift: false }, tools[toolName].options);\n\n               matchesKey = Array.isArray(o.key) ? $.grep(o.key, matchKey).length > 0 : matchKey(o.key);\n               if (matchesKey &&\n                   o.ctrl == e.ctrlKey &&\n                   o.alt == e.altKey &&\n                   o.shift == e.shiftKey) {\n                   found.push(tools[toolName]);\n               }\n           }\n\n           return found;\n       },\n\n       isTypingKey: function(e) {\n           var keyCode = e.keyCode;\n           return (this.isCharacter(keyCode) && !e.ctrlKey && !e.altKey) ||\n                  keyCode == 32 || keyCode == 13 || keyCode == 8 ||\n                  (keyCode == 46 && !e.shiftKey && !e.ctrlKey && !e.altKey);\n       },\n\n       isModifierKey: function(e) {\n           var keyCode = e.keyCode;\n           return (keyCode == 17 && !e.shiftKey && !e.altKey) ||\n                  (keyCode == 16 && !e.ctrlKey && !e.altKey) ||\n                  (keyCode == 18 && !e.ctrlKey && !e.shiftKey);\n       },\n\n       isSystem: function(e) {\n           return e.keyCode == 46 && e.ctrlKey && !e.altKey && !e.shiftKey;\n       },\n\n       startTyping: function(callback) {\n           this.onEndTyping = callback;\n           this.typingInProgress = true;\n       },\n\n       stopTyping: function() {\n           if (this.typingInProgress && this.onEndTyping) {\n               this.onEndTyping();\n           }\n           this.typingInProgress = false;\n       },\n\n       endTyping: function(force) {\n           var that = this;\n           that.clearTimeout();\n           if (force) {\n               that.stopTyping();\n           } else {\n               that.timeout = window.setTimeout(that.stopTyping.bind(that), 1000);\n           }\n       },\n\n       isTypingInProgress: function() {\n           return this.typingInProgress;\n       },\n\n       clearTimeout: function() {\n           window.clearTimeout(this.timeout);\n       },\n\n       notify: function(e, what) {\n           var i, handlers = this.handlers;\n\n           for (i = 0; i < handlers.length; i++) {\n               if (handlers[i][what](e)) {\n                   break;\n               }\n           }\n       },\n\n       keydown: function(e) {\n           this.notify(e, 'keydown');\n       },\n\n       keyup: function(e) {\n           this.notify(e, 'keyup');\n       }\n   });\n\n   extend(editorNS, {\n       TypingHandler: TypingHandler,\n       SystemHandler: SystemHandler,\n       BackspaceHandler: BackspaceHandler,\n       SelectAllHandler: SelectAllHandler,\n       Keyboard: Keyboard\n   });\n\n   })(window.kendo.jQuery);\n\n   (function($) {\n\n       // Imports ================================================================\n       var kendo = window.kendo,\n           editorNS = kendo.ui.editor,\n           Command = editorNS.Command,\n           EditorUtils = editorNS.EditorUtils,\n           registerTool = EditorUtils.registerTool,\n           Tool = editorNS.Tool,\n           extend = $.extend;\n\n   var ExportPdfCommand = Command.extend({\n       init: function(options) {\n           this.async = true;\n           Command.fn.init.call(this, options);\n       },\n\n       exec: function() {\n           var that = this;\n           var range = that.lockRange(true);\n           var editor = that.editor;\n\n           editor._destroyResizings();\n\n           editor.saveAsPDF().then(function() {\n               that.releaseRange(range);\n               editor._initializeColumnResizing();\n               editor._initializeRowResizing();\n               editor._initializeElementResizing();\n           });\n       }\n   });\n\n   extend(editorNS, {\n       ExportPdfCommand: ExportPdfCommand\n   });\n\n   registerTool(\"pdf\", new Tool({ command: ExportPdfCommand }));\n\n   })(window.kendo.jQuery);\n\n   (function($) {\n\n       // Imports ================================================================\n       var kendo = window.kendo,\n           editorNS = kendo.ui.editor,\n           Command = editorNS.Command,\n           EditorUtils = editorNS.EditorUtils,\n           registerTool = EditorUtils.registerTool,\n           Tool = editorNS.Tool,\n           extend = $.extend;\n\n   var PrintCommand = Command.extend({\n       init: function(options) {\n           Command.fn.init.call(this, options);\n\n           this.managesUndoRedo = true;\n       },\n\n       exec: function() {\n           var editor = this.editor;\n\n           if (kendo.support.browser.msie) {\n               editor.document.execCommand(\"print\", false, null);\n           } else if (editor.window.print) {\n               editor.window.print();\n           }\n       }\n   });\n\n   extend(editorNS, {\n       PrintCommand: PrintCommand\n   });\n\n   registerTool(\"print\", new Tool({ command: PrintCommand }));\n\n   })(window.kendo.jQuery);\n\n   (function($) {\n\n   var kendo = window.kendo,\n       Editor = kendo.ui.editor,\n       Tool = Editor.Tool,\n       Command = Editor.Command,\n       EditorUtils = Editor.EditorUtils,\n       dom = Editor.Dom,\n       RangeUtils = Editor.RangeUtils,\n       registerTool = EditorUtils.registerTool;\n\n   var CopyFormatCommand = Command.extend({\n       init: function(options) {\n           Command.fn.init.call(this, options);\n       },\n\n       exec: function() {\n           var range = this.lockRange(true);\n           this.inlineStyles = [];\n           this.blockStyles = [];\n           this.collectStyles(range);\n           this.editor.inlineStyles = this.inlineStyles;\n           this.editor.blockStyles = this.blockStyles;\n           this.releaseRange(range);\n       },\n\n       collectStyles: function(range) {\n           var rangeNodes = RangeUtils.nodes(range);\n           var node;\n\n           if (rangeNodes.length === 1) {\n               node = rangeNodes[0].parentNode;\n           } else {\n               node = range.startContainer;\n           }\n\n           while (node && !dom.is(node, \"body\") && node.getAttribute(\"data-role\") !== \"editor\") {\n               if (dom.isBlock(node)) {\n                   this.populateStyles(node, \"blockStyles\");\n                   if (dom.is(node, \"li\")) {\n                       node = node.parentNode;\n                   } else {\n                       node = null;\n                   }\n               } else {\n                   this.populateStyles(node, \"inlineStyles\");\n                   node = node.parentNode;\n               }\n           }\n       },\n\n       populateStyles: function(node, destination) {\n           var styles = node.style;\n           var attributes = node.attributes;\n           var nodeStyles = {\n               tags: [ node.tagName ],\n               attr: {\n                   style: {}\n               }\n           };\n           var styleValue, styleKey, attributeKey, attributeValue, i;\n\n           if (styles) {\n               for (i = 0; i < styles.length; i++) {\n                   styleKey = styles[i];\n                   styleValue = styles[styleKey];\n                   nodeStyles.attr.style[styleKey] = styleValue;\n               }\n           }\n\n           if (attributes) {\n               for (i = 0; i < attributes.length; i++) {\n                   attributeKey = attributes[i].nodeName;\n                   attributeValue = attributes[i].nodeValue;\n                   if (attributeKey === \"style\") {\n                       continue;\n                   } else if (attributeKey === \"class\") {\n                       nodeStyles.attr.className = attributeValue;\n                   } else {\n                       nodeStyles.attr[attributeKey] = attributeValue;\n                   }\n               }\n           }\n\n           this[destination].push(nodeStyles);\n       }\n   });\n\n   var ApplyFormatCommand = Command.extend({\n       init: function(options) {\n           Command.fn.init.call(this, options);\n       },\n\n       exec: function() {\n           var range = this.lockRange(true);\n           var markers = RangeUtils.getMarkers(range);\n           var editor = this.editor;\n           var inlineStyles = editor.inlineStyles;\n           var blockStyles = editor.blockStyles;\n           var nodes;\n\n           if ((!inlineStyles || inlineStyles.length === 0) && (!blockStyles || blockStyles.length === 0)) {\n               return;\n           }\n\n           if (markers.length === 3) {\n               this.marker.removeCaret(range);\n               this.marker.caret = null;\n           }\n\n           this.removeEmptyElementsFromRange(range);\n           nodes = RangeUtils.nodes(range);\n           this.cleanInlineParents(nodes);\n           dom.normalize(range.commonAncestorContainer);\n\n           if (markers.length === 2) {\n               range.setStartAfter(markers[0]);\n               range.setEndBefore(markers[1]);\n           } else {\n               range.setStartBefore(nodes[0]);\n               range.setEndAfter(nodes[0]);\n           }\n\n           nodes = RangeUtils.nodes(range);\n\n           if (nodes && blockStyles && blockStyles.length) {\n               this.applyBlockStyles(nodes, blockStyles);\n           }\n\n           if (nodes && inlineStyles && inlineStyles.length) {\n               this.applyInlineStyles(nodes, inlineStyles);\n           }\n\n           this.releaseRange(range);\n       },\n\n       removeEmptyElementsFromRange: function(range) {\n           var isEmptyInline = function(node) {\n               return dom.isInline(node) && !node.firstChild && !dom.isMarker(node);\n           };\n           var emptyElements, i;\n\n           emptyElements = RangeUtils.getAll(range, isEmptyInline);\n\n           if (emptyElements && emptyElements.length > 0) {\n               for (i = 0; i < emptyElements.length; i++) {\n                   emptyElements[i].parentNode.removeChild(emptyElements[i]);\n               }\n           }\n       },\n\n       cleanInlineParents: function(nodes) {\n           var i, node, parent, children, j, child, newNode;\n\n           for (i = 0; i < nodes.length; i++) {\n               node = nodes[i];\n               parent = node.parentNode;\n\n               if (this.immutableParent(node)) {\n                   continue;\n               }\n\n               while (parent && dom.isInline(parent)) {\n                   children = parent.childNodes;\n\n                   for (j = 0; j < children.length; j++) {\n                       child = children[j];\n\n                       if (!dom.isMarker(child) && child !== node) {\n                           newNode = parent.cloneNode(true);\n                           newNode.innerHTML = \"\";\n                           dom.wrap(child, newNode);\n                       }\n                   }\n\n                   dom.unwrap(parent);\n                   parent = node.parentNode;\n               }\n           }\n       },\n\n       applyBlockStyles: function(nodes, blockStyles) {\n           var formatTag = blockStyles[0].tags[0];\n           var attr = blockStyles[0].attr;\n           var document = this.editor.document;\n           var i, len, node, wrapper, blockParent, outerWrapper;\n           var previousNodes, nextNodes, previous, next, prevWrapper, nextWrapper, child, j, listItems;\n\n           for (i = 0, len = nodes.length; i < len; i++) {\n               node = nodes[i];\n\n               if (dom.isWhitespace(node) || this.immutableParent(node)) {\n                   continue;\n               }\n\n               blockParent = dom.blockParentOrBody(node);\n\n               if (blockParent.tagName !== \"BODY\" && blockParent.tagName !== formatTag) {\n                   if (blockParent.tagName !== \"LI\" && blockParent.tagName !== \"TD\" && blockParent.tagName !== \"TH\") {\n                       previousNodes = [];\n                       nextNodes = [];\n                       previous = node.previousSibling;\n                       next = node.nextSibling;\n\n                       while (previous) {\n                           if (!dom.isMarker(previous)) {\n                               previousNodes.push(previous);\n                           }\n\n                           previous = previous.previousSibling;\n                       }\n\n                       if (previousNodes.length) {\n                           prevWrapper = blockParent.cloneNode(true);\n                           prevWrapper.innerHTML = \"\";\n                           dom.insertBefore(prevWrapper, previousNodes[0]);\n\n                           for (j = 0; j < previousNodes.length; j++) {\n                               child = previousNodes[j];\n                               dom.insertAt(prevWrapper, child, 0);\n                           }\n                       }\n\n                       while (next) {\n                           if (!dom.isMarker(next)) {\n                               nextNodes.push(next);\n                           }\n\n                           next = next.nextSibling;\n                       }\n\n                       if (nextNodes.length) {\n                           nextWrapper = blockParent.cloneNode(true);\n                           nextWrapper.innerHTML = \"\";\n                           dom.insertBefore(nextWrapper, nextNodes[0]);\n\n                           for (j = 0; j < nextNodes.length; j++) {\n                               child = nextNodes[j];\n                               nextWrapper.appendChild(child);\n                           }\n                       }\n\n                       dom.unwrap(blockParent);\n                   }\n\n                   wrapper = dom.create(document, formatTag, attr);\n                   dom.wrap(node, wrapper);\n               } else if (blockParent.tagName === formatTag) {\n                   dom.attr(blockParent, attr);\n               }\n           }\n\n           if (blockParent && blockStyles.length === 2 && blockParent.tagName !== \"LI\" && formatTag === \"LI\") {\n               listItems = [];\n\n               while (dom.is(wrapper, \"li\")) {\n                   listItems.push(wrapper);\n                   wrapper = dom.prev(wrapper);\n               }\n\n               outerWrapper = dom.create(document, blockStyles[1].tags[0], blockStyles[1].attr);\n               dom.insertBefore(outerWrapper, listItems[listItems.length - 1]);\n               outerWrapper.appendChild(listItems[0]);\n\n               for (i = 1, len = listItems.length; i < len; i++) {\n                   dom.insertBefore(listItems[i], outerWrapper.firstChild);\n               }\n           } else if (blockParent && blockStyles.length === 2 && blockParent.tagName !== \"LI\") {\n               outerWrapper = dom.create(document, blockStyles[1].tags[0], blockStyles[1].attr);\n               dom.wrap(wrapper, outerWrapper);\n           }\n       },\n\n       applyInlineStyles: function(nodes, inlineStyles) {\n           var document = this.editor.document;\n           var currentStyle, createdNode, topNode, i, newNode, node;\n\n           for (i = 0; i < inlineStyles.length; i++) {\n               currentStyle = inlineStyles[i];\n               createdNode = dom.create(document, currentStyle.tags[0], currentStyle.attr);\n\n               if (topNode) {\n                   createdNode.appendChild(topNode);\n               }\n\n               topNode = createdNode;\n           }\n\n           if (topNode) {\n               for (i = 0; i < nodes.length; i++) {\n                   node = nodes[i];\n                   if (dom.isWhitespace(node) || this.immutableParent(node)) {\n                       continue;\n                   }\n                   newNode = topNode.cloneNode(true);\n                   dom.insertBefore(newNode, node);\n\n                   while (newNode.children && newNode.children.length) {\n                       newNode = newNode.children[0];\n                   }\n\n                   newNode.appendChild(node);\n               }\n           }\n       },\n\n       immutables: function() {\n           return this.editor && this.editor.options.immutables;\n       },\n\n       immutableParent: function(node) {\n           return this.immutables() && Editor.Immutables.immutableParent(node);\n       }\n   });\n\n   var CopyFormatTool = Tool.extend({\n       init: function(options) {\n           Tool.fn.init.call(this, options);\n       },\n\n       command: function(commandArguments) {\n           return new CopyFormatCommand(commandArguments);\n       }\n   });\n\n   var ApplyFormatTool = Tool.extend({\n       init: function(options) {\n           Tool.fn.init.call(this, options);\n       },\n\n       command: function(commandArguments) {\n           return new ApplyFormatCommand(commandArguments);\n       }\n   });\n\n   $.extend(Editor, {\n       CopyFormatCommand: CopyFormatCommand,\n       ApplyFormatCommand: ApplyFormatCommand,\n       CopyFormatTool: CopyFormatTool,\n       ApplyFormatTool: ApplyFormatTool\n   });\n\n   registerTool(\"copyFormat\", new CopyFormatTool({ }));\n   registerTool(\"applyFormat\", new ApplyFormatTool({ }));\n\n   })(window.kendo.jQuery);\n\n   (function($) {\n\n       const kendo = window.kendo,\n           extend = $.extend,\n           Editor = kendo.ui.editor,\n           formats = kendo.ui.Editor.fn.options.formats,\n           dom = Editor.Dom,\n           Tool = Editor.Tool,\n           DelayedExecutionTool = Editor.DelayedExecutionTool,\n           BlockFormatter = Editor.BlockFormatter,\n           FormatCommand = Editor.FormatCommand,\n           GreedyInlineFormatFinder = Editor.GreedyInlineFormatFinder,\n           EditorUtils = Editor.EditorUtils,\n           registerTool = EditorUtils.registerTool,\n           registerFormat = EditorUtils.registerFormat,\n           RangeUtils = Editor.RangeUtils,\n           MOUSEDOWN_NS = \"mousedown.kendoEditor\",\n           KEYDOWN_NS = \"keydown.kendoEditor\";\n\n       const LineHeightCommand = FormatCommand.extend({\n           exec: function() {\n               const cmd = this,\n                   range = cmd.lockRange(true),\n                   nodes = dom.filterBy(RangeUtils.nodes(range), dom.htmlIndentSpace, true);\n\n               cmd.formatter.format[0].attr.style.lineHeight = cmd.options.value.lineHeight;\n               cmd.formatter.apply(nodes);\n               cmd.releaseRange(range);\n           }\n       });\n\n       const LineHeightFormatTool = DelayedExecutionTool.extend({\n           init: function(options) {\n               Tool.fn.init.call(this, options);\n\n               this.type = \"kendoComboBox\";\n               this.format = [{ tags: [\"p\", \"lineHeight\"] }];\n               this.finder = new GreedyInlineFormatFinder(this.format, options.cssAttr, options.fontAttr, options.defaultValue);\n           },\n\n           command: function(commandArguments) {\n               var that = this;\n\n               return new LineHeightCommand(extend(commandArguments, {\n                   formatter: function() {\n                       return new BlockFormatter(that.options.format);\n                   }\n               }));\n           },\n\n           initialize: function(ui, editor) {\n               let tool = this,\n                   component = ui.getKendoComboBox();\n\n               tool.editor = editor;\n\n               component.bind(\"change\", this.changeHandler.bind(this));\n               component.bind(\"close\", this.closeHandler.bind(this));\n\n               component.wrapper.on(MOUSEDOWN_NS, \".k-input-button,.k-input-inner\", this.mouseDownHandler.bind(this))\n                   .on(KEYDOWN_NS, this.keyDownHandler.bind(this));\n           },\n\n           changeHandler: function(e) {\n               this._exec(e.sender.value());\n           },\n\n           closeHandler: function() {\n               let that = this,\n                   editor = that.editor;\n\n               setTimeout(function() {\n                   editor._deleteSavedRange();\n                   that.currentRange = null;\n               },0);\n           },\n\n           mouseDownHandler: function() {\n               let newRange = this.editor.getRange();\n\n               this.currentRange = this.editor._containsRange(newRange) ? newRange : this.currentRange;\n           },\n\n           keyDownHandler: function(e) {\n               if (e.keyCode === kendo.keys.ENTER) {\n                   this.editor._deleteSavedRange();\n                   this.currentRange = null;\n                   e.preventDefault();\n               }\n           },\n\n           _exec: function(value) {\n               let editor = this.editor;\n               editor._range = this.currentRange;\n               if (value) {\n                   Tool.exec(this.editor, this.options.name, { lineHeight: value });\n               }\n           },\n       });\n\n       $.extend(Editor, {\n           LineHeightCommand: LineHeightCommand,\n           LineHeightFormatTool: LineHeightFormatTool\n       });\n\n       registerFormat(\"lineHeight\", [\n           { tags: dom.blockElements, attr: { style: { lineHeight: \"normal\" } } }\n       ]);\n\n       registerTool(\"lineHeight\", new LineHeightFormatTool({\n           cssAttr: \"line-height\",\n           format: formats.lineHeight,\n           defaultValue: 1.15,\n           ui: {\n               type: \"component\",\n               component: \"ComboBox\",\n               componentOptions: {\n                   value: 1.15,\n                   dataTextField: \"text\",\n                   dataValueField: \"value\",\n                   prefixOptions: {\n                       icon: \"paragraphHeight\"\n                   },\n                   autoSize: true,\n                   dataSource: [\n                       { text: \"1\", value: \"1\" },\n                       { text: \"1.15\", value: \"1.15\" },\n                       { text: \"1.5\", value: \"1.5\" },\n                       { text: \"2\", value: \"2\" },\n                       { text: \"2.5\", value: \"2.5\" },\n                   ]\n               }\n           }\n       }));\n   })(window.kendo.jQuery);\n\n   (function($) {\n\n       const kendo = window.kendo,\n           Editor = kendo.ui.editor,\n           Tool = Editor.Tool,\n           Command = Editor.Command,\n           EditorUtils = Editor.EditorUtils,\n           registerTool = EditorUtils.registerTool,\n           DOM = Editor.Dom,\n           SPACE_UNICODE = \"\\u00B7\",\n           NEW_LINE_UNICODE = \"\\u21B5\";\n\n       const createMark = function(range, document, character, scrollTop, index, scrollableWrapper) {\n           const clonedRange = range.cloneRange(),\n                 container = clonedRange.startContainer;\n\n           let domRect, x, y, textNode, parentRect;\n\n           if (index !== undefined && index !== null) {\n               clonedRange.setStart(container, index);\n               clonedRange.setEnd(container, index + 1);\n           }\n\n           domRect = clonedRange.getBoundingClientRect();\n\n           if (scrollableWrapper) {\n               parentRect = scrollableWrapper.getBoundingClientRect();\n               x = domRect.left - parentRect.left - domRect.width / 2;\n               y = domRect.top - parentRect.top + domRect.height + scrollTop;\n           } else {\n               if (character === SPACE_UNICODE) {\n                   x = domRect.x - domRect.width / 4;\n                   y = domRect.y + domRect.height + scrollTop;\n               } else if (character === NEW_LINE_UNICODE) {\n                   x = domRect.x;\n                   y = domRect.y + domRect.height + scrollTop;\n               }\n           }\n\n           textNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"text\");\n           textNode.setAttributeNS(null, \"x\", x);\n           textNode.setAttributeNS(null, \"y\", y);\n           textNode.setAttributeNS(null, \"fill\", \"#6098f2\");\n           textNode.setAttributeNS(null, \"font-size\", `${Math.ceil(domRect.height + domRect.width)}px`);\n           textNode.textContent = character;\n\n           return textNode;\n       };\n\n       const appendSvgMarks = function() {\n           const that = this,\n               range = that.getRange().cloneRange(),\n               overlay = that._formattingMarksOverlay[0],\n               fragment = that.document.createDocumentFragment(),\n               document = that.document,\n               isInlineEditor = that._isInlineEditor(),\n               scrollableWrapper = isInlineEditor ? that.body.parentElement : null,\n               scrollTop = isInlineEditor ? scrollableWrapper.scrollTop : document.documentElement.scrollTop;\n\n           if (!that.body.firstChild && !that.body.lastChild) {\n               return;\n           }\n\n           range.setStart(that.body.firstChild, 0);\n           range.setEnd(that.body.lastChild, 0);\n\n           const nodes = DOM.getTextNodes(that.body).concat($(that.body).find(\"br\").toArray());\n\n           nodes.forEach((node) => {\n               if (node.nodeType === DOM.nodeTypes.TEXT_NODE) {\n                   range.selectNodeContents(node);\n\n                   for (let i = range.startOffset; i < range.endOffset; i++) {\n                       if ((range.startContainer.textContent.charCodeAt(i) === 32 || range.startContainer.textContent.charCodeAt(i) === 160)) {\n                           fragment.appendChild(createMark(range, document, SPACE_UNICODE, scrollTop, i, scrollableWrapper));\n                       }\n                   }\n               } else {\n                   range.selectNode(node);\n                   fragment.appendChild(createMark(range, document, NEW_LINE_UNICODE, scrollTop, null, scrollableWrapper));\n               }\n           });\n\n           overlay.appendChild(fragment);\n       };\n\n       const clearFormattingMarksOverlay = function(editor) {\n           editor._formattingMarksOverlay.empty();\n       };\n\n       const applyFormattingMarks = function(editor) {\n           editor._updateFormattingMarksOverlayHeight();\n           appendSvgMarks.call(editor);\n       };\n\n       const FormattingMarksCommand = Command.extend({\n           exec: function() {\n               const cmd = this,\n                   range = cmd.lockRange(true),\n                   editor = cmd.editor;\n\n               if (!editor._toggledFormattingMarks) {\n                   editor._toggledFormattingMarks = true;\n                   editor._appendFormattingMarksOverlay();\n                   editor._appendFormattingMarksStyles();\n                   clearFormattingMarksOverlay(editor);\n                   applyFormattingMarks(editor);\n               } else {\n                   editor._toggledFormattingMarks = false;\n                   editor._destroyFormattingMarksOverlay();\n               }\n\n               cmd.releaseRange(range);\n           }\n       });\n\n       $.extend(Editor, {\n           FormattingMarksCommand: FormattingMarksCommand,\n           applyFormattingMarks: applyFormattingMarks,\n           clearFormattingMarksOverlay: clearFormattingMarksOverlay\n       });\n\n       registerTool(\"formattingMarks\", new Tool({ command: FormattingMarksCommand, icon: \"paragraphMark\", ui: { togglable: true } }));\n   })(window.kendo.jQuery);\n\n   (function(kendo, undefined$1) {\n       var global = window;\n       var math = global.Math;\n       var min = math.min;\n       var max = math.max;\n       var parseFloat = global.parseFloat;\n\n       var $ = kendo.jQuery;\n       var extend = $.extend;\n\n       var Editor = kendo.ui.editor;\n\n       var PERCENTAGE = \"%\";\n       var PIXEL = \"px\";\n       var REGEX_NUMBER_IN_PERCENTAGES = /(\\d+)(\\.?)(\\d*)%/;\n       var REGEX_NUMBER_IN_PIXELS = /(\\d+)(\\.?)(\\d*)px/;\n       var STRING = \"string\";\n\n       function constrain(options) {\n           var value = options.value;\n           var lowerBound = options.min;\n           var upperBound = options.max;\n\n           return max(min(parseFloat(value), parseFloat(upperBound)), parseFloat(lowerBound));\n       }\n\n       function getScrollBarWidth(element) {\n           if (element && !$(element).is(\"body\") && element.scrollHeight > element.clientHeight) {\n               return kendo.support.scrollbar();\n           }\n\n           return 0;\n       }\n\n       function calculatePercentageRatio(value, total) {\n           if (inPercentages(value)) {\n               return parseFloat(value);\n           }\n           else {\n               return ((parseFloat(value) / total) * 100);\n           }\n       }\n\n       function inPercentages(value) {\n           return (typeof(value) === STRING && REGEX_NUMBER_IN_PERCENTAGES.test(value));\n       }\n\n       function inPixels(value) {\n           return (typeof(value) === STRING && REGEX_NUMBER_IN_PIXELS.test(value));\n       }\n\n       function toPercentages(value) {\n           return (parseFloat(value) + PERCENTAGE);\n       }\n\n       function toPixels(value) {\n           return (parseFloat(value) + PIXEL);\n       }\n\n       var ResizingUtils = {\n           constrain: constrain,\n           getScrollBarWidth: getScrollBarWidth,\n           calculatePercentageRatio: calculatePercentageRatio,\n           inPercentages: inPercentages,\n           inPixels: inPixels,\n           toPercentages: toPercentages,\n           toPixels: toPixels\n       };\n\n       extend(Editor, {\n           ResizingUtils: ResizingUtils\n       });\n   })(window.kendo);\n\n   (function(kendo, undefined$1) {\n       var $ = kendo.jQuery;\n       var extend = $.extend;\n       var noop = $.noop;\n\n       var Editor = kendo.ui.editor;\n       var Class = kendo.Class;\n\n       var KEY_DOWN = \"keydown\";\n       var MOUSE_DOWN = \"mousedown\";\n       var MOUSE_ENTER = \"mouseenter\";\n       var MOUSE_LEAVE = \"mouseleave\";\n       var MOUSE_MOVE = \"mousemove\";\n       var MOUSE_UP = \"mouseup\";\n\n       var COMMA = \",\";\n       var DOT = \".\";\n       var LAST_CHILD = \":last-child\";\n\n       var TABLE = \"table\";\n\n       var TableElementResizing = Class.extend({\n           init: function(element, options) {\n               var that = this;\n\n               that.options = extend({}, that.options, options);\n\n               that.options.tags = Array.isArray(that.options.tags) ? that.options.tags : [that.options.tags];\n\n               if ($(element).is(TABLE)) {\n                   that.element = element;\n                   that._attachEventHandlers();\n               }\n           },\n\n           destroy: function() {\n               var that = this;\n               var eventNamespace = that.options.eventNamespace;\n\n               if (that.element) {\n                   $(that.element).off(eventNamespace);\n                   that.element = null;\n               }\n\n               $(that.options.rootElement).off(KEY_DOWN + eventNamespace);\n\n               that._destroyResizeHandle();\n           },\n\n           options: {\n               tags: [],\n               min: 0,\n               rootElement: null,\n               eventNamespace: \"\",\n               rtl: false,\n               handle: {\n                   dataAttribute: \"\",\n                   height: 0,\n                   width: 0,\n                   classNames: {},\n                   template: \"\"\n               }\n           },\n\n           _attachEventHandlers: function() {\n               var that = this;\n               var options = that.options;\n\n               $(that.element).on(MOUSE_MOVE + options.eventNamespace, options.tags.join(COMMA), that.detectElementBorderHovering.bind(that));\n           },\n\n           resizingInProgress: function() {\n               var that = this;\n               var resizable = that._resizable;\n\n               if (resizable) {\n                   return !!resizable.resizing;\n               }\n\n               return false;\n           },\n\n           resize: noop,\n\n           detectElementBorderHovering: function(e) {\n               var that = this;\n               var options = that.options;\n               var handleOptions = options.handle;\n               var tableElement = $(e.currentTarget);\n               var resizeHandle = that.resizeHandle;\n               var dataAttribute = handleOptions.dataAttribute;\n\n               if (!that.resizingInProgress()) {\n                   if (!tableElement.is(LAST_CHILD) && that.elementBorderHovered(tableElement, e)) {\n                       if (resizeHandle) {\n                           if (resizeHandle.data(dataAttribute) && resizeHandle.data(dataAttribute) !== tableElement[0]) {\n                               that.showResizeHandle(tableElement, e);\n                           }\n                       }\n                       else {\n                           that.showResizeHandle(tableElement, e);\n                       }\n                   }\n                   else {\n                       if (resizeHandle) {\n                           that._destroyResizeHandle();\n                       }\n                   }\n               }\n           },\n\n           elementBorderHovered: noop,\n\n           showResizeHandle: function(tableElement, e) {\n               var that = this;\n\n               if (e.buttons !== 0) {\n                   //prevent showing when a mouse button is still being pressed\n                   return;\n               }\n\n               that._initResizeHandle();\n               that.setResizeHandlePosition(tableElement);\n               that.setResizeHandleDimensions();\n               that.setResizeHandleDataAttributes(tableElement[0]);\n               that._attachResizeHandleEventHandlers();\n\n               that._initResizable(tableElement);\n\n               that._hideResizeMarker();\n               that.resizeHandle.show();\n           },\n\n           _initResizeHandle: function() {\n               var that = this;\n               var options = that.options;\n\n               that._destroyResizeHandle();\n\n               that.resizeHandle = $(options.handle.template).appendTo(options.rootElement);\n           },\n\n           setResizeHandlePosition: noop,\n\n           setResizeHandleDimensions: noop,\n\n           setResizeHandleDataAttributes: function(tableElement) {\n               var that = this;\n\n               that.resizeHandle.data(that.options.handle.dataAttribute, tableElement);\n           },\n\n           _attachResizeHandleEventHandlers: function() {\n               var that = this;\n               var options = that.options;\n               var eventNamespace = options.eventNamespace;\n               var markerClass = options.handle.classNames.marker;\n               var resizeHandle = that.resizeHandle;\n\n               that.resizeHandle\n                   .on(MOUSE_DOWN + eventNamespace, function() {\n                       resizeHandle.find(DOT + markerClass).show();\n                   })\n                   .on(MOUSE_UP + eventNamespace, function() {\n                       resizeHandle.find(DOT + markerClass).hide();\n                   });\n           },\n\n           _hideResizeMarker: function() {\n               var that = this;\n\n               that.resizeHandle.find(DOT + that.options.handle.classNames.marker).hide();\n           },\n\n           _destroyResizeHandle: function() {\n               var that = this;\n\n               if (that.resizeHandle) {\n                   that._destroyResizable();\n                   that.resizeHandle.off(that.options.eventNamespace).remove();\n                   that.resizeHandle = null;\n               }\n           },\n\n           _initResizable: function(tableElement) {\n               var that = this;\n\n               if (!that.resizeHandle) {\n                   return;\n               }\n\n               that._destroyResizable();\n\n               that._resizable = new kendo.ui.Resizable(tableElement, {\n                   draggableElement: that.resizeHandle[0],\n                   start: that.onResizeStart.bind(that),\n                   resize: that.onResize.bind(that),\n                   resizeend: that.onResizeEnd.bind(that)\n               });\n           },\n\n           _destroyResizable: function() {\n               var that = this;\n\n               if (that._resizable) {\n                   that._resizable.destroy();\n                   that._resizable = null;\n               }\n           },\n\n           onResizeStart: function() {\n               this._disableKeyboard();\n           },\n\n           onResize: function(e) {\n               this.setResizeHandleDragPosition(e);\n           },\n\n           setResizeHandleDragPosition: noop,\n\n           onResizeEnd: function(e) {\n               var that = this;\n\n               that.resize(e);\n               that._destroyResizeHandle();\n               that._enableKeyboard();\n\n               if (this.options.editor) {\n                   this.options.editor._handleSpaceAndNewLines();\n               }\n           },\n\n           _enableKeyboard: function() {\n               var options = this.options;\n\n               $(options.rootElement).off(KEY_DOWN + options.eventNamespace);\n           },\n\n           _disableKeyboard: function() {\n               var options = this.options;\n\n               $(options.rootElement).on(KEY_DOWN + options.eventNamespace, function(e) {\n                   e.preventDefault();\n               });\n           },\n\n           _forceResizing: function(e) {\n               var resizable = this._resizable;\n\n               if (resizable && resizable.userEvents) {\n                   resizable.userEvents._end(e);\n               }\n           }\n       });\n\n       var ResizingFactory = Class.extend({\n           create: function(editor, options) {\n               var that = this;\n               var resizingName = options.name;\n               var NS = options.eventNamespace;\n\n               $(editor.body)\n                   .on(MOUSE_ENTER + NS, TABLE, function(e) {\n                       var table = e.currentTarget;\n                       var resizing = editor[resizingName];\n\n                       e.stopPropagation();\n\n                       if (resizing) {\n                           if (resizing.element !== table && !resizing.resizingInProgress()) {\n                               that._destroyResizing(editor, options);\n                               that._initResizing(editor, table, options);\n                           }\n                       }\n                       else {\n                           that._initResizing(editor, table, options);\n                       }\n                   })\n                   .on(MOUSE_LEAVE + NS, TABLE, function(e) {\n                       var parentTable;\n                       var resizing = editor[resizingName];\n\n                       e.stopPropagation();\n\n                       if (resizing && !resizing.resizingInProgress() && !resizing.resizeHandle) {\n                           parentTable = $(resizing.element).parents(TABLE)[0];\n\n                           if (parentTable) {\n                               that._destroyResizing(editor, options);\n                               that._initResizing(editor, parentTable, options);\n                           }\n                       }\n                   })\n                   .on(MOUSE_LEAVE + NS, function() {\n                       var resizing = editor[resizingName];\n\n                       if (resizing && !resizing.resizingInProgress()) {\n                           that._destroyResizing(editor, options);\n                       }\n                   })\n                   .on(MOUSE_UP + NS, function(e) {\n                       var resizing = editor[resizingName];\n                       var parentTable;\n\n                       if (resizing && resizing.resizingInProgress()) {\n                           parentTable = $(e.target).parents(TABLE)[0];\n\n                           if (parentTable) {\n                               resizing._forceResizing(e);\n                               that._destroyResizing(editor, options);\n                               that._initResizing(editor, parentTable, options);\n                           }\n                       }\n                   });\n           },\n\n           dispose: function(editor, options) {\n               $(editor.body).off(options.eventNamespace);\n           },\n\n           _initResizing: function(editor, tableElement, options) {\n               var resizingName = options.name;\n               var resizingType = options.type;\n\n               editor[resizingName] = new resizingType(tableElement, {\n                   rtl: kendo.support.isRtl(editor.element),\n                   rootElement: editor.body,\n                   editor: editor\n               });\n           },\n\n           _destroyResizing: function(editor, options) {\n               var resizingName = options.name;\n\n               if (editor[resizingName]) {\n                   editor[resizingName].destroy();\n                   editor[resizingName] = null;\n               }\n           }\n       });\n       ResizingFactory.current = new ResizingFactory();\n\n       TableElementResizing.create = function(editor, options) {\n           ResizingFactory.current.create(editor, options);\n       };\n\n       TableElementResizing.dispose = function(editor, options) {\n           ResizingFactory.current.dispose(editor, options);\n       };\n\n       extend(Editor, {\n           TableElementResizing: TableElementResizing\n       });\n\n   })(window.kendo);\n\n   (function(kendo, undefined$1) {\n       var global = window;\n       var math = global.Math;\n       var abs = math.abs;\n\n       var $ = kendo.jQuery;\n       var extend = $.extend;\n\n       var Editor = kendo.ui.editor;\n       var dom = Editor.Dom;\n       var TableElementResizing = Editor.TableElementResizing;\n       var ResizingUtils = Editor.ResizingUtils;\n       var constrain = ResizingUtils.constrain;\n       var calculatePercentageRatio = ResizingUtils.calculatePercentageRatio;\n       var getScrollBarWidth = ResizingUtils.getScrollBarWidth;\n       var inPercentages = ResizingUtils.inPercentages;\n       var toPercentages = ResizingUtils.toPercentages;\n       var toPixels = ResizingUtils.toPixels;\n       var outerWidth = kendo._outerWidth;\n\n       var NS = \".kendoEditorColumnResizing\";\n       var RESIZE_HANDLE_CLASS = \"k-column-resize-handle\";\n       var RESIZE_MARKER_CLASS = \"k-column-resize-marker\";\n\n       var BODY = \"body\";\n       var TBODY = \"tbody\";\n       var THEAD = \"thead\";\n       var TD = \"td\";\n       var TH = \"th\";\n       var TR = \"tr\";\n\n       var COLATTR = \"col-index\";\n\n       var COMMA = \",\";\n       var WIDTH = \"width\";\n\n       var ColumnResizing = TableElementResizing.extend({\n           options: {\n               tags: [TD, TH],\n               min: 20,\n               rootElement: null,\n               eventNamespace: NS,\n               rtl: false,\n               handle: {\n                   dataAttribute: \"column\",\n                   width: 10,\n                   height: 0,\n                   classNames: {\n                       handle: RESIZE_HANDLE_CLASS,\n                       marker: RESIZE_MARKER_CLASS\n                   },\n                   template:\n                       '<div class=\"k-column-resize-handle-wrapper\" unselectable=\"on\" contenteditable=\"false\">' +\n                           '<div class=\"' + RESIZE_HANDLE_CLASS + '\">' +\n                               '<div class=\"' + RESIZE_MARKER_CLASS + '\"></div>' +\n                           '</div>' +\n                       '</div>'\n               }\n           },\n\n           elementBorderHovered: function(column, e) {\n               var that = this;\n               var options = that.options;\n               var handleWidth = options.handle.width;\n               var borderOffset = column.offset().left + (options.rtl ? 0 : outerWidth(column));\n\n\n               var mousePosition = e.clientX + $(column[0].ownerDocument).scrollLeft();\n\n               if ((mousePosition > (borderOffset - handleWidth)) && (mousePosition < (borderOffset + handleWidth))) {\n                   return true;\n               }\n               else {\n                   return false;\n               }\n           },\n\n           setResizeHandlePosition: function(column) {\n               var that = this;\n               var tableInnerElement = $(that.element.tHead || that.element.tBodies[0]);\n               var options = that.options;\n               var rtl = options.rtl;\n               var handleWidth = options.handle.width;\n               var rootElement = $(options.rootElement);\n               var scrollTopOffset = rootElement.is(BODY) ? 0 : rootElement.scrollTop();\n               var scrollLeftOffset = rootElement.is(BODY) ? 0 : kendo.scrollLeft(rootElement);\n               var columnWidthOffset = rtl ? 0 : outerWidth(column);\n               var scrollBarWidth = rtl ? getScrollBarWidth(rootElement[0]) : 0;\n               var columnOffsetLeft = column.offset().left -\n                                       (rootElement.offset().left + parseFloat(rootElement.css(\"borderLeftWidth\"))) -\n                                       parseFloat(column.css(\"marginLeft\"));\n               var innerElementOffsetTop = tableInnerElement.offset().top -\n                                       (rootElement.offset().top + parseFloat(rootElement.css(\"borderTopWidth\"))) -\n                                       parseFloat(tableInnerElement.css(\"marginTop\"));\n               var browser = kendo.support.browser;\n\n               if (rtl && (browser.mozilla || (browser.webkit && browser.version >= 85))) {\n                   scrollLeftOffset = scrollLeftOffset * -1;\n               }\n\n               that.resizeHandle.css({\n                   top: innerElementOffsetTop + scrollTopOffset,\n                   left: columnOffsetLeft + columnWidthOffset + (scrollLeftOffset - scrollBarWidth) - (handleWidth / 2),\n                   position: \"absolute\"\n               });\n           },\n\n           setResizeHandleDimensions: function() {\n               var that = this;\n               var tableHead = $(that.element).children(THEAD);\n               var tableBody = $(that.element).children(TBODY);\n               var fullHeight = tableHead.length > 0 ? tableHead.height() + tableBody.height() : tableBody.height();\n\n               that.resizeHandle.css({\n                   width: that.options.handle.width,\n                   height: fullHeight\n               });\n           },\n\n           setResizeHandleDragPosition: function(e) {\n               var that = this;\n               var column = $($(e.currentTarget).data(that.options.handle.dataAttribute));\n               var options = that.options;\n               var rootElement = $(options.rootElement);\n               var handleWidth = options.handle ? options.handle.width : 0;\n               var min = options.min;\n               var rtl = options.rtl;\n               var columnWidth = outerWidth(column);\n               var columnLeftOffset = column.offset().left -\n                                       (rootElement.offset().left + parseFloat(rootElement.css(\"borderLeftWidth\"))) -\n                                       parseFloat(column.css(\"marginLeft\"));\n               var adjacentColumnWidth = outerWidth(column.next());\n               var resizeHandle = $(that.resizeHandle);\n               var scrollLeftOffset = rootElement.is(BODY) ? 0 : kendo.scrollLeft(rootElement);\n               var scrollBarWidth = rtl ? getScrollBarWidth(rootElement[0]) : 0;\n               var resizeHandleOffsetLeft = resizeHandle.offset().left -\n                                               (rootElement.offset().left + parseFloat(rootElement.css(\"borderLeftWidth\"))) -\n                                               parseFloat(resizeHandle.css(\"marginLeft\"));\n               var browser = kendo.support.browser;\n\n               if (rtl && (browser.mozilla || (browser.webkit && browser.version >= 85))) {\n                   scrollLeftOffset = scrollLeftOffset * -1;\n               }\n\n               var handleOffset = constrain({\n                   value: resizeHandleOffsetLeft + (scrollLeftOffset - scrollBarWidth) + e.x.delta,\n                   min: columnLeftOffset + (scrollLeftOffset - scrollBarWidth) - (rtl ? adjacentColumnWidth : 0) + min,\n                   max: columnLeftOffset + columnWidth + (scrollLeftOffset - scrollBarWidth) + (rtl ? 0 : adjacentColumnWidth) - handleWidth - min\n               });\n\n               resizeHandle.css({ left: handleOffset });\n           },\n\n           resize: function(e) {\n               var that = this;\n               var column = $($(e.currentTarget).data(that.options.handle.dataAttribute));\n               var options = that.options;\n               var rtlModifier = options.rtl ? (-1) : 1;\n               var min = options.min;\n               var initialDeltaX = rtlModifier * e.x.initialDelta;\n               var newWidth;\n               var initialAdjacentColumnWidth;\n               var initialColumnWidth;\n               var colIndex;\n               var nextColumn;\n\n               dom.reMapTableColumns(that.element, COLATTR);\n\n               colIndex = parseInt(column.attr(COLATTR), 10);\n\n               if (column.prop(\"colSpan\") > 1) {\n                   column = $(that.element).find(\"[\" + COLATTR + \"=\" + (colIndex + column.prop(\"colSpan\") - 1) + \"]\").eq(0);\n                   colIndex = parseInt(column.attr(COLATTR), 10);\n               }\n\n               nextColumn = $(that.element).find(\"[\" + COLATTR + \"=\" + (colIndex + 1) + \"]:not([colspan])\");\n\n               that._setTableComputedWidth();\n               that._setColumnsComputedWidth();\n\n               initialColumnWidth = outerWidth(column);\n               initialAdjacentColumnWidth = outerWidth(nextColumn);\n\n               newWidth = constrain({\n                   value: initialColumnWidth + initialDeltaX,\n                   min: min,\n                   max: initialColumnWidth + initialAdjacentColumnWidth - min\n               });\n\n               that._resizeColumn(column[0], newWidth);\n               that._resizeTopAndBottomColumns(column[0], newWidth);\n               that._resizeAdjacentColumns(parseInt(column.attr(COLATTR),10), initialAdjacentColumnWidth, initialColumnWidth, (initialColumnWidth - newWidth));\n\n               dom.clearTableMappings(that.element, COLATTR);\n           },\n\n           _setTableComputedWidth: function() {\n               var element = this.element;\n\n               if (element.style[WIDTH] === \"\") {\n                   element.style[WIDTH] = toPixels(outerWidth($(element)));\n               }\n           },\n\n           _setColumnsComputedWidth: function() {\n               var that = this;\n               var tableInnerElement = $(that.element.tHead || that.element.tBodies[0]);\n               var innerElementWidth = outerWidth(tableInnerElement);\n               var columns = tableInnerElement.children(TR).children(TD);\n               var length = columns.length;\n               var currentColumnsWidths = columns.map(function() {\n                   return outerWidth($(this));\n               });\n               var i;\n\n               for (i = 0; i < length; i++) {\n                   if (inPercentages(columns[i].style[WIDTH])) {\n                       columns[i].style[WIDTH] = toPercentages(calculatePercentageRatio(currentColumnsWidths[i], innerElementWidth));\n                   }\n                   else {\n                       columns[i].style[WIDTH] = toPixels(currentColumnsWidths[i]);\n                   }\n               }\n           },\n\n           _resizeTopAndBottomColumns: function(column, newWidth) {\n               var that = this;\n               var columnIndex = $(column).attr(COLATTR);\n               var topAndBottomColumns = $(that.element).children(TBODY + COMMA + THEAD).children(TR).children(that.options.tags.join(COMMA))\n                   .filter(function() {\n                       var cell = this;\n                       return ($(cell).attr(COLATTR) === columnIndex && cell !== column);\n                   });\n               var length = topAndBottomColumns.length;\n               var i;\n\n               for (i = 0; i < length; i++) {\n                   that._resizeColumn(topAndBottomColumns[i], newWidth);\n               }\n           },\n\n           _resizeColumn: function(column, newWidth) {\n               var innerTableElement = $(this.element.tHead || this.element.tBodies[0]);\n               if (inPercentages(column.style[WIDTH])) {\n                   column.style[WIDTH] = toPercentages(calculatePercentageRatio(newWidth, outerWidth(innerTableElement)));\n               }\n               else {\n                   column.style[WIDTH] = toPixels(newWidth);\n               }\n           },\n\n           _resizeAdjacentColumns: function(columnIndex, initialAdjacentColumnWidth, initialColumnWidth, deltaWidth) {\n               var that = this;\n               var adjacentColumns = $(that.element).children(TBODY + COMMA + THEAD).children(TR).children(that.options.tags.join(COMMA))\n                   .filter(function() {\n                       return (parseInt($(this).attr(COLATTR),10) === (columnIndex + 1));\n                   });\n               var length = adjacentColumns.length;\n               var i;\n\n               for (i = 0; i < length; i++) {\n                   that._resizeAdjacentColumn(adjacentColumns[i], initialAdjacentColumnWidth, initialColumnWidth, deltaWidth);\n               }\n           },\n\n           _resizeAdjacentColumn: function(adjacentColumn, initialAdjacentColumnWidth, initialColumnWidth, deltaWidth) {\n               var that = this;\n               var min = that.options.min;\n               var newWidth;\n\n               newWidth = constrain({\n                   value: initialAdjacentColumnWidth + deltaWidth,\n                   min: min,\n                   max: abs(initialColumnWidth + initialAdjacentColumnWidth - min)\n               });\n\n               that._resizeColumn(adjacentColumn, newWidth);\n           }\n       });\n\n       ColumnResizing.create = function(editor) {\n           TableElementResizing.create(editor, {\n               name: \"columnResizing\",\n               type: ColumnResizing,\n               eventNamespace: NS\n           });\n       };\n\n       ColumnResizing.dispose = function(editor) {\n           TableElementResizing.dispose(editor, {\n               eventNamespace: NS\n           });\n       };\n\n       extend(Editor, {\n           ColumnResizing: ColumnResizing\n       });\n\n   })(window.kendo);\n\n   (function(kendo, undefined$1) {\n       var math = window.Math;\n       var abs = math.abs;\n\n       var $ = kendo.jQuery;\n       var extend = $.extend;\n\n       var Editor = kendo.ui.editor;\n       var TableElementResizing = Editor.TableElementResizing;\n       var ResizingUtils = Editor.ResizingUtils;\n       var getScrollBarWidth = ResizingUtils.getScrollBarWidth;\n       var constrain = ResizingUtils.constrain;\n       var calculatePercentageRatio = ResizingUtils.calculatePercentageRatio;\n       var inPercentages = ResizingUtils.inPercentages;\n       var toPercentages = ResizingUtils.toPercentages;\n       var toPixels = ResizingUtils.toPixels;\n       var outerHeight = kendo._outerHeight;\n\n       var NS = \".kendoEditorRowResizing\";\n       var RESIZE_HANDLE_CLASS = \"k-row-resize-handle\";\n       var RESIZE_HANDLE_MARKER_WRAPPER_CLASS = \"k-row-resize-marker-wrapper\";\n       var RESIZE_MARKER_CLASS = \"k-row-resize-marker\";\n\n       var BODY = \"body\";\n       var TR = \"tr\";\n       var TBODY = \"tbody\";\n       var THEAD = \"thead\";\n\n       var COMMA = \",\";\n       var HEIGHT = \"height\";\n\n       var RowResizing = TableElementResizing.extend({\n           options: {\n               tags: [TR],\n               min: 20,\n               rootElement: null,\n               eventNamespace: NS,\n               rtl: false,\n               handle: {\n                   dataAttribute: \"row\",\n                   width: 0,\n                   height: 10,\n                   classNames: {\n                       handle: RESIZE_HANDLE_CLASS,\n                       marker: RESIZE_MARKER_CLASS\n                   },\n                   template:\n                       '<div class=\"k-row-resize-handle-wrapper\" unselectable=\"on\" contenteditable=\"false\">' +\n                           '<div class=\"' + RESIZE_HANDLE_CLASS + '\">' +\n                               '<div class=\"' + RESIZE_HANDLE_MARKER_WRAPPER_CLASS + '\">' +\n                                   '<div class=\"' + RESIZE_MARKER_CLASS + '\"></div>' +\n                               '</div>' +\n                           '</div>' +\n                       '</div>'\n               }\n           },\n\n           elementBorderHovered: function(tableElement, e) {\n               var that = this;\n               var handleHeight = that.options.handle[HEIGHT];\n               var borderOffset = tableElement.offset().top + outerHeight(tableElement);\n               var mousePosition = e.clientY + $(tableElement[0].ownerDocument).scrollTop();\n\n               if ((mousePosition > (borderOffset - handleHeight)) && (mousePosition < (borderOffset + handleHeight))) {\n                   return true;\n               }\n               else {\n                   return false;\n               }\n           },\n\n           setResizeHandlePosition: function(row) {\n               var that = this;\n               var options = that.options;\n               var handleHeight = options.handle[HEIGHT];\n               var rootElement = $(options.rootElement);\n               var scrollTopOffset = rootElement.is(BODY) ? 0 : rootElement.scrollTop();\n               var scrollLeftOffset = rootElement.is(BODY) ? 0 : kendo.scrollLeft(rootElement);\n               var scrollBarWidth = options.rtl ? getScrollBarWidth(rootElement[0]) : 0;\n\n               var rowOffsetLeft = row.offset().left -\n                                       (rootElement.offset().left + parseFloat(rootElement.css(\"borderLeftWidth\"))) -\n                                       parseFloat(row.css(\"marginLeft\"));\n               var rowOffsetTop = row.offset().top -\n                                       (rootElement.offset().top + parseFloat(rootElement.css(\"borderTopWidth\"))) -\n                                       parseFloat(row.css(\"marginTop\"));\n               var browser = kendo.support.browser;\n\n               if (options.rtl && (browser.mozilla || (browser.webkit && browser.version >= 85))) {\n                   scrollLeftOffset = scrollLeftOffset * -1;\n               }\n\n               that.resizeHandle.css({\n                   top: rowOffsetTop + outerHeight(row) + scrollTopOffset - (handleHeight / 2),\n                   left: rowOffsetLeft + (scrollLeftOffset - scrollBarWidth),\n                   position: \"absolute\"\n               });\n           },\n\n           setResizeHandleDimensions: function() {\n               var that = this;\n               var innerTableElement = $(that.element.tHead || that.element.tBodies[0]);\n\n               that.resizeHandle.css({\n                   width: innerTableElement.width(),\n                   height: that.options.handle[HEIGHT]\n               });\n           },\n\n           setResizeHandleDragPosition: function(e) {\n               var that = this;\n               var options = that.options;\n               var min = options.min;\n               var tableHead = $(that.element).children(THEAD);\n               var tableBody = $(that.element).children(TBODY);\n               var topInnerTableElement = tableHead.length > 0 ? tableHead : tableBody;\n               var resizeHandle = $(that.resizeHandle);\n               var row = $(e.currentTarget).data(options.handle.dataAttribute);\n               var $row = $(row);\n               var rootElement = $(options.rootElement);\n               var scrollTopOffset = rootElement.is(BODY) ? 0 : rootElement.scrollTop();\n               var tableTopOffset = topInnerTableElement.offset().top -\n                                       (rootElement.offset().top + parseFloat(rootElement.css(\"borderTopWidth\"))) -\n                                       parseFloat(topInnerTableElement.css(\"marginTop\"));\n\n               var rowOffsetTop = $row.offset().top -\n                                   (rootElement.offset().top + parseFloat(rootElement.css(\"borderTopWidth\"))) -\n                                   parseFloat($row.css(\"marginTop\"));\n\n               var resizeHandleOffsetTop = resizeHandle.offset().top -\n                                   (Math.max(0 , rootElement.offset().top) + parseFloat(rootElement.css(\"borderTopWidth\"))) -\n                                   parseFloat(resizeHandle.css(\"marginTop\"));\n\n               var handleOffset = constrain({\n                   value: resizeHandleOffsetTop + scrollTopOffset + e.y.delta,\n                   min: rowOffsetTop + scrollTopOffset + min,\n                   max: tableTopOffset + outerHeight(tableHead) + outerHeight(tableBody) + scrollTopOffset - options.handle[HEIGHT] - min\n               });\n\n               resizeHandle.css({ top: handleOffset });\n           },\n\n           resize: function(e) {\n               var that = this;\n               var options = that.options;\n               var row = $(e.currentTarget).data(options.handle.dataAttribute);\n               var currentRowHeight = outerHeight($(row));\n               var element = $(that.element);\n               var initialTableHeight = outerHeight(element);\n               var tableHead = element.children(THEAD);\n               var tableHeadHeight = tableHead.length > 0 ? tableHead.height() : 0;\n               var tableBody = element.children(TBODY);\n               var tableBodyHeight = tableBody.height();\n               var initialStyleHeight = row.style[HEIGHT];\n               var newRowHeight = constrain({\n                   value: currentRowHeight + e.y.initialDelta,\n                   min: options.min,\n                   max: abs(tableHeadHeight + tableBodyHeight - options.min)\n               });\n\n               that._setRowsHeightInPixels();\n               row.style[HEIGHT] = toPixels(newRowHeight);\n               that._setTableHeight(initialTableHeight + (newRowHeight - currentRowHeight));\n\n               if (inPercentages(initialStyleHeight)) {\n                   //resize rows in percentages as late as possible to prevent incorrect precision calculations\n                   that._setRowsHeightInPercentages();\n               }\n           },\n\n           _setRowsHeightInPixels: function() {\n               var that = this;\n               var rows = $(that.element).children(TBODY + COMMA + THEAD).children(TR);\n               var length = rows.length;\n               var currentRowsHeights = rows.map(function() {\n                   return outerHeight($(this));\n               });\n               var i;\n\n               for (i = 0; i < length; i++) {\n                   rows[i].style[HEIGHT] = toPixels(currentRowsHeights[i]);\n               }\n           },\n\n           _setRowsHeightInPercentages: function() {\n               var that = this;\n               var tableHead = $(that.element).children(THEAD);\n               var tableHeadHeight = tableHead.length > 0 ? tableHead.height() : 0;\n               var tableBody = $(that.element).children(TBODY);\n               var tableBodyHeight = tableBody.height();\n               var rows = $(that.element).children(THEAD + COMMA + TBODY).children(TR);\n               var length = rows.length;\n               var currentRowsHeights = rows.map(function() {\n                   return outerHeight($(this));\n               });\n               var i;\n\n               for (i = 0; i < length; i++) {\n                   rows[i].style[HEIGHT] = toPercentages(calculatePercentageRatio(currentRowsHeights[i], tableHeadHeight + tableBodyHeight));\n               }\n           },\n\n           _setTableHeight: function(newHeight) {\n               var element = this.element;\n\n               if (inPercentages(element.style[HEIGHT])) {\n                   element.style[HEIGHT] = toPercentages(calculatePercentageRatio(newHeight, $(element).parent().height()));\n               }\n               else {\n                   element.style[HEIGHT] = toPixels(newHeight);\n               }\n           }\n       });\n\n       RowResizing.create = function(editor) {\n           TableElementResizing.create(editor, {\n               name: \"rowResizing\",\n               type: RowResizing,\n               eventNamespace: NS\n           });\n       };\n\n       RowResizing.dispose = function(editor) {\n           TableElementResizing.dispose(editor, {\n               eventNamespace: NS\n           });\n       };\n\n       extend(Editor, {\n           RowResizing: RowResizing\n       });\n\n   })(window.kendo);\n\n   (function(kendo, undefined$1) {\n       var $ = kendo.jQuery;\n       var extend = $.extend;\n       var noop = $.noop;\n\n       var Editor = kendo.ui.editor;\n       var Class = kendo.Class;\n       var Draggable = kendo.ui.Draggable;\n       var Observable = kendo.Observable;\n       var getScrollBarWidth = Editor.ResizingUtils.getScrollBarWidth;\n       var outerWidth = kendo._outerWidth;\n       var outerHeight = kendo._outerHeight;\n\n       var NS = \".kendoEditorElementResizeHandle\";\n       var RESIZE_HANDLE_CLASS = \"k-element-resize-handle\";\n\n       var DRAG_START = \"dragStart\";\n       var DRAG = \"drag\";\n       var DRAG_END = \"dragEnd\";\n       var HALF_INSIDE = \"halfInside\";\n       var MOUSE_OVER = \"mouseover\";\n       var MOUSE_OUT = \"mouseout\";\n\n       var BODY = \"body\";\n       var TABLE = \"table\";\n\n       var EAST = \"east\";\n       var NORTH = \"north\";\n       var NORTHEAST = \"northeast\";\n       var NORTHWEST = \"northwest\";\n       var SOUTH = \"south\";\n       var SOUTHEAST = \"southeast\";\n       var SOUTHWEST = \"southwest\";\n       var WEST = \"west\";\n\n       var DOT = \".\";\n\n       var ElementResizeHandle = Observable.extend({\n           init: function(options) {\n               var that = this;\n\n               Observable.fn.init.call(that);\n\n               that.options = extend({}, that.options, options);\n               that.element = $(that.options.template).appendTo(that.options.appendTo)[0];\n\n               that._attachEventHandlers();\n               that._addStyles();\n               that._initDraggable();\n               that._initPositioningStrategy();\n               that._initDraggingStrategy();\n\n               $(that.element).data(TABLE, that.options.resizableElement);\n           },\n\n           destroy: function() {\n               var that = this;\n\n               $(that.element).off(NS).remove();\n               that.element = null;\n\n               that._destroyDraggable();\n\n               that.unbind();\n           },\n\n           options: {\n               appendTo: null,\n               direction: SOUTHEAST,\n               resizableElement: null,\n               rtl: false,\n               template:\n                   \"<div class='k-element-resize-handle-wrapper' unselectable='on' contenteditable='false'>\" +\n                       \"<div class='\" + RESIZE_HANDLE_CLASS + \"'></div>\" +\n                   \"</div>\"\n           },\n\n           events: [\n               DRAG_START,\n               DRAG,\n               DRAG_END,\n               MOUSE_OVER,\n               MOUSE_OUT\n           ],\n\n           show: function() {\n               this._setPosition();\n           },\n\n           _setPosition: function() {\n               var that = this;\n               var position = that._positioningStrategy.getPosition();\n\n               $(that.element).css({\n                   top: position.top,\n                   left: position.left,\n                   position: \"absolute\"\n               });\n           },\n\n           _attachEventHandlers: function() {\n               var that = this;\n\n               $(that.element)\n                   .on(MOUSE_OVER + NS, that._onMouseOver.bind(that))\n                   .on(MOUSE_OUT + NS, that._onMouseOut.bind(that));\n           },\n\n           _onMouseOver: function() {\n               this.trigger(MOUSE_OVER);\n           },\n\n           _onMouseOut: function() {\n               this.trigger(MOUSE_OUT);\n           },\n\n           _addStyles: function() {\n               var that = this;\n               $(that.element).children(DOT + RESIZE_HANDLE_CLASS).addClass(\"k-resize-\" + that.options.direction);\n           },\n\n           _initPositioningStrategy: function() {\n               var that = this;\n               var options = that.options;\n\n               that._positioningStrategy = HandlePositioningStrategy.create({\n                   name: options.direction,\n                   handle: that.element,\n                   resizableElement: options.resizableElement,\n                   rootElement: options.rootElement,\n                   rtl: options.rtl\n               });\n           },\n\n           _initDraggable: function() {\n               var that = this;\n               var element = that.element;\n\n               if (that._draggable || !element) {\n                   return;\n               }\n\n               that._draggable = new Draggable(element, {\n                   dragstart: that._onDragStart.bind(that),\n                   drag: that._onDrag.bind(that),\n                   dragend: that._onDragEnd.bind(that)\n               });\n           },\n\n           _onDragStart: function() {\n               this.trigger(DRAG_START);\n           },\n\n           _onDrag: function(e) {\n               var that = this;\n\n               that.trigger(DRAG, that._draggingStrategy.adjustDragDelta({\n                   deltaX: e.x.delta,\n                   deltaY: e.y.delta,\n                   initialDeltaX: e.x.initialDelta,\n                   initialDeltaY: e.y.initialDelta\n               }));\n\n               if (that.options.editor) {\n                   that.options.editor._handleSpaceAndNewLines();\n               }\n           },\n\n           _onDragEnd: function() {\n               this.trigger(DRAG_END);\n           },\n\n           _destroyDraggable: function() {\n               var that = this;\n\n               if (that._draggable) {\n                   that._draggable.destroy();\n                   that._draggable = null;\n               }\n           },\n\n           _initDraggingStrategy: function() {\n               var that = this;\n\n               that._draggingStrategy = HandleDraggingStrategy.create({\n                   name: that.options.direction\n               });\n           }\n       });\n\n       var StrategyFactory = Class.extend({\n           init: function() {\n               this._items = [];\n           },\n\n           register: function(name, type) {\n               this._items.push({\n                   name: name,\n                   type: type\n               });\n           },\n\n           create: function(options) {\n               var items = this._items;\n               var itemsLength = items.length;\n               var name = options.name ? options.name.toLowerCase() : \"\";\n               var match;\n               var item;\n               var i;\n\n               for (i = 0; i < itemsLength; i++) {\n                   item = items[i];\n\n                   if (item.name.toLowerCase() === name) {\n                       match = item;\n                       break;\n                   }\n               }\n\n               if (match) {\n                   return new match.type(options);\n               }\n           }\n       });\n\n       var PositioningStrategyFactory = StrategyFactory.extend({});\n       PositioningStrategyFactory.current = new PositioningStrategyFactory();\n\n       var HandlePositioningStrategy = Class.extend({\n           init: function(options) {\n               var that = this;\n               that.options = extend({}, that.options, options);\n           },\n\n           options: {\n               handle: null,\n               offset: HALF_INSIDE,\n               resizableElement: null,\n               rootElement: null,\n               rtl: false\n           },\n\n           getPosition: function() {\n               var that = this;\n\n               var position = that.calculatePosition();\n               var handleOffsetPosition = that.applyHandleOffset(position);\n               var scrollOffsetPosition = that.applyScrollOffset(handleOffsetPosition);\n\n               return scrollOffsetPosition;\n           },\n\n           calculatePosition: noop,\n\n           applyHandleOffset: function(position) {\n               var options = this.options;\n               var handle = $(options.handle);\n\n               if (options.offset === HALF_INSIDE) {\n                   return {\n                       top: position.top - (outerHeight(handle) / 2),\n                       left: position.left - (outerWidth(handle) / 2)\n                   };\n               }\n\n               return position;\n           },\n\n           applyScrollOffset: function(position) {\n               var options = this.options;\n               var rootElement = $(options.rootElement);\n               var scrollBarWidth = options.rtl ? getScrollBarWidth(rootElement[0]) : 0;\n               var browser = kendo.support.browser;\n               var rootLeft;\n\n               if (!rootElement.is(BODY)) {\n                   rootLeft = kendo.scrollLeft(rootElement) || 0;\n\n                   if (options.rtl && (browser.mozilla || (browser.webkit && browser.version >= 85))) {\n                       rootLeft = rootLeft * -1;\n                   }\n\n                   return {\n                       top: position.top + (rootElement.scrollTop() || 0),\n                       left: position.left + rootLeft - scrollBarWidth\n                   };\n               }\n\n               return position;\n           }\n       });\n\n       HandlePositioningStrategy.create = function(options) {\n           return PositioningStrategyFactory.current.create(options);\n       };\n\n       var EastPositioningStrategy = HandlePositioningStrategy.extend({\n           calculatePosition: function() {\n               var resizableElement = $(this.options.resizableElement);\n               var offset = resizableElement.position();\n               var marginLeft = parseInt(resizableElement.css(\"marginLeft\"), 10);\n\n               return {\n                   top: offset.top + (outerHeight(resizableElement) / 2),\n                   left: offset.left + outerWidth(resizableElement) + marginLeft\n               };\n           }\n       });\n       PositioningStrategyFactory.current.register(EAST, EastPositioningStrategy);\n\n       var NorthPositioningStrategy = HandlePositioningStrategy.extend({\n           calculatePosition: function() {\n               var resizableElement = $(this.options.resizableElement);\n               var offset = resizableElement.position();\n               var marginLeft = parseInt(resizableElement.css(\"marginLeft\"), 10);\n\n               return {\n                   top: offset.top,\n                   left: offset.left + (outerWidth(resizableElement) / 2) + marginLeft\n               };\n           }\n       });\n       PositioningStrategyFactory.current.register(NORTH, NorthPositioningStrategy);\n\n       var NortheastPositioningStrategy = HandlePositioningStrategy.extend({\n           calculatePosition: function() {\n               var resizableElement = $(this.options.resizableElement);\n               var offset = resizableElement.position();\n               var marginLeft = parseInt(resizableElement.css(\"marginLeft\"), 10);\n\n               return {\n                   top: offset.top,\n                   left: offset.left + outerWidth(resizableElement) + marginLeft\n               };\n           }\n       });\n       PositioningStrategyFactory.current.register(NORTHEAST, NortheastPositioningStrategy);\n\n       var NorthwestPositioningStrategy = HandlePositioningStrategy.extend({\n           calculatePosition: function() {\n               var resizableElement = $(this.options.resizableElement);\n               var offset = resizableElement.position();\n               var marginLeft = parseInt(resizableElement.css(\"marginLeft\"), 10);\n\n               return {\n                   top: offset.top,\n                   left: offset.left + marginLeft\n               };\n           }\n       });\n       PositioningStrategyFactory.current.register(NORTHWEST, NorthwestPositioningStrategy);\n\n       var SouthPositioningStrategy = HandlePositioningStrategy.extend({\n           calculatePosition: function() {\n               var resizableElement = $(this.options.resizableElement);\n               var offset = resizableElement.position();\n               var marginLeft = parseInt(resizableElement.css(\"marginLeft\"), 10);\n\n               return {\n                   top: offset.top + outerHeight(resizableElement),\n                   left: offset.left + (outerWidth(resizableElement) / 2) + marginLeft\n               };\n           }\n       });\n       PositioningStrategyFactory.current.register(SOUTH, SouthPositioningStrategy);\n\n       var SoutheastPositioningStrategy = HandlePositioningStrategy.extend({\n           calculatePosition: function() {\n               var resizableElement = $(this.options.resizableElement);\n               var offset = resizableElement.position();\n               var marginLeft = parseInt(resizableElement.css(\"marginLeft\"), 10);\n\n               return {\n                   top: offset.top + outerHeight(resizableElement),\n                   left: offset.left + outerWidth(resizableElement) + marginLeft\n               };\n           }\n       });\n       PositioningStrategyFactory.current.register(SOUTHEAST, SoutheastPositioningStrategy);\n\n       var SouthwestPositioningStrategy = HandlePositioningStrategy.extend({\n           calculatePosition: function() {\n               var resizableElement = $(this.options.resizableElement);\n               var offset = resizableElement.position();\n               var marginLeft = parseInt(resizableElement.css(\"marginLeft\"), 10);\n\n               return {\n                   top: offset.top + outerHeight(resizableElement),\n                   left: offset.left + marginLeft\n               };\n           }\n       });\n       PositioningStrategyFactory.current.register(SOUTHWEST, SouthwestPositioningStrategy);\n\n       var WestPositioningStrategy = HandlePositioningStrategy.extend({\n           calculatePosition: function() {\n               var resizableElement = $(this.options.resizableElement);\n               var offset = resizableElement.position();\n               var marginLeft = parseInt(resizableElement.css(\"marginLeft\"), 10);\n\n               return {\n                   top: offset.top + (outerHeight(resizableElement) / 2),\n                   left: offset.left + marginLeft\n               };\n           }\n       });\n       PositioningStrategyFactory.current.register(WEST, WestPositioningStrategy);\n\n       var DraggingStrategyFactory = StrategyFactory.extend({});\n       DraggingStrategyFactory.current = new DraggingStrategyFactory();\n\n       var HandleDraggingStrategy = Class.extend({\n           init: function(options) {\n               var that = this;\n               that.options = extend({}, that.options, options);\n           },\n\n           options: {\n               deltaX: {\n                   adjustment: null,\n                   modifier: null\n               },\n               deltaY: {\n                   adjustment: null,\n                   modifier: null\n               }\n           },\n\n           adjustDragDelta: function(deltas) {\n               var options = this.options;\n               var xAxisAdjustment = options.deltaX.adjustment * options.deltaX.modifier;\n               var yAxisAdjustment = options.deltaY.adjustment * options.deltaY.modifier;\n\n               return {\n                   deltaX: deltas.deltaX * xAxisAdjustment,\n                   deltaY: deltas.deltaY * yAxisAdjustment,\n                   initialDeltaX: deltas.initialDeltaX * xAxisAdjustment,\n                   initialDeltaY: deltas.initialDeltaY * yAxisAdjustment\n               };\n           }\n       });\n\n       HandleDraggingStrategy.create = function(options) {\n           return DraggingStrategyFactory.current.create(options);\n       };\n\n       var HorizontalDraggingStrategy = HandleDraggingStrategy.extend({\n           options: {\n               deltaX: {\n                   adjustment: 1,\n                   modifier: 1\n               },\n               deltaY: {\n                   adjustment: 0,\n                   modifier: 0\n               }\n           }\n       });\n\n       var EastDraggingStrategy = HorizontalDraggingStrategy.extend({\n           options: {\n               deltaX: {\n                   modifier: 1\n               }\n           }\n       });\n       DraggingStrategyFactory.current.register(EAST, EastDraggingStrategy);\n\n       var WestDraggingStrategy = HorizontalDraggingStrategy.extend({\n           options: {\n               deltaX: {\n                   modifier: (-1)\n               }\n           }\n       });\n       DraggingStrategyFactory.current.register(WEST, WestDraggingStrategy);\n\n       var VerticalDraggingStrategy = HandleDraggingStrategy.extend({\n           options: {\n               deltaX: {\n                   adjustment: 0,\n                   modifier: 0\n               },\n               deltaY: {\n                   adjustment: 1,\n                   modifier: 1\n               }\n           }\n       });\n\n       var NorthDraggingStrategy = VerticalDraggingStrategy.extend({\n           options: {\n               deltaY: {\n                   modifier: (-1)\n               }\n           }\n       });\n       DraggingStrategyFactory.current.register(NORTH, NorthDraggingStrategy);\n\n       var SouthDraggingStrategy = VerticalDraggingStrategy.extend({\n           options: {\n               deltaY: {\n                   modifier: 1\n               }\n           }\n       });\n       DraggingStrategyFactory.current.register(SOUTH, SouthDraggingStrategy);\n\n       var HorizontalAndVerticalDraggingStrategy = HandleDraggingStrategy.extend({\n           options: {\n               deltaX: {\n                   adjustment: 1,\n                   modifier: 1\n               },\n               deltaY: {\n                   adjustment: 1,\n                   modifier: 1\n               }\n           }\n       });\n\n       var NorthEastDraggingStrategy = HorizontalAndVerticalDraggingStrategy.extend({\n           options: {\n               deltaX: {\n                   modifier: 1\n               },\n               deltaY: {\n                   modifier: (-1)\n               }\n           }\n       });\n       DraggingStrategyFactory.current.register(NORTHEAST, NorthEastDraggingStrategy);\n\n       var NorthWestDraggingStrategy = HorizontalAndVerticalDraggingStrategy.extend({\n           options: {\n               deltaX: {\n                   modifier: (-1)\n               },\n               deltaY: {\n                   modifier: (-1)\n               }\n           }\n       });\n       DraggingStrategyFactory.current.register(NORTHWEST, NorthWestDraggingStrategy);\n\n       var SouthEastDraggingStrategy = HorizontalAndVerticalDraggingStrategy.extend({\n           options: {\n               deltaX: {\n                   modifier: 1\n               },\n               deltaY: {\n                   modifier: 1\n               }\n           }\n       });\n       DraggingStrategyFactory.current.register(SOUTHEAST, SouthEastDraggingStrategy);\n\n       var SouthWestDraggingStrategy = HorizontalAndVerticalDraggingStrategy.extend({\n           options: {\n               deltaX: {\n                   modifier: (-1)\n               },\n               deltaY: {\n                   modifier: 1\n               }\n           }\n       });\n       DraggingStrategyFactory.current.register(SOUTHWEST, SouthWestDraggingStrategy);\n\n       extend(Editor, {\n           ElementResizeHandle: ElementResizeHandle\n       });\n   })(window.kendo);\n\n   (function(kendo, undefined$1) {\n       var global = window;\n       var math = global.Math;\n       var min = math.min;\n       var max = math.max;\n\n       var $ = kendo.jQuery;\n       var contains = $.contains;\n       var extend = $.extend;\n\n       var browser = kendo.support.browser;\n       var Editor = kendo.ui.editor;\n       var Class = kendo.Class;\n       var ElementResizeHandle = Editor.ElementResizeHandle;\n       var ResizingUtils = Editor.ResizingUtils;\n       var calculatePercentageRatio = ResizingUtils.calculatePercentageRatio;\n       var constrain = ResizingUtils.constrain;\n       var inPercentages = ResizingUtils.inPercentages;\n       var inPixels = ResizingUtils.inPixels;\n       var toPercentages = ResizingUtils.toPercentages;\n       var toPixels = ResizingUtils.toPixels;\n       var outerWidth = kendo._outerWidth;\n       var outerHeight = kendo._outerHeight;\n       var RangeUtils = Editor.RangeUtils;\n\n       var NS = \".kendoEditorElementResizing\";\n       var RESIZE_HANDLE_WRAPPER_CLASS = \"k-element-resize-handle-wrapper\";\n       var TABLE_CLASS = \"k-table\";\n       var ELEMENT_RESIZING_CLASS = \"k-element-resizing\";\n\n       var DRAG_START = \"dragStart\";\n       var DRAG = \"drag\";\n       var DRAG_END = \"dragEnd\";\n       var KEY_DOWN = \"keydown\";\n       var MOUSE_DOWN = \"mousedown\";\n       var SELECT = \"select\";\n       var DROP = \"drop\";\n\n       var COLUMN = \"td\";\n       var ROW = \"tr\";\n       var TBODY = \"tbody\";\n       var THEAD = \"thead\";\n       var TABLE = \"table\";\n       var IMG = \"img\";\n       var ELEMENT_TYPES = [\"TABLE\", \"IMG\"];\n\n       var COMMA = \",\";\n       var WIDTH = \"width\";\n       var HEIGHT = \"height\";\n\n       var EAST = \"east\";\n       var NORTH = \"north\";\n       var NORTHEAST = \"northeast\";\n       var NORTHWEST = \"northwest\";\n       var SOUTH = \"south\";\n       var SOUTHEAST = \"southeast\";\n       var SOUTHWEST = \"southwest\";\n       var WEST = \"west\";\n\n       var DOT = \".\";\n\n       function isUndefined(value) {\n           return typeof(value) === \"undefined\";\n       }\n\n       var ElementResizing = Class.extend({\n           init: function(element, options) {\n               var that = this;\n\n               that.options = extend({}, that.options, options);\n               that.handles = [];\n\n               // Check whether the element is TABLE or IMG\n               if (ELEMENT_TYPES.indexOf(element.nodeName) >= 0) {\n                   that.element = element;\n               }\n           },\n\n           destroy: function() {\n               var that = this;\n\n               $(that.element).off(NS);\n               that.element = null;\n\n               $(that.options.rootElement).off(KEY_DOWN + NS);\n\n               that._destroyResizeHandles();\n           },\n\n           options: {\n               appendHandlesTo: null,\n               rtl: false,\n               rootElement: null,\n               minWidth: 10,\n               minHeight: 10,\n               handles: [{\n                   direction: NORTHWEST\n               }, {\n                   direction: NORTH\n               }, {\n                   direction: NORTHEAST\n               }, {\n                   direction: EAST\n               }, {\n                   direction: SOUTHEAST\n               }, {\n                   direction: SOUTH\n               }, {\n                   direction: SOUTHWEST\n               }, {\n                   direction: WEST\n               }]\n           },\n\n           resize: function(args) {\n               var that = this;\n               var deltas = extend({}, {\n                   deltaX: 0,\n                   deltaY: 0,\n                   initialDeltaX: 0,\n                   initialDeltaY: 0\n               }, args);\n\n               that._resizeWidth(deltas.deltaX, deltas.initialDeltaX);\n               that._resizeHeight(deltas.deltaY, deltas.initialDeltaY);\n\n               that.showResizeHandles();\n           },\n\n           _resizeWidth: function() {\n               return false;\n           },\n\n           _resizeHeight: function() {\n               return false;\n           },\n\n           _getMaxDimensionValue: function(dimension) {\n               var that = this;\n               var element = $(that.element);\n               var dimensionLowercase = dimension.toLowerCase();\n               var rtlModifier = that.options.rtl ? (-1) : 1;\n               var parent = $(that.element).parent();\n               var parentElement = parent[0];\n               var parentDimension = parent[dimensionLowercase]();\n               var parentScrollOffset = rtlModifier * (dimension === WIDTH ? kendo.scrollLeft(parent) : parent.scrollTop());\n\n               if (parentElement && parentElement === element.closest(COLUMN)[0]) {\n                   if (parentElement.style[dimensionLowercase] === \"\" && !inPercentages(that.element.style[dimensionLowercase])) {\n                       return Infinity;\n                   }\n                   else {\n                       return (parentDimension + parentScrollOffset);\n                   }\n               }\n               else {\n                   return (parentDimension + parentScrollOffset);\n               }\n           },\n\n           showResizeHandles: function() {\n               var that = this;\n\n               that._initResizeHandles();\n               that._showResizeHandles();\n           },\n\n           _initResizeHandles: function() {\n               var that = this;\n               var handles = that.handles;\n               var options = that.options;\n               var handleOptions = that.options.handles;\n               var length = handleOptions.length;\n               var i;\n\n               if (handles && handles.length > 0) {\n                   return;\n               }\n\n               for (i = 0; i < length; i++) {\n                   that.handles.push(new ElementResizeHandle(extend({\n                       appendTo: options.appendHandlesTo,\n                       resizableElement: that.element,\n                       rootElement: options.rootElement,\n                       rtl: options.rtl,\n                       editor: that.options.editor\n                   }, handleOptions[i])));\n               }\n\n               that._bindToResizeHandlesEvents();\n           },\n\n           _destroyResizeHandles: function() {\n               var that = this;\n               var length = that.handles ? that.handles.length : 0;\n\n               for (var i = 0; i < length; i++) {\n                   that.handles[i].destroy();\n               }\n\n               that.handles = [];\n           },\n\n           _showResizeHandles: function() {\n               var that = this;\n               var handles = that.handles || [];\n               var length = handles.length;\n               var i;\n\n               for (i = 0; i < length; i++) {\n                   that.handles[i].show();\n               }\n           },\n\n           _bindToResizeHandlesEvents: function() {\n               return false;\n           },\n\n           _onResizeHandleDragStart: function() {\n               var that = this;\n               var element = $(that.element);\n\n               element.addClass(ELEMENT_RESIZING_CLASS);\n\n               that._initialElementHeight = outerHeight(element);\n               that._initialElementWidth = outerWidth(element);\n               that._disableKeyboard();\n           },\n\n           _onResizeHandleDrag: function(e) {\n               this.resize(e);\n           },\n\n           _onResizeHandleDragEnd: function() {\n               var that = this;\n               $(that.element).removeClass(ELEMENT_RESIZING_CLASS);\n               that._enableKeyboard();\n           },\n\n           _enableKeyboard: function() {\n               $(this.options.rootElement).off(KEY_DOWN + NS);\n           },\n\n           _disableKeyboard: function() {\n               $(this.options.rootElement).on(KEY_DOWN + NS, function(e) {\n                   e.preventDefault();\n               });\n           }\n       });\n\n       var TableResizing = ElementResizing.extend({\n           _bindToResizeHandlesEvents: function() {\n               var that = this;\n               var handles = that.handles || [];\n               var length = handles.length;\n               var i;\n               var handle;\n\n               for (i = 0; i < length; i++) {\n                   handle = handles[i];\n                   handle.bind(DRAG_START, that._onResizeHandleDragStart.bind(that));\n                   handle.bind(DRAG, that._onResizeHandleDrag.bind(that));\n                   handle.bind(DRAG_END, that._onResizeHandleDragEnd.bind(that));\n               }\n           },\n\n           _hasRowsInPixels: function() {\n               var that = this;\n               var rows = $(that.element).children(THEAD + COMMA + TBODY).children(ROW);\n\n               for (var i = 0; i < rows.length; i++) {\n                   if (rows[i].style.height === \"\" || inPixels(rows[i].style.height)) {\n                       return true;\n                   }\n               }\n\n               return false;\n           },\n\n           _resizeWidth: function(delta, initialDelta) {\n               var that = this;\n               var element = $(that.element);\n               var styleWidth = element[0].style[WIDTH];\n               var currentWidth = outerWidth(element);\n               var parentWidth = element.parent().width();\n               var maxWidth = that._getMaxDimensionValue(WIDTH);\n               var newWidth;\n               var ratioValue;\n               var ratioTotalValue;\n               var constrainedWidth;\n\n               if (delta === 0) {\n                   return;\n               }\n\n               if (isUndefined(that._initialElementWidth)) {\n                   that._initialElementWidth = currentWidth;\n               }\n\n               //use initial delta instead of delta as changing the width with a small value (e.g. 1px)\n               //on each drag does not work due to browser calculation of computed styles\n               constrainedWidth = constrain({\n                   value: that._initialElementWidth + initialDelta,\n                   min: that.options.minWidth,\n                   max: maxWidth\n               });\n\n               if (inPercentages(styleWidth)) {\n                   //detect resizing greater than 100%\n                   if (currentWidth + delta > parentWidth) {\n                       ratioValue = max(constrainedWidth, parentWidth);\n                       ratioTotalValue = min(constrainedWidth, parentWidth);\n                   }\n                   else {\n                       ratioValue = min(constrainedWidth, parentWidth);\n                       ratioTotalValue = max(constrainedWidth, parentWidth);\n                   }\n\n                   newWidth = toPercentages(calculatePercentageRatio(ratioValue, ratioTotalValue));\n               }\n               else {\n                   newWidth = toPixels(constrainedWidth);\n               }\n\n               that._setColumnsWidth();\n\n               element[0].style[WIDTH] = newWidth;\n           },\n\n           _resizeHeight: function(delta, initialDelta) {\n               var that = this;\n               var element = $(that.element);\n               var styleHeight = element[0].style[HEIGHT];\n               var currentHeight = outerHeight(element);\n               var parent = element.parent();\n               var parentHeight = parent.height();\n               var maxHeight = that._getMaxDimensionValue(HEIGHT);\n               var newHeight;\n               var ratioValue;\n               var ratioTotalValue;\n               var constrainedHeight;\n               var minHeight = that.options.minHeight;\n               var hasRowsInPixels = that._hasRowsInPixels();\n\n               if (delta === 0) {\n                   return;\n               }\n\n               if (isUndefined(that._initialElementHeight)) {\n                   that._initialElementHeight = currentHeight;\n               }\n\n               //use initial delta instead of delta as changing the height with a small value (e.g. 1px)\n               //on each drag does not work due to browser calculation of computed styles\n               constrainedHeight = constrain({\n                   value: that._initialElementHeight + initialDelta,\n                   min: minHeight,\n                   max: maxHeight\n               });\n\n               if (hasRowsInPixels && delta < 0) {\n                   //decreasing table height when rows are sized in pixels is not possible\n                   that._setRowsHeightInPercentages();\n               }\n\n               if (inPercentages(styleHeight)) {\n                   //detect resizing greater than 100%\n                   if (currentHeight + delta > parentHeight) {\n                       ratioValue = max(constrainedHeight, parentHeight);\n                       ratioTotalValue = min(constrainedHeight, parentHeight);\n                   }\n                   else {\n                       ratioValue = min(constrainedHeight, parentHeight);\n                       ratioTotalValue = max(constrainedHeight, parentHeight);\n                   }\n\n                   newHeight = toPercentages(calculatePercentageRatio(ratioValue, ratioTotalValue));\n               }\n               else {\n                   newHeight = toPixels(constrainedHeight);\n               }\n\n               element[0].style[HEIGHT] = newHeight;\n\n               if (hasRowsInPixels && delta < 0) {\n                   //restore original rows height unit\n                   that._setRowsHeightInPixels();\n               }\n           },\n\n           _setColumnsWidth: function() {\n               var that = this;\n               var element = $(that.element);\n               var parentElement = element.parent()[0];\n               var parentColumn = element.closest(COLUMN);\n               var columns = parentColumn.closest(ROW).children();\n               var columnsLength = columns.length;\n               var i;\n\n               function isWidthInPercentages(element) {\n                   var styleWidth = element.style.width;\n\n                   if (styleWidth !== \"\") {\n                       return inPercentages(styleWidth) ? true : false;\n                   }\n                   else {\n                       return $(element).hasClass(TABLE_CLASS) ? true : false;\n                   }\n               }\n\n               if (isWidthInPercentages(element[0]) && parentElement === parentColumn[0] && parentElement.style[WIDTH] === \"\") {\n                   for (i = 0; i < columnsLength; i++) {\n                       columns[i].style[WIDTH] = toPixels($(columns[i]).width());\n                   }\n               }\n           },\n\n           _setRowsHeightInPercentages: function() {\n               var that = this;\n               var tableHead = $(that.element).children(THEAD);\n               var tableHeadHeight = tableHead.length > 0 ? tableHead.height() : 0;\n               var tableBody = $(that.element).children(TBODY);\n               var tableBodyHeight = tableBody.height();\n               var rows = $(that.element).children(THEAD + COMMA + TBODY).children(ROW);\n               var length = rows.length;\n               var currentRowsHeights = rows.map(function() {\n                   return outerHeight($(this));\n               });\n               var i;\n\n               for (i = 0; i < length; i++) {\n                   rows[i].style[HEIGHT] = toPercentages(calculatePercentageRatio(currentRowsHeights[i], tableHeadHeight + tableBodyHeight));\n               }\n           },\n\n           _setRowsHeightInPixels: function() {\n               var that = this;\n               var rows = $(that.element).children(THEAD + COMMA + TBODY).children(ROW);\n               var length = rows.length;\n               var currentRowsHeights = rows.map(function() {\n                   return outerHeight($(this));\n               });\n               var i;\n\n               for (i = 0; i < length; i++) {\n                   rows[i].style[HEIGHT] = toPixels(currentRowsHeights[i]);\n               }\n           }\n       });\n\n       var ImageResizing = ElementResizing.extend({\n           _bindToResizeHandlesEvents: function() {\n               var that = this;\n               var handles = that.handles || [];\n               var length = handles.length;\n               var i;\n               var handle;\n\n               for (i = 0; i < length; i++) {\n                   handle = handles[i];\n                   handle.bind(DRAG_START, that._onResizeHandleDragStart.bind(that));\n\n                   if (handle.options.direction === \"north\" || handle.options.direction === \"south\") {\n                       handle.bind(DRAG, that._onResizeHandleDragVertical.bind(that));\n                   } else if (handle.options.direction === \"east\" || handle.options.direction === \"west\") {\n                       handle.bind(DRAG, that._onResizeHandleDragHorizontal.bind(that));\n                   } else {\n                       handle.bind(DRAG, that._onResizeHandleDragLocked.bind(that));\n                   }\n\n                   handle.bind(DRAG_END, that._onResizeHandleDragEnd.bind(that));\n               }\n           },\n\n           _getDeltas: function(args) {\n               return extend({}, {\n                   deltaX: 0,\n                   deltaY: 0,\n                   initialDeltaX: 0,\n                   initialDeltaY: 0\n               }, args);\n           },\n\n           _onResizeHandleDragVertical: function(args) {\n               var deltas = this._getDeltas(args);\n\n               this._resizeHeight(deltas.deltaY, deltas.initialDeltaY);\n               this.showResizeHandles();\n           },\n\n           _onResizeHandleDragHorizontal: function(args) {\n               var deltas = this._getDeltas(args);\n\n               this._resizeWidth(deltas.deltaX, deltas.initialDeltaX);\n               this.showResizeHandles();\n           },\n\n           _onResizeHandleDragLocked: function(args) {\n               var min = Math.min(Math.abs(args.initialDeltaX), Math.abs(args.initialDeltaY)),\n                   initialWidth = this._initialElementWidth,\n                   initialHeight = this._initialElementHeight,\n                   deltas;\n\n               if (min === args.initialDeltaX || min === args.initialDeltaX * -1) {\n                   args.initialDeltaY = args.initialDeltaX * initialHeight / initialWidth;\n                   args.deltaY = args.deltaX;\n               } else if (min === args.initialDeltaY || min === args.initialDeltaY * -1) {\n                   args.initialDeltaX = args.initialDeltaY * initialWidth / initialHeight;\n                   args.deltaX = args.deltaY;\n               }\n\n               deltas = this._getDeltas(args);\n\n               this._resizeWidth(deltas.deltaX, deltas.initialDeltaX);\n               this._resizeHeight(deltas.deltaY, deltas.initialDeltaY);\n\n               this.showResizeHandles();\n           },\n\n           _resizeWidth: function(delta, initialDelta) {\n               var that = this;\n               var element = $(that.element);\n               var currentWidth = outerWidth(element);\n               var newWidth;\n               var constrainedWidth;\n\n               if (delta === 0) {\n                   return;\n               }\n\n               if (isUndefined(that._initialElementWidth)) {\n                   that._initialElementWidth = currentWidth;\n               }\n\n               //use initial delta instead of delta as changing the width with a small value (e.g. 1px)\n               //on each drag does not work due to browser calculation of computed styles\n               constrainedWidth = constrain({\n                   value: that._initialElementWidth + initialDelta,\n                   min: that.options.minWidth,\n                   max: that._getMaxDimensionValue(WIDTH)\n               });\n\n               newWidth = toPixels(constrainedWidth);\n               element[0].style[WIDTH] = newWidth;\n               element.attr(WIDTH, Math.floor(constrainedWidth));\n           },\n\n           _resizeHeight: function(delta, initialDelta) {\n               var that = this;\n               var element = $(that.element);\n               var currentHeight = outerHeight(element);\n               var newHeight;\n               var constrainedHeight;\n\n               if (delta === 0) {\n                   return;\n               }\n\n               if (isUndefined(that._initialElementHeight)) {\n                   that._initialElementHeight = currentHeight;\n               }\n\n               //use initial delta instead of delta as changing the height with a small value (e.g. 1px)\n               //on each drag does not work due to browser calculation of computed styles\n               constrainedHeight = constrain({\n                   value: that._initialElementHeight + initialDelta,\n                   min: that.options.minHeight,\n                   max: Number.MAX_SAFE_INTEGER\n               });\n\n               newHeight = toPixels(constrainedHeight);\n               element[0].style[HEIGHT] = newHeight;\n               element.attr(HEIGHT, Math.floor(constrainedHeight));\n           }\n       });\n\n       const ElementResizingFactory = Class.extend({\n           create: function(editor) {\n               let factory = this;\n\n               $(editor.body)\n                   .on(\"dragstart\" + NS, function() {\n                       var nodes = RangeUtils.nodes(editor.getRange()),\n                           hasImg = false;\n\n                       nodes.forEach(function(node) {\n                           if (node.nodeName === \"IMG\") {\n                               hasImg = true;\n                           }\n                       });\n\n                       if (hasImg && nodes.length > 1) {\n                           editor.elementResizing._destroyResizeHandles();\n                       }\n                   })\n                   .on(DROP + NS, function() {\n                       setTimeout(function() {\n                           var image = RangeUtils.image(editor.getRange());\n\n                           if (image) {\n                               editor.elementResizing._destroyResizeHandles();\n                               editor.elementResizing.element = image;\n                               editor.elementResizing.showResizeHandles();\n                           }\n                       });\n                   })\n                   .on(MOUSE_DOWN + NS, TABLE + COMMA + IMG, function(e) {\n                       var eventTarget = e.target;\n                       var eventCurrentTarget = e.currentTarget;\n                       var elementResizing = editor.elementResizing;\n                       var element = elementResizing ? elementResizing.element : null;\n\n                       if (elementResizing) {\n                           if (element && eventCurrentTarget !== element) {\n                               if (contains(eventCurrentTarget, element) && element !== eventTarget && contains(element, eventTarget)) {\n                                   //prevent a parent table resizing init when clicking on a nested table when the event bubbles\n                                   //instead of stopping event propagation\n                                   return;\n                               }\n                               else {\n                                   if (element !== eventTarget) {\n                                       editor._destroyElementResizing();\n                                       factory._initResizing(editor, eventCurrentTarget);\n                                   }\n                               }\n                           }\n                       }\n                       else {\n                           factory._initResizing(editor, eventCurrentTarget);\n                       }\n\n                       editor._showElementResizeHandles();\n                   })\n                   .on(MOUSE_DOWN + NS, function(e) {\n                       var elementResizing = editor.elementResizing;\n                       var element = elementResizing ? elementResizing.element : null;\n                       var target = e.target;\n                       var isResizeHandleOrChild = $(target).hasClass(RESIZE_HANDLE_WRAPPER_CLASS) || $(target).parents(DOT + RESIZE_HANDLE_WRAPPER_CLASS).length > 0;\n\n                       if (elementResizing && element !== target && !contains(element, target) && !isResizeHandleOrChild) {\n                           editor._destroyElementResizing();\n                       }\n                   });\n           },\n\n           dispose: function(editor) {\n               $(editor.body).off(NS);\n           },\n\n           _initResizing: function(editor, element) {\n               // table and image resizing is natively supported in IE\n               // https://stackoverflow.com/questions/53831846/resizing-images-in-contenteditable-div-stopped-working-in-firefox\n               // Enable custom resize handlers for FF too\n               if (!browser.msie) {\n                   if ($(element).is(TABLE)) {\n                       editor.elementResizing = editor.tableResizing = new TableResizing(element, {\n                           appendHandlesTo: editor.body,\n                           rtl: kendo.support.isRtl(editor.element),\n                           rootElement: editor.body,\n                           editor: editor\n                       });\n                   } else if ($(element).is(IMG)) {\n                       editor.elementResizing = new ImageResizing(element, {\n                           appendHandlesTo: editor.body,\n                           rtl: kendo.support.isRtl(editor.element),\n                           rootElement: editor.body,\n                           editor: editor\n                       });\n                   }\n\n                   if (editor._showElementResizeHandlesProxy) {\n                       editor.unbind(SELECT, editor._showElementResizeHandlesProxy);\n                       editor.bind(SELECT, editor._showElementResizeHandlesProxy);\n                   }\n               }\n           }\n       });\n\n       ElementResizingFactory.current = new ElementResizingFactory();\n\n       extend(Editor, {\n           TableResizing: TableResizing,\n           ImageResizing: ImageResizing,\n           ElementResizing: ElementResizing,\n           ElementResizingFactory: ElementResizingFactory\n       });\n\n   })(window.kendo);\n\n   (function($, undefined$1) {\n\n   var kendo = window.kendo,\n       Editor = kendo.ui.editor,\n       EditorUtils = Editor.EditorUtils,\n       RangeUtils = Editor.RangeUtils,\n       dom = Editor.Dom,\n       registerTool = EditorUtils.registerTool,\n       Command = Editor.Command;\n\n   var tableFormatFinder = new Editor.BlockFormatFinder([{ tags: [\"table\"] }]);\n   var cellsFormatFinder = new Editor.BlockFormatFinder([{ tags: [\"td\",\"th\"] }]);\n   var reUnit = /([a-z]+|%)$/i;\n\n   var COL = \"col\";\n   var ROW = \"row\";\n   var COLGROUP = \"colgroup\";\n   var SCOPE = \"scope\";\n   var COL_INDEX = \"col-index\";\n   var TH = \"th\";\n   var TD = \"td\";\n   var THEAD = \"thead\";\n   var HEADERS = \"headers\";\n   var TABLE = \"table\";\n\n   var TableWizardCommand = Command.extend({\n       exec: function() {\n           var cmd = this;\n           var editor = cmd.editor;\n           var range = cmd.range = cmd.lockRange();\n           var isTableCellWizard = cmd.options.tableCellWizard;\n           var selectedTable = cmd._sourceTable = !cmd.options.insertNewTable ? cmd._selectedTable(range) : undefined$1;\n           var selectedCells = cmd._selectedTableCells = selectedTable ? cmd._selectedCells(range) : undefined$1;\n           var options = {\n               visible: false,\n               messages: editor.options.messages,\n               closeCallback: cmd.onDialogClose.bind(cmd),\n               table: cmd.parseTable(selectedTable, selectedCells),\n               dialogOptions: editor.options.dialogOptions,\n               isRtl: kendo.support.isRtl(editor.wrapper)\n           };\n\n           var dialog = new Editor.TableWizardDialog(options);\n           dialog.open(isTableCellWizard);\n       },\n\n       onDialogClose: function(data) {\n           var cmd = this;\n           cmd.releaseRange(cmd.range);\n\n           if (data) { //Ok button pressed\n               if (cmd.options.insertNewTable) {\n                   cmd.insertTable(cmd.createNewTable(data));\n               } else {\n                   cmd.updateTable(data, cmd._sourceTable, cmd._selectedTableCells);\n               }\n           }\n       },\n       releaseRange: function(range) {\n           var cmd = this;\n           var doc = cmd.editor.document;\n           dom.windowFromDocument(doc).focus();\n           Command.fn.releaseRange.call(cmd, range);\n       },\n       insertTable: function(table) {\n           var range = this.range;\n\n           range.insertNode(table);\n           range.collapse(true);\n           this.editor.selectRange(range);\n\n           this._ensureFocusableAfterTable(table);\n       },\n       _ensureFocusableAfterTable: function(table) {\n           var siblingNodes = $(table).parent().contents();\n           var lastSiblingIndex = siblingNodes.length - 1;\n           var lastSibling = siblingNodes.get(lastSiblingIndex);\n\n           while (lastSibling.nodeValue !== null && (lastSibling.nodeValue === \" \" || lastSibling.nodeValue === \"\")) {\n               lastSiblingIndex -= 1;\n               lastSibling = siblingNodes.get(lastSiblingIndex);\n           }\n\n           if (lastSibling === table) {\n               dom.insertAfter(dom.createEmptyNode(this.editor.document, \"p\"), table);\n           }\n       },\n       updateTable: function(data, table, selectedCells) {\n           var cmd = this;\n           var tableRows = $(table.rows).toArray();\n           var tableProp = data.tableProperties;\n           var rows = tableProp.rows;\n           var tHead = table.tHead;\n           var last = cmd._lastInCollection;\n           var lastSelectedRow, cellProp;\n\n           //Leave only first selected cell\n           while (selectedCells.length > 1) {\n               selectedCells.pop();\n           }\n\n           lastSelectedRow = selectedCells.length ? last(selectedCells).parentNode : last(tableRows);\n\n           cmd._deleteTableRows(tableRows, tableRows.length - rows);\n\n           if (tableRows.length < rows) {\n               cmd._addRows(lastSelectedRow, rows, tableRows);\n           }\n\n           dom.reMapTableColumns(table, COL_INDEX);\n           cmd._updateColumns(tableRows, tableProp.columns, selectedCells, lastSelectedRow);\n           cmd._updateTableProperties(table, tableProp);\n\n           cellProp = data.cellProperties;\n           if (selectedCells[0]) {\n               dom.attr(selectedCells[0], { id: (cellProp || {}).id || null });\n           }\n           if (cellProp) {\n               (cellProp.selectAllCells ? $(tableRows).children() : $(selectedCells)).each(function(i, cell) {\n                   cmd._updateCellProperties(cell, cellProp, tableProp);\n               });\n           }\n\n           cmd._updateCaption(table, tableProp);\n\n           if (tHead) {\n               cmd._updateHeadersWithThead(table, data);\n           } else {\n               cmd._updateHeadersNoThead(table, data);\n           }\n\n           cmd._updateHeaderAssociates(table, tableProp);\n           dom.clearTableMappings(table, COL_INDEX);\n       },\n       _isHeadingRow: function(row) {\n           return dom.is(row.cells[0], TH) && dom.is(row.parentNode, THEAD);\n       },\n       _isHeadingCell: function(cell) {\n           return dom.is(cell, TH);\n       },\n       cellsWithHeadersAssociated: function(table) {\n           var cells = $(table.rows).children();\n           var headingIds = [];\n           var checkHeader = function(header) {\n               return headingIds.indexOf(header) > -1;\n           };\n\n           cells.each(function(c, cell) {\n               if (cell.id && dom.is(cell, TH)) {\n                   headingIds.push(cell.id);\n               }\n           });\n\n           var associatedCells = cells.filter(function(c, cell) {\n               var headersAttr = cell.getAttribute(HEADERS);\n               var headersArray;\n\n               if (headersAttr && !dom.is(cell, TH)) {\n                   headersArray = headersAttr.split(\" \");\n\n                   if (headersArray && headersArray.length > 0) {\n                       return headersArray.some(checkHeader);\n                   }\n               }\n\n               return false;\n           });\n\n           return !!associatedCells.length;\n       },\n       _insertCells: function(count, row, index) {\n           index = isNaN(index) ? -1 : index;\n           for (var i = 0, cell; i < count; i++) {\n               cell = row.insertCell(index);\n               cell.innerHTML = \"&nbsp;\";\n           }\n       },\n       _deleteTableRows: function(rows, count) {\n           for (var i = 0, row, rowParent; i < count; i++) {\n               row = rows.pop();\n               rowParent = row.parentNode;\n               rowParent.removeChild(row);\n               if (!rowParent.rows.length) {\n                   dom.remove(rowParent);\n               }\n           }\n       },\n       createNewTable: function(data) {\n           var cmd = this;\n           var doc = cmd.editor.document;\n           var tableProp = data.tableProperties;\n           var table = dom.create(doc, TABLE);\n           var rowIndex = 0;\n           var thead;\n\n           cmd._updateTableProperties(table, tableProp);\n           cmd._updateCaption(table, tableProp);\n\n           if (tableProp.headerRows && tableProp.headerRows > 0) {\n               thead = table.createTHead();\n               cmd._createTableRows(data, thead, rowIndex, true);\n               rowIndex += tableProp.headerRows;\n           }\n\n           var tbody = table.createTBody();\n           cmd._createTableRows(data, tbody, rowIndex, false);\n\n           dom.reMapTableColumns(table, COL_INDEX);\n\n           if (tableProp.cellsWithHeaders === \"ids\") {\n               dom.associateWithIds(table);\n           } else if (tableProp.cellsWithHeaders === \"scope\") {\n               cmd._addScopes(table, tableProp.headerRows, tableProp.headerColumns);\n           }\n\n           dom.clearTableMappings(table, COL_INDEX);\n\n           return table;\n       },\n       _createTableRows: function(data, container, initialIndex, headerRows) {\n           var cmd = this;\n           var tableProp = data.tableProperties;\n           var cellProp = data.cellProperties;\n           var columns = tableProp.columns;\n           var rows = headerRows ? tableProp.headerRows : tableProp.rows;\n           var headerColumns = tableProp.headerColumns;\n\n           for (var r = initialIndex, row; r < rows; r++) {\n               row = container.insertRow();\n\n               for (var c = 0, cell; c < columns; c++) {\n                   if (headerRows || headerColumns > c) {\n                       cell = document.createElement(TH);\n                   } else {\n                       cell = document.createElement(TD);\n                   }\n\n                   row.appendChild(cell);\n                   cell.innerHTML = \"&nbsp;\";\n                   if (cellProp && r === 0 && c === 0 && cellProp.id) {\n                       cell.id = cellProp.id;\n                   }\n\n                   cmd._updateCellProperties(cell, cellProp && (cellProp.selectAllCells || (r === 0 && c === 0)) ? cellProp : {}, tableProp);\n               }\n           }\n       },\n       _addRows: function(lastSelectedRow, rows, tableRows) {\n           var cmd = this;\n           var rowIndex = $(lastSelectedRow).index();\n           var cellsLength = lastSelectedRow.cells.length;\n           var newRowsCount = rows - tableRows.length;\n           var parent = lastSelectedRow.parentNode;\n           var row;\n\n           while (newRowsCount) {\n               row = parent.insertRow(rowIndex + 1);\n               cmd._insertCells(cellsLength - row.cells.length, row);\n               newRowsCount--;\n           }\n       },\n       _updateColumns: function(tableRows, columns, selectedCells, lastSelectedRow) {\n           var cmd = this;\n           var last = cmd._lastInCollection;\n           var firstRowLastCell = last(tableRows[0].cells);\n           var numberOfColumns = Number(firstRowLastCell.getAttribute(COL_INDEX)) + firstRowLastCell.colSpan;\n\n           if (numberOfColumns > columns) {\n               $(tableRows).each(function(i, row) {\n                   var lastCurrentCell = last(row.cells);\n                   var rowColumns = Number(lastCurrentCell.getAttribute(COL_INDEX)) + lastCurrentCell.colSpan;\n\n                   while (rowColumns > columns) {\n                       if (lastCurrentCell.colSpan && lastCurrentCell.colSpan > 1) {\n                           lastCurrentCell.colSpan -= 1;\n                       } else {\n                           row.deleteCell(-1);\n                       }\n\n                       lastCurrentCell = last(row.cells);\n                       rowColumns = Number(lastCurrentCell.getAttribute(COL_INDEX)) + lastCurrentCell.colSpan;\n                   }\n               });\n           }\n\n           if (numberOfColumns < columns) {\n               var cellIndex = $(last(selectedCells) || last(lastSelectedRow.cells)).index();\n               $(tableRows).each(function(i, row) {\n                   var lastCurrentCell = last(row.cells);\n                   cmd._insertCells(columns - Number(lastCurrentCell.getAttribute(COL_INDEX)) - lastCurrentCell.colSpan, row, cellIndex + 1);\n               });\n           }\n       },\n       _updateTableProperties: function(table, data) {\n           var style = this._getStylesData(data);\n           dom.attr(table, {\n               cellSpacing: data.cellSpacing || null,\n               topCellPadding: this._getNumericValue(data.topCellPadding) ?? '',\n               leftCellPadding: this._getNumericValue(data.leftCellPadding) ?? '',\n               bottomCellPadding: this._getNumericValue(data.bottomCellPadding) ?? '',\n               rightCellPadding: this._getNumericValue(data.rightCellPadding) ?? '',\n               className: data.className || null,\n               id: data.id || null,\n               summary: data.summary || null,\n               style: style || null\n           });\n           $(table).addClass(\"k-table\");\n       },\n       _updateCellProperties: function(cell, data, tableData) {\n           var style = this._getStylesData(data);\n           style.paddingTop = this._getNumericValue(data.topCellPadding) ?? this._getNumericValue(tableData?.topCellPadding) ?? '';\n           style.paddingLeft = this._getNumericValue(data.leftCellPadding) ?? this._getNumericValue(tableData?.leftCellPadding) ?? '';\n           style.paddingBottom = this._getNumericValue(data.bottomCellPadding) ?? this._getNumericValue(tableData?.bottomCellPadding) ?? '';\n           style.paddingRight = this._getNumericValue(data.rightCellPadding) ?? this._getNumericValue(tableData?.rightCellPadding) ?? '';\n           style.margin = data.cellMargin || null;\n           dom.attr(cell, {\n               style: style || null,\n               className: data.className || null\n           });\n       },\n       _updateCaption: function(table, data) {\n           if (table.caption && !data.captionContent) {\n               table.deleteCaption();\n           } else if (data.captionContent) {\n               var caption = table.createCaption();\n               caption.innerHTML = data.captionContent;\n               var alignment = this._getAlignmentData(data.captionAlignment);\n               dom.attr(caption, {\n                   style: {\n                       textAlign: alignment.textAlign,\n                       verticalAlign: alignment.verticalAlign\n                   }\n               });\n           }\n       },\n       _updateHeadersNoThead: function(table, data) {\n           var cmd = this;\n           var tableProp = data.tableProperties;\n           var rows = table.rows;\n           var row, cells, cell, i, j;\n\n           for (i = 0; i < rows.length; i++) {\n               row = rows[i];\n               cells = row.cells;\n\n               for (j = 0; j < cells.length; j++) {\n                   cell = cells[j];\n                   if (!cmd._isHeadingCell(cell) && (i < tableProp.headerRows || tableProp.headerColumns > cell.getAttribute(COL_INDEX))) {\n                       dom.changeTag(cell, TH, false);\n                   } else if (cmd._isHeadingCell(cell) && i >= tableProp.headerRows && tableProp.headerColumns <= cell.getAttribute(COL_INDEX)) {\n                       dom.changeTag(cell, TD, false);\n                   }\n               }\n           }\n       },\n       _updateHeadersWithThead: function(table, data) {\n           var cmd = this;\n           var tableProp = data.tableProperties;\n           var thead = table.tHead;\n           var rowIndex = 0;\n           var tbody = table.tBodies[0];\n           var row, cell, i;\n\n           if (!tbody) {\n               tbody = table.createTBody();\n           }\n\n           if (tableProp.headerRows && tableProp.headerRows > 0) {\n               if (!thead) {\n                   thead = table.createTHead();\n               }\n\n               while (thead.rows.length < tableProp.headerRows) {\n                   thead.appendChild(tbody.rows[0]);\n               }\n\n               while (thead.rows.length > tableProp.headerRows) {\n                   tbody.appendChild(thead.rows[0]);\n               }\n\n               cmd._swapToHeaderCells(thead);\n           } else if (thead) {\n               while (thead.rows.length > 0) {\n                   tbody.appendChild(thead.rows[thead.rows.length - 1]);\n               }\n\n               table.deleteTHead();\n           }\n\n           while (tbody.rows.length > rowIndex) {\n               row = tbody.rows[rowIndex];\n               for (i = 0; i < row.cells.length; i++) {\n                   cell = row.cells[i];\n                   if (cmd._isHeadingCell(cell) && tableProp.headerColumns <= cell.getAttribute(COL_INDEX)) {\n                       dom.changeTag(cell, TD, false);\n                   } else if (!cmd._isHeadingCell(cell) && tableProp.headerColumns > cell.getAttribute(COL_INDEX)) {\n                       dom.changeTag(cell, TH, false);\n                   }\n               }\n               rowIndex += 1;\n           }\n       },\n       _updateHeaderAssociates: function(table, tableProp) {\n           var cmd = this;\n\n           if (tableProp.cellsWithHeaders === \"ids\") {\n               if (!cmd.cellsWithHeadersAssociated(table)) {\n                   cmd._removeScopes(table);\n               }\n               dom.associateWithIds(table);\n           } else if (tableProp.cellsWithHeaders === \"scope\") {\n               if (cmd.cellsWithHeadersAssociated(table)) {\n                   cmd._removeAssociates(table);\n               }\n               cmd._addScopes(table, tableProp.headerRows, tableProp.headerColumns);\n           } else {\n               if (cmd.cellsWithHeadersAssociated(table)) {\n                   cmd._removeAssociates(table);\n               } else {\n                   cmd._removeScopes(table);\n               }\n           }\n       },\n       _addScopes: function(table, headerRows, headerCols) {\n           var rows = table.rows;\n           var i, j, row, cell;\n\n           for (i = 0; i < rows.length; i++) {\n               row = rows[i];\n\n               for (j = 0; j < row.cells.length; j++) {\n                   cell = row.cells[j];\n\n                   if (i < headerRows) {\n                       cell.setAttribute(SCOPE, COL);\n                   } else if (cell.getAttribute(COL_INDEX) < headerCols) {\n                       cell.setAttribute(SCOPE, ROW);\n                   }\n               }\n           }\n       },\n       _removeScopes: function(table) {\n           $(table).find(TH).removeAttr(SCOPE);\n           $(table).find(COL).remove();\n           $(table).find(COLGROUP).remove();\n       },\n       _removeAssociates: function(table) {\n           $(table).find(\"th, td\").removeAttr(\"id headers\");\n       },\n       _swapToHeaderCells: function(thead) {\n           var tds = $(thead).find(\"td\");\n           var swapCell = function(index, cell) {\n               dom.changeTag(cell, TH, false);\n           };\n           tds.each(swapCell);\n       },\n       _getStylesData: function(data) {\n           var that = this;\n           var alignment = this._getAlignmentData(data.alignment);\n           var whiteSpace = \"wrapText\" in data ? (data.wrapText ? \"\" : \"nowrap\") : null;\n\n           return $.extend({\n               width: data.width ? data.width + data.widthUnit : null,\n               height: data.height ? data.height + data.heightUnit : null,\n               textAlign: alignment.textAlign,\n               verticalAlign: alignment.verticalAlign,\n               backgroundColor: data.bgColor || \"\",\n               borderWidth: data.borderWidth,\n               borderStyle: data.borderStyle,\n               borderColor: data.borderColor || \"\",\n               borderCollapse: data.collapseBorders ? \"collapse\" : null,\n               whiteSpace: whiteSpace\n           }, that._getTablePositionData(data.position));\n       },\n       _getAlignmentData: function(alignment) {\n           var textAlign = \"\";\n           var verticalAlign = textAlign;\n\n           if (alignment) {\n               if (alignment.indexOf(\" \") != -1) {\n                   var align = alignment.split(\" \");\n                   textAlign = align[0];\n                   verticalAlign = align[1];\n               } else {\n                   textAlign = alignment;\n               }\n           }\n           return { textAlign: textAlign, verticalAlign: verticalAlign };\n       },\n       _getTablePositionData: function(position) {\n           if (!position) {\n               return {};\n           }\n\n           return { marginLeft: position != \"left\" ? \"auto\" : \"\", marginRight: position != \"right\" ? \"auto\" : \"\" };\n       },\n       parseTable: function(table, selectedCells) {\n           if (!table) {\n               return { tableProperties: {}, selectedCells: [] };\n           }\n\n           var cmd = this;\n           var tStyle = table.style;\n           var rows = table.rows;\n           var caption = table.caption;\n           var captionClone = $(caption ? caption.cloneNode(true) : undefined$1);\n           captionClone.find(\".k-marker\").remove();\n\n           var cssClass = table.className;\n           cssClass = cssClass.replace(/^k-table\\s|\\sk-table$/, \"\");\n           cssClass = cssClass.replace(/\\sk-table\\s/, \" \");\n           cssClass = cssClass.replace(/^k-table$/, \"\");\n\n           var tableAlignment = cmd._getAlignment(table, true);\n           var tablePosition = cmd._getTablePosition(table);\n           var captionAlignment = caption ? cmd._getAlignment(caption) : undefined$1;\n           var numberOfHeaderRows = dom._getNumberOfHeaderRows(table);\n\n           var cellsWithHeaders;\n           if (cmd.cellsWithHeadersAssociated(table)) {\n               cellsWithHeaders = \"ids\";\n           } else if ($(table).find(\"th[scope]\").length > 0) {\n               cellsWithHeaders = \"scope\";\n           } else {\n               cellsWithHeaders = \"none\";\n           }\n\n           dom.reMapTableColumns(table, COL_INDEX);\n           var numberOfColumns = dom._getNumberOfColumns(table);\n           var numberOfHeaderColumns = dom._getNumberOfHeaderColumns(table, numberOfHeaderRows);\n           dom.clearTableMappings(table, COL_INDEX);\n\n           var tableJson = {\n               tableProperties: {\n                   width: tStyle.width || table.width ? parseFloat(tStyle.width || table.width) : null,\n                   height: tStyle.height || table.height ? parseFloat(tStyle.height || table.height) : null,\n                   columns: numberOfColumns,\n                   rows: rows.length,\n                   widthUnit: cmd._getUnit(tStyle.width),\n                   heightUnit: cmd._getUnit(tStyle.height),\n                   cellSpacing: table.cellSpacing,\n                   topCellPadding: table.topCellPadding,\n                   leftCellPadding: table.leftCellPadding,\n                   bottomCellPadding: table.bottomCellPadding,\n                   rightCellPadding: table.rightCellPadding,\n                   alignment: tableAlignment.textAlign,\n                   position: tablePosition,\n                   bgColor: tStyle.backgroundColor || table.bgColor,\n                   className: cssClass,\n                   id: table.id,\n                   borderWidth: tStyle.borderWidth || table.border,\n                   borderColor: tStyle.borderColor,\n                   borderStyle: tStyle.borderStyle || \"\",\n                   collapseBorders: !!tStyle.borderCollapse,\n                   summary: table.summary,\n                   captionContent: caption ? captionClone.html() : \"\",\n                   captionAlignment: caption && captionAlignment.textAlign ? captionAlignment.textAlign + \" \" + captionAlignment.verticalAlign : \"\",\n                   headerRows: numberOfHeaderRows,\n                   headerColumns: numberOfHeaderColumns,\n                   cellsWithHeaders: cellsWithHeaders\n               },\n               selectedCells: []\n           };\n\n           tableJson.rows = cmd.parseTableRows(rows, selectedCells, tableJson);\n\n           return tableJson;\n       },\n       parseTableRows: function(rows, selectedCells, tableJson) {\n           var cmd = this;\n           var data = [], row, rowData, cells, cell, cellData;\n           for (var i = 0; i < rows.length; i++) {\n               row = rows[i];\n               rowData = { cells: [] };\n               cells = row.cells;\n               data.push(rowData);\n               for (var j = 0; j < cells.length; j++) {\n                   cell = cells[j];\n                   cellData = cmd.parseCell(cell);\n                   if ($.inArray(cell, selectedCells) != -1) {\n                       tableJson.selectedCells.push(cellData);\n                   }\n                   rowData.cells.push(cellData);\n               }\n           }\n           return data;\n       },\n       parseCell: function(cell) {\n           var cmd = this;\n           var cStyle = cell.style;\n           var alignment = cmd._getAlignment(cell);\n           alignment = alignment.textAlign ? alignment.textAlign + \" \" + alignment.verticalAlign : \"\";\n\n           var data = {\n               width: cStyle.width || cell.width ? parseFloat(cStyle.width || cell.width) : null,\n               height: cStyle.height || cell.height ? parseFloat(cStyle.height || cell.height) : null,\n               widthUnit: cmd._getUnit(cStyle.width),\n               heightUnit: cmd._getUnit(cStyle.height),\n               cellMargin: cStyle.margin,\n               topCellPadding: cStyle.paddingTop,\n               leftCellPadding: cStyle.paddingLeft,\n               bottomCellPadding: cStyle.paddingBottom,\n               rightCellPadding: cStyle.paddingRight,\n               alignment: alignment,\n               bgColor: cStyle.backgroundColor || cell.bgColor,\n               className: cell.className,\n               id: cell.id,\n               borderWidth: cStyle.borderWidth || cell.border,\n               borderColor: cStyle.borderColor,\n               borderStyle: cStyle.borderStyle,\n               wrapText: cStyle.whiteSpace != \"nowrap\"\n           };\n\n           return data;\n       },\n       _getTablePosition: function(element) {\n           var style = element.style;\n           if (style.marginLeft == \"auto\" && style.marginRight == \"auto\") {\n               return \"center\";\n           }\n\n           if (style.marginLeft == \"auto\") {\n               return \"right\";\n           }\n\n           return \"left\";\n       },\n       _getAlignment: function(element, horizontalOnly) {\n           var style = element.style;\n           var hAlign = style.textAlign || element.align || \"\";\n           if (horizontalOnly) {\n               return { textAlign: hAlign };\n           }\n           var vAlign = style.verticalAlign || element.vAlign || \"\";\n           if (hAlign && vAlign) {\n               return { textAlign: hAlign, verticalAlign: vAlign };\n           }\n           if (!hAlign && vAlign) {\n               return { textAlign: \"left\", verticalAlign: vAlign };\n           }\n           if (hAlign && !vAlign) {\n               return { textAlign: hAlign, verticalAlign: \"top\" };\n           }\n           return { textAlign: \"\", verticalAlign: \"\" };\n       },\n       _getUnit: function(value) {\n           var unit = (value || \"\").match(reUnit);\n           return unit ? unit[0] : \"px\";\n       },\n       _selectedTable: function(range) {\n           var nodes = dom.filterBy(RangeUtils.nodes(range), dom.htmlIndentSpace, true);\n           return tableFormatFinder.findSuitable(nodes)[0];\n       },\n       _selectedCells: function(range) {\n           var nodes = dom.filterBy(RangeUtils.nodes(range), dom.htmlIndentSpace, true);\n           return cellsFormatFinder.findSuitable(nodes);\n       },\n       _lastInCollection: function(collection) {\n           return collection[collection.length - 1];\n       },\n       _getNumericValue: function(value) {\n           return !isNaN(value) || typeof value === \"string\" ? value : null;\n       }\n   });\n\n   var TableWizardTool = Editor.Tool.extend({\n       command: function(options) {\n           options.insertNewTable = this.options.insertNewTable;\n           options.tableCellWizard = !!this.options.tableCellWizard;\n           return new TableWizardCommand(options);\n       }\n   });\n\n   var TableWizardEditTool = TableWizardTool.extend({\n       update: function(ui, nodes) {\n           var isFormatted = !tableFormatFinder.isFormatted(nodes),\n               toolbar = ui.closest(\".k-toolbar\").getKendoToolBar();\n\n           if (isFormatted === true) {\n               toolbar.hide(ui);\n           } else {\n               toolbar.show(ui);\n           }\n       }\n   });\n\n   var TableCellWizardEditTool = TableWizardTool.extend({\n       update: function(ui, nodes) {\n           var isFormatted = !tableFormatFinder.isFormatted(nodes),\n               toolbar = ui.closest(\".k-toolbar\").getKendoToolBar();\n\n           if (isFormatted === true) {\n               toolbar.hide(ui);\n           } else {\n               toolbar.show(ui);\n           }\n       }\n   });\n\n   kendo.ui.editor.TableWizardTool = TableWizardTool;\n   kendo.ui.editor.TableWizardCommand = TableWizardCommand;\n\n   registerTool(\"tableProperties\", new TableWizardEditTool({ command: TableWizardCommand, insertNewTable: false, property: \"tableProperties\" }));\n   registerTool(\"tableCellProperties\", new TableCellWizardEditTool({ command: TableWizardCommand, tableCellWizard: true, insertNewTable: false, property: \"tableCellProperties\" }));\n\n   })(window.kendo.jQuery);\n\n   (function($, undefined$1) {\n\n   const FORM_FIELD_CLASS = \"k-form-field\",\n         INVISIBLE_CLASS = \"k-visibility-invisible\",\n         DOT = \".\";\n\n   var kendo = window.kendo,\n       encode = kendo.htmlEncode,\n       numericTextBoxSettings = { format: \"0\", min: 0 },\n       units = [\"px\", \"em\"],\n       borderStyles = [\"solid\", \"dotted\", \"dashed\", \"double\", \"groove\", \"ridge\", \"inset\", \"outset\", \"initial\", \"inherit\", \"none\", \"hidden\"];\n\n   var DEFAULT_NUMBER_OF_COLS_AND_ROWS = 4;\n\n   var textWrapDropDownSettings = {\n       dataSource: [{\n           className: \"text-wrap\",\n           value: \"wrap\"\n       }, {\n           className: \"parameter-string\",\n           value: \"nowrap\"\n       }],\n       dataTextField: \"className\",\n       dataValueField: \"value\",\n       template: ({ className, tooltip }) => kendo.ui.icon($(`<span title=\"${encode(tooltip)}\"></span>`), { icon: encode(className) }) + encode(tooltip),\n       valueTemplate: ({ className, tooltip }) => kendo.ui.icon($(`<span title=\"${encode(tooltip)}\"></span>`), { icon: encode(className), iconClass: \"k-text-wrap\" }) + encode(tooltip)\n   };\n\n   var tablePositionDropDownSettings = {\n       dataSource: [{\n           className: \"table-position-start\",\n           value: \"left\"\n       }, {\n           className: \"table-position-center\",\n           value: \"center\"\n       }, {\n           className: \"table-position-end\",\n           value: \"right\"\n       }],\n       dataTextField: \"className\",\n       dataValueField: \"value\",\n       template: ({ className, tooltip }) => kendo.ui.icon($(`<span title=\"${encode(tooltip)}\"></span>`), { icon: encode(className) }) + encode(tooltip),\n       valueTemplate: ({ className, tooltip }) => kendo.ui.icon($(`<span title=\"${encode(tooltip)}\"></span>`), { icon: encode(className), iconClass: \"k-align-group\" }) + encode(tooltip)\n   };\n\n   var tableAlignmentDropDownSettings = {\n       dataSource: [{\n           className: \"table-align-middle-left\",\n           value: \"left\"\n       }, {\n           className: \"table-align-middle-center\",\n           value: \"center\"\n       }, {\n           className: \"table-align-middle-right\",\n           value: \"right\"\n       }, {\n           className: \"align-remove\",\n           value: \"\"\n       }],\n       dataTextField: \"className\",\n       dataValueField: \"value\",\n       template: ({ className, tooltip }) => kendo.ui.icon($(`<span title=\"${encode(tooltip)}\"></span>`), { icon: encode(className) }) + encode(tooltip),\n       valueTemplate: ({ className, tooltip }) => kendo.ui.icon($(`<span title=\"${encode(tooltip)}\"></span>`), { icon: encode(className), iconClass: \"k-align-group\" }) + encode(tooltip)\n   };\n\n   var cellAlignmentDropDownSettings = {\n       dataSource: [{\n           className: \"table-align-top-left\",\n           value: \"left top\"\n       }, {\n           className: \"table-align-top-center\",\n           value: \"center top\"\n       }, {\n           className: \"table-align-top-right\",\n           value: \"right top\"\n       }, {\n           className: \"table-align-middle-left\",\n           value: \"left middle\"\n       }, {\n           className: \"table-align-middle-center\",\n           value: \"center middle\"\n       }, {\n           className: \"table-align-middle-right\",\n           value: \"right middle\"\n       }, {\n           className: \"table-align-bottom-left\",\n           value: \"left bottom\"\n       }, {\n           className: \"table-align-bottom-center\",\n           value: \"center bottom\"\n       }, {\n           className: \"table-align-bottom-right\",\n           value: \"right bottom\"\n       }, {\n           className: \"align-remove\",\n           value: \"\"\n       }],\n       dataTextField: \"className\",\n       dataValueField: \"value\",\n       template: ({ className, tooltip }) => kendo.ui.icon($(`<span title=\"${encode(tooltip)}\"></span>`), { icon: encode(className) }) + encode(tooltip),\n       valueTemplate: ({ className, tooltip }) => kendo.ui.icon($(`<span title=\"${encode(tooltip)}\"></span>`), { icon: encode(className), iconClass: \"k-align-group\" }) + encode(tooltip)\n   };\n\n   var accessibilityAlignmentDropDownSettings = {\n       dataSource: [{\n           className: \"table-align-top-left\",\n           value: \"left top\"\n       }, {\n           className: \"table-align-top-center\",\n           value: \"center top\"\n       }, {\n           className: \"table-align-top-right\",\n           value: \"right top\"\n       }, {\n           className: \"table-align-bottom-left\",\n           value: \"left bottom\"\n       }, {\n           className: \"table-align-bottom-center\",\n           value: \"center bottom\"\n       }, {\n           className: \"table-align-bottom-right\",\n           value: \"right bottom\"\n       }, {\n           className: \"align-remove\",\n           value: \"\"\n       }],\n       dataTextField: \"className\",\n       dataValueField: \"value\",\n       template: ({ className, tooltip }) => kendo.ui.icon($(`<span title=\"${encode(tooltip)}\"></span>`), { icon: encode(className) }),\n       valueTemplate: ({ className, tooltip }) => kendo.ui.icon($(`<span title=\"${encode(tooltip)}\"></span>`), { icon: encode(className), iconClass: \"k-align-group\" })\n   };\n\n   var tablePropertiesDialogTemplate = ({ messages }) =>\n       '<div class=\"k-editor-dialog k-editor-table-wizard-window k-action-window k-popup-edit-form\">' +\n           '<div id=\"k-table-wizard-tabs\" class=\"k-root-tabs\">' +\n               '<ul>' +\n                   `<li class=\"k-active\">${ messages.tableTab }</li>` +\n                   `<li>${ messages.accessibilityTab }</li>` +\n               '</ul>' +\n               '<div id=\"k-table-properties\"></div>' +\n               '<div id=\"k-accessibility-properties\"></div>' +\n           '</div>' +\n           '<div class=\"k-actions k-actions-start k-actions-horizontal k-window-buttons\">' +\n                   kendo.html.renderButton(`<button class=\"k-dialog-ok\"><span class=\"k-button-text\">${ messages.dialogOk }</span></button>`, {\n                       icon: 'check',\n                           themeColor: \"primary\"\n                       }) +\n                       kendo.html.renderButton(`<button class=\"k-dialog-close\"><span class=\"k-button-text\">${ messages.dialogCancel }</span></button>`, {\n                           icon: 'cancel-outline'\n                       }) +\n           '</div>' +\n       '</div>';\n       var cellPropertiesDialogTemplate = ({ messages }) =>\n       '<div class=\"k-editor-dialog k-editor-table-wizard-window k-action-window k-popup-edit-form\">' +\n           '<div id=\"k-cell-properties\"></div>' +\n           '<div class=\"k-actions k-actions-start k-actions-horizontal k-window-buttons\">' +\n                   kendo.html.renderButton(`<button class=\"k-dialog-ok\"><span class=\"k-button-text\">${ messages.dialogOk }</span></button>`, {\n                       icon: 'check',\n                           themeColor: \"primary\"\n                       }) +\n                       kendo.html.renderButton(`<button class=\"k-dialog-close\"><span class=\"k-button-text\">${ messages.dialogCancel }</span></button>`, {\n                           icon: 'cancel-outline'\n                       }) +\n           '</div>' +\n       '</div>';\n\n   var TableWizardDialog = kendo.Class.extend({\n       init: function(options) {\n           this.options = options;\n       },\n       _openTablePropertiesDialog: function() {\n           var that = this,\n               options = that.options,\n               dialogOptions = options.dialogOptions,\n               tableData = options.table,\n               dialog,\n               messages = options.messages,\n               isIE = kendo.support.browser.msie;\n\n           function close(e) {\n               e.preventDefault();\n               that.destroy();\n               dialog.destroy();\n           }\n\n           function okHandler(e) {\n               that.collectTableDialogValues(tableData);\n\n               close(e);\n\n               if (that.change) {\n                   that.change();\n               }\n\n               options.closeCallback(tableData);\n           }\n\n           function closeHandler(e) {\n               close(e);\n               options.closeCallback();\n           }\n\n           dialogOptions.close = closeHandler;\n           dialogOptions.minWidth = 700;\n           dialogOptions.width = 700;\n           dialogOptions.title = messages.tableProperties;\n           dialogOptions.visible = options.visible;\n\n           dialog = $(that._dialogTemplate(messages)).appendTo(document.body)\n               .kendoWindow(dialogOptions)\n               .addClass(\"k-editor-window\")\n               .closest(\".k-window\").toggleClass(\"k-rtl\", options.isRtl).end()\n               .find(\".k-dialog-ok\").on(\"click\", okHandler).end()\n               .find(\".k-dialog-close\").on(\"click\", closeHandler).end()\n               .data(\"kendoWindow\");\n\n           var element = dialog.element;\n           this.components = {};\n           that._initTabStripComponent(element);\n           that._tablePropertiesForm = that._createTablePropertiesForm(dialog, messages);\n           that._accessibilityPropertiesForm = that._createAccessibilityPropertiesForm(dialog, messages);\n\n           dialog.center();\n           dialog.open();\n\n           if (isIE) {\n               var dialogHeight = element.closest(\".k-window\").height();\n               element.css(\"max-height\", dialogHeight);\n           }\n       },\n       _openCellPropertiesDialog: function() {\n           var that = this,\n               options = that.options,\n               dialogOptions = options.dialogOptions,\n               tableData = options.table,\n               dialog,\n               messages = options.messages,\n               isIE = kendo.support.browser.msie;\n\n           function close(e) {\n               e.preventDefault();\n               that.destroy();\n               dialog.destroy();\n           }\n\n           function okHandler(e) {\n               that.collectCellDialogValues(tableData);\n\n               close(e);\n\n               if (that.change) {\n                   that.change();\n               }\n\n               options.closeCallback(tableData);\n           }\n\n           function closeHandler(e) {\n               close(e);\n               options.closeCallback();\n           }\n\n           dialogOptions.close = closeHandler;\n           dialogOptions.minWidth = 400;\n           dialogOptions.title = messages.tableCellProperties;\n           dialogOptions.visible = options.visible;\n\n           dialog = $(that._dialogTemplate(messages, cellPropertiesDialogTemplate)).appendTo(document.body)\n               .kendoWindow(dialogOptions)\n               .addClass(\"k-editor-window\")\n               .closest(\".k-window\").toggleClass(\"k-rtl\", options.isRtl).end()\n               .find(\".k-dialog-ok\").on(\"click\", okHandler).end()\n               .find(\".k-dialog-close\").on(\"click\", closeHandler).end()\n               .data(\"kendoWindow\");\n\n           var element = dialog.element;\n           that._cellPropertiesForm = that._createCellPropertiesForm(dialog, messages);\n\n           dialog.center();\n           dialog.open();\n\n           if (isIE) {\n               var dialogHeight = element.closest(\".k-window\").height();\n               element.css(\"max-height\", dialogHeight);\n           }\n       },\n       open: function(isCellProperties) {\n           if (!isCellProperties) {\n               this._openTablePropertiesDialog();\n           } else {\n               this._openCellPropertiesDialog();\n           }\n       },\n\n       _initTabStripComponent: function(element) {\n           var components = this.components = {};\n           components.tabStrip = element.find(\"#k-table-wizard-tabs\").kendoTabStrip({\n               animation: false\n           }).data(\"kendoTabStrip\");\n       },\n\n       collectTableDialogValues: function() {\n           var that = this;\n           var data = that.options.table;\n           that._collectTableViewValues(data);\n           that._collectAccessibilityViewValues(data);\n       },\n\n       collectCellDialogValues: function() {\n           var that = this;\n           var data = that.options.table;\n           that._collectCellViewValues(data);\n       },\n\n       _collectTableViewValues: function(tableData) {\n           var tableView = this.components.tableView;\n           var tableProperties = tableData.tableProperties;\n           var cellData = tableData.cellProperties = tableData.cellProperties || {};\n           tableProperties.width = tableView.width.value();\n           tableProperties.widthUnit = tableView.widthUnit.value();\n           tableProperties.height = tableView.height.value();\n           tableProperties.columns = tableView.columns.value();\n           tableProperties.rows = tableView.rows.value();\n           tableProperties.heightUnit = tableView.heightUnit.value();\n           tableProperties.cellSpacing = tableView.cellSpacing.value();\n           tableProperties.topCellPadding = tableView.topCellPadding.value();\n           tableProperties.leftCellPadding = tableView.leftCellPadding.value();\n           tableProperties.bottomCellPadding = tableView.bottomCellPadding.value();\n           tableProperties.rightCellPadding = tableView.rightCellPadding.value();\n           tableProperties.alignment = tableView.alignment.value();\n           tableProperties.position = tableView.position.value();\n           tableProperties.bgColor = tableView.bgColor.value();\n           tableProperties.borderWidth = tableView.borderWidth.value();\n           tableProperties.borderColor = tableView.borderColor.value();\n           tableProperties.borderStyle = tableView.borderStyle.value();\n           tableProperties.collapseBorders = tableView.collapseBorders.check();\n\n           if (!cellData.width) {\n               cellData.selectAllCells = true;\n               cellData.width = 100 / tableData.tableProperties.columns;\n               cellData.widthUnit = \"%\";\n           }\n       },\n\n       _collectCellViewValues: function(table) {\n           var cellData = table.cellProperties = table.cellProperties || {};\n           var cellView = this.components.cellView;\n\n           cellData.selectAllCells = cellView.selectAllCells.check();\n           cellData.width = cellView.width.value();\n           cellData.widthUnit = cellView.widthUnit.value();\n           cellData.height = cellView.height.value();\n           cellData.heightUnit = cellView.heightUnit.value();\n           cellData.independentCellPaddings = cellView.independentCellPaddings.check();\n           cellData.topCellPadding = cellView.topCellPadding.value();\n           cellData.leftCellPadding = cellView.leftCellPadding.value();\n           cellData.bottomCellPadding = cellView.bottomCellPadding.value();\n           cellData.rightCellPadding = cellView.rightCellPadding.value();\n           cellData.cellMargin = cellView.cellMargin.value();\n           cellData.alignment = cellView.alignment.value();\n           cellData.bgColor = cellView.bgColor.value();\n           cellData.className = cellView.className.value();\n           cellData.id = cellView.id.value();\n           cellData.borderWidth = cellView.borderWidth.value();\n           cellData.borderColor = cellView.borderColor.value();\n           cellData.borderStyle = cellView.borderStyle.value();\n           cellData.wrapText = cellView.wrapTextValue.value() == \"wrap\";\n\n           if (!cellData.width) {\n               cellData.selectAllCells = true;\n               cellData.width = 100 / table.tableProperties.columns;\n               cellData.widthUnit = \"%\";\n           }\n       },\n\n      _collectAccessibilityViewValues: function(table) {\n           var tableProperties = table.tableProperties;\n           var accessibilityView = this.components.accessibilityView;\n           tableProperties.captionContent = accessibilityView.captionContent.value();\n           tableProperties.captionAlignment = accessibilityView.captionAlignment.value();\n           tableProperties.summary = accessibilityView.summary.value();\n           tableProperties.cellsWithHeaders = accessibilityView.cellsWithHeaders.value();\n           tableProperties.className = accessibilityView.className.value();\n           tableProperties.id = accessibilityView.id.value();\n           tableProperties.headerRows = accessibilityView.headerRows.value();\n           tableProperties.headerColumns = accessibilityView.headerColumns.value();\n       },\n       _addUnit: function(units, value) {\n           if (value && $.inArray(value, units) == -1) {\n               units.push(value);\n           }\n       },\n\n       _initNumericTextbox: function(element, property, data, storage, settings) {\n           var component = storage[property] = element.kendoNumericTextBox(\n                   settings ? $.extend({}, numericTextBoxSettings, settings) : numericTextBoxSettings\n               ).data(\"kendoNumericTextBox\");\n           if (property in data) {\n               component.value(parseInt(data[property], 10));\n           }\n       },\n\n       _initDropDownList: function(element, property, data, storage, dataSource) {\n           var component = storage[property] = element.kendoDropDownList({\n               dataSource: dataSource\n           }).data(\"kendoDropDownList\");\n           this._setComponentValue(component, data, property);\n       },\n\n       _initBorderStyleDropDown: function(element, property, data, storage, dataSource) {\n           var component = storage[property] = element.kendoDropDownList({\n               dataSource: dataSource,\n               optionLabel: this.options.messages.borderNone\n           }).data(\"kendoDropDownList\");\n           this._setComponentValue(component, data, property);\n       },\n\n       _initTablePositionDropDown: function(element, data) {\n           var messages = this.options.messages;\n           var tableView = this.components.tableView;\n           var dataSource = tablePositionDropDownSettings.dataSource;\n           dataSource[0].tooltip = messages.tableAlignLeft;\n           dataSource[1].tooltip = messages.tableAlignCenter;\n           dataSource[2].tooltip = messages.tableAlignRight;\n\n           this._initPositionDropDown(element, tablePositionDropDownSettings, \"position\", data, tableView);\n       },\n\n       _initTableAlignmentDropDown: function(element, data) {\n           var messages = this.options.messages;\n           var tableView = this.components.tableView;\n           var dataSource = tableAlignmentDropDownSettings.dataSource;\n           dataSource[0].tooltip = messages.alignLeft;\n           dataSource[1].tooltip = messages.alignCenter;\n           dataSource[2].tooltip = messages.alignRight;\n           dataSource[3].tooltip = messages.alignRemove;\n\n           this._initAlignmentDropDown(element, tableAlignmentDropDownSettings, \"alignment\", data, tableView);\n       },\n\n       _initCellAlignmentDropDown: function(element, data) {\n           var messages = this.options.messages;\n           var cellView = this.components.cellView;\n           var dataSource = cellAlignmentDropDownSettings.dataSource;\n           dataSource[0].tooltip = messages.alignLeftTop;\n           dataSource[1].tooltip = messages.alignCenterTop;\n           dataSource[2].tooltip = messages.alignRightTop;\n           dataSource[3].tooltip = messages.alignLeftMiddle;\n           dataSource[4].tooltip = messages.alignCenterMiddle;\n           dataSource[5].tooltip = messages.alignRightMiddle;\n           dataSource[6].tooltip = messages.alignLeftBottom;\n           dataSource[7].tooltip = messages.alignCenterBottom;\n           dataSource[8].tooltip = messages.alignRightBottom;\n           dataSource[9].tooltip = messages.alignRemove;\n\n           this._initAlignmentDropDown(element, cellAlignmentDropDownSettings, \"alignment\", data, cellView);\n       },\n\n       _initAccessibilityAlignmentDropDown: function(element, data) {\n           var messages = this.options.messages;\n           var accessibilityView = this.components.accessibilityView;\n           var dataSource = accessibilityAlignmentDropDownSettings.dataSource;\n           dataSource[0].tooltip = messages.alignLeftTop;\n           dataSource[1].tooltip = messages.alignCenterTop;\n           dataSource[2].tooltip = messages.alignRightTop;\n           dataSource[3].tooltip = messages.alignLeftBottom;\n           dataSource[4].tooltip = messages.alignCenterBottom;\n           dataSource[5].tooltip = messages.alignRightBottom;\n           dataSource[6].tooltip = messages.alignRemove;\n\n           this._initAlignmentDropDown(element, accessibilityAlignmentDropDownSettings, \"captionAlignment\", data, accessibilityView);\n       },\n       _initTextWrapDropDown: function(element, data) {\n           var messages = this.options.messages;\n           var name = \"wrapTextValue\";\n           data.wrapTextValue = data.wrapText ? \"wrap\" : \"nowrap\";\n\n           var cellView = this.components.cellView;\n           var dataSource = textWrapDropDownSettings.dataSource;\n           dataSource[0].tooltip = messages.wrapText;\n           dataSource[1].tooltip = messages.fitToCell;\n           var component = cellView[name] =\n               element.kendoDropDownList(textWrapDropDownSettings).data(\"kendoDropDownList\");\n\n           component.list.addClass('k-text-wrap');\n           this._setComponentValue(component, data, name);\n       },\n       _initPositionDropDown: function(element, settings, name, data, storage) {\n           var component = storage[name] =\n               element.kendoDropDownList(settings).data(\"kendoDropDownList\");\n\n           component.list.addClass('k-position');\n           this._setComponentValue(component, data, name);\n       },\n       _initAlignmentDropDown: function(element, settings, name, data, storage) {\n           var component = storage[name] =\n               element.kendoDropDownList(settings).data(\"kendoDropDownList\");\n\n           component.list.addClass('k-align');\n           this._setComponentValue(component, data, name);\n       },\n       _initAssociationDropDown: function(element, name, settings, data, storage) {\n           var component = storage[name] =\n               element.kendoDropDownList(settings).data(\"kendoDropDownList\");\n\n           this._setComponentValue(component, data, name);\n       },\n       _setComponentValue: function(component, data, property) {\n           if (property in data) {\n               component.value(data[property]);\n           }\n       },\n\n       _initColorPicker: function(element, property, data, storage) {\n           var component = storage[property] =\n               element.kendoColorPicker({ buttons: false, clearButton: true }).data(\"kendoColorPicker\");\n\n           if (data[property]) {\n               component.value(data[property]);\n           }\n       },\n       _initInput: function(element, property, data, storage, settings) {\n           var component = storage[property] = element.kendoTextBox(settings || {}).data(\"kendoTextBox\");\n           if (property in data) {\n               component.value(data[property]);\n           }\n       },\n\n       _initCheckbox: function(element, property, data, storage, settings) {\n           var component = storage[property] = element.kendoCheckBox(settings || {}).data(\"kendoCheckBox\");\n           if (property in data) {\n               component.check(data[property]);\n           }\n       },\n\n       _initTextArea: function(element, property, data, storage, settings) {\n           var component = storage[property] = element.kendoTextArea(settings || {}).data(\"kendoTextArea\");\n           if (property in data) {\n               component.value(data[property]);\n           }\n       },\n\n       destroy: function() {\n           var that = this;\n           that._destroyComponents(this.components);\n\n           delete that.components;\n       },\n       _destroyComponents: function(components) {\n           for (var widget in components) {\n               if (components[widget].destroy) {\n                   components[widget].destroy();\n               }\n               delete components[widget];\n           }\n       },\n\n       _dialogTemplate: function(messages, dialogTemplate) {\n           return kendo.template(dialogTemplate || tablePropertiesDialogTemplate)({ messages: messages });\n       },\n\n       _onPaddingTopChange: function(e) {\n           let viewType = this.components.tableView ? \"tableView\" : \"cellView\",\n               view = this.components[viewType],\n               independentCellPaddings = !view.independentCellPaddings.check(),\n               topCellPaddingNumeric = view.topCellPadding,\n               topCellPaddingValue = topCellPaddingNumeric.value(),\n               leftCellPaddingNumeric = view.leftCellPadding,\n               bottomCellPaddingNumeric = view.bottomCellPadding,\n               rightCellPaddingNumeric = view.rightCellPadding;\n\n           if (independentCellPaddings) {\n               leftCellPaddingNumeric.value(topCellPaddingValue);\n               bottomCellPaddingNumeric.value(topCellPaddingValue);\n               rightCellPaddingNumeric.value(topCellPaddingValue);\n           }\n\n           topCellPaddingNumeric._cachedPadding = topCellPaddingValue;\n       },\n\n       _onPaddingCheckChange: function(e) {\n           let viewType = this.components.tableView ? \"tableView\" : \"cellView\",\n               messages = this.options.messages,\n               checked = e.sender.check(),\n               view = this.components[viewType],\n               topCellPaddingNumeric = view.topCellPadding,\n               leftCellPaddingNumeric = view.leftCellPadding,\n               bottomCellPaddingNumeric = view.bottomCellPadding,\n               rightCellPaddingNumeric = view.rightCellPadding,\n               topCellPaddingValue = topCellPaddingNumeric.value(),\n               bottomCellPaddingValue = bottomCellPaddingNumeric.value(),\n               leftCellPaddingValue = leftCellPaddingNumeric.value(),\n               rightCellPaddingValue = rightCellPaddingNumeric.value();\n\n           if (!checked) {\n               if (topCellPaddingValue === bottomCellPaddingValue &&\n                       topCellPaddingValue === leftCellPaddingValue &&\n                       topCellPaddingValue === rightCellPaddingValue) {\n                   leftCellPaddingNumeric.value(topCellPaddingValue);\n                   bottomCellPaddingNumeric.value(topCellPaddingValue);\n                   rightCellPaddingNumeric.value(topCellPaddingValue);\n               } else {\n                   topCellPaddingNumeric.value(null);\n               }\n\n               leftCellPaddingNumeric.wrapper.closest(DOT + FORM_FIELD_CLASS).addClass(INVISIBLE_CLASS);\n               bottomCellPaddingNumeric.wrapper.closest(DOT + FORM_FIELD_CLASS).addClass(INVISIBLE_CLASS);\n               rightCellPaddingNumeric.wrapper.closest(DOT + FORM_FIELD_CLASS).addClass(INVISIBLE_CLASS);\n\n               topCellPaddingNumeric.wrapper.closest(DOT + FORM_FIELD_CLASS).find(\".k-form-label\").text(messages.cellPadding);\n           } else {\n               if (!isNaN(topCellPaddingNumeric._cachedPadding)) {\n                   topCellPaddingNumeric.value(topCellPaddingNumeric._cachedPadding);\n               }\n\n               leftCellPaddingNumeric.wrapper.closest(DOT + FORM_FIELD_CLASS).removeClass(INVISIBLE_CLASS);\n               bottomCellPaddingNumeric.wrapper.closest(DOT + FORM_FIELD_CLASS).removeClass(INVISIBLE_CLASS);\n               rightCellPaddingNumeric.wrapper.closest(DOT + FORM_FIELD_CLASS).removeClass(INVISIBLE_CLASS);\n\n               topCellPaddingNumeric.wrapper.closest(DOT + FORM_FIELD_CLASS).find(\".k-form-label\").text(messages.topPadding);\n           }\n       },\n\n       _onColumnsNumberChange: function(args) {\n           var that = this;\n           var accessibilityView = that.components.accessibilityView;\n           var headerColumnsNumeric = accessibilityView.headerColumns;\n           var currentNumberOfColumnsHeaders = headerColumnsNumeric.value();\n           var numberOfColumns = args.sender.value();\n\n           if (numberOfColumns < currentNumberOfColumnsHeaders) {\n               headerColumnsNumeric.value(numberOfColumns);\n           }\n\n           headerColumnsNumeric.max(numberOfColumns);\n       },\n\n       _onRowsNumberChange: function(args) {\n           var that = this;\n           var accessibilityView = that.components.accessibilityView;\n           var headerRowsNumeric = accessibilityView.headerRows;\n           var currentNumberOfRowHeaders = headerRowsNumeric.value();\n           var numberOfRows = args.sender.value();\n\n           if (numberOfRows < currentNumberOfRowHeaders) {\n               headerRowsNumeric.value(numberOfRows);\n           }\n\n           headerRowsNumeric.max(numberOfRows);\n       },\n\n       _createTablePropertiesForm: function(dialog, messages) {\n           var that = this;\n           var table = that.options.table;\n           var formElement = dialog.element.find(\"#k-table-properties\");\n           var components = that.components;\n           var tableView = components.tableView = {};\n           var tableProperties = table.tableProperties = table.tableProperties || {};\n           var form;\n\n           that._addUnit(units, tableProperties.widthUnit);\n           that._addUnit(units, tableProperties.heightUnit);\n           tableProperties.borderStyle = tableProperties.borderStyle || \"\";\n           form = formElement.kendoForm({\n               renderButtons: false,\n               layout: \"grid\",\n               grid: {\n                   cols: 4\n               },\n               items: [\n                   {\n                       colSpan: 2,\n                       field: \"k-editor-table-columns\",\n                       label: encode(messages.columns),\n                       editor: function(container, options) {\n                           that._initNumericTextbox($('<input type=\"numeric\" id=\"k-editor-table-columns\" />').appendTo(container),\n                               \"columns\",\n                               tableProperties,\n                               tableView,\n                               {\n                                   min: 1,\n                                   value: DEFAULT_NUMBER_OF_COLS_AND_ROWS,\n                                   change: that._onColumnsNumberChange.bind(that)\n                               });\n                       }\n                   },{\n                       colSpan: 2,\n                       field: \"k-editor-table-rows\",\n                       label: encode(messages.rows),\n                       editor: function(container, options) {\n                           that._initNumericTextbox($('<input type=\"numeric\" id=\"k-editor-table-rows\" />').appendTo(container),\n                               \"rows\",\n                               tableProperties,\n                               tableView,\n                               {\n                                   min: 1,\n                                   value: DEFAULT_NUMBER_OF_COLS_AND_ROWS,\n                                   change: that._onRowsNumberChange.bind(that)\n                               });\n                       }\n                   },{\n                       colSpan: 1,\n                       field: \"k-editor-table-width\",\n                       label: encode(messages.width),\n                       editor: function(container, options) {\n                           that._initNumericTextbox($('<input id=\"k-editor-table-width\" />').appendTo(container), \"width\", tableProperties, tableView, { placeholder: encode(messages.auto) });\n                       }\n                   },{\n                       colSpan: 1,\n                       field: \"k-editor-table-width-type\",\n                       label: {\n                           encoded: false,\n                           text: '&nbsp;'\n                       },\n                       editor: function(container, options) {\n                           that._initDropDownList($(`<input id=\"k-editor-table-width-type\" aria-label=\"${ messages.units }\" />`).appendTo(container),\n                               \"widthUnit\",\n                               tableProperties,\n                               tableView,\n                               units);\n                       }\n                   },{\n                       colSpan: 1,\n                       field: \"k-editor-table-height\",\n                       label: encode(messages.height),\n                       editor: function(container, options) {\n                           that._initNumericTextbox($('<input id=\"k-editor-table-height\" />').appendTo(container), \"height\", tableProperties, tableView, { placeholder: encode(messages.auto) });\n                       }\n                   },{\n                       colSpan: 1,\n                       field: \"k-editor-table-height-type\",\n                       label: {\n                           encoded: false,\n                           text: '&nbsp;'\n                       },\n                       editor: function(container, options) {\n                           that._initDropDownList($(`<input id=\"k-editor-table-height-type\" aria-label=\"${ messages.units }\" />`).appendTo(container),\n                               \"heightUnit\",\n                               tableProperties,\n                               tableView,\n                               units);\n                       }\n                   },{\n                       colSpan: 2,\n                       field: \"k-editor-table-position\",\n                       label: encode(messages.position),\n                       editor: function(container, options) {\n                           that._initTablePositionDropDown($('<input id=\"k-editor-table-position\" class=\"k-position\" />').appendTo(container), tableProperties);\n                       }\n                   },\n                   {\n                       colSpan: 2,\n                       field: \"k-editor-table-alignment\",\n                       label: encode(messages.alignment),\n                       editor: function(container, options) {\n                           that._initTableAlignmentDropDown($('<input id=\"k-editor-table-alignment\" class=\"k-align\" />').appendTo(container), tableProperties);\n                       }\n                   },{\n                       colSpan: 2,\n                       field: \"k-editor-table-cell-spacing\",\n                       label: encode(messages.cellSpacing),\n                       editor: function(container, options) {\n                           that._initNumericTextbox($('<input id=\"k-editor-table-cell-spacing\" />').appendTo(container), \"cellSpacing\", tableProperties, tableView, { placeholder: encode(messages.auto) });\n                       }\n                   },{\n                       type: \"group\",\n                       label: \"Cell Paddings\",\n                       layout: \"grid\",\n                       colSpan: 4,\n                       grid: {\n                           cols: 4,\n                           gutter: 20\n                       },\n                       items: [\n                           {\n                               colSpan: \"full\",\n                               field: \"k-editor-padding-all-sides\",\n                               label: \"\",\n                               editor: function(container, options) {\n                                   that._initCheckbox($('<input id=\"k-editor-padding-all-sides\" />').appendTo(container), \"independentCellPaddings\", tableProperties, tableView,\n                                   {\n                                       checked: true,\n                                       label: encode(messages.independentCellPaddings),\n                                       change: that._onPaddingCheckChange.bind(that)\n                                   });\n                               }\n                           },{\n                               colSpan: 1,\n                               field: \"k-editor-table-cell-padding-top\",\n                               label: encode(messages.topPadding),\n                               editor: function(container, options) {\n                                   that._initNumericTextbox($('<input id=\"k-editor-table-cell-padding-top\" />').appendTo(container), \"topCellPadding\", tableProperties, tableView,\n                                   {\n                                       placeholder: encode(messages.auto),\n                                       change: that._onPaddingTopChange.bind(that)\n                                   });\n                               }\n                           },{\n                               colSpan: 1,\n                               field: \"k-editor-table-cell-padding-right\",\n                               label: encode(messages.rightPadding),\n                               editor: function(container, options) {\n                                   that._initNumericTextbox($('<input id=\"k-editor-table-cell-padding-right\" />').appendTo(container), \"rightCellPadding\", tableProperties, tableView, { placeholder: encode(messages.auto) });\n                               }\n                           },{\n                               colSpan: 1,\n                               field: \"k-editor-table-cells-padding-bottom\",\n                               label: encode(messages.bottomPadding),\n                               editor: function(container, options) {\n                                   that._initNumericTextbox($('<input id=\"k-editor-table-cell-padding-bottom\" />').appendTo(container), \"bottomCellPadding\", tableProperties, tableView, { placeholder: encode(messages.auto) });\n                               }\n                           },{\n                               colSpan: 1,\n                               field: \"k-editor-table-cell-padding-left\",\n                               label: encode(messages.leftPadding),\n                               editor: function(container, options) {\n                                   that._initNumericTextbox($('<input id=\"k-editor-table-cell-padding-left\" />').appendTo(container), \"leftCellPadding\", tableProperties, tableView, { placeholder: encode(messages.auto) });\n                               }\n                           }\n                       ]\n                   }, {\n                       type: \"group\",\n                       label: \"Borders\",\n                       layout: \"grid\",\n                       colSpan: 4,\n                       grid: {\n                           cols: 4,\n                           gutter: 10\n                       },\n                       items: [{\n                           colSpan: \"full\",\n                           field: \"k-editor-table-bg\",\n                           label: encode(messages.tableBackground),\n                           editor: function(container, options) {\n                               that._initColorPicker($('<input id=\"k-editor-table-bg\" />').appendTo(container), \"bgColor\", tableProperties, tableView);\n                           }\n                       },{\n                           colSpan: 1,\n                           field: \"k-editor-border-width\",\n                           label: encode(messages.borderWidth),\n                           editor: function(container, options) {\n                               that._initNumericTextbox($('<input id=\"k-editor-border-width\" />').appendTo(container), \"borderWidth\", tableProperties, tableView);\n                           }\n                       },{\n                           colSpan: 1,\n                           field: \"k-editor-border-color\",\n                           label: encode(messages.borderColor),\n                           editor: function(container, options) {\n                               that._initColorPicker($('<input id=\"k-editor-border-color\" />').appendTo(container), \"borderColor\", tableProperties, tableView);\n                           }\n                       },{\n                           colSpan: 2,\n                           field: \"k-editor-border-style\",\n                           label: encode(messages.borderStyle),\n                           editor: function(container, options) {\n                               that._initBorderStyleDropDown($('<input id=\"k-editor-border-style\" />').appendTo(container),\n                                   \"borderStyle\",\n                                   tableProperties,\n                                   tableView,\n                                   borderStyles);\n                           }\n                       },{\n                           colSpan: \"full\",\n                           field: \"k-editor-collapse-borders\",\n                           label: \"\",\n                           editor: function(container, options) {\n                               that._initCheckbox($('<input id=\"k-editor-collapse-borders\"/>').appendTo(container), \"collapseBorders\", tableProperties, tableView, { label: encode(messages.collapseBorders) });\n                           }\n                       }]\n                   }\n               ]\n           }).data(\"kendoForm\");\n           form.layoutWrapper.addClass(\"k-gap-x-4\");\n\n           return form;\n       },\n\n       _createCellPropertiesForm: function(dialog, messages) {\n           var that = this;\n           var table = that.options.table;\n           var formElement = dialog.element.find(\"#k-cell-properties\");\n           var components = that.components = that.components || {};\n           var cellView = components.cellView = {};\n           var cellProperties = (table.selectedCells && table.selectedCells[0]) || { borderStyle: \"\", wrapText: true };\n           var form;\n\n           that._addUnit(units, cellProperties.widthUnit);\n           that._addUnit(units, cellProperties.heightUnit);\n           form = formElement.kendoForm({\n               renderButtons: false,\n               layout: \"grid\",\n               grid: {\n                   cols: 4\n               },\n               items: [\n                   {\n                       colSpan: \"full\",\n                       field: \"k-editor-selectAllCells\",\n                       label: \"\",\n                       editor: function(container, options) {\n                           that._initCheckbox($('<input id=\"k-editor-selectAllCells\" />').appendTo(container), \"selectAllCells\", table.tableProperties, cellView, { label: encode(messages.selectAllCells) });\n                       }\n                   },{\n                       colSpan: 1,\n                       field: \"k-editor-cell-width\",\n                       label: encode(messages.width),\n                       hint: encode(messages.applyToColumn),\n                       editor: function(container, options) {\n                           that._initNumericTextbox($('<input id=\"k-editor-cell-width\" />').appendTo(container), \"width\", cellProperties, cellView, { placeholder: encode(messages.auto) });\n                       }\n                   },{\n                       colSpan: 1,\n                       field: \"k-editor-cell-width-type\",\n                       label: {\n                           encoded: false,\n                           text: '&nbsp;'\n                       },\n                       editor: function(container, options) {\n                           that._initDropDownList($(`<input id=\"k-editor-cell-width-type\" aria-label=\"${ messages.units }\" />`).appendTo(container),\n                               \"widthUnit\",\n                               cellProperties,\n                               cellView,\n                               units);\n                       }\n                   },{\n                       colSpan: 1,\n                       field: \"k-editor-cell-height\",\n                       label: encode(messages.height),\n                       hint: encode(messages.applyToRow),\n                       editor: function(container, options) {\n                           that._initNumericTextbox($('<input id=\"k-editor-cell-height\" />').appendTo(container), \"height\", cellProperties, cellView, { placeholder: encode(messages.auto) });\n                       }\n                   },{\n                       colSpan: 1,\n                       field: \"k-editor-cell-height-type\",\n                       label: {\n                           encoded: false,\n                           text: '&nbsp;'\n                       },\n                       editor: function(container, options) {\n                           that._initDropDownList($(`<input id=\"k-editor-cell-height-type\" aria-label=\"${ messages.units }\" />`).appendTo(container),\n                               \"heightUnit\",\n                               cellProperties,\n                               cellView,\n                               units);\n                       }\n                   },{\n                       colSpan: 2,\n                       field: \"k-editor-cell-alignment\",\n                       label: encode(messages.alignment),\n                       editor: function(container, options) {\n                           that._initCellAlignmentDropDown($('<input id=\"k-editor-cell-alignment\" class=\"k-align\" />').appendTo(container), cellProperties);\n                       }\n                   },{\n                       colSpan: 2,\n                       field: \"k-editor-wrap-text\",\n                       label: \"Text control\",\n                       editor: function(container, options) {\n                           that._initTextWrapDropDown($('<input id=\"k-editor-wrap-text\" />').appendTo(container),\n                           cellProperties);\n                       }\n                   },{\n                       colSpan: \"full\",\n                       field: \"k-editor-cell-bg\",\n                       label: encode(messages.background),\n                       editor: function(container, options) {\n                           that._initColorPicker($('<input id=\"k-editor-cell-bg\" />').appendTo(container), \"bgColor\", cellProperties, cellView);\n                       }\n                   },{\n                       colSpan: 2,\n                       field: \"k-editor-table-cell-margin\",\n                       label: encode(messages.cellMargin),\n                       editor: function(container, options) {\n                           that._initNumericTextbox($('<input id=\"k-editor-table-cell-margin\" />').appendTo(container), \"cellMargin\", cellProperties, cellView, { placeholder: encode(messages.auto) });\n                       }\n                   },{\n                       type: \"group\",\n                       label: \"Cell Paddings\",\n                       layout: \"grid\",\n                       colSpan: 4,\n                       grid: {\n                           cols: 4,\n                           gutter: 20\n                       },\n                       items: [\n                           {\n                               colSpan: \"full\",\n                               field: \"k-editor-padding-all-sides\",\n                               label: \"\",\n                               editor: function(container, options) {\n                                   that._initCheckbox($('<input id=\"k-editor-padding-all-sides\" />').appendTo(container), \"independentCellPaddings\", table.tableProperties, cellView,\n                                   {\n                                       checked: true,\n                                       label: encode(messages.independentCellPaddings),\n                                       change: that._onPaddingCheckChange.bind(that)\n                                   });\n                               }\n                           },{\n                               colSpan: 1,\n                               field: \"k-editor-table-cells-padding-top\",\n                               label: encode(messages.topPadding),\n                               editor: function(container, options) {\n                                   that._initNumericTextbox($('<input id=\"k-editor-table-cells-padding-top\" />').appendTo(container), \"topCellPadding\", cellProperties, cellView,\n                                   {\n                                       placeholder: encode(messages.auto),\n                                       change: that._onPaddingTopChange.bind(that)\n                                   });\n                               }\n                           },{\n                               colSpan: 1,\n                               field: \"k-editor-table-cells-padding-right\",\n                               label: encode(messages.rightPadding),\n                               editor: function(container, options) {\n                                   that._initNumericTextbox($('<input id=\"k-editor-table-cells-padding-right\" />').appendTo(container), \"rightCellPadding\", cellProperties, cellView, { placeholder: encode(messages.auto) });\n                               }\n                           },{\n                               colSpan: 1,\n                               field: \"k-editor-table-cells-padding-bottom\",\n                               label: encode(messages.bottomPadding),\n                               editor: function(container, options) {\n                                   that._initNumericTextbox($('<input id=\"k-editor-table-cells-padding-bottom\" />').appendTo(container), \"bottomCellPadding\", cellProperties, cellView, { placeholder: encode(messages.auto) });\n                               }\n                           },{\n                               colSpan: 1,\n                               field: \"k-editor-table-cells-padding-left\",\n                               label: encode(messages.leftPadding),\n                               editor: function(container, options) {\n                                   that._initNumericTextbox($('<input id=\"k-editor-table-cells-padding-left\" />').appendTo(container), \"leftCellPadding\", cellProperties, cellView, { placeholder: encode(messages.auto) });\n                               }\n                           }\n                       ]\n                   },{\n                       type: \"group\",\n                       label: \"Borders\",\n                       layout: \"grid\",\n                       colSpan: 4,\n                       grid: {\n                           cols: 4,\n                           gutter: 10\n                       },\n                       items: [{\n                           colSpan: 1,\n                           field: \"k-editor-cell-border-width\",\n                           label: encode(messages.borderWidth),\n                           editor: function(container, options) {\n                               that._initNumericTextbox($('<input id=\"k-editor-cell-border-width\" />').appendTo(container), \"borderWidth\", cellProperties, cellView, { placeholder: encode(messages.auto) });\n                           }\n                       },{\n                           colSpan: 1,\n                           field: \"k-editor-cell-border-color\",\n                           label: encode(messages.borderColor),\n                           editor: function(container, options) {\n                               that._initColorPicker($('<input id=\"k-editor-cell-border-color\" />').appendTo(container), \"borderColor\", cellProperties, cellView, { placeholder: encode(messages.auto) });\n                           }\n                       },{\n                           colSpan: 2,\n                           field: \"k-editor-cell-border-style\",\n                           label: encode(messages.borderStyle),\n                           editor: function(container, options) {\n                               that._initBorderStyleDropDown($('<input id=\"k-editor-cell-border-style\" />').appendTo(container),\n                                   \"borderStyle\",\n                                   cellProperties,\n                                   cellView,\n                                   borderStyles);\n                           }\n                       }]\n                   },{\n                       colSpan: \"full\",\n                       field: \"k-editor-cell-id\",\n                       label: {\n                           text: encode(messages.id),\n                           optional: true\n                       },\n                       editor: function(container, options) {\n                           that._initInput($('<input id=\"k-editor-cell-id\" />').appendTo(container), \"id\", cellProperties, cellView);\n                       }\n                   },{\n                       colSpan: \"full\",\n                       field: \"k-editor-cell-css-class\",\n                       label: {\n                           text: encode(messages.cssClass),\n                           optional: true\n                       },\n                       editor: function(container, options) {\n                           that._initInput($('<input id=\"k-editor-cell-css-class\" />').appendTo(container), \"className\", cellProperties, cellView);\n                       }\n                   }\n               ]\n           }).data(\"kendoForm\");\n           form.layoutWrapper.addClass(\"k-gap-x-4\");\n\n           return form;\n       },\n\n       _createAccessibilityPropertiesForm: function(dialog, messages) {\n           var that = this;\n           var table = that.options.table;\n           var formElement = dialog.element.find(\"#k-accessibility-properties\");\n           var components = that.components;\n           var accessibilityView = components.accessibilityView = {};\n           var tableProperties = table.tableProperties;\n           var form;\n\n           form = formElement.kendoForm({\n               renderButtons: false,\n               layout: \"grid\",\n               grid: {\n                   cols: 4\n               },\n               items: [\n                   {\n                       colSpan: \"full\",\n                       field: \"k-editor-id\",\n                       label: {\n                           text: encode(messages.id),\n                           optional: true\n                       },\n                       editor: function(container, options) {\n                           that._initInput($('<input id=\"k-editor-id\" />').appendTo(container), \"id\", tableProperties, accessibilityView);\n                       }\n                   },{\n                       colSpan: \"full\",\n                       field: \"k-editor-css-class\",\n                       label: {\n                           text: encode(messages.cssClass),\n                           optional: true\n                       },\n                       editor: function(container, options) {\n                           that._initInput($('<input id=\"k-editor-css-class\" />').appendTo(container), \"className\", tableProperties, accessibilityView);\n                       }\n                   },\n                   {\n                       layout: \"grid\",\n                       grid: {\n                           cols: 4,\n                           gutter: 16\n                       },\n                       colSpan: \"full\",\n                       type: \"group\",\n                       label: \"Accessibility\",\n                       items: [\n                           {\n                               colSpan: 2,\n                               field: \"k-editor-table-caption\",\n                               label: {\n                                   text: encode(messages.caption),\n                                   optional: true\n                               },\n                               editor: function(container, options) {\n                                   that._initInput($('<input id=\"k-editor-table-caption\" />').appendTo(container), \"captionContent\", tableProperties, accessibilityView);\n                               }\n                           },{\n                               colSpan: 2,\n                               field: \"k-editor-accessibility-alignment\",\n                               label: encode(messages.captionAlignment),\n                               editor: function(container, options) {\n                                   that._initAccessibilityAlignmentDropDown($('<input id=\"k-editor-accessibility-alignment\" />').appendTo(container), tableProperties);\n                               }\n                           },{\n                               colSpan: 1,\n                               field: \"k-editor-table-header-rows\",\n                               label: encode(messages.headerRows),\n                               editor: function(container, options) {\n                                   that._initNumericTextbox($('<input id=\"k-editor-table-header-rows\" />').appendTo(container),\n                                   \"headerRows\",\n                                   tableProperties,\n                                   accessibilityView,\n                                   {\n                                       max: tableProperties.rows || DEFAULT_NUMBER_OF_COLS_AND_ROWS\n                                   });\n                               }\n                           },{\n                               colSpan: 1,\n                               field: \"k-editor-table-header-columns\",\n                               label: encode(messages.headerColumns),\n                               editor: function(container, options) {\n                                   that._initNumericTextbox($('<input id=\"k-editor-table-header-columns\" />').appendTo(container),\n                                   \"headerColumns\",\n                                   tableProperties,\n                                   accessibilityView,\n                                   {\n                                       max: tableProperties.columns || DEFAULT_NUMBER_OF_COLS_AND_ROWS\n                                   });\n                               }\n                           },{\n                               colSpan: 2,\n                               field: \"k-editor-cells-headers\",\n                               label: encode(messages.associateCellsWithHeaders),\n                               editor: function(container, options) {\n                                   var element = $(`<select id=\"k-editor-cells-headers\">\n                                    <option value=\"none\">${ messages.associateNone }</option>\n                                    <option value=\"scope\">${ messages.associateScope }</option>\n                                    <option value=\"ids\">${ messages.associateIds }</option>\n                                </select>`).appendTo(container);\n\n                                   that._initAssociationDropDown(element, \"cellsWithHeaders\", { valuePrimitive: true }, tableProperties, accessibilityView);\n                               }\n                           },{\n                               colSpan: \"full\",\n                               field: \"k-editor-accessibility-summary\",\n                               label: {\n                                   text: encode(messages.summary),\n                                   optional: true\n                               },\n                               editor: function(container, options) {\n                                   that._initTextArea($('<textarea id=\"k-editor-accessibility-summary\"></textarea>').appendTo(container), \"summary\", tableProperties, accessibilityView, {\n                                       rows: 5,\n                                       placeholder: messages.tableSummaryPlaceholder\n                                   });\n                               }\n                           }\n                       ]\n                   }\n               ]\n           }).data(\"kendoForm\");\n\n           form.layoutWrapper.addClass(\"k-gap-x-4\");\n\n           return form;\n       }\n   });\n\n   kendo.ui.editor.TableWizardDialog = TableWizardDialog;\n\n   })(window.kendo.jQuery);\n\n   const __meta__ = {\n           id: \"editor\",\n           name: \"Editor\",\n           category: \"web\",\n           description: \"Rich text editor component\",\n           depends: [ \"combobox\", \"dropdownlist\", \"window\", \"colorpicker\", \"toolbar\", \"icons\" ],\n           features: [ {\n               id: \"editor-imagebrowser\",\n               name: \"Image Browser\",\n               description: \"Support for uploading and inserting images\",\n               depends: [ \"imagebrowser\" ]\n           }, {\n               id: \"editor-resizable\",\n               name: \"Resize handle\",\n               description: \"Support for resizing the content area via a resize handle\",\n               depends: [ \"resizable\" ]\n           }, {\n               id: \"editor-tablewizard\",\n               name: \"Table wizard dialog\",\n               description: \"Support for table properties configuration\",\n               depends: [ \"tabstrip\", \"button\", \"numerictextbox\", \"textarea\" ]\n           }, {\n               id: \"editor-pdf-export\",\n               name: \"PDF export\",\n               description: \"Export Editor content as PDF\",\n               depends: [ \"pdf\", \"drawing\" ]\n           },{\n               id: \"editor-ai\",\n               name: \"AI Prompt\",\n               description: \"The AIPrompt component simplifies the incorporation of external AI services into apps.\",\n               depends: [ \"aiprompt\", \"inlineaiprompt\", \"buttongroup\", \"splitter\", \"icons\", \"html.input\"]\n           }]\n       };\n   var kendo$1 = kendo;\n\n   exports.__meta__ = __meta__;\n   exports.default = kendo$1;\n\n   Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n"]}
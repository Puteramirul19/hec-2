{"version":3,"sources":["raw-js/kendo.drawing.js"],"names":["global","factory","exports","module","require","define","amd","globalThis","self","kendo","_globals","Drawing","DrawingCmnChunk","this","kendo_drawing_cmn_chunk_js","window","jQuery","util","deepExtend","LRUCache","H","TextMetrics","F","measureText","m","objectKey","E","hashKey","D","normalizeText","B","encodeBase64","z","$","pdfExtended","J","drawing","extend","e","Segment","S","pdf","geometry","K","exportPDF","group","options","promise","N","convertPromiseToDeferred","exportImage","O","exportSVG","Q","drawText","y","Color","C","dataviz","NS","utils","defined","limitValue","eventCoordinates","outerWidth","_outerWidth","outerHeight","_outerHeight","TOOLTIP_CLOSE_TEMPLATE","ui","icon","SurfaceTooltip","Class","init","surface","element","content","children","_tooltipOptions","popupOptions","appendTo","animation","copyAnchorStyles","collision","_openPopupHandler","_openPopup","bind","_bindEvents","position","showOn","offset","autoHide","hideDelay","showAfter","_showHandler","_showEvent","_surfaceLeaveHandler","_surfaceLeave","_mouseleaveHandler","_mouseleave","_mousemoveHandler","_mousemove","on","_hideClick","_tooltipLeave","getPopup","popup","Popup","destroy","unbind","off","clearTimeout","_timeout","width","height","shared","_tooltipShape","shape","tooltip","parent","_updateContent","target","isFunction","html","_position","elementSize","event","tooltipOffset","_instance","_elementOffset","size","getSize","surfaceOffset","_offset","bbox","left","top","origin","translate","x","coord","center","bottomRight","show","_show","hide","current","_current","_showTimeout","visible","trigger","close","preventDefault","delay","_autoHide","_measure","setTimeout","open","_closeButton","removeClass","remove","addClass","type","originalEvent","css","clone","document","body","visibility","_popupRelatedTarget","wrapper","relatedTarget","closest","length","draw","DrawingSurface","Surface","Widget","support","svg","canvas","fn","call","create","_triggerInstanceHandler","_triggerInstanceEvent","_bindHandler","_enableTracking","name","events","clear","hideTooltip","_tooltip","exportVisual","eventTarget","showTooltip","suspendTracking","resumeTracking","setSize","_size","currentSize","_resize","plugin","drawDOM","template","U","getFontFaces","V","__meta__","id","category","description","depends"],"mappings":"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","file":"kendo.drawing.min.js","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('kendo.drawing.cmn.chunk.js'), require('kendo.color.js'), require('kendo.core.js'), require('kendo.popup.js'), require('kendo.icons.js')) :\n    typeof define === 'function' && define.amd ? define(['exports', 'kendo.drawing.cmn.chunk', 'kendo.color', 'kendo.core', 'kendo.popup', 'kendo.icons'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global.kendo = global.kendo || {}, global.kendo._globals = global.kendo._globals || {}, global.kendo._globals.Drawing = {}), global.kendo._globals.DrawingCmnChunk));\n})(this, (function (exports, kendo_drawing_cmn_chunk_js) {\n    (function($) {\n\n    window.kendo.util = window.kendo.util || {};\n    kendo.deepExtend(kendo.util, {\n        LRUCache: kendo_drawing_cmn_chunk_js.H,\n        TextMetrics: kendo_drawing_cmn_chunk_js.F,\n        measureText: kendo_drawing_cmn_chunk_js.m,\n        objectKey: kendo_drawing_cmn_chunk_js.E,\n        hashKey: kendo_drawing_cmn_chunk_js.D,\n        normalizeText: kendo_drawing_cmn_chunk_js.B,\n        encodeBase64: kendo_drawing_cmn_chunk_js.z\n    });\n\n    })(window.kendo.jQuery);\n\n    (function($) {\n\n    window.kendo = window.kendo || {};\n    let pdfExtended = kendo.deepExtend({}, kendo_drawing_cmn_chunk_js.J);\n    kendo.deepExtend(kendo, {\n        drawing: $.extend(true, {}, kendo_drawing_cmn_chunk_js.e, { Segment: kendo_drawing_cmn_chunk_js.S, pdf: pdfExtended }),\n        pdf: pdfExtended,\n        geometry: kendo_drawing_cmn_chunk_js.K\n    });\n\n    kendo.drawing.exportPDF = function(group, options) {\n        let promise = kendo_drawing_cmn_chunk_js.N(group, options);\n        return kendo.convertPromiseToDeferred(promise);\n    };\n\n    kendo.drawing.exportImage = function(group, options) {\n        let promise = kendo_drawing_cmn_chunk_js.O(group, options);\n        return kendo.convertPromiseToDeferred(promise);\n    };\n\n    kendo.drawing.exportSVG = function(group, options) {\n        let promise = kendo_drawing_cmn_chunk_js.Q(group, options);\n        return kendo.convertPromiseToDeferred(promise);\n    };\n\n    kendo.drawing.drawText = kendo_drawing_cmn_chunk_js.y;\n    kendo.drawing.Color = kendo_drawing_cmn_chunk_js.C;\n    kendo.dataviz.drawing = kendo.drawing;\n    kendo.dataviz.geometry = kendo_drawing_cmn_chunk_js.K;\n\n    })(window.kendo.jQuery);\n\n    (function($) {\n\n        var NS = \".kendo\";\n        var kendo = window.kendo;\n        var deepExtend = kendo.deepExtend;\n        var utils = kendo.drawing.util;\n        var defined = utils.defined;\n        var limitValue = utils.limitValue;\n        var eventCoordinates = utils.eventCoordinates;\n        var outerWidth = kendo._outerWidth;\n        var outerHeight = kendo._outerHeight;\n\n        var TOOLTIP_TEMPLATE = '<div class=\"k-tooltip\">' +\n                '<div class=\"k-tooltip-content\"></div>' +\n            '</div>';\n        var TOOLTIP_CLOSE_TEMPLATE = `<div class=\"k-tooltip-button\">${kendo.ui.icon($('<a href=\"#\" title=\"Close\"></a>'), { icon: \"x\" })}</div>`;\n\n        var SurfaceTooltip = kendo.Class.extend({\n            init: function(surface, options) {\n                this.element = $(TOOLTIP_TEMPLATE);\n                this.content = this.element.children(\".k-tooltip-content\");\n\n                options = options || {};\n\n                this.options = deepExtend({}, this.options, this._tooltipOptions(options));\n                this.popupOptions = {\n                    appendTo: options.appendTo,\n                    animation: options.animation,\n                    copyAnchorStyles: false,\n                    collision: \"fit fit\"\n                };\n\n                this._openPopupHandler = this._openPopup.bind(this);\n\n                this.surface = surface;\n                this._bindEvents();\n            },\n\n            options: {\n                position: \"top\",\n                showOn: \"mouseenter\",\n                offset: 7,\n                autoHide: true,\n                hideDelay: 0,\n                showAfter: 100\n            },\n\n            _bindEvents: function() {\n                this._showHandler = this._showEvent.bind(this);\n                this._surfaceLeaveHandler = this._surfaceLeave.bind(this);\n                this._mouseleaveHandler = this._mouseleave.bind(this);\n                this._mousemoveHandler = this._mousemove.bind(this);\n\n                this.surface.bind(\"click\", this._showHandler);\n                this.surface.bind(\"mouseenter\", this._showHandler);\n                this.surface.bind(\"mouseleave\", this._mouseleaveHandler);\n                this.surface.bind(\"mousemove\", this._mousemoveHandler);\n\n                this.surface.element.on(\"mouseleave\" + NS, this._surfaceLeaveHandler);\n\n                this.element.on(\"click\" + NS, \".k-tooltip-button\", this._hideClick.bind(this));\n                this.element.on(\"mouseleave\" + NS, this._tooltipLeave.bind(this));\n            },\n\n            getPopup: function() {\n                if (!this.popup) {\n                    this.popup = new kendo.ui.Popup(this.element, this.popupOptions);\n                }\n\n                return this.popup;\n            },\n\n            destroy: function() {\n                var popup = this.popup;\n\n                this.surface.unbind(\"click\", this._showHandler);\n                this.surface.unbind(\"mouseenter\", this._showHandler);\n                this.surface.unbind(\"mouseleave\", this._mouseleaveHandler);\n                this.surface.unbind(\"mousemove\", this._mousemoveHandler);\n\n                this.surface.element.off(\"mouseleave\" + NS, this._surfaceLeaveHandler);\n                this.element.off(\"click\" + NS);\n                this.element.off(\"mouseleave\" + NS);\n\n                if (popup) {\n                    popup.destroy();\n                    delete this.popup;\n                }\n                delete this.popupOptions;\n\n                clearTimeout(this._timeout);\n\n                delete this.element;\n                delete this.content;\n                delete this.surface;\n            },\n\n            _tooltipOptions: function(options) {\n                options = options || {};\n                return {\n                    position: options.position,\n                    showOn: options.showOn,\n                    offset: options.offset,\n                    autoHide: options.autoHide,\n                    width: options.width,\n                    height: options.height,\n                    content: options.content,\n                    shared: options.shared,\n                    hideDelay: options.hideDelay,\n                    showAfter: options.showAfter\n                };\n            },\n\n            _tooltipShape: function(shape) {\n                while (shape && !shape.options.tooltip) {\n                    shape = shape.parent;\n                }\n                return shape;\n            },\n\n            _updateContent: function(target, shape, options) {\n                var content = options.content;\n                if (kendo.isFunction(content)) {\n                    content = content({\n                        element: shape,\n                        target: target\n                    });\n                }\n\n                if (content) {\n                    this.content.html(content);\n                    return true;\n                }\n            },\n\n            _position: function(shape, options, elementSize, event) {\n                var position = options.position;\n                var tooltipOffset = options.offset || 0;\n                var surface = this.surface;\n                var offset = surface._instance._elementOffset();\n                var size = surface.getSize();\n                var surfaceOffset = surface._instance._offset;\n                var bbox = shape.bbox();\n                var width = elementSize.width;\n                var height = elementSize.height;\n                var left = 0, top = 0;\n\n                bbox.origin.translate(offset.left, offset.top);\n                if (surfaceOffset) {\n                    bbox.origin.translate(-surfaceOffset.x, -surfaceOffset.y);\n                }\n\n                if (position == \"cursor\" && event) {\n                    var coord = eventCoordinates(event);\n                    left = coord.x - width / 2;\n                    top = coord.y - height - tooltipOffset;\n                } else if (position == \"left\") {\n                    left = bbox.origin.x - width - tooltipOffset;\n                    top = bbox.center().y - height / 2;\n                } else if (position == \"right\") {\n                    left = bbox.bottomRight().x + tooltipOffset;\n                    top = bbox.center().y - height / 2;\n                } else if (position == \"bottom\") {\n                    left = bbox.center().x - width / 2;\n                    top = bbox.bottomRight().y + tooltipOffset;\n                } else {\n                    left = bbox.center().x - width / 2;\n                    top = bbox.origin.y - height - tooltipOffset;\n                }\n\n                return {\n                    left: limitValue(left, offset.left, offset.left + size.width),\n                    top: limitValue(top, offset.top, offset.top + size.height)\n                };\n            },\n\n            show: function(shape, options) {\n                this._show(shape, shape, deepExtend({}, this.options, this._tooltipOptions(shape.options.tooltip), options));\n            },\n\n            hide: function() {\n                var popup = this.popup;\n                var current = this._current;\n\n                delete this._current;\n                clearTimeout(this._showTimeout);\n                if (popup && popup.visible() && current &&\n                    !this.surface.trigger(\"tooltipClose\", { element: current.shape, target: current.target, popup: popup })) {\n                    popup.close();\n                }\n            },\n\n            _hideClick: function(e) {\n                e.preventDefault();\n                this.hide();\n            },\n\n            _show: function(target, shape, options, event, delay) {\n                var current = this._current;\n\n                clearTimeout(this._timeout);\n\n                if (current && ((current.shape === shape && options.shared) || current.target === target)) {\n                    return;\n                }\n\n                clearTimeout(this._showTimeout);\n\n                var popup = this.getPopup();\n\n                if (!this.surface.trigger(\"tooltipOpen\", { element: shape, target: target, popup: popup }) &&\n                    this._updateContent(target, shape, options)) {\n\n                    this._autoHide(options);\n                    var elementSize = this._measure(options);\n\n                    if (popup.visible()) {\n                        popup.close(true);\n                    }\n\n                    this._current = {\n                        options: options,\n                        elementSize: elementSize,\n                        shape: shape,\n                        target: target,\n                        position: this._position(options.shared ? shape : target, options, elementSize, event)\n                    };\n\n                    if (delay) {\n                        this._showTimeout = setTimeout(this._openPopupHandler, options.showAfter || 0);\n                    } else {\n                        this._openPopup();\n                    }\n                }\n            },\n\n            _openPopup: function() {\n                var current = this._current;\n                var position = current.position;\n\n                this.getPopup().open(position.left, position.top);\n            },\n\n            _autoHide: function(options) {\n                if (options.autoHide && this._closeButton) {\n                    this.element.removeClass(\"k-tooltip-closable\");\n                    this._closeButton.remove();\n                    delete this._closeButton;\n                }\n\n                if (!options.autoHide && !this._closeButton) {\n                    this.element.addClass(\"k-tooltip-closable\");\n                    this._closeButton = $(TOOLTIP_CLOSE_TEMPLATE).appendTo(this.element);\n                }\n            },\n\n            _showEvent: function(e) {\n                var shape = this._tooltipShape(e.element);\n\n                if (shape) {\n                    var options = deepExtend({}, this.options, this._tooltipOptions(shape.options.tooltip));\n\n                    if (options && options.showOn == e.type) {\n                        this._show(e.element, shape, options, e.originalEvent, true);\n                    }\n                }\n            },\n\n            _measure: function(options) {\n                this.element.css({\n                    width: defined(options.width) ? options.width : 'auto',\n                    height: defined(options.height) ? options.height : 'auto'\n                });\n\n                const clone = this.element.clone().appendTo(document.body).css({ visibility: 'hidden' });\n                const width = outerWidth(clone);\n                const height = outerHeight(clone);\n                clone.remove();\n\n                this.element.css({\n                    width: width,\n                    height: height\n                });\n\n                return {\n                    width: width,\n                    height: height\n                };\n            },\n\n            _mouseleave: function(e) {\n                if (this.popup && !this._popupRelatedTarget(e.originalEvent)) {\n                    var tooltip = this;\n                    var current = tooltip._current;\n\n                    if (current && current.options.autoHide) {\n                        tooltip._timeout = setTimeout(function() {\n                            clearTimeout(tooltip._showTimeout);\n                            tooltip.hide();\n                        }, current.options.hideDelay || 0);\n                    }\n                }\n            },\n\n            _mousemove: function(e) {\n                var current = this._current;\n                if (current && e.element) {\n                    var options = current.options;\n                    if (options.position == \"cursor\") {\n                        var position = this._position(e.element, options, current.elementSize, e.originalEvent);\n                        current.position = position;\n                        this.getPopup().wrapper.css({ left: position.left, top: position.top });\n                    }\n                }\n            },\n\n            _surfaceLeave: function(e) {\n                if (this.popup && !this._popupRelatedTarget(e)) {\n                    clearTimeout(this._showTimeout);\n                    this.hide();\n                }\n            },\n\n            _popupRelatedTarget: function(e) {\n                return e.relatedTarget && $(e.relatedTarget).closest(this.popup.wrapper).length;\n            },\n\n            _tooltipLeave: function() {\n                var tooltip = this;\n                var current = tooltip._current;\n                if (current && current.options.autoHide) {\n                    tooltip._timeout = setTimeout(function() {\n                        tooltip.hide();\n                    }, current.options.hideDelay || 0);\n                }\n            }\n        });\n\n        kendo.drawing.SurfaceTooltip = SurfaceTooltip;\n        kendo.dataviz.drawing.SurfaceTooltip = SurfaceTooltip;\n\n    })(window.kendo.jQuery);\n\n    (function($) {\n\n        var kendo = window.kendo;\n        var draw = kendo.drawing;\n        var DrawingSurface = draw.Surface;\n        var Widget = kendo.ui.Widget;\n        var deepExtend = kendo.deepExtend;\n\n        kendo.support.svg = DrawingSurface.support.svg;\n        kendo.support.canvas = DrawingSurface.support.canvas;\n\n        var Surface = Widget.extend({\n            init: function(element, options) {\n                Widget.fn.init.call(this, element, {});\n\n                this.options = deepExtend({}, this.options, options);\n\n                this._instance = DrawingSurface.create(this.element[0], options);\n                if (this._instance.translate) {\n                    this.translate = translate;\n                }\n\n                this._triggerInstanceHandler = this._triggerInstanceEvent.bind(this);\n                this._bindHandler(\"click\");\n                this._bindHandler(\"mouseenter\");\n                this._bindHandler(\"mouseleave\");\n                this._bindHandler(\"mousemove\");\n\n                this._enableTracking();\n            },\n\n            options: {\n                name: \"Surface\",\n                tooltip: {}\n            },\n\n            events: [\n                \"click\",\n                \"mouseenter\",\n                \"mouseleave\",\n                \"mousemove\",\n                \"resize\",\n                \"tooltipOpen\",\n                \"tooltipClose\"\n            ],\n\n            _triggerInstanceEvent: function(e) {\n                this.trigger(e.type, e);\n            },\n\n            _bindHandler: function(event) {\n                this._instance.bind(event, this._triggerInstanceHandler);\n            },\n\n            draw: function(element) {\n                this._instance.draw(element);\n            },\n\n            clear: function() {\n                if (this._instance) {\n                    this._instance.clear();\n                }\n                this.hideTooltip();\n            },\n\n            destroy: function() {\n                if (this._instance) {\n                    this._instance.destroy();\n                    delete this._instance;\n                }\n\n                if (this._tooltip) {\n                    this._tooltip.destroy();\n                    delete this._tooltip;\n                }\n\n                Widget.fn.destroy.call(this);\n            },\n\n            exportVisual: function() {\n                return this._instance.exportVisual();\n            },\n\n            eventTarget: function(e) {\n                return this._instance.eventTarget(e);\n            },\n\n            showTooltip: function(shape, options) {\n                if (this._tooltip) {\n                    this._tooltip.show(shape, options);\n                }\n            },\n\n            hideTooltip: function() {\n                if (this._tooltip) {\n                    this._tooltip.hide();\n                }\n            },\n\n            suspendTracking: function() {\n                this._instance.suspendTracking();\n                this.hideTooltip();\n            },\n\n            resumeTracking: function() {\n                this._instance.resumeTracking();\n            },\n\n            getSize: function() {\n                return {\n                    width: this.element.width(),\n                    height: this.element.height()\n                };\n            },\n\n            setSize: function(size) {\n                this.element.css({\n                    width: size.width,\n                    height: size.height\n                });\n\n                this._size = size;\n                this._instance.currentSize(size);\n                this._resize();\n            },\n\n            _resize: function() {\n                this._instance.currentSize(this._size);\n                this._instance._resize();\n            },\n\n            _enableTracking: function() {\n                if (kendo.ui.Popup) {\n                    this._tooltip = new draw.SurfaceTooltip(this, this.options.tooltip || {});\n                }\n            }\n        });\n\n        kendo.ui.plugin(Surface);\n\n        Surface.create = function(element, options) {\n            return new Surface(element, options);\n        };\n\n        kendo.drawing.Surface = Surface;\n\n        function translate(offset) {\n            this._instance.translate(offset);\n        }\n\n    })(window.kendo.jQuery);\n\n    window.kendo.drawing = window.kendo.drawing || {};\n\n    (function($) {\n\n        var kendo = window.kendo;\n        var drawing = kendo.drawing;\n\n        drawing.drawDOM = function(element, options) {\n            if (typeof options?.template === \"string\") {\n                options.template = kendo.template(options.template);\n            }\n\n            let promise = kendo_drawing_cmn_chunk_js.U($(element)[0], options);\n            return kendo.convertPromiseToDeferred(promise);\n        };\n\n        // Aliases used by spreadsheet/print.js\n        drawing.drawDOM.drawText = kendo_drawing_cmn_chunk_js.y;\n        drawing.drawDOM.getFontFaces = kendo_drawing_cmn_chunk_js.V;\n\n    })(window.kendo.jQuery);\n\n    const __meta__ = {\n            id: \"drawing\",\n            name: \"Drawing API\",\n            category: \"framework\",\n            description: \"The Kendo UI low-level drawing API\",\n            depends: [\"core\", \"color\", \"popup\", \"icons\", \"drawing.cmn.chunk\"]\n        };\n\n    exports.__meta__ = __meta__;\n\n}));\n"]}
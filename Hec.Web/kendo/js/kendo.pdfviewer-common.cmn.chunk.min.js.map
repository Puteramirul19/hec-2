{"version":3,"sources":["raw-js/kendo.pdfviewer-common.cmn.chunk.js"],"names":["global","factory","exports","module","require","define","amd","globalThis","self","kendo","_globals","PdfviewerCommonCmnChunk","DraggableCmnChunk","FileSaverCmnChunk","CommonCmnChunk","PdfjsLoader","this","kendo_draggable_cmn_chunk_js","kendo_fileSaver_cmn_chunk_js","kendo_common_cmn_chunk_js","kendo_pdfjs_loader_js","extend","args","Object","assign","isObject","value","Array","isArray","deepExtend","target","sources","length","source","shift","key","Component","HTMLElement","window","DotNet","DotNetObject","buffer","ArrayBuffer","getPrototypeOf","prototype","isString","toArray","from","hasValue","isDefined","isNotNull","noop","convertToHtml","htmlString","ownerDocument","template","document","createElement","innerHTML","trim","content","childNodes","firstChild","toClassSelector$1","className","startsWith","createPromise","resolveFn","rejectFn","promise","Promise","resolve","reject","constructor","element","options","events","destroy","extendOptions","setOptions","trigger","eventName","eventData","defaultPrevented","preventDefault","sender","throttle","func","wait","timeout","context","result","previous","later","leading","Date","getTime","undefined","apply","now","remaining","arguments","clearTimeout","trailing","setTimeout","FRAMES_PER_SECOND$1","SCROLL$1","Scroller","super","filter","panScrollThrottleDelay","scrollDirectionModifier","scrollThrottleDelay","onElementScroll","e","shouldTrackScrollEvents","state","trackNextElementScroll","scrollTo","scrollLeft","scrollTop","originalEvent","onDragStart","dragStarted","shouldTrackPanEvents","selector","closest","matchesElementSelector","setState","location","pageX","pageY","locationDelta","x","y","onDrag","calculateEventLocationDelta","directionModifier","onDragEnd","resetState","bindEvents","unbindEvents","initDraggable","destroyDraggable","throttledOnDrag","draggable","D","mouseOnly","press","drag","release","bindTo","cancel","bindDraggableEvents","bindElementScroll","throttledOnElementScroll","addEventListener","unbindElementScroll","unbindDraggableEvents","removeEventListener","newState","trackPanEvents","trackScrollEvents","enablePanEventsTracking","disablePanEventsTracking","enableScrollEventsTracking","disableScrollEventsTracking","trackScrollEvent","unwrapElement","parentElement","replaceWith","addClass$1","classList","add","toClassSelector","CHAR_INDEX_DATA_ATTR","MATCH_INDEX_DATA_ATTR","SearchService","highlightClass","highlightMarkClass","charClass","textContainers","clearSearch","text","textNodes","charIndex","activeMatchIndex","matches","escapeRegExp","replace","search","matchCase","escapedText","searchRegex","RegExp","match","shouldTransformText","transformTextForSearch","removeIndicators","exec","push","startOffset","index","endOffset","highlightAllMatches","addActiveMatchMark","restoreOriginalText","forEachTextContainer","textContainer","querySelectorAll","forEach","node","nodeTextContent","textContent","childNode","removeChild","textNode","createTextNode","appendChild","extractTextNodes","transformTextNodesForSearch","nodeType","Node","TEXT_NODE","i","transformTextNodeForSearch","span","wrapper","parentNode","insertBefore","splitTextByChars","textElement","splittedTextElements","setAttribute","callback","matchIndex","addMatchHighlight","matchStartOffset","matchEndOffset","highlight","removeMatchHighlights","remove","removeAttribute","removeActiveMatchMark","mark","wrapInnerElement","cloneNode","elements","unwrapElements","flatMap","markNextMatch","markNextMatchIndex","markPreviousMatch","markPreviousMatchIndex","moveActiveMatchIndex","delta","Math","max","getActiveMatchElement","markedMatch","querySelector","MAX_CANVAS_AREA_CHROME_SAFARI","scale","renderScale","test","navigator","userAgent","maxTouchPoints","devicePixelRatio","parsePdfFromBase64String","base64String","atob","name","styles","keys","style","scrollToPage","rootElement","pageNumber","pages","page","HTMLDivElement","top","offsetHeight","offsetTop","min","scrollElement","behavior","currentPage","floor","round","adjustCanvasSize","targetWidth","targetHeight","maxWidth","maxHeight","maxArea","desktopBrowser","d","mobileOS","a","mozilla","browser","isFirefox","safari","adjustedWidth","adjustedHeight","ratio","deltaHeight","adjustedArea","areaRatio","sqrt","adjustRatio","__awaiter","thisArg","_arguments","P","generator","fulfilled","step","next","rejected","done","then","create","__classPrivateFieldGet","receiver","kind","f","TypeError","has","call","get","__classPrivateFieldSet","set","SuppressedError","addClass","removeClass","clamp","LINE_FACTOR","AnnotationMode","AnnotationEditorPrefix","AnnotationEditorType","AnnotationType","AnnotationBorderStyleType","shadow","obj","prop","nonSerializable","defineProperty","enumerable","configurable","writable","hexNumbers","n","toString","padStart","Util","makeHexColor","r","g","b","normalizeRect","rect","slice","AnnotationPrefix","_IdManager_id","_CommandManager_commands","_CommandManager_locked","_CommandManager_maxSize","_CommandManager_position","_AnnotationEditorUIManager_instances","_AnnotationEditorUIManager_abortController","_AnnotationEditorUIManager_activeEditor","_AnnotationEditorUIManager_allEditors","_AnnotationEditorUIManager_allLayers","_AnnotationEditorUIManager_annotationStorage","_AnnotationEditorUIManager_changedExistingAnnotations","_AnnotationEditorUIManager_commandManager","_AnnotationEditorUIManager_currentPageIndex","_AnnotationEditorUIManager_deletedAnnotationsElementIds","_AnnotationEditorUIManager_draggingEditors","_AnnotationEditorUIManager_editorTypes","_AnnotationEditorUIManager_editorsToRescale","_AnnotationEditorUIManager_enableHighlightFloatingButton","_AnnotationEditorUIManager_focusMainContainerTimeoutId","_AnnotationEditorUIManager_focusManagerAC","_AnnotationEditorUIManager_highlightColors","_AnnotationEditorUIManager_highlightWhenShiftUp","_AnnotationEditorUIManager_highlightToolbar","_AnnotationEditorUIManager_idManager","_AnnotationEditorUIManager_isEnabled","_AnnotationEditorUIManager_isWaiting","_AnnotationEditorUIManager_lastActiveElement","_AnnotationEditorUIManager_mode","_AnnotationEditorUIManager_selectedEditors","_AnnotationEditorUIManager_selectedTextNode","_AnnotationEditorUIManager_showAllStates","_AnnotationEditorUIManager_previousStates","_AnnotationEditorUIManager_translation","_AnnotationEditorUIManager_translationTimeoutId","_AnnotationEditorUIManager_container","_AnnotationEditorUIManager_viewer","_AnnotationEditorUIManager_getAnchorElementForSelection","_AnnotationEditorUIManager_getLayerForTextLayer","_AnnotationEditorUIManager_displayHighlightToolbar","_AnnotationEditorUIManager_selectionChange","_AnnotationEditorUIManager_onSelectEnd","_AnnotationEditorUIManager_addSelectionListener","_AnnotationEditorUIManager_addFocusManager","_AnnotationEditorUIManager_removeFocusManager","_AnnotationEditorUIManager_addKeyboardManager","_AnnotationEditorUIManager_removeKeyboardManager","_AnnotationEditorUIManager_addCopyPasteListeners","_AnnotationEditorUIManager_removeCopyPasteListeners","_AnnotationEditorUIManager_addDragAndDropListeners","_AnnotationEditorUIManager_dispatchUpdateStates","_AnnotationEditorUIManager_dispatchUpdateUI","_AnnotationEditorUIManager_enableAll","_AnnotationEditorUIManager_disableAll","_AnnotationEditorUIManager_addEditorToLayer","_AnnotationEditorUIManager_lastSelectedEditor_get","_AnnotationEditorUIManager_isEmpty","_AnnotationEditorUIManager_selectEditors","_EventBus_listeners","IdManager","idPrefix","id","_a","_b","WeakMap","CommandManager","maxSize","cmd","undo","post","mustExec","type","NaN","overwriteIfSameType","keepUndo","save","splice","redo","hasSomethingToUndo","hasSomethingToRedo","AnnotationEditorUIManager","container","viewer","pdfViewer","eventBus","pdfDocument","highlightColors","annotationEditorMode","NONE","viewParameters","isShiftKeyDown","_eventBus","AbortController","Map","Set","isEditing","isEmpty","hasSelectedEditor","hasSelectedText","signal","_signal","_on","onEditingAction","bind","onPageChanging","onScaleChanging","onRotationChanging","onSetPreference","onNamedAction","annotationStorage","realScale","PixelsPerInch","PDF_TO_CSS_UNITS","rotation","abort","layer","values","clear","getTextLayerForAnchor","anchorElement","combinedSignal","abortSignal","AbortSignal","any","direction","getComputedStyle","highlightColorNames","reverse","switchToMode","mode","on","once","dispatch","setPreference","event","action","triggerPrinting","downloadOrSave","focusMainContainer","focus","findParent","layerX","layerY","width","height","div","getBoundingClientRect","printFile","downloadFile","fileName","downloadFileName","disableUserSelect","toggle","addShouldRescale","editor","removeShouldRescale","delete","commitOrRemove","pagesRotation","highlightSelection","methodOfCreation","selection","getSelection","isCollapsed","anchorNode","anchorOffset","focusNode","focusOffset","textLayer","boxes","getSelectionBoxes","empty","isNoneMode","createAndAddNewEditor","showAllEditors","HIGHLIGHT","showEditorToolBar","anchor","getMode","FREETEXT","hideEditorToolBar","addToAnnotationStorage","setValue","blur","hasSelection","activeElement","contains","_focusEventsAllowed","lastEditor","lastActiveElement","addEditListeners","removeEditListeners","dragOver","dataTransfer","items","editorType","isHandlingMimeForPasting","dropEffect","drop","item","paste","currentLayer","copy","editors","serialized","serialize","clipboardData","setData","JSON","stringify","cut","data","getData","parse","ex","unselectAll","newEditors","deserializedEditor","deserialize","addCommands","setEditingState","registerEditorTypes","types","defaultPropertiesToUpdate","getId","getLayer","pageIndex","currentPageIndex","addLayer","enable","disable","removeLayer","updateMode","editId","isFromKeyboard","annotationElementId","setSelected","enterInEditMode","addNewEditorFromKeyboard","canCreateNewEmptyEditor","addNewEditor","updateToolbar","updateParams","AnnotationEditorParamsType","CREATE","HIGHLIGHT_DEFAULT_COLOR","HIGHLIGHT_SHOW_ALL","updateDefaultParams","visible","show","enableWaiting","mustWait","disableClick","enableClick","getEditors","getEditor","addEditor","removeEditor","unselect","addDeletedAnnotationElement","addChangedExistingAnnotation","deleted","isDeletedAnnotationElement","removeDeletedAnnotationElement","removeChangedExistingAnnotation","setActiveEditor","propertiesToUpdate","updateUI","toggleSelected","select","selectedEditor","isSelected","firstSelectedEditor","size","isEnterHandled","params","hasSomethingToControl","selectAll","commit","translateSelectedEditors","noCommit","totalX","totalY","translateInPage","setUpDragSession","savedX","savedY","savedPageIndex","newX","newY","newPageIndex","endDragSession","map","mustBeAddedInUndoStack","move","parent","_setParentAndPosition","dragSelectedEditors","tx","ty","rebuild","changeParent","addOrRebuild","isActive","getActive","getActiveEditor","ii","rangeCount","getRangeAt","commonAncestorContainer","parentWidth","parentHeight","rotator","getAttribute","w","h","range","collapsed","getClientRects","renderAnnotationElement","annotation","editorId","getRawValue","hasBeenModified","WeakSet","hasTextLayer","hide","activeLayer","toggleDrawing","abortController","pointerup","button","details","entries","some","HIGHLIGHT_FREE","ed","TRANSLATE_SMALL","TRANSLATE_BIG","EventBus","getListeners","listener","external","off","_off","eventListeners","externalListeners","rmAbort","aborted","onAbort","evt","RenderingStates","PresentationModeState","TextLayerMode","ScrollMode","binarySearchFirstItem","condition","start","minIndex","maxIndex","currentIndex","_TextAccessibilityManager_instances","_a$8","_TextAccessibilityManager_enabled","_TextAccessibilityManager_textChildren","_TextAccessibilityManager_textNodes","_TextAccessibilityManager_waitingElements","_TextAccessibilityManager_compareElementPositions","_TextAccessibilityManager_addIdToAriaOwns","_TextLayerBuilder_instances","_a$7","_TextLayerBuilder_onAppend","_TextLayerBuilder_textLayer","_TextLayerBuilder_textLayers","_TextLayerBuilder_selectionChangeAbortController","_TextLayerBuilder_bindMouse","_TextLayerBuilder_removeGlobalSelectionListener","_TextLayerBuilder_enableGlobalSelectionListener","_AnnotationEditor_instances","_a$6","_AnnotationEditor_x","_AnnotationEditor_y","_AnnotationEditor_disabled","_AnnotationEditor_keepAspectRatio","_AnnotationEditor_focusAC","_AnnotationEditor_hasBeenClicked","_AnnotationEditor_initialPosition","_AnnotationEditor_isEditing","_AnnotationEditor_isInEditMode","_AnnotationEditor_moveInDOMTimeout","_AnnotationEditor_prevDragX","_AnnotationEditor_prevDragY","_AnnotationEditor_isDraggable","_AnnotationEditor_zIndex","_AnnotationEditor_translate","_AnnotationEditor_rotatePoint","_AnnotationEditor_selectOnPointerEvent","_AnnotationEditor_setUpDragSession","_AnnotationEditor_addFocusListeners","_AnnotationEditor_stopResizing","TextAccessibilityManager","setTextMapping","textDivs","Error","sort","textChildren","nodeIndex","getElementById","isRemovable","addPointerInTextLayer","removePointerInTextLayer","children","owns","includes","split","join","console","warn","child","moveElementInDOM","contentElement","hasChildNodes","append","elementToCompare","before","after","e1","e2","rect1","rect2","top1","bot1","mid1","top2","bot2","mid2","TextLayerBuilder","pdfPage","accessibilityManager","onAppend","tabIndex","render","viewport_1","viewport","textContentParams","_c","_d","update","onBefore","TextLayer","textContentSource","streamTextContent","includeMarkedContent","disableNormalization","markedContentElements","endOfContent","hidden","cleanup","makeColorComp","scaleAndClamp","end","textLayerDiv","ColorConverters","CMYK_G","c","m","k","G_CMYK","G_RGB","G_rgb","G_HTML","G","RGB_G","RGB_rgb","color","RGB_HTML","T_HTML","T_rgb","CMYK_RGB","CMYK_rgb","CMYK_HTML","components","rgb","RGB_CMYK","getRGB","colorRGB","parseInt","ColorManager","_colors","_colorsMapping","colors","visibility","body","computedColor","getColorValues","convert","matchMedia","RGB","every","getHexCode","names","AnnotationEditor","parameters","_willKeepAspectRatio","_structTreeParentId","pageRotation","pageDimensions","pageTranslation","isAttachedToDOM","_editToolbar","_initialOptions","_isVisible","_uiManager","_l10nPromise","_zIndex","idManager","uiManager","isCentered","rawDims","pageWidth","pageHeight","parentDimensions","_type","_defaultLineColor","_colorManager","deleteAnnotationElement","fakeEditor","FakeEditor","getNextId","initialize","l10n","_value","mime","_isDraggable","center","parentRotation","fixAndSetPosition","setInBackground","zIndex","setInForeground","setParent","focusin","focusout","relatedTarget","isMultipleSelection","setAt","screenToPageTranslation","translate","scrollIntoView","block","xValue","yValue","findNewParent","bx","by","getBaseTranslation","left","toFixed","_hasBeenMoved","_borderLineWidth","_mustFixPosition","moveInDOM","pageTranslationToScreen","parentScale","scaledWidth","scaledHeight","FeatureTest","isCSSRoundSupported","setDims","fixDims","getInitialTranslation","addEditToolbar","removeEditToolbar","getClientDimensions","pointerdown","isMac","platform","ctrlKey","moveEditorInDOM","getRect","shiftX","shiftY","getRectInCurrentCoords","x1","y1","x2","y2","onceAdded","enableEditMode","disableEditMode","isInEditMode","needsToBeRebuilt","rotate","angle","_isForCopying","_context","isResizable","makeResizable","toolbarPosition","_stopResizingWithKeyboard","preventScroll","disableEditing","enableEditing","getImageForAltText","contentDiv","setAspectRatio","aspectRatio","MIN_SIZE","telemetryInitialData","telemetryFinalData","_reportTelemetry","nodeName","canvas","prepend","resetAnnotationElement","highlightEditor","freeTextEditor","shiftKey","metaKey","ac","clientX","clientY","pointerMoveCallback","passive","capture","pointerUpCallback","_telemetryTimeout","SEED","MASK_HIGH","MASK_LOW","MurmurHash3_64","seed","h1","h2","input","Uint8Array","code","charCodeAt","isView","byteLength","blockCounts","tailLength","dataUint32","Uint32Array","k1","k2","C1","C2","C1_LOW","C2_LOW","hexdigest","_AnnotationStorage_instances","_AnnotationStorage_modified","_AnnotationStorage_modifiedIds","_AnnotationStorage_storage","_AnnotationStorage_setModified","_PrintAnnotationStorage_serializable","SerializableEmpty","freeze","hash","transfer","AnnotationStorage","onSetModified","onResetModified","onAnnotationEditor","getStorage","getModified","getValue","defaultValue","resetModified","modified","entry","val","getAll","objectFromMap","setAll","print","PrintAnnotationStorage","serializable","hasBitmap","bitmap","editorStats","stats","typeToEditor","counters","count","computeTelemetryFinalData","resetModifiedIds","modifiedIds","ids","clone","structuredClone","_AnnotationElement_instances","_AnnotationElement_updates","_AnnotationElement_hasBorder","_AnnotationElement_popupElement","_AnnotationElement_setRectEdited","_LinkAnnotationElement_instances","_LinkAnnotationElement_setInternalLink","_LinkAnnotationElement_bindAttachment","_LinkAnnotationElement_bindSetOCGState","_PopupElement_instances","_PopupElement_boundKeyDown","_PopupElement_boundHide","_PopupElement_boundShow","_PopupElement_boundToggle","_PopupElement_color","_PopupElement_container","_PopupElement_contentsObj","_PopupElement_dateObj","_PopupElement_elements","_PopupElement_parent","_PopupElement_parentRect","_PopupElement_pinned","_PopupElement_popup","_PopupElement_position","_PopupElement_rect","_PopupElement_richText","_PopupElement_titleObj","_PopupElement_updates","_PopupElement_wasVisible","_PopupElement_html_get","_PopupElement_fontSize_get","_PopupElement_fontColor_get","_PopupElement_makePopupContent","_PopupElement_keyDown","_PopupElement_setPosition","_PopupElement_toggle","_PopupElement_show","_PopupElement_hide","_AnnotationLayer_instances","_AnnotationLayer_accessibilityManager","_AnnotationLayer_annotationCanvasMap","_AnnotationLayer_editableAnnotations","_AnnotationLayer_appendElement","_AnnotationLayer_setAnnotationCanvasMap","GetElementsByNameSet","getRectDims","AnnotationElementFactory","annotationType","LinkAnnotationElement","fieldType","TextWidgetAnnotationElement","radioButton","RadioButtonWidgetAnnotationElement","checkBox","CheckboxWidgetAnnotationElement","PushButtonWidgetAnnotationElement","ChoiceWidgetAnnotationElement","FreeTextAnnotationElement","HighlightAnnotationElement","AnnotationElement","isRenderable","ignoreBorder","createQuadrilaterals","linkService","downloadManager","imageResourcesPath","renderForms","svgFactory","enableScripting","hasJSActions","_fieldObjects","popup","annotationEditorType","fieldObjects","_createContainer","_createQuadrilaterals","_hasPopupData","titleObj","contentsObj","richText","str","_isEditable","isEditable","hasPopupData","updateEdited","resetEdited","WidgetAnnotationElement","popupRef","alternativeText","title","noRotate","PopupAnnotationElement","rotationValue","hasOwnCanvas","setRotation","borderStyle","borderWidth","horizontalRadius","horizontalCornerRadius","verticalRadius","verticalCornerRadius","radius","borderRadius","borderBottomStyle","borderColor","view","elementWidth","elementHeight","_commonActions","setColor","jsName","styleName","detail","colorType","colorArray","display","noView","noPrint","userName","readonly","disabled","required","_setRequired","bgColor","fillColor","fgColor","textColor","strokeColor","_dispatchEventFromSandbox","actions","jsEvent","commonActions","_setDefaultPropertiesFromJS","storedData","actionName","quadPoints","rectBlX","rectBlY","rectTrX","rectTrY","fround","trX","trY","blX","blY","subarray","svgBuffer","svg","defs","clipPath","rectWidth","rectHeight","backgroundImage","_createPopup","_getElementsByName","skipId","fields","fieldObj","exportValues","exportValue","domElement","getElementsByName","maybeShow","forceHide","getElementsToTriggerPopup","addHighlightArea","triggers","_editOnDoubleClick","isRequired","currentRect","isTooltipOnly","link","isBound","url","addLinkAttributes","newWindow","_bindNamedAction","attachment","attachmentDest","setOCGState","dest","_bindLink","Action","_bindJSAction","resetForm","_bindResetFormAction","destination","href","getDestinationHash","onclick","goToDestination","getAnchorUrl","executeNamedAction","otherClickAction","resetFormFields","refs","resetFormRefs","include","allFields","fieldIds","fieldName","field","storage","allIds","dispatchEvent","Event","description","openOrDownloadData","filename","executeSetOCGState","showElementAndHideCanvas","previousSibling","_getKeyModifier","_setEventListener","elementData","baseName","valueGetter","modifier","focused","_setEventListeners","getter","Blur","Focus","_setBackgroundColor","backgroundColor","_setTextStyle","TEXT_ALIGNMENT","fontColor","defaultAppearanceData","fontSize","computedFontSize","roundToOneDecimal","multiLine","abs","lineHeight","textAlignment","textAlign","hasAppearance","fieldValue","setPropertyOnSiblings","base","keyInStorage","maxLen","charLimit","fieldFormattedValues","formattedValue","comb","replaceAll","userValue","lastCommittedValue","commitKey","doNotScroll","overflowY","overflowX","readOnly","maxLength","defaultFieldValue","blurListener","selRange","setSelectionRange","willCommit","selStart","selectionStart","selEnd","selectionEnd","_blurListener","Keystroke","inputType","substring","change","combWidth","letterSpacing","verticalAlign","checked","checkbox","curChecked","buttonValue","radio","pdfButtonValue","linkElement","lastChild","selectElement","addAnEmptyEntry","combo","multiSelect","multiple","option","selected","optionElement","displayValue","removeEmptyEntry","noneOptionElement","isExport","selectedIndex","selectedValues","getItems","multipleSelection","findIndex","insert","selectChild","indices","editable","changeEx","keyDown","PopupElement","modificationDate","parentRect","open","elementIds","PDFDateString","toDateObject","popupShow","baseColor","outlineColor","CSS","supports","BACKGROUND_ENLIGHT","header","dir","date","toLocaleDateString","time","toLocaleTimeString","html","XfaLayer","xfaHtml","intent","contents","_formatContents","p","lines","line","popupContent","isVisible","attributes","popupLines","lineAttributes","altKey","useParentRect","intersect","normalizedRect","popupLeft","popupTop","textPosition","lineSpan","AnnotationLayer","annotationCanvasMap","annotationEditorUIManager","_annotationEditorUIManager","hasEditableAnnotations","annotations","setLayerDimensions","popupToElements","elementParams","DOMSVGFactory","noHTML","isPopupAnnotation","rendered","getEditableAnnotations","getEditableAnnotation","_AnnotationLayerBuilder_instances","_AnnotationLayerBuilder_onAppend","_AnnotationLayerBuilder_eventAbortController","_AnnotationLayerBuilder_updatePresentationModeState","_DrawLayer_instances","_a$5","_DrawLayer_parent","_DrawLayer_id","_DrawLayer_mapping","_DrawLayer_toUpdate","_DrawLayer_setBox","_DrawLayer_createSVG","_DrawLayer_createClipPath","_DrawLayerBuilder_drawLayer","_FreeTextEditor_instances","_a$4","_FreeTextEditor_color","_FreeTextEditor_content","_FreeTextEditor_editorDivId","_FreeTextEditor_editModeAC","_FreeTextEditor_fontSize","_FreeTextEditor_initialData","_FreeTextEditor_updateFontSize","_FreeTextEditor_updateColor","_FreeTextEditor_extractText","_FreeTextEditor_setEditorDimensions","_FreeTextEditor_getNodeContent","_FreeTextEditor_setContent","_FreeTextEditor_serializeContent","_FreeTextEditor_deserializeContent","_FreeTextEditor_hasElementChanged","AnnotationLayerBuilder","annotationLayer","_annotationCanvasMap","_cancelled","_accessibilityManager","dontFlip","all","getAnnotations","pageView","_pageInfo","pageWidthAnnotationLayer","pageHeightAnnotationLayer","isInPresentationMode","disableFormElements","section","hasAttribute","inert","DrawLayer","root","_svgFactory","outlines","opacity","isPathUpdatable","box","free","path","pathId","toSVGPath","clipPathId","use","highlightOutline","maskId","mask","use1","use2","finalizeLine","updateBox","updateLine","removeFreeHighlight","updatePath","changeColor","changeOpacity","clipPathUse","DrawLayerBuilder","getDrawLayer","EOL_PATTERN","FreeTextEditor","editorDiv","overlayDiv","_defaultColor","_defaultFontSize","strings","documentElement","_internalPadding","parseFloat","getPropertyValue","FREETEXT_SIZE","FREETEXT_COLOR","_translateEmpty","contentEditable","editorDivKeydown","editorDivFocus","editorDivBlur","editorDivInput","editorDivPaste","innerText","savedText","newText","trimEnd","setText","shouldGetKeyboardEvents","dblclick","keydown","baseX","baseY","messages","freeTextEditorPlaceholder","position","posX","posY","normalize","deleteFromDocument","insertNode","collapseToStart","startContainer","bufferBefore","bufferAfter","nodeValue","newRange","Range","beforeLength","reduce","acc","setStart","setEnd","removeAllRanges","addRange","initialData","isForCopying","padding","structTreeParentId","replaceChildren","toJSON","_Outliner_instances","_Outliner_box","_Outliner_verticalEdges","_Outliner_intervals","_Outliner_getOutlines","_Outliner_binarySearch","_Outliner_insert","_Outliner_remove","_Outliner_breakEdge","_HighlightOutline_box","_HighlightOutline_outlines","_FreeOutliner_instances","_a$3","_FreeOutliner_box","_FreeOutliner_bottom","_FreeOutliner_innerMargin","_FreeOutliner_isLTR","_FreeOutliner_top","_FreeOutliner_last","_FreeOutliner_lastX","_FreeOutliner_lastY","_FreeOutliner_min","_FreeOutliner_min_dist","_FreeOutliner_scaleFactor","_FreeOutliner_thickness","_FreeOutliner_points","_FreeOutliner_MIN_DIST","_FreeOutliner_MIN_DIFF","_FreeOutliner_MIN","_FreeOutliner_getLastCoords","_FreeHighlightOutline_instances","_FreeHighlightOutline_box","_FreeHighlightOutline_bbox","_FreeHighlightOutline_innerMargin","_FreeHighlightOutline_isLTR","_FreeHighlightOutline_points","_FreeHighlightOutline_scaleFactor","_FreeHighlightOutline_outline","_FreeHighlightOutline_rescale","_FreeHighlightOutline_rescaleAndSwap","_FreeHighlightOutline_computeMinMax","_HighlightEditor_instances","_a$2","_HighlightEditor_anchorNode","_HighlightEditor_anchorOffset","_HighlightEditor_boxes","_HighlightEditor_clipPathId","_HighlightEditor_focusOutlines","_HighlightEditor_focusNode","_HighlightEditor_focusOffset","_HighlightEditor_highlightDiv","_HighlightEditor_highlightOutlines","_HighlightEditor_id","_HighlightEditor_isFreeHighlight","_HighlightEditor_lastPoint","_HighlightEditor_opacity","_HighlightEditor_outlineId","_HighlightEditor_text","_HighlightEditor_thickness","_HighlightEditor_methodOfCreation","_HighlightEditor_createOutlines","_HighlightEditor_createFreeOutlines","_HighlightEditor_updateColor","_HighlightEditor_updateThickness","_HighlightEditor_cleanDrawLayer","_HighlightEditor_addToDrawLayer","_HighlightEditor_rotateBbox","_HighlightEditor_keydown","_HighlightEditor_setCaret","_HighlightEditor_getRotation","_HighlightEditor_serializeBoxes","_HighlightEditor_serializeOutlines","_HighlightEditor_highlightMove","_HighlightEditor_endHighlight","_AnnotationEditorLayer_instances","_a$1","_AnnotationEditorLayer_accessibilityManager","_AnnotationEditorLayer_allowClick","_AnnotationEditorLayer_annotationLayer","_AnnotationEditorLayer_clickAC","_AnnotationEditorLayer_editorFocusTimeoutId","_AnnotationEditorLayer_editors","_AnnotationEditorLayer_hadPointerDown","_AnnotationEditorLayer_isCleaningUp","_AnnotationEditorLayer_isDisabling","_AnnotationEditorLayer_textLayer","_AnnotationEditorLayer_textSelectionAC","_AnnotationEditorLayer_uiManager","_AnnotationEditorLayer_editorTypes","_AnnotationEditorLayer_textLayerPointerDown","_AnnotationEditorLayer_currentEditorType_get","_AnnotationEditorLayer_createNewEditor","_AnnotationEditorLayer_getCenterPoint","_AnnotationEditorLayer_cleanup","_AnnotationEditorLayerBuilder_annotationLayer","_AnnotationEditorLayerBuilder_drawLayer","_AnnotationEditorLayerBuilder_onAppend","_AnnotationEditorLayerBuilder_textLayer","_AnnotationEditorLayerBuilder_uiManager","_Page_instances","_Page_annotationMode","_Page_isEditing","_Page_layerProperties","_Page_previousRotation","_Page_renderingState","_Page_textLayerMode","_Page_viewportMap","_Page_layers","_Page_addLayer","_Page_setDimensions","_Page_dispatchLayerRendered","_Page_renderAnnotationLayer","_Page_renderAnnotationEditorLayer","_Page_renderDrawLayer","_Page_renderTextLayer","_Page_finishRenderTask","setFontsize","savedFontsize","col","savedColor","savedDisplay","savedVisibility","_freeTextDefaultContent","_editorType","Outliner","innerMargin","isLTR","minX","Infinity","maxX","minY","maxY","EPSILON","pow","ceil","right","bboxWidth","bboxHeight","shiftedMinX","shiftedMinY","lastEdge","at","lastPoint","edge","getOutlines","outlineVerticalEdges","edges","allEdges","edge1","edge2","outline","lastPointX","lastPointY","HighlightOutline","array","middle","results","j","jj","y3","y4","Outline","FreeHighlightOutline","polygon","prevX","prevY","points","FreeOutliner","scaleFactor","thickness","Float64Array","isNaN","layerWidth","layerHeight","diffX","diffY","hypot","diffD","K","x0","y0","nY","thX","thY","atan2","PI","bottom","lastTop","lastBottom","lastTopX","lastTopY","lastBottomX","lastBottomY","last","outlineObj","N","getNewOutline","sx","sy","outliner","src","lastX","lastY","ltrCallback","bbox","bezierBoundingBox","HighlightEditor","_defaultThickness","_defaultOpacity","highlightId","numberOfColors","_e","HIGHLIGHT_THICKNESS","HIGHLIGHT_COLOR","addUndoableEditor","mustBeSelected","drawLayer","highlightDiv","pointerover","pointerleave","_moveCaret","startHighlighting","stopPropagation","noContextMenu","_freeHighlight","_freeHighlightId","_freeHighlightClipId","outlinerForOutline","highlightOutlines","setPosition","Float32Array","AnnotationEditorLayer","editorTypes","_initialized","isInvisible","disableTextSelection","togglePointerEvents","toggleAnnotationLayerPointerEvents","INK","addInkEditorIfNeeded","enableTextSelection","isCommitting","offsetX","offsetY","enabled","annotationElementIds","editables","changedAnnotations","resetAnnotations","attach","detach","pasteEditor","STAMP","oldRotation","tlX","tlY","centerX","innerWidth","centerY","innerHeight","AnnotationEditorLayerBuilder","annotationEditorLayer","clonedViewport","DEFAULT_LAYER_PROPERTIES","fieldObjectsPromise","findController","hasJSActionsPromise","LAYERS_ORDER","Page","zoomLayer","renderTask","pdfPageRotate","xfaLayer","ENABLE","textLayerBuilder","textAccessibilityManager","number","layerProperties","initScale","getAnnotationMode","destroyTextLayer","canvasForPrint","rawWidth","rawHeight","zoomLevel","getViewport","removeTextLayer","getPrintContentAsync","printContentLoadPromise","printContent","Image","viewportRawDimensions","toDataURL","onload","loadForPrintAsync","force","that","pageLoadPromise","pageZoomLevel","renderForPrintAsync","isPrintingInProgress","_pageIndex","getPage","printUnits","getPrintUnits","canvasContext","createPageElements","zoom","optionalContentConfigPromise","getOptionalContentConfig","renderContext","transform","annotationMode","ENABLE_STORAGE","printAnnotationStorage","isBlank","setBlank","renderingState","setPdfPage","totalRotation","reset","_resetZoomLayer","removeFromDOM","zoomLayerCanvas","keepZoomLayer","keepAnnotationLayer","keepAnnotationEditorLayer","keepXfaLayer","keepTextLayer","_f","_g","_h","zoomLayerNode","annotationLayerNode","annotationEditorLayerNode","xfaLayerNode","textLayerNode","layerIndex","indexOf","toggleEditingMode","draw","canvasWrapper","pageElement","isPureXfa","DISABLE","ENABLE_FORMS","annotationLayerDiv","resultPromise","annotationEditorLayerDiv","error","_PDFLinkService_isValidExplicitDest","pos","oldDiv","AbortException","cssTransform","timestamp","performance","LinkTarget","PDFLinkService","externalLinkTarget","externalLinkRel","ignoreDestinationZoom","_ignoreDestinationZoom","baseUrl","pdfHistory","externalLinkEnabled","setDocument","setViewer","setHistory","pagesCount","numPages","currentPageNumber","namedDest","explicitDest","getDestination","destRef","cachedPageNumber","getPageIndex","Number","isInteger","pushCurrentPosition","scrollPageIntoView","destArray","goToPage","pageLabelToPageNumber","pushPage","rel","targetStr","escape","setHash","query","urlSearchParams","URLSearchParams","toLowerCase","parseQueryString","phrase","zoomArgs","zoomArg","zoomArgNumber","allowNegativeOffset","unescape","back","forward","nextPage","previousPage","optionalContentConfig","PdfViewerInteractionMode","_PdfViewer_instances","_PdfViewer_annotationEditorMode","_PdfViewer_switchAnnotationEditorModeTimeoutId","_PdfViewer_annotationMode","_PdfViewer_eventAbortController","_PdfViewer_onPageRenderedCallback","_PdfViewer_switchToEditAnnotationMode","_PdfViewer_scrollIntoView","num","gen","argsLen","allowNull","arg","ERROR","ZOOM_START","ZOOM_END","PAGE_RENDERED","PAGES_LOAD","PRINT_END","SCROLL","ANNOTATION_EDITOR_TOOLBAR_SHOW","ANNOTATION_EDITOR_TOOLBAR_HIDE","DEFAULT_ZOOM_LEVEL","FRAMES_PER_SECOND","pagesToRefresh","drawPagesAsync","pdfPages","pageSpot","_currentPageNumber","_setCurrentPageNumber","offsetLeft","clientLeft","clientWidth","_scrollMode","spot","scrollMatches","offsetParent","clientTop","clientHeight","scrollHeight","scrollWidth","overflow","S","__meta__","category","depends","chunk","pdfServiceType","pdfjsSetHiddenCanvasStyles","fileData","fileDescriptor","minZoom","maxZoom","zoomRate","zoomBeforePrint","zoomLevelForPrint","searchMatchScrollLeftOffset","searchMatchScrollTopOffset","pageChangeScrollThreshold","pageWheelThrottleDelay","printResolution","loadOnDemand","loadOnDemandPageSize","errorMessages","parseError","notFound","popupBlocked","elementSelectors","pageSelector","anyPageSelector","pagesContainerClass","pageCanvasWrapper","documentContainerClass","textLayerClass","searchHighlightClass","searchHighlightMarkClass","textElementSelector","renderedPageSelector","enabledTextSelectionClass","enabledPanningClass","interactionMode","TextSelection","printContainer","_annotationStorageModified","_hasAnnotationEditors","triggerError","triggerPrintEnd","onPagesLoad","pdfDoc","initSearchService","enableDocumentScrollEventsTracking","triggerPagesLoad","onDocumentScrollerScroll","getCurrentPageIndex","drawPageAsync","tryTriggerScroll","isPageChanged","activePageNumber","shouldPreventScroll","printDocumentAsync","initPrintContainer","pagePrintPromises","getPagesPrintContentAsync","printPromise","openPrintDialog","onDocumentWheel","wheelDelta","mousewheelDelta","zoomModifier","triggerZoomStart","triggerZoomEnd","throwIfInvalidOptions","initEventBus","initLinkService","initDocumentContainer","loadFile","destroyEventBus","clearDocument","destroySearchService","destroyAnnotationEditorUIManager","destroyDocumentScroller","annotationEditorParams","isValidAnnotationEditorMode","updater","cleanupSwitchAnnotationEditorMode","idsToRefresh","PDF","bindPagesWheel","documentContainer","getDocumentContainer","throttledPagesWheel","unbindPagesWheel","visiblePagesCount","pagePromises","downloadFilePromise","zoomLevelType","zoomLevelBeforePrint","initAnnotationEditorUIManager","setAnnotationEditorUIManagerScale","bindEventBusAnnotationsEvents","addHighlightAnnotation","triggerAnnotationEditorToolBarShow","triggerAnnotationEditorToolBarHide","unbindEventBusAnnotationsEvents","loadFileOptions","arrayBuffer","typedArray","readOptions","dom","getPagesContainer","disableDocumentScrollEventsTracking","loadDocument","setScaleFactor","getDocumentParameters","clearDocumentState","getDocument","initDocumentAnnotationStorage","pagesPromises","destroyPageComponents","drawPagesFromPromisesAsync","setHiddenCanvasStyles","catch","finally","_transport","_initializeAnnotationStorageCallbacks","typeStr","appendPages","pageViewport","initPageComponents","pageRenderPromises","blankPageElements","createBlankPageElements","pageRenderPromise","renderedPage","pageElements","verbosity","isEvalSupported","appendPage","pagesContainer","triggerPageRendered","scaleNum","getContext","adjustedScale","triggerDownload","clearPagesState","clearPagesElements","currentScale","pageNum","defaultViewport","textLayerMode","_layerProperties","hasDocument","getPagesElements","initDocumentScroller","documentScroller","createDocumentScroller","saveOptions","downloadDocument","pdf","exportMethod","serializedAnnotationStorage","originalAnnotationStorage","saveDocument","Blob","blob","saveFile","currentAnnotationStorage","s","calculateZoomLevel","currentZoom","reloadFile","calculatedZoomLevel","pageSize","offsetWidth","sheet","CSSStyleSheet","replaceSync","adoptedStyleSheets","cacheZoomLevelBeforePrint","loadDocumentForPrintAsync","restoreZoomLevelBeforePrint","pageLoadPromises","loadPromise","pagePrintPromise","pagePrintContent","pageWrapper","printDialog","message","margin","afterPrintHandler","close","searchText","searchService","textLayers","goToNextSearchMatch","matchElement","scrollToSearchMatch","goToPreviousSearchMatch","closestCharElement","closestTextElement","closestPageElement","resetInteractionMode","setInteractionMode","disableScrollerEventsTracking","Pan","enableScrollerEventsTracking","setProperty","String","activatePageNumber","getPageByNumber","getPageNumberScrollOffset","scrollDocument","getPageScrollOffset","sum","pageScrollOffset","computedStyles","marginTop","setHighlightColor","executeAnnotationCommand","commandType","commandValue","deleteAnnotation","resetAnnotationEditorMode","setAnnotationEditorMode","modeDescriptor","setFreeTextColor","setFreeTextFontSize","_getVisiblePages","boundingRect","convertToViewportPoint","resetCurrentPageView"],"mappings":"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","file":"kendo.pdfviewer-common.cmn.chunk.min.js","sourcesContent":["(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('kendo.draggable.cmn.chunk.js'), require('kendo.file-saver.cmn.chunk.js'), require('kendo.common.cmn.chunk.js'), require('kendo.pdfjs.loader.js')) :\n  typeof define === 'function' && define.amd ? define(['exports', 'kendo.draggable.cmn.chunk', 'kendo.file-saver.cmn.chunk', 'kendo.common.cmn.chunk', 'kendo.pdfjs.loader'], factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global.kendo = global.kendo || {}, global.kendo._globals = global.kendo._globals || {}, global.kendo._globals.PdfviewerCommonCmnChunk = {}), global.kendo._globals.DraggableCmnChunk, global.kendo._globals.FileSaverCmnChunk, global.kendo._globals.CommonCmnChunk, global.kendo._globals.PdfjsLoader));\n})(this, (function (exports, kendo_draggable_cmn_chunk_js, kendo_fileSaver_cmn_chunk_js, kendo_common_cmn_chunk_js, kendo_pdfjs_loader_js) {\n  const __meta__ = {\n      id: \"pdfviewer-common.cmn.chunk\",\n      name: \"PdfviewerCommonCmnChunk\",\n      category: \"web\",\n      description: \"A reusable outputed chunk of code\",\n      depends: ['draggable.cmn.chunk', 'file-saver.cmn.chunk', 'common.cmn.chunk', 'pdfjs.loader'],\n      hidden: true,\n      chunk: true,\n      \n  };\n\n  // @ts-expect-error TS(2556): A spread argument must either have a tuple type or... Remove this comment to see the full error message\n  const extend = (...args) => Object.assign(...args);\n  const isObject = (value) => value && typeof (value) === \"object\" && !Array.isArray(value);\n  const isHtmlElement = (element) => element instanceof HTMLElement;\n  const isDomElement = (element) => element instanceof Element;\n  // @ts-expect-error TS(2304): Cannot find name 'DotNet'.\n  const isDotNetObject = (value) => value && window && window.DotNet && window.DotNet.DotNetObject && value instanceof DotNet.DotNetObject;\n  const deepExtend = (target, ...sources) => {\n      if (!sources.length) {\n          return target;\n      }\n      const source = sources.shift();\n      if (isObject(target) && isObject(source)) {\n          for (const key in source) {\n              // guard against prototype pollution\n              // https://github.com/telerik/kendo-charts/pull/478\n              if (key === '__proto__' || key === 'constructor') {\n                  continue;\n              }\n              if (source[key] instanceof Component) {\n                  target[key] = source[key];\n              }\n              else if (isHtmlElement(source[key])) {\n                  target[key] = source[key];\n              }\n              else if (key === \"dotNetInstance\" || isDotNetObject(source[key])) {\n                  // avoid cloning a DotNetObject as it might have circular properties\n                  // see https://github.com/telerik/blazor/issues/7507\n                  // the check for the name of our own option - \"dotNetInstance\"\n                  // is an additional guard against the Blazor API being different in other .NET versions\n                  target[key] = source[key];\n              }\n              else if (source[key] && source[key].buffer && source[key].buffer instanceof ArrayBuffer) {\n                  target[key] = source[key];\n              }\n              else if (isObject(source[key]) && Object.getPrototypeOf(source[key]) !== Object.prototype) {\n                  target[key] = source[key];\n              }\n              else if (isObject(source[key])) {\n                  if (!target[key] || !isObject(target[key])) {\n                      extend(target, { [key]: {} });\n                  }\n                  deepExtend(target[key], source[key]);\n              }\n              else {\n                  extend(target, { [key]: source[key] });\n              }\n          }\n      }\n      return deepExtend(target, ...sources);\n  };\n  const isFunction = fn => typeof (fn) === \"function\";\n  const isString = value => typeof (value) === \"string\";\n  const toArray = value => Array.from(value);\n  const isDefined = value => typeof (value) !== \"undefined\";\n  const isNotNull = value => value !== null;\n  const hasValue = value => isDefined(value) && isNotNull(value);\n  const noop = function () { };\n  const convertToHtml = (htmlString, ownerDocument) => {\n      const template = (ownerDocument || document).createElement('template');\n      template.innerHTML = htmlString.trim();\n      const content = template.content;\n      if (content.childNodes.length > 1) {\n          return content.childNodes;\n      }\n      return content.firstChild;\n  };\n  const toPixel = value => parseFloat(value) + \"px\";\n  const toClassSelector$1 = (className) => (className === null || className === void 0 ? void 0 : className.startsWith(\".\")) ? className : `.${className}`;\n  const mousewheelDelta = (e) => {\n      let delta = 0;\n      if (e.wheelDelta) {\n          delta = -e.wheelDelta / 120;\n      }\n      else if (e.detail) {\n          delta = e.detail / 3;\n      }\n      delta = delta > 0 ? Math.ceil(delta) : Math.floor(delta);\n      return delta;\n  };\n  const createPromise = () => {\n      let resolveFn;\n      let rejectFn;\n      const promise = new Promise(function (resolve, reject) {\n          resolveFn = resolve;\n          rejectFn = reject;\n      });\n      // @ts-expect-error TS(2339): Property 'resolve' does not exist on type 'Promise... Remove this comment to see the full error message\n      promise.resolve = resolveFn;\n      // @ts-expect-error TS(2339): Property 'reject' does not exist on type 'Promise<... Remove this comment to see the full error message\n      promise.reject = rejectFn;\n      return promise;\n  };\n\n  class Component {\n      constructor(element, options) {\n          this.options = {\n              events: {}\n          };\n          this.element = element;\n          this.options = options;\n      }\n      destroy() {\n          this.element = null;\n      }\n      extendOptions(options) {\n          this.options = deepExtend(this.options, options);\n      }\n      setOptions(options) {\n          this.options = options;\n      }\n      trigger(eventName, args = {}) {\n          const eventData = {\n              defaultPrevented: false,\n              preventDefault: () => {\n                  eventData.defaultPrevented = true;\n              }\n          };\n          if (this.options.events && isFunction(this.options.events[eventName])) {\n              this.options.events[eventName](extend(eventData, args, {\n                  sender: this\n              }));\n          }\n          return eventData.defaultPrevented;\n      }\n  }\n\n  const throttle = function (func, wait, options = {}) {\n      let timeout, context, args, result;\n      let previous = 0;\n      const later = function () {\n          previous = options.leading === false ? 0 : new Date().getTime();\n          timeout = undefined;\n          result = func.apply(context, args);\n          if (!timeout) {\n              context = args = null;\n          }\n      };\n      const throttled = function () {\n          const now = new Date().getTime();\n          if (!previous && options.leading === false) {\n              previous = now;\n          }\n          const remaining = wait - (now - previous);\n          context = undefined; // this\n          args = arguments;\n          if (remaining <= 0 || remaining > wait) {\n              if (timeout) {\n                  clearTimeout(timeout);\n                  timeout = undefined;\n              }\n              previous = now;\n              result = func.apply(context, args);\n              if (!timeout) {\n                  context = args = null;\n              }\n          }\n          else if (!timeout && options.trailing !== false) {\n              timeout = window.setTimeout(later, remaining);\n          }\n          return result;\n      };\n      return throttled;\n  };\n  const preventDefault = (e) => {\n      if (e.preventDefault) {\n          e.preventDefault();\n      }\n      if (e.originalEvent) {\n          e.originalEvent.preventDefault();\n      }\n  };\n  const matchesElementSelector = (element, selector) => {\n      if (!element || !selector) {\n          return false;\n      }\n      return element.closest(selector);\n  };\n  const FRAMES_PER_SECOND$1 = 1000 / 60;\n  const SCROLL$1 = \"scroll\";\n  /**\n   * @hidden\n   */\n  class Scroller extends Component {\n      constructor(element, options) {\n          super(element, options);\n          this.options = {\n              events: {\n                  [SCROLL$1]: noop\n              },\n              filter: '',\n              // throttle the scroll events to get a more similar experience\n              // to the scrolling behavior in Adobe Acrobat Reader\n              // as well as allow a way to improve the scrolling performance for large files\n              panScrollThrottleDelay: FRAMES_PER_SECOND$1,\n              // the drag directions are actually reversed, e.g.\n              // dragging to the right actually moves the document to the left\n              scrollDirectionModifier: -1,\n              scrollThrottleDelay: FRAMES_PER_SECOND$1\n          };\n          this.onElementScroll = (e) => {\n              const element = this.element;\n              if (!this.shouldTrackScrollEvents()) {\n                  return;\n              }\n              if (this.state.trackNextElementScroll) {\n                  this.scrollTo(element.scrollLeft, element.scrollTop);\n              }\n              else {\n                  // reset the state, so that consecutive scroll events can be handled\n                  this.state.trackNextElementScroll = true;\n              }\n              this.trigger(SCROLL$1, {\n                  originalEvent: e\n              });\n          };\n          this.onDragStart = (e) => {\n              this.state.dragStarted = false;\n              if (!this.shouldTrackPanEvents()) {\n                  return;\n              }\n              const target = e.target || (e.originalEvent || {}).target;\n              if (this.options.filter &&\n                  !matchesElementSelector(target, this.options.filter)) {\n                  return;\n              }\n              preventDefault(e);\n              this.setState({\n                  dragStarted: true,\n                  location: {\n                      pageX: e.pageX,\n                      pageY: e.pageY\n                  },\n                  locationDelta: {\n                      x: 0,\n                      y: 0\n                  }\n              });\n          };\n          this.onDrag = (e) => {\n              if (!this.shouldTrackPanEvents() || !this.state.dragStarted) {\n                  return;\n              }\n              this.calculateEventLocationDelta(e);\n              this.setState({\n                  location: {\n                      pageX: e.pageX,\n                      pageY: e.pageY\n                  }\n              });\n              const directionModifier = this.options.scrollDirectionModifier;\n              const scrollLeft = this.element.scrollLeft +\n                  directionModifier * this.state.locationDelta.x;\n              const scrollTop = this.element.scrollTop +\n                  directionModifier * this.state.locationDelta.y;\n              this.scrollTo(scrollLeft, scrollTop);\n          };\n          this.onDragEnd = () => {\n              // if (!this.shouldTrackPanEvents()) { }\n          };\n          this.extendOptions(options);\n          this.resetState();\n          this.bindEvents();\n      }\n      destroy() {\n          this.unbindEvents();\n      }\n      initDraggable() {\n          this.destroyDraggable();\n          if (this.options.panScrollThrottleDelay > 0) {\n              this.throttledOnDrag = throttle(this.onDrag, this.options.panScrollThrottleDelay);\n          }\n          else {\n              this.throttledOnDrag = this.onDrag;\n          }\n          this.draggable = new kendo_draggable_cmn_chunk_js.D({\n              mouseOnly: false,\n              press: this.onDragStart,\n              drag: this.throttledOnDrag,\n              release: this.onDragEnd\n          });\n          this.draggable.bindTo(this.element);\n      }\n      destroyDraggable() {\n          if (this.draggable && this.draggable.destroy) {\n              this.draggable.destroy();\n              if (this.throttledOnDrag && this.throttledOnDrag.cancel) {\n                  this.throttledOnDrag.cancel();\n                  this.throttledOnDrag = null;\n              }\n          }\n      }\n      bindEvents() {\n          this.bindDraggableEvents();\n          this.bindElementScroll();\n      }\n      bindDraggableEvents() {\n          this.initDraggable();\n      }\n      bindElementScroll() {\n          if (this.options.scrollThrottleDelay > 0) {\n              this.throttledOnElementScroll = throttle(this.onElementScroll, this.options.scrollThrottleDelay);\n          }\n          else {\n              this.throttledOnElementScroll = this.onElementScroll;\n          }\n          this.element.addEventListener(SCROLL$1, this.throttledOnElementScroll);\n      }\n      unbindEvents() {\n          this.unbindElementScroll();\n          this.unbindDraggableEvents();\n      }\n      unbindDraggableEvents() {\n          this.destroyDraggable();\n      }\n      unbindElementScroll() {\n          if (this.throttledOnElementScroll &&\n              this.throttledOnElementScroll.cancel) {\n              this.throttledOnElementScroll.cancel();\n              this.throttledOnElementScroll = null;\n          }\n          this.element.removeEventListener(SCROLL$1, this.throttledOnElementScroll);\n      }\n      setState(newState) {\n          this.state = Object.assign({}, this.state || {}, newState);\n      }\n      resetState() {\n          this.setState({\n              trackPanEvents: false,\n              trackScrollEvents: false,\n              trackNextElementScroll: false,\n              location: { pageX: 0, pageY: 0 },\n              locationDelta: { x: 0, y: 0 }\n          });\n      }\n      enablePanEventsTracking() {\n          this.state.trackPanEvents = true;\n          this.bindDraggableEvents();\n      }\n      disablePanEventsTracking() {\n          this.unbindDraggableEvents();\n          this.state.trackPanEvents = false;\n      }\n      shouldTrackPanEvents() {\n          return this.state.trackPanEvents;\n      }\n      enableScrollEventsTracking() {\n          this.state.trackScrollEvents = true;\n          this.unbindElementScroll();\n          this.bindElementScroll();\n      }\n      disableScrollEventsTracking() {\n          this.unbindElementScroll();\n          this.state.trackScrollEvents = false;\n      }\n      shouldTrackScrollEvents() {\n          return this.state.trackScrollEvents;\n      }\n      calculateEventLocationDelta(e) {\n          this.state.locationDelta = {\n              x: e.pageX - this.state.location.pageX,\n              y: e.pageY - this.state.location.pageY\n          };\n      }\n      scrollTo(x, y, options = { trackScrollEvent: true }) {\n          if (!options.trackScrollEvent) {\n              this.state.trackNextElementScroll = false;\n          }\n          this.element.scrollLeft = x;\n          this.element.scrollTop = y;\n      }\n  }\n\n  const unwrapElement = (element) => {\n      const parentElement = element.parentElement;\n      if (!element || !parentElement) {\n          return;\n      }\n      parentElement.replaceWith(...Array.from(parentElement.childNodes));\n  };\n  const unwrapElements = (elements) => {\n      if (!elements || !elements.length || elements.length <= 0) {\n          return;\n      }\n      for (let i = 0; i < elements.length; i++) {\n          unwrapElement(elements[i]);\n      }\n  };\n  const wrapElement = (element, wrapper) => {\n      if (element.parentNode) {\n          element.parentNode.insertBefore(wrapper, element);\n          wrapper.appendChild(element);\n      }\n  };\n  const wrapInnerElement = (element, wrapper) => {\n      if (!element || !element.parentNode || !wrapper) {\n          return;\n      }\n      element.appendChild(wrapper);\n      while (element.firstChild && element.firstChild !== wrapper) {\n          wrapper.appendChild(element.firstChild);\n      }\n  };\n  const addClass$1 = (className, element) => {\n      element.classList.add(className);\n  };\n  const removeClass$1 = (className, element) => {\n      element.classList.remove(className);\n  };\n  const toClassSelector = (className) => `.${className}`;\n  const CHAR_INDEX_DATA_ATTR = 'data-char-index';\n  const MATCH_INDEX_DATA_ATTR = 'data-match-index';\n  /**\n   * @hidden\n   */\n  class SearchService {\n      constructor(options) {\n          this.options = {\n              highlightClass: 'k-search-highlight',\n              highlightMarkClass: 'k-search-highlight-mark',\n              charClass: 'k-text-char',\n              textContainers: []\n          };\n          this.extendOptions(options);\n          this.resetState();\n      }\n      destroy() {\n          this.clearSearch();\n          this.resetState();\n      }\n      extendOptions(options) {\n          this.options = Object.assign({}, this.options, options);\n      }\n      setState(newState) {\n          this.state = Object.assign({}, this.state || {}, newState);\n      }\n      resetState() {\n          this.setState({\n              text: '',\n              textNodes: [],\n              charIndex: 0,\n              activeMatchIndex: 0,\n              matches: []\n          });\n      }\n      escapeRegExp(text) {\n          return text.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n      }\n      search({ text, matchCase }) {\n          const escapedText = this.escapeRegExp(text);\n          const searchRegex = new RegExp(escapedText, matchCase ? 'g' : 'ig');\n          let match;\n          if (this.shouldTransformText()) {\n              this.transformTextForSearch();\n          }\n          this.state.matches = [];\n          this.state.activeMatchIndex = 0;\n          this.removeIndicators();\n          if (escapedText === '') {\n              return [];\n          }\n          match = searchRegex.exec(this.state.text);\n          while (match) {\n              this.state.matches.push({\n                  startOffset: match.index,\n                  endOffset: match.index + match[0].length\n              });\n              match = searchRegex.exec(this.state.text);\n          }\n          this.highlightAllMatches();\n          this.addActiveMatchMark();\n          return this.state.matches;\n      }\n      clearSearch() {\n          this.removeIndicators();\n          this.restoreOriginalText();\n      }\n      restoreOriginalText() {\n          this.forEachTextContainer((textContainer) => {\n              const nodes = Array.from(textContainer.querySelectorAll('span:not(.' + this.options.charClass + ')'));\n              nodes.forEach((node) => {\n                  const nodeTextContent = node.textContent;\n                  toArray(node.childNodes).forEach((childNode) => {\n                      node.removeChild(childNode);\n                  });\n                  const textNode = node.ownerDocument.createTextNode(nodeTextContent);\n                  node.appendChild(textNode);\n              });\n          });\n      }\n      shouldTransformText() {\n          return !this.state.text;\n      }\n      transformTextForSearch() {\n          this.state.textNodes = [];\n          this.state.charIndex = 0;\n          this.state.text = '';\n          this.forEachTextContainer((textContainer) => {\n              this.extractTextNodes(textContainer);\n          });\n          this.transformTextNodesForSearch(this.state.textNodes);\n      }\n      extractTextNodes(node) {\n          if (node.nodeType === Node.TEXT_NODE) {\n              this.state.textNodes.push(node);\n          }\n          else {\n              for (let i = 0; i < node.childNodes.length; i++) {\n                  this.extractTextNodes(node.childNodes[i]);\n              }\n          }\n      }\n      transformTextNodesForSearch(textNodes) {\n          for (let i = 0; i < textNodes.length; i++) {\n              this.transformTextNodeForSearch(textNodes[i]);\n          }\n      }\n      transformTextNodeForSearch(node) {\n          const text = node.textContent;\n          if (text.length <= 0) {\n              return;\n          }\n          this.state.text = this.state.text + text;\n          const span = document.createElement('span');\n          wrapElement(node, span);\n          node.textContent = \"\";\n          const textElements = this.splitTextByChars(text);\n          textElements.forEach((textElement) => {\n              span.appendChild(textElement);\n          });\n          unwrapElement(span.childNodes[0]);\n      }\n      splitTextByChars(text) {\n          const splittedTextElements = [];\n          for (let i = 0; i < text.length; i++) {\n              const textElement = document.createElement('span');\n              addClass$1(this.options.charClass, textElement);\n              textElement.setAttribute(`${CHAR_INDEX_DATA_ATTR}`, `${this.state.charIndex}`);\n              textElement.textContent = text[i];\n              splittedTextElements.push(textElement);\n              this.state.charIndex++;\n          }\n          return splittedTextElements;\n      }\n      forEachTextContainer(callback) {\n          for (let i = 0; i < this.options.textContainers.length; i++) {\n              const textContainer = this.options.textContainers[i];\n              callback(textContainer, i);\n          }\n      }\n      highlightAllMatches() {\n          this.state.matches.forEach((match, matchIndex) => {\n              this.addMatchHighlight(match.startOffset, match.endOffset, matchIndex);\n          });\n      }\n      addMatchHighlight(matchStartOffset, matchEndOffset, matchIndex) {\n          for (let i = matchStartOffset; i < matchEndOffset; i++) {\n              this.forEachTextContainer((textContainer) => {\n                  const highlights = Array.from(textContainer.querySelectorAll(toClassSelector(`${this.options.charClass}[${CHAR_INDEX_DATA_ATTR}='${i}']`)));\n                  highlights.forEach((highlight) => {\n                      addClass$1(this.options.highlightClass, highlight);\n                      highlight.setAttribute(MATCH_INDEX_DATA_ATTR, matchIndex);\n                  });\n              });\n          }\n      }\n      removeMatchHighlights() {\n          this.forEachTextContainer((textContainer) => {\n              const highlights = Array.from(textContainer.querySelectorAll(toClassSelector(this.options.highlightClass)));\n              highlights.forEach((highlight) => {\n                  removeClass$1(this.options.highlightClass, highlight);\n                  highlight.removeAttribute(MATCH_INDEX_DATA_ATTR);\n              });\n          });\n      }\n      addActiveMatchMark() {\n          if (!this.state.activeMatchIndex && this.state.activeMatchIndex !== 0) {\n              this.state.activeMatchIndex = 0;\n          }\n          else if (this.state.activeMatchIndex > this.state.matches.length) {\n              this.state.activeMatchIndex = this.state.matches.length;\n          }\n          else {\n              this.removeActiveMatchMark();\n          }\n          const mark = document.createElement('span');\n          mark.classList.add(this.options.highlightMarkClass);\n          this.forEachTextContainer((textContainer) => {\n              const matches = Array.from(textContainer.querySelectorAll(toClassSelector(this.options.charClass +\n                  '[' +\n                  MATCH_INDEX_DATA_ATTR +\n                  '=\\'' +\n                  this.state.activeMatchIndex +\n                  '\\']')));\n              matches.forEach((match) => {\n                  wrapInnerElement(match, mark.cloneNode(true));\n              });\n          });\n      }\n      removeActiveMatchMark() {\n          this.forEachTextContainer((textContainer) => {\n              const marks = Array.from(textContainer.querySelectorAll(toClassSelector(this.options.highlightMarkClass)));\n              const childNodes = marks.flatMap((x) => Array.from(x.childNodes));\n              unwrapElements(childNodes);\n          });\n      }\n      removeIndicators() {\n          this.removeActiveMatchMark();\n          this.removeMatchHighlights();\n      }\n      markNextMatch() {\n          this.markNextMatchIndex();\n          this.addActiveMatchMark();\n      }\n      markPreviousMatch() {\n          this.markPreviousMatchIndex();\n          this.addActiveMatchMark();\n      }\n      markNextMatchIndex() {\n          this.moveActiveMatchIndex(1);\n      }\n      markPreviousMatchIndex() {\n          this.moveActiveMatchIndex(-1);\n      }\n      moveActiveMatchIndex(delta) {\n          this.state.activeMatchIndex += delta;\n          if (this.state.activeMatchIndex < 0) {\n              this.state.activeMatchIndex = Math.max(this.state.matches.length - 1, 0);\n          }\n          else if (this.state.activeMatchIndex >\n              this.state.matches.length - 1) {\n              this.state.activeMatchIndex = 0;\n          }\n      }\n      getActiveMatchElement() {\n          let markedMatch;\n          this.forEachTextContainer((textContainer) => {\n              const mark = textContainer.querySelector(toClassSelector(this.options.highlightMarkClass));\n              if (mark) {\n                  markedMatch = mark;\n              }\n          });\n          return markedMatch;\n      }\n  }\n\n  class Annotation {\n      constructor(container, viewport, annotation, pdfDoc, zoom, rootElement) {\n          this.container = container;\n          this.viewport = viewport;\n          this.zoom = zoom;\n          this.annotation = annotation;\n          this.pdfDoc = pdfDoc;\n          this.rootElement = rootElement;\n      }\n      destroy() { }\n  }\n  class LinkAnnotation extends Annotation {\n      constructor(container, viewport, annotation, pdfDoc, zoom, rootElement) {\n          super(container, viewport, annotation, pdfDoc, zoom, rootElement);\n          this.onLinkClick = (e) => {\n              const destination = e.target.getAttribute('href');\n              if (destination && destination.indexOf('#') === 0) {\n                  this.navigateToDestination(destination);\n                  e.preventDefault();\n              }\n          };\n          this.linkElement = null;\n          this.renderAnnotation();\n          this.bindEvents();\n      }\n      destroy() {\n          this.unbindEvents();\n      }\n      bindEvents() {\n          this.linkElement.addEventListener('click', this.onLinkClick);\n      }\n      unbindEvents() {\n          this.linkElement.removeEventListener('click', this.onLinkClick);\n      }\n      navigateToDestination(destination) {\n          const dest = destination.split('#')[1];\n          this.pdfDoc.getDestination(dest).then(r => {\n              this.pdfDoc.getPageIndex(r[0]).then(i => this.goToPage(i));\n          });\n      }\n      goToPage(pageNumber) {\n          scrollToPage(this.rootElement, pageNumber);\n      }\n      renderAnnotation() {\n          const annotation = this.annotation, viewport = this.viewport, rect = annotation.rect, boundingRect = [\n              [rect[0], rect[1]],\n              [rect[2], rect[3]]\n          ], rawHeight = viewport.rawDims.pageHeight;\n          const left = Math.min(boundingRect[0][0], boundingRect[1][0]) * this.zoom, top = (rawHeight - Math.max(boundingRect[0][1], boundingRect[1][1])) * this.zoom, width = (boundingRect[1][0] - boundingRect[0][0]) * this.zoom, height = (boundingRect[1][1] - boundingRect[0][1]) * this.zoom;\n          const url = annotation.url || (annotation.dest && `#${encodeURI(annotation.dest)}`);\n          const annotationElement = createElement('span', '', {\n              position: 'absolute',\n              left: left + 'pt',\n              top: top + 'pt'\n          });\n          const linkElement = this.linkElement = createElement('a', '', {\n              width: width + 'pt',\n              height: height + 'pt',\n              display: 'inline-block',\n              pointerEvents: 'auto'\n          });\n          linkElement.setAttribute('href', url);\n          annotationElement.append(linkElement);\n          this.container.append(annotationElement);\n      }\n  }\n\n  const MAX_CANVAS_WIDTH_HEIGHT_CHROME = 65535;\n  const MAX_CANVAS_AREA_CHROME_SAFARI = 268435456;\n  const MAX_CANVAS_WIDTH_HEIGHT_FIREFOX = 32767;\n  const MAX_CANVAS_AREA_FIREFOX = 124992400;\n  const MAX_CANVAS_WIDTH_SAFARI = 4194303;\n  const MAX_CANVAS_HEIGHT_SAFARI = 8388607;\n  const isIOS = () => /iPad|iPhone|iPod/.test(navigator.userAgent) || (navigator.maxTouchPoints &&\n      navigator.maxTouchPoints > 2 &&\n      /Macintosh/i.test(navigator.userAgent));\n  const isSafari = (userAgent) => {\n      return kendo_common_cmn_chunk_js.d(userAgent).safari ||\n          (kendo_common_cmn_chunk_js.a(userAgent) && kendo_common_cmn_chunk_js.a(userAgent).browser === 'mobilesafari');\n  };\n  const isFirefox = (userAgent) => {\n      const desktopBrowser = kendo_common_cmn_chunk_js.d(userAgent);\n      const mobileOS = kendo_common_cmn_chunk_js.a(userAgent);\n      return (desktopBrowser && desktopBrowser.mozilla) || (mobileOS && mobileOS.browser === 'firefox');\n  };\n  /**\n   * @hidden\n   */\n  const DEFAULT_ZOOM_LEVEL$2 = 1.25;\n  const scale = (renderScale = 3) => (isIOS() ? devicePixelRatio : devicePixelRatio * (renderScale || 3));\n  const parsePdfFromBase64String = (base64String) => {\n      return atob(base64String.replace(/^(data:application\\/pdf;base64,)/gi, ''));\n  };\n  const getDocumentParameters = (options) => {\n      let params = {\n          verbosity: 0,\n          isEvalSupported: false\n      };\n      if (typeof options.data === 'string') {\n          params.data = parsePdfFromBase64String(options.data);\n      }\n      else if (typeof options.url === 'string') {\n          params.url = options.url;\n      }\n      else if (options.arrayBuffer instanceof ArrayBuffer) {\n          params = options.arrayBuffer;\n      }\n      else if (options.typedArray) {\n          params = options.typedArray;\n      }\n      return params;\n  };\n  /**\n   * @hidden\n   */\n  const removeChildren = (dom) => {\n      while (dom.firstChild) {\n          dom.removeChild(dom.firstChild);\n      }\n  };\n  const appendPage = (dom, page, index) => {\n      if (index === 0) {\n          removeChildren(dom);\n      }\n      dom.appendChild(page);\n  };\n  /**\n   * @hidden\n   */\n  const download = (options, fileName = 'Document', saveOptions = {}, onDownload) => {\n      if (options.pdf) {\n          options.pdf\n              .getData()\n              .then((data) => new Blob([data], { type: 'application/pdf' }))\n              .then((blob) => {\n              if (!onDownload(blob, fileName, saveOptions)) {\n                  kendo_fileSaver_cmn_chunk_js.s(blob, fileName, saveOptions);\n              }\n          })\n              .catch((reason) => {\n              options.error.call(undefined, reason);\n          });\n      }\n  };\n  /**\n   * @hidden\n   */\n  const loadPDF = (options) => {\n      const params = getDocumentParameters(options);\n      const { dom, zoom, done, error, rootElement } = options;\n      const loadOnDemandPageSize = options.loadOnDemandPageSize || 2;\n      kendo_pdfjs_loader_js.getDocument(params)\n          .promise.then((pdfDoc) => {\n          const pages = [];\n          for (let i = 1; i <= pdfDoc.numPages; i++) {\n              pages.push(pdfDoc.getPage(i));\n          }\n          return { pages, pdfDoc };\n      }).then(({ pages, pdfDoc }) => {\n          Promise.all(pages)\n              .then((all) => all.map((page, i) => {\n              const emptyPage = createEmptyPage(page, zoom, pdfDoc, rootElement);\n              appendPage(dom, emptyPage.pageElement, i);\n              if (options.loadOnDemand) {\n                  // If LOD is enabled, render the first two(default) or X pages initially.\n                  if (i < loadOnDemandPageSize) {\n                      renderPage(page, emptyPage, error);\n                  }\n              }\n              else {\n                  renderPage(page, emptyPage, error);\n              }\n              page._pageInfo.emptyPage = emptyPage;\n              return page;\n          })).then((pdfPages) => {\n              // required by new PDFJS version\n              const sheet = new CSSStyleSheet();\n              sheet.replaceSync(`.hiddenCanvasElement {\n                        position: absolute;\n                        top: 0;\n                        left: 0;\n                        width: 0;\n                        height: 0;\n                        display: none;\n                    }`);\n              options.dom.ownerDocument.adoptedStyleSheets = [sheet];\n              done({ pdfPages, pdfDoc, zoom });\n          })\n              .catch((reason) => {\n              options.error(reason);\n          });\n      })\n          .catch((reason) => {\n          options.error(reason);\n      });\n  };\n  /**\n   * @hidden\n   */\n  const reloadDocument = (params) => {\n      const { pdfDoc, zoom, dom, done, error, loadOnDemand, rootElement } = params;\n      const pages = [];\n      let currentPageIndex = 0;\n      // Save the index of the current page in view before we reload the document.\n      if (loadOnDemand && rootElement) {\n          currentPageIndex = currentPage(rootElement);\n      }\n      for (let i = 1; i <= pdfDoc.numPages; i++) {\n          pages.push(pdfDoc.getPage(i));\n      }\n      Promise.all(pages)\n          .then((all) => all.map((page, i) => {\n          // Set 'rendered' back to false so that the pages can be re-rendered when scrolling.\n          page._pageInfo.rendered = false;\n          const emptyPage = createEmptyPage(page, zoom, pdfDoc, rootElement);\n          appendPage(dom, emptyPage.pageElement, i);\n          // If on demand is not enabled, proceed as usual.\n          if (!loadOnDemand) {\n              renderPage(page, emptyPage, error);\n          }\n          page._pageInfo.emptyPage = emptyPage;\n          return page;\n      }))\n          .then((pdfPages) => {\n          /* If on demand is enabled, render the page that was previously in view.\n             Then scroll to that page. */\n          if (loadOnDemand) {\n              const page = pdfPages[currentPageIndex];\n              renderPage(page, page._pageInfo.emptyPage, error);\n              scrollToPage(rootElement, currentPageIndex);\n          }\n          done(pdfPages);\n      })\n          .catch(error);\n  };\n  /**\n   * @hidden\n   */\n  const print = (pages, done, error) => {\n      const dom = document.createElement('div');\n      const allDone = pages.map(() => false);\n      const scaleNum = scale();\n      pages.forEach((page, index) => {\n          const viewport = renderCanvas(page, (el) => {\n              dom.appendChild(el);\n              allDone[index] = true;\n              if (allDone.every(Boolean)) {\n                  openPrintDialog(dom, Math.floor(viewport.width / scaleNum), Math.floor(viewport.height / scaleNum), done, error);\n              }\n          }, error);\n      });\n  };\n  const openPrintDialog = (dom, width, height, done, onError) => {\n      const printDialog = window.open('', '', 'innerWidth=' +\n          width +\n          ',innerHeight=' +\n          height +\n          'location=no,titlebar=no,toolbar=no');\n      if (!printDialog || !printDialog.document) {\n          onError();\n          return;\n      }\n      if (printDialog) {\n          printDialog.document.body.style.margin = '0';\n          printDialog.document.body.appendChild(dom);\n          printDialog.focus();\n          setTimeout(() => {\n              printDialog.print();\n              done();\n          });\n          const onAfterPrint = () => {\n              printDialog.removeEventListener('afterprint', onAfterPrint);\n              printDialog.close();\n          };\n          printDialog.addEventListener('afterprint', onAfterPrint);\n      }\n  };\n  const createEmptyPage = (page, zoom, pdfDoc, rootElement) => {\n      const { canvasContext, viewport, pageElement, styles } = createCanvas(page, zoom, 'k-page');\n      return {\n          canvasContext,\n          viewport,\n          pageElement,\n          styles,\n          zoom,\n          pdfDoc,\n          rootElement\n      };\n  };\n  const renderCanvas = (page, done, error) => {\n      const { canvasContext, viewport, scaleNum, canvas, pageElement } = createCanvas(page);\n      page.render({ canvasContext, viewport })\n          .promise.then(() => {\n          const printContent = new Image(Math.floor((viewport.width / scaleNum)), Math.floor((viewport.height / scaleNum)));\n          printContent.src = canvas.toDataURL();\n          const onload = () => {\n              printContent.removeEventListener('load', onload);\n              done(pageElement);\n          };\n          printContent.addEventListener('load', onload);\n      })\n          .catch(error);\n      return viewport;\n  };\n  const createElement = function (name, className, styles) {\n      const element = document.createElement(name);\n      if (className) {\n          element.className = className;\n      }\n      Object.keys(styles).forEach((key) => (element.style[key] = styles[key]));\n      return element;\n  };\n  const transforms = {\n      '0': '',\n      '90': 'rotate(90deg) translateY(-100%)',\n      '180': 'rotate(180deg) translate(-100%, -100%)',\n      '270': 'rotate(270deg) translateX(-100%)'\n  };\n  const renderPage = (page, emptyPage, error) => {\n      const { canvasContext, viewport, pageElement, styles, zoom, pdfDoc, rootElement } = emptyPage;\n      page._pageInfo.renderInProgress = true;\n      page.render({ canvasContext, viewport })\n          .promise.then(() => {\n          page.getTextContent().then((textContent) => {\n              const textLayer = createElement('div', 'k-text-layer', styles);\n              new kendo_pdfjs_loader_js.TextLayer({\n                  textContentSource: textContent,\n                  container: textLayer,\n                  viewport: viewport\n              }).render().then(() => {\n                  textLayer.style.width = textLayer.style.width.replace(/px/g, 'pt');\n                  textLayer.style.height = textLayer.style.height.replace(/px/g, 'pt');\n                  const rotation = textLayer.getAttribute('data-main-rotation') || '0';\n                  if (transforms[rotation]) {\n                      textLayer.style.transform = transforms[rotation];\n                      textLayer.style.transformOrigin = 'top left';\n                  }\n                  textLayer.querySelectorAll('span').forEach((el) => {\n                      if (el.style.fontSize) {\n                          el.style.fontSize = el.style.fontSize.replace(/px/g, 'pt');\n                      }\n                  });\n                  pageElement.prepend(textLayer); // Use prepend to ensure the element is always inserted before the annotation layer.\n              }).catch(error);\n          });\n          page.getAnnotations({ intent: 'display' }).then((annotations) => {\n              const annotationLayer = createElement('div', 'k-annotations-layer', {\n                  position: 'absolute',\n                  top: '0',\n                  left: '0',\n                  overflow: 'hidden',\n                  height: styles.height,\n                  width: styles.width,\n                  pointerEvents: 'none'\n              });\n              pageElement.appendChild(annotationLayer);\n              for (const annotation of annotations) {\n                  switch (annotation.subtype) {\n                      case 'Link':\n                          new LinkAnnotation(annotationLayer, viewport, annotation, pdfDoc, zoom, rootElement);\n                          break;\n                      default:\n                          break;\n                  }\n              }\n          });\n      })\n          .then(() => {\n          page._pageInfo.rendered = true;\n          page._pageInfo.renderInProgress = false;\n      })\n          .catch(error);\n      return pageElement;\n  };\n  const searchMatchScrollLeftOffset = 0;\n  const searchMatchScrollTopOffset = -64;\n  const scrollToSearchMatch = (matchElement, ref) => {\n      if (!matchElement) {\n          return;\n      }\n      const closestCharElement = matchElement.closest('.k-text-char');\n      const closestTextElement = closestCharElement\n          ? closestCharElement.closest('span[role=\"presentation\"]')\n          : null;\n      if (!closestTextElement) {\n          return;\n      }\n      const closestPageElement = closestTextElement.closest('.k-page');\n      if (!closestPageElement) {\n          return;\n      }\n      const scrollLeft = closestPageElement.offsetLeft +\n          -1 * ref.scroller.element.offsetLeft +\n          closestTextElement.offsetLeft +\n          searchMatchScrollLeftOffset;\n      const scrollTop = closestPageElement.offsetTop +\n          -1 * ref.scroller.element.offsetTop +\n          closestTextElement.offsetTop +\n          searchMatchScrollTopOffset;\n      ref.scroller.scrollTo(scrollLeft, scrollTop, { trackScrollEvent: false });\n  };\n  /**\n   * @hidden\n   */\n  const goToNextSearchMatch = (ref) => {\n      ref.search.markNextMatch();\n      const matchElement = ref.search.getActiveMatchElement();\n      scrollToSearchMatch(matchElement, ref);\n  };\n  /**\n   * @hidden\n   */\n  const goToPreviousSearchMatch = (ref) => {\n      ref.search.markPreviousMatch();\n      const matchElement = ref.search.getActiveMatchElement();\n      scrollToSearchMatch(matchElement, ref);\n  };\n  /**\n   * @hidden\n   */\n  const calculateZoomLevel = (zoomLevel, zoomLevelType, currentZoom, dom) => {\n      const documentContainer = dom.closest('.k-pdf-viewer-canvas');\n      const page = dom.querySelector('.k-page');\n      const pageSize = { width: page.offsetWidth, height: page.offsetHeight };\n      let calculatedZoomLevel = zoomLevel;\n      if (zoomLevelType === 'ActualWidth') {\n          calculatedZoomLevel = 1;\n      }\n      else if (zoomLevelType === 'FitToWidth') {\n          calculatedZoomLevel =\n              documentContainer.offsetWidth / (pageSize.width / currentZoom);\n      }\n      else if (zoomLevelType === 'FitToPage') {\n          calculatedZoomLevel =\n              documentContainer.offsetHeight / (pageSize.height / currentZoom);\n      }\n      return calculatedZoomLevel;\n  };\n  /**\n   * Scrolls the PDFViewer document to the passed page number.\n   *\n   * @param rootElement The root HTML element of the PDFViewer component.\n   * @param pageNumber The page number.\n   */\n  const scrollToPage = (rootElement, pageNumber) => {\n      const pages = rootElement.querySelectorAll('.k-page');\n      const page = pages[0];\n      if (page instanceof HTMLDivElement) {\n          const top = (page.offsetHeight + page.offsetTop) *\n              Math.max(0, Math.min(pageNumber, pages.length - 1));\n          const scrollElement = page.closest('.k-pdf-viewer-canvas');\n          if (scrollElement) {\n              scrollElement.scrollTo({ top, behavior: 'auto' });\n          }\n      }\n  };\n  /**\n   * A function which gives you the page number of the document according to the scroll position.\n   *\n   * @param rootElement The root HTML element of the PDFViewer component.\n   * @returns The page number.\n   */\n  const currentPage = (rootElement) => {\n      const scrollElement = rootElement.querySelector('.k-pdf-viewer-canvas');\n      const page = rootElement.querySelector('.k-page:not(.k-blank-page)');\n      return scrollElement && page\n          ? Math.floor(Math.round(scrollElement.scrollTop) /\n              Math.max(1, page.offsetHeight + page.offsetTop) +\n              0.01)\n          : 0;\n  };\n  /**\n   * @hidden\n   *\n   * related to https://github.com/telerik/kendo-pdfviewer-common/issues/6\n   * the bigger the canvas size, the worse the performance;\n   * if initial size after scaling is greater than browser limits,\n   * we are limiting it to the limits, then halving it for performance.\n   */\n  const adjustCanvasSize = (targetWidth, targetHeight) => {\n      const { maxWidth, maxHeight, maxArea } = isFirefox(navigator.userAgent) ?\n          { maxWidth: MAX_CANVAS_WIDTH_HEIGHT_FIREFOX, maxHeight: MAX_CANVAS_WIDTH_HEIGHT_FIREFOX, maxArea: MAX_CANVAS_AREA_FIREFOX } :\n          isSafari(navigator.userAgent) ?\n              { maxWidth: MAX_CANVAS_WIDTH_SAFARI, maxHeight: MAX_CANVAS_HEIGHT_SAFARI, maxArea: MAX_CANVAS_AREA_CHROME_SAFARI } :\n              {\n                  maxWidth: MAX_CANVAS_WIDTH_HEIGHT_CHROME,\n                  maxHeight: MAX_CANVAS_WIDTH_HEIGHT_CHROME,\n                  maxArea: MAX_CANVAS_AREA_CHROME_SAFARI\n              };\n      let adjustedWidth = targetWidth;\n      let adjustedHeight = targetHeight;\n      const ratio = targetWidth / targetHeight;\n      if (targetWidth > maxWidth) {\n          adjustedWidth = maxWidth;\n          const deltaWidth = targetWidth - maxWidth;\n          const deltaHeight = deltaWidth / ratio;\n          adjustedHeight = targetHeight - deltaHeight;\n      }\n      if (adjustedHeight > maxHeight) {\n          const deltaHeight = adjustedHeight - maxHeight;\n          const deltaWidth = deltaHeight * ratio;\n          adjustedHeight = maxHeight;\n          adjustedWidth -= deltaWidth;\n      }\n      const adjustedArea = adjustedWidth * adjustedHeight;\n      if (adjustedArea > maxArea) {\n          const areaRatio = Math.sqrt(maxArea / adjustedArea);\n          adjustedWidth *= areaRatio;\n          adjustedHeight *= areaRatio;\n      }\n      const adjustRatio = adjustedWidth / targetWidth;\n      return {\n          adjustedWidth: adjustedWidth !== targetWidth ? Math.floor(adjustedWidth / 2) : targetWidth,\n          adjustedHeight: adjustedHeight !== targetHeight ? Math.floor(adjustedHeight / 2) : targetHeight,\n          adjustRatio: adjustRatio !== 1 ? adjustRatio / 2 : 1\n      };\n  };\n  const createCanvas = (page, zoom = 1, cssClass = '') => {\n      const scaleNum = scale();\n      const viewport = page.getViewport({ scale: scaleNum });\n      const { adjustedWidth, adjustedHeight, adjustRatio } = adjustCanvasSize(viewport.width, viewport.height);\n      const styles = {\n          width: Math.floor(viewport.width / scaleNum) * zoom + 'pt',\n          height: Math.floor(viewport.height / scaleNum) * zoom + 'pt'\n      };\n      const pageElement = createElement('div', cssClass, styles);\n      const canvas = createElement('canvas', '', {\n          width: '100%',\n          height: '100%'\n      });\n      canvas.height = adjustedHeight;\n      canvas.width = adjustedWidth;\n      const canvasContext = canvas.getContext('2d');\n      pageElement.appendChild(canvas);\n      const adjustedScale = adjustRatio * scaleNum;\n      viewport.width = adjustedWidth;\n      viewport.height = adjustedHeight;\n      viewport.scale = adjustedScale;\n      return {\n          canvasContext,\n          viewport,\n          scaleNum,\n          canvas,\n          pageElement,\n          styles\n      };\n  };\n  const getDevicePixelRatio = () => (window === null || window === void 0 ? void 0 : window.devicePixelRatio) || 1;\n\n  /******************************************************************************\n  Copyright (c) Microsoft Corporation.\n\n  Permission to use, copy, modify, and/or distribute this software for any\n  purpose with or without fee is hereby granted.\n\n  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n  PERFORMANCE OF THIS SOFTWARE.\n  ***************************************************************************** */\n  /* global Reflect, Promise, SuppressedError, Symbol, Iterator */\n\n  var extendStatics = function(d, b) {\n    extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n    return extendStatics(d, b);\n  };\n\n  function __extends(d, b) {\n    if (typeof b !== \"function\" && b !== null)\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  }\n\n  var __assign = function() {\n    __assign = Object.assign || function __assign(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n  };\n\n  function __rest(s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n  }\n\n  function __decorate(decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n  }\n\n  function __param(paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n  }\n\n  function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\n    function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\n    var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\n    var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\n    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\n    var _, done = false;\n    for (var i = decorators.length - 1; i >= 0; i--) {\n        var context = {};\n        for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\n        for (var p in contextIn.access) context.access[p] = contextIn.access[p];\n        context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\n        var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\n        if (kind === \"accessor\") {\n            if (result === void 0) continue;\n            if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\n            if (_ = accept(result.get)) descriptor.get = _;\n            if (_ = accept(result.set)) descriptor.set = _;\n            if (_ = accept(result.init)) initializers.unshift(_);\n        }\n        else if (_ = accept(result)) {\n            if (kind === \"field\") initializers.unshift(_);\n            else descriptor[key] = _;\n        }\n    }\n    if (target) Object.defineProperty(target, contextIn.name, descriptor);\n    done = true;\n  };\n\n  function __runInitializers(thisArg, initializers, value) {\n    var useValue = arguments.length > 2;\n    for (var i = 0; i < initializers.length; i++) {\n        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\n    }\n    return useValue ? value : void 0;\n  };\n\n  function __propKey(x) {\n    return typeof x === \"symbol\" ? x : \"\".concat(x);\n  };\n\n  function __setFunctionName(f, name, prefix) {\n    if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\n    return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\n  };\n\n  function __metadata(metadataKey, metadataValue) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\n  }\n\n  function __awaiter(thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n  }\n\n  function __generator(thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === \"function\" ? Iterator : Object).prototype);\n    return g.next = verb(0), g[\"throw\"] = verb(1), g[\"return\"] = verb(2), typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n  }\n\n  var __createBinding = Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n        desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n  }) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n  });\n\n  function __exportStar(m, o) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\n  }\n\n  function __values(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n  }\n\n  function __read(o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n  }\n\n  /** @deprecated */\n  function __spread() {\n    for (var ar = [], i = 0; i < arguments.length; i++)\n        ar = ar.concat(__read(arguments[i]));\n    return ar;\n  }\n\n  /** @deprecated */\n  function __spreadArrays() {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n  }\n\n  function __spreadArray(to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n  }\n\n  function __await(v) {\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\n  }\n\n  function __asyncGenerator(thisArg, _arguments, generator) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\n    return i = Object.create((typeof AsyncIterator === \"function\" ? AsyncIterator : Object).prototype), verb(\"next\"), verb(\"throw\"), verb(\"return\", awaitReturn), i[Symbol.asyncIterator] = function () { return this; }, i;\n    function awaitReturn(f) { return function (v) { return Promise.resolve(v).then(f, reject); }; }\n    function verb(n, f) { if (g[n]) { i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; if (f) i[n] = f(i[n]); } }\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\n    function fulfill(value) { resume(\"next\", value); }\n    function reject(value) { resume(\"throw\", value); }\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\n  }\n\n  function __asyncDelegator(o) {\n    var i, p;\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\n  }\n\n  function __asyncValues(o) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var m = o[Symbol.asyncIterator], i;\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n  }\n\n  function __makeTemplateObject(cooked, raw) {\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\n    return cooked;\n  };\n\n  var __setModuleDefault = Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n  }) : function(o, v) {\n    o[\"default\"] = v;\n  };\n\n  var ownKeys = function(o) {\n    ownKeys = Object.getOwnPropertyNames || function (o) {\n      var ar = [];\n      for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n      return ar;\n    };\n    return ownKeys(o);\n  };\n\n  function __importStar(mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\n    __setModuleDefault(result, mod);\n    return result;\n  }\n\n  function __importDefault(mod) {\n    return (mod && mod.__esModule) ? mod : { default: mod };\n  }\n\n  function __classPrivateFieldGet(receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n  }\n\n  function __classPrivateFieldSet(receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n  }\n\n  function __classPrivateFieldIn(state, receiver) {\n    if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\n    return typeof state === \"function\" ? receiver === state : state.has(receiver);\n  }\n\n  function __addDisposableResource(env, value, async) {\n    if (value !== null && value !== void 0) {\n      if (typeof value !== \"object\" && typeof value !== \"function\") throw new TypeError(\"Object expected.\");\n      var dispose, inner;\n      if (async) {\n        if (!Symbol.asyncDispose) throw new TypeError(\"Symbol.asyncDispose is not defined.\");\n        dispose = value[Symbol.asyncDispose];\n      }\n      if (dispose === void 0) {\n        if (!Symbol.dispose) throw new TypeError(\"Symbol.dispose is not defined.\");\n        dispose = value[Symbol.dispose];\n        if (async) inner = dispose;\n      }\n      if (typeof dispose !== \"function\") throw new TypeError(\"Object not disposable.\");\n      if (inner) dispose = function() { try { inner.call(this); } catch (e) { return Promise.reject(e); } };\n      env.stack.push({ value: value, dispose: dispose, async: async });\n    }\n    else if (async) {\n      env.stack.push({ async: true });\n    }\n    return value;\n  }\n\n  var _SuppressedError = typeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\n    var e = new Error(message);\n    return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\n  };\n\n  function __disposeResources(env) {\n    function fail(e) {\n      env.error = env.hasError ? new _SuppressedError(e, env.error, \"An error was suppressed during disposal.\") : e;\n      env.hasError = true;\n    }\n    var r, s = 0;\n    function next() {\n      while (r = env.stack.pop()) {\n        try {\n          if (!r.async && s === 1) return s = 0, env.stack.push(r), Promise.resolve().then(next);\n          if (r.dispose) {\n            var result = r.dispose.call(r.value);\n            if (r.async) return s |= 2, Promise.resolve(result).then(next, function(e) { fail(e); return next(); });\n          }\n          else s |= 1;\n        }\n        catch (e) {\n          fail(e);\n        }\n      }\n      if (s === 1) return env.hasError ? Promise.reject(env.error) : Promise.resolve();\n      if (env.hasError) throw env.error;\n    }\n    return next();\n  }\n\n  function __rewriteRelativeImportExtension(path, preserveJsx) {\n    if (typeof path === \"string\" && /^\\.\\.?\\//.test(path)) {\n        return path.replace(/\\.(tsx)$|((?:\\.d)?)((?:\\.[^./]+?)?)\\.([cm]?)ts$/i, function (m, tsx, d, ext, cm) {\n            return tsx ? preserveJsx ? \".jsx\" : \".js\" : d && (!ext || !cm) ? m : (d + ext + \".\" + cm.toLowerCase() + \"js\");\n        });\n    }\n    return path;\n  }\n\n  var tslib_es6 = {\n    __extends,\n    __assign,\n    __rest,\n    __decorate,\n    __param,\n    __esDecorate,\n    __runInitializers,\n    __propKey,\n    __setFunctionName,\n    __metadata,\n    __awaiter,\n    __generator,\n    __createBinding,\n    __exportStar,\n    __values,\n    __read,\n    __spread,\n    __spreadArrays,\n    __spreadArray,\n    __await,\n    __asyncGenerator,\n    __asyncDelegator,\n    __asyncValues,\n    __makeTemplateObject,\n    __importStar,\n    __importDefault,\n    __classPrivateFieldGet,\n    __classPrivateFieldSet,\n    __classPrivateFieldIn,\n    __addDisposableResource,\n    __disposeResources,\n    __rewriteRelativeImportExtension,\n  };\n\n  const addClass = (className, element) => {\n      element.classList.add(className);\n  };\n  const removeClass = (className, element) => {\n      element.classList.remove(className);\n  };\n  const hasClass = (className, element) => {\n      if (element instanceof HTMLElement) {\n          return element.classList.contains(className);\n      }\n  };\n\n  const clamp = (value, min, max) => Math.min(max, Math.max(min, value));\n\n  /* Copyright 2012 Mozilla Foundation\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *     http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   * See the License for the specific language governing permissions and\n   * limitations under the License.\n   */\n  // /* globals process */\n  // NW.js / Electron is a browser context, but copies some Node.js objects; see\n  // http://docs.nwjs.io/en/latest/For%20Users/Advanced/JavaScript%20Contexts%20in%20NW.js/access-nodejs-and-nwjs-api-in-browser-context\n  // https://www.electronjs.org/docs/api/processprocessversionselectron-readonly\n  // https://www.electronjs.org/docs/api/processprocesstype-readonly\n  // const isNodeJS =\n  //     (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) &&\n  //     typeof process === \"object\" &&\n  //     process + \"\" === \"[object process]\" &&\n  //     !process.versions.nw &&\n  //     !(process.versions.electron && process.type && process.type !== \"browser\");\n  // const IDENTITY_MATRIX = [1, 0, 0, 1, 0, 0];\n  // const FONT_IDENTITY_MATRIX = [0.001, 0, 0, 0.001, 0, 0];\n  // const MAX_IMAGE_SIZE_TO_CACHE = 10e6; // Ten megabytes.\n  // Represent the percentage of the height of a single-line field over\n  // the font size. Acrobat seems to use this value.\n  const LINE_FACTOR = 1.35;\n  const LINE_DESCENT_FACTOR = 0.35;\n  const BASELINE_FACTOR = LINE_DESCENT_FACTOR / LINE_FACTOR;\n  /**\n   * Refer to the `WorkerTransport.getRenderingIntent`-method in the API, to see\n   * how these flags are being used:\n   *  - ANY, DISPLAY, and PRINT are the normal rendering intents, note the\n   *    `PDFPageProxy.{render, getOperatorList, getAnnotations}`-methods.\n   *  - SAVE is used, on the worker-thread, when saving modified annotations.\n   *  - ANNOTATIONS_FORMS, ANNOTATIONS_STORAGE, ANNOTATIONS_DISABLE control which\n   *    annotations are rendered onto the canvas (i.e. by being included in the\n   *    operatorList), note the `PDFPageProxy.{render, getOperatorList}`-methods\n   *    and their `annotationMode`-option.\n   *  - IS_EDITING is used when editing is active in the viewer.\n   *  - OPLIST is used with the `PDFPageProxy.getOperatorList`-method, note the\n   *    `OperatorList`-constructor (on the worker-thread).\n   */\n  // const RenderingIntentFlag = {\n  //     ANY: 0x01,\n  //     DISPLAY: 0x02,\n  //     PRINT: 0x04,\n  //     SAVE: 0x08,\n  //     ANNOTATIONS_FORMS: 0x10,\n  //     ANNOTATIONS_STORAGE: 0x20,\n  //     ANNOTATIONS_DISABLE: 0x40,\n  //     IS_EDITING: 0x80,\n  //     OPLIST: 0x100\n  // };\n  const AnnotationMode = {\n      DISABLE: 0,\n      ENABLE: 1,\n      ENABLE_FORMS: 2,\n      ENABLE_STORAGE: 3\n  };\n  const AnnotationEditorPrefix = \"pdfjs_internal_editor_\";\n  const AnnotationEditorType = {\n      DISABLE: -1,\n      NONE: 0,\n      FREETEXT: 3,\n      HIGHLIGHT: 9,\n      STAMP: 13,\n      INK: 15\n  };\n  const AnnotationEditorParamsType = {\n      RESIZE: 1,\n      CREATE: 2,\n      FREETEXT_SIZE: 11,\n      FREETEXT_COLOR: 12,\n      FREETEXT_OPACITY: 13,\n      INK_COLOR: 21,\n      INK_THICKNESS: 22,\n      INK_OPACITY: 23,\n      HIGHLIGHT_COLOR: 31,\n      HIGHLIGHT_DEFAULT_COLOR: 32,\n      HIGHLIGHT_THICKNESS: 33,\n      HIGHLIGHT_FREE: 34,\n      HIGHLIGHT_SHOW_ALL: 35\n  };\n  // Permission flags from Table 22, Section 7.6.3.2 of the PDF specification.\n  // const PermissionFlag = {\n  //     PRINT: 0x04,\n  //     MODIFY_CONTENTS: 0x08,\n  //     COPY: 0x10,\n  //     MODIFY_ANNOTATIONS: 0x20,\n  //     FILL_INTERACTIVE_FORMS: 0x100,\n  //     COPY_FOR_ACCESSIBILITY: 0x200,\n  //     ASSEMBLE: 0x400,\n  //     PRINT_HIGH_QUALITY: 0x800\n  // };\n  // const TextRenderingMode = {\n  //     FILL: 0,\n  //     STROKE: 1,\n  //     FILL_STROKE: 2,\n  //     INVISIBLE: 3,\n  //     FILL_ADD_TO_PATH: 4,\n  //     STROKE_ADD_TO_PATH: 5,\n  //     FILL_STROKE_ADD_TO_PATH: 6,\n  //     ADD_TO_PATH: 7,\n  //     FILL_STROKE_MASK: 3,\n  //     ADD_TO_PATH_FLAG: 4\n  // };\n  // const ImageKind = {\n  //     GRAYSCALE_1BPP: 1,\n  //     RGB_24BPP: 2,\n  //     RGBA_32BPP: 3\n  // };\n  const AnnotationType = {\n      TEXT: 1,\n      LINK: 2,\n      FREETEXT: 3,\n      LINE: 4,\n      SQUARE: 5,\n      CIRCLE: 6,\n      POLYGON: 7,\n      POLYLINE: 8,\n      HIGHLIGHT: 9,\n      UNDERLINE: 10,\n      SQUIGGLY: 11,\n      STRIKEOUT: 12,\n      STAMP: 13,\n      CARET: 14,\n      INK: 15,\n      POPUP: 16,\n      FILEATTACHMENT: 17,\n      SOUND: 18,\n      MOVIE: 19,\n      WIDGET: 20,\n      SCREEN: 21,\n      PRINTERMARK: 22,\n      TRAPNET: 23,\n      WATERMARK: 24,\n      THREED: 25,\n      REDACT: 26\n  };\n  const AnnotationReplyType = {\n      GROUP: \"Group\",\n      REPLY: \"R\"\n  };\n  const AnnotationFlag = {\n      INVISIBLE: 0x01,\n      HIDDEN: 0x02,\n      PRINT: 0x04,\n      NOZOOM: 0x08,\n      NOROTATE: 0x10,\n      NOVIEW: 0x20,\n      READONLY: 0x40,\n      LOCKED: 0x80,\n      TOGGLENOVIEW: 0x100,\n      LOCKEDCONTENTS: 0x200\n  };\n  const AnnotationFieldFlag = {\n      READONLY: 0x0000001,\n      REQUIRED: 0x0000002,\n      NOEXPORT: 0x0000004,\n      MULTILINE: 0x0001000,\n      PASSWORD: 0x0002000,\n      NOTOGGLETOOFF: 0x0004000,\n      RADIO: 0x0008000,\n      PUSHBUTTON: 0x0010000,\n      COMBO: 0x0020000,\n      EDIT: 0x0040000,\n      SORT: 0x0080000,\n      FILESELECT: 0x0100000,\n      MULTISELECT: 0x0200000,\n      DONOTSPELLCHECK: 0x0400000,\n      DONOTSCROLL: 0x0800000,\n      COMB: 0x1000000,\n      RICHTEXT: 0x2000000,\n      RADIOSINUNISON: 0x2000000,\n      COMMITONSELCHANGE: 0x4000000\n  };\n  const AnnotationBorderStyleType = {\n      SOLID: 1,\n      DASHED: 2,\n      BEVELED: 3,\n      INSET: 4,\n      UNDERLINE: 5\n  };\n  const AnnotationActionEventType = {\n      E: \"Mouse Enter\",\n      X: \"Mouse Exit\",\n      D: \"Mouse Down\",\n      U: \"Mouse Up\",\n      Fo: \"Focus\",\n      Bl: \"Blur\",\n      PO: \"PageOpen\",\n      PC: \"PageClose\",\n      PV: \"PageVisible\",\n      PI: \"PageInvisible\",\n      K: \"Keystroke\",\n      F: \"Format\",\n      V: \"Validate\",\n      C: \"Calculate\"\n  };\n  // const DocumentActionEventType = {\n  //     WC: \"WillClose\",\n  //     WS: \"WillSave\",\n  //     DS: \"DidSave\",\n  //     WP: \"WillPrint\",\n  //     DP: \"DidPrint\"\n  // };\n  // const PageActionEventType = {\n  //     O: \"PageOpen\",\n  //     C: \"PageClose\"\n  // };\n  // const VerbosityLevel = {\n  //     ERRORS: 0,\n  //     WARNINGS: 1,\n  //     INFOS: 5\n  // };\n  // const CMapCompressionType = {\n  //     NONE: 0,\n  //     BINARY: 1\n  // };\n  // // All the possible operations for an operator list.\n  // const OPS = {\n  //     // Intentionally start from 1 so it is easy to spot bad operators that will be\n  //     // 0's.\n  //     // PLEASE NOTE: We purposely keep any removed operators commented out, since\n  //     //              re-numbering the list would risk breaking third-party users.\n  //     dependency: 1,\n  //     setLineWidth: 2,\n  //     setLineCap: 3,\n  //     setLineJoin: 4,\n  //     setMiterLimit: 5,\n  //     setDash: 6,\n  //     setRenderingIntent: 7,\n  //     setFlatness: 8,\n  //     setGState: 9,\n  //     save: 10,\n  //     restore: 11,\n  //     transform: 12,\n  //     moveTo: 13,\n  //     lineTo: 14,\n  //     curveTo: 15,\n  //     curveTo2: 16,\n  //     curveTo3: 17,\n  //     closePath: 18,\n  //     rectangle: 19,\n  //     stroke: 20,\n  //     closeStroke: 21,\n  //     fill: 22,\n  //     eoFill: 23,\n  //     fillStroke: 24,\n  //     eoFillStroke: 25,\n  //     closeFillStroke: 26,\n  //     closeEOFillStroke: 27,\n  //     endPath: 28,\n  //     clip: 29,\n  //     eoClip: 30,\n  //     beginText: 31,\n  //     endText: 32,\n  //     setCharSpacing: 33,\n  //     setWordSpacing: 34,\n  //     setHScale: 35,\n  //     setLeading: 36,\n  //     setFont: 37,\n  //     setTextRenderingMode: 38,\n  //     setTextRise: 39,\n  //     moveText: 40,\n  //     setLeadingMoveText: 41,\n  //     setTextMatrix: 42,\n  //     nextLine: 43,\n  //     showText: 44,\n  //     showSpacedText: 45,\n  //     nextLineShowText: 46,\n  //     nextLineSetSpacingShowText: 47,\n  //     setCharWidth: 48,\n  //     setCharWidthAndBounds: 49,\n  //     setStrokeColorSpace: 50,\n  //     setFillColorSpace: 51,\n  //     setStrokeColor: 52,\n  //     setStrokeColorN: 53,\n  //     setFillColor: 54,\n  //     setFillColorN: 55,\n  //     setStrokeGray: 56,\n  //     setFillGray: 57,\n  //     setStrokeRGBColor: 58,\n  //     setFillRGBColor: 59,\n  //     setStrokeCMYKColor: 60,\n  //     setFillCMYKColor: 61,\n  //     shadingFill: 62,\n  //     beginInlineImage: 63,\n  //     beginImageData: 64,\n  //     endInlineImage: 65,\n  //     paintXObject: 66,\n  //     markPoint: 67,\n  //     markPointProps: 68,\n  //     beginMarkedContent: 69,\n  //     beginMarkedContentProps: 70,\n  //     endMarkedContent: 71,\n  //     beginCompat: 72,\n  //     endCompat: 73,\n  //     paintFormXObjectBegin: 74,\n  //     paintFormXObjectEnd: 75,\n  //     beginGroup: 76,\n  //     endGroup: 77,\n  //     // beginAnnotations: 78,\n  //     // endAnnotations: 79,\n  //     beginAnnotation: 80,\n  //     endAnnotation: 81,\n  //     // paintJpegXObject: 82,\n  //     paintImageMaskXObject: 83,\n  //     paintImageMaskXObjectGroup: 84,\n  //     paintImageXObject: 85,\n  //     paintInlineImageXObject: 86,\n  //     paintInlineImageXObjectGroup: 87,\n  //     paintImageXObjectRepeat: 88,\n  //     paintImageMaskXObjectRepeat: 89,\n  //     paintSolidColorImageMask: 90,\n  //     constructPath: 91,\n  //     setStrokeTransparent: 92,\n  //     setFillTransparent: 93\n  // };\n  // const PasswordResponses = {\n  //     NEED_PASSWORD: 1,\n  //     INCORRECT_PASSWORD: 2\n  // };\n  // let verbosity = VerbosityLevel.WARNINGS;\n  // function setVerbosityLevel(level) {\n  //     if (Number.isInteger(level)) {\n  //         verbosity = level;\n  //     }\n  // }\n  // function getVerbosityLevel() {\n  //     return verbosity;\n  // }\n  // // A notice for devs. These are good for things that are helpful to devs, such\n  // // as warning that Workers were disabled, which is important to devs but not\n  // // end users.\n  // function info(msg) {\n  //     if (verbosity >= VerbosityLevel.INFOS) {\n  //         console.log(`Info: ${msg}`);\n  //     }\n  // }\n  // // Non-fatal warnings.\n  // function warn(msg) {\n  //     if (verbosity >= VerbosityLevel.WARNINGS) {\n  //         console.log(`Warning: ${msg}`);\n  //     }\n  // }\n  // function unreachable(msg) {\n  //     throw new Error(msg);\n  // }\n  // function assert(cond, msg) {\n  //     if (!cond) {\n  //         unreachable(msg);\n  //     }\n  // }\n  // // Checks if URLs use one of the allowed protocols, e.g. to avoid XSS.\n  // function _isValidProtocol(url) {\n  //     if (!url || (url && !url.protocol)) {\n  //         return false;\n  //     }\n  //     switch (url.protocol) {\n  //         case \"http:\":\n  //         case \"https:\":\n  //         case \"ftp:\":\n  //         case \"mailto:\":\n  //         case \"tel:\":\n  //             return true;\n  //         default:\n  //             return false;\n  //     }\n  // }\n  // /**\n  //  * Attempts to create a valid absolute URL.\n  //  *\n  //  * @param {URL|string} url - An absolute, or relative, URL.\n  //  * @param {URL|string} [baseUrl] - An absolute URL.\n  //  * @param {Object} [options]\n  //  * @returns Either a valid {URL}, or `null` otherwise.\n  //  */\n  // function createValidAbsoluteUrl(url, baseUrl = null, options = null) {\n  //     if (!url) {\n  //         return null;\n  //     }\n  //     try {\n  //         if (options && typeof url === \"string\") {\n  //             // Let URLs beginning with \"www.\" default to using the \"http://\" protocol.\n  //             if (options.addDefaultProtocol && url.startsWith(\"www.\")) {\n  //                 const dots = url.match(/\\./g);\n  //                 // Avoid accidentally matching a *relative* URL pointing to a file named\n  //                 // e.g. \"www.pdf\" or similar.\n  //                 if (dots && dots.length >= 2) {\n  //                     url = `http://${url}`;\n  //                 }\n  //             }\n  //             // According to ISO 32000-1:2008, section 12.6.4.7, URIs should be encoded\n  //             // in 7-bit ASCII. Some bad PDFs use UTF-8 encoding; see bug 1122280.\n  //             if (options.tryConvertEncoding) {\n  //                 try {\n  //                     url = stringToUTF8String(url);\n  //                 } catch (e) { }\n  //             }\n  //         }\n  //         const absoluteUrl = baseUrl ? new URL(url, baseUrl) : new URL(url);\n  //         if (_isValidProtocol(absoluteUrl)) {\n  //             return absoluteUrl;\n  //         }\n  //     } catch (e) {\n  //         /* `new URL()` will throw on incorrect data. */\n  //     }\n  //     return null;\n  // }\n  function shadow(obj, prop, value, nonSerializable = false) {\n      // if (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"TESTING\")) {\n      //     assert(\n      //         prop in obj,\n      //         `shadow: Property \"${prop && prop.toString()}\" not found in object.`\n      //     );\n      // }\n      Object.defineProperty(obj, prop, {\n          value,\n          enumerable: !nonSerializable,\n          configurable: true,\n          writable: false\n      });\n      return value;\n  }\n  // /**\n  //  * @type {any}\n  //  */\n  // const BaseException = (function BaseExceptionClosure() {\n  //     // eslint-disable-next-line no-shadow\n  //     function BaseException(message, name) {\n  //         if (this.constructor === BaseException) {\n  //             unreachable(\"Cannot initialize BaseException.\");\n  //         }\n  //         this.message = message;\n  //         this.name = name;\n  //     }\n  //     BaseException.prototype = new Error();\n  //     BaseException.constructor = BaseException;\n  //     return BaseException;\n  // })();\n  // class PasswordException extends BaseException {\n  //     constructor(msg, code) {\n  //         super(msg, \"PasswordException\");\n  //         this.code = code;\n  //     }\n  // }\n  // class UnknownErrorException extends BaseException {\n  //     constructor(msg, details) {\n  //         super(msg, \"UnknownErrorException\");\n  //         this.details = details;\n  //     }\n  // }\n  // class InvalidPDFException extends BaseException {\n  //     constructor(msg) {\n  //         super(msg, \"InvalidPDFException\");\n  //     }\n  // }\n  // class MissingPDFException extends BaseException {\n  //     constructor(msg) {\n  //         super(msg, \"MissingPDFException\");\n  //     }\n  // }\n  // class UnexpectedResponseException extends BaseException {\n  //     constructor(msg, status) {\n  //         super(msg, \"UnexpectedResponseException\");\n  //         this.status = status;\n  //     }\n  // }\n  // /**\n  //  * Error caused during parsing PDF data.\n  //  */\n  // class FormatError extends BaseException {\n  //     constructor(msg) {\n  //         super(msg, \"FormatError\");\n  //     }\n  // }\n  // /**\n  //  * Error used to indicate task cancellation.\n  //  */\n  // class AbortException extends BaseException {\n  //     constructor(msg) {\n  //         super(msg, \"AbortException\");\n  //     }\n  // }\n  function bytesToString(bytes) {\n      if (typeof bytes !== \"object\" || (bytes && bytes.length === undefined)) {\n          // unreachable(\"Invalid argument for bytesToString\");\n      }\n      const length = bytes.length;\n      const MAX_ARGUMENT_COUNT = 8192;\n      if (length < MAX_ARGUMENT_COUNT) {\n          return String.fromCharCode.apply(null, bytes);\n      }\n      const strBuf = [];\n      for (let i = 0; i < length; i += MAX_ARGUMENT_COUNT) {\n          const chunkEnd = Math.min(i + MAX_ARGUMENT_COUNT, length);\n          const chunk = bytes.subarray(i, chunkEnd);\n          strBuf.push(String.fromCharCode.apply(null, chunk));\n      }\n      return strBuf.join(\"\");\n  }\n  // function stringToBytes(str) {\n  //     if (typeof str !== \"string\") {\n  //         unreachable(\"Invalid argument for stringToBytes\");\n  //     }\n  //     const length = str.length;\n  //     const bytes = new Uint8Array(length);\n  //     for (let i = 0; i < length; ++i) {\n  //         bytes[i] = str.charCodeAt(i) & 0xff;\n  //     }\n  //     return bytes;\n  // }\n  // function string32(value) {\n  //     if (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"TESTING\")) {\n  //         assert(\n  //             typeof value === \"number\" && Math.abs(value) < 2 ** 32,\n  //             `string32: Unexpected input \"${value}\".`\n  //         );\n  //     }\n  //     return String.fromCharCode(\n  //         (value >> 24) & 0xff,\n  //         (value >> 16) & 0xff,\n  //         (value >> 8) & 0xff,\n  //         value & 0xff\n  //     );\n  // }\n  // function objectSize(obj) {\n  //     return Object.keys(obj).length;\n  // }\n  // // Ensure that the returned Object has a `null` prototype; hence why\n  // // `Object.fromEntries(...)` is not used.\n  function objectFromMap(map) {\n      const obj = Object.create(null);\n      for (const [key, value] of map) {\n          obj[key] = value;\n      }\n      return obj;\n  }\n  // // Checks the endianness of the platform.\n  // function isLittleEndian() {\n  //     const buffer8 = new Uint8Array(4);\n  //     buffer8[0] = 1;\n  //     const view32 = new Uint32Array(buffer8.buffer, 0, 1);\n  //     return view32[0] === 1;\n  // }\n  // // Checks if it's possible to eval JS expressions.\n  // function isEvalSupported() {\n  //     try {\n  //         new Function(\"\"); // eslint-disable-line no-new, no-new-func\n  //         return true;\n  //     } catch (e) {\n  //         return false;\n  //     }\n  // }\n  class FeatureTest {\n      // static get isLittleEndian() {\n      //     return shadow(this, \"isLittleEndian\", isLittleEndian());\n      // }\n      // static get isEvalSupported() {\n      //     return shadow(this, \"isEvalSupported\", isEvalSupported());\n      // }\n      // static get isOffscreenCanvasSupported() {\n      //     return shadow(\n      //         this,\n      //         \"isOffscreenCanvasSupported\",\n      //         typeof OffscreenCanvas !== \"undefined\"\n      //     );\n      // }\n      // static get platform() {\n      //     if (\n      //         (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) ||\n      //         (typeof navigator !== \"undefined\" &&\n      //             navigator && typeof navigator.platform === \"string\")\n      //     ) {\n      //         return shadow(this, \"platform\", {\n      //             isMac: navigator.platform.includes(\"Mac\"),\n      //         });\n      //     }\n      //     return shadow(this, \"platform\", { isMac: false });\n      // }\n      static get isCSSRoundSupported() {\n          return shadow(this, \"isCSSRoundSupported\", globalThis && globalThis.CSS && globalThis.CSS.supports &&\n              globalThis.CSS.supports(\"width: round(1.5px, 1px)\"));\n      }\n  }\n  const hexNumbers = Array.from(Array(256).keys(), n => n.toString(16).padStart(2, \"0\"));\n  class Util {\n      static makeHexColor(r, g, b) {\n          return `${hexNumbers[r]}${hexNumbers[g]}${hexNumbers[b]}`;\n      }\n      //     // Apply a scaling matrix to some min/max values.\n      //     // If a scaling factor is negative then min and max must be\n      //     // swapped.\n      //     static scaleMinMax(transform, minMax) {\n      //         let temp;\n      //         if (transform[0]) {\n      //             if (transform[0] < 0) {\n      //                 temp = minMax[0];\n      //                 minMax[0] = minMax[2];\n      //                 minMax[2] = temp;\n      //             }\n      //             minMax[0] *= transform[0];\n      //             minMax[2] *= transform[0];\n      //             if (transform[3] < 0) {\n      //                 temp = minMax[1];\n      //                 minMax[1] = minMax[3];\n      //                 minMax[3] = temp;\n      //             }\n      //             minMax[1] *= transform[3];\n      //             minMax[3] *= transform[3];\n      //         } else {\n      //             temp = minMax[0];\n      //             minMax[0] = minMax[1];\n      //             minMax[1] = temp;\n      //             temp = minMax[2];\n      //             minMax[2] = minMax[3];\n      //             minMax[3] = temp;\n      //             if (transform[1] < 0) {\n      //                 temp = minMax[1];\n      //                 minMax[1] = minMax[3];\n      //                 minMax[3] = temp;\n      //             }\n      //             minMax[1] *= transform[1];\n      //             minMax[3] *= transform[1];\n      //             if (transform[2] < 0) {\n      //                 temp = minMax[0];\n      //                 minMax[0] = minMax[2];\n      //                 minMax[2] = temp;\n      //             }\n      //             minMax[0] *= transform[2];\n      //             minMax[2] *= transform[2];\n      //         }\n      //         minMax[0] += transform[4];\n      //         minMax[1] += transform[5];\n      //         minMax[2] += transform[4];\n      //         minMax[3] += transform[5];\n      //     }\n      //     // Concatenates two transformation matrices together and returns the result.\n      //     static transform(m1, m2) {\n      //         return [\n      //             m1[0] * m2[0] + m1[2] * m2[1],\n      //             m1[1] * m2[0] + m1[3] * m2[1],\n      //             m1[0] * m2[2] + m1[2] * m2[3],\n      //             m1[1] * m2[2] + m1[3] * m2[3],\n      //             m1[0] * m2[4] + m1[2] * m2[5] + m1[4],\n      //             m1[1] * m2[4] + m1[3] * m2[5] + m1[5],\n      //         ];\n      //     }\n      //     // For 2d affine transforms\n      //     static applyTransform(p, m) {\n      //         const xt = p[0] * m[0] + p[1] * m[2] + m[4];\n      //         const yt = p[0] * m[1] + p[1] * m[3] + m[5];\n      //         return [xt, yt];\n      //     }\n      //     static applyInverseTransform(p, m) {\n      //         const d = m[0] * m[3] - m[1] * m[2];\n      //         const xt = (p[0] * m[3] - p[1] * m[2] + m[2] * m[5] - m[4] * m[3]) / d;\n      //         const yt = (-p[0] * m[1] + p[1] * m[0] + m[4] * m[1] - m[5] * m[0]) / d;\n      //         return [xt, yt];\n      //     }\n      //     // Applies the transform to the rectangle and finds the minimum axially\n      //     // aligned bounding box.\n      //     static getAxialAlignedBoundingBox(r, m) {\n      //         const p1 = this.applyTransform(r, m);\n      //         const p2 = this.applyTransform(r.slice(2, 4), m);\n      //         const p3 = this.applyTransform([r[0], r[3]], m);\n      //         const p4 = this.applyTransform([r[2], r[1]], m);\n      //         return [\n      //             Math.min(p1[0], p2[0], p3[0], p4[0]),\n      //             Math.min(p1[1], p2[1], p3[1], p4[1]),\n      //             Math.max(p1[0], p2[0], p3[0], p4[0]),\n      //             Math.max(p1[1], p2[1], p3[1], p4[1]),\n      //         ];\n      //     }\n      //     static inverseTransform(m) {\n      //         const d = m[0] * m[3] - m[1] * m[2];\n      //         return [\n      //             m[3] / d,\n      //             -m[1] / d,\n      //             -m[2] / d,\n      //             m[0] / d,\n      //             (m[2] * m[5] - m[4] * m[3]) / d,\n      //             (m[4] * m[1] - m[5] * m[0]) / d,\n      //         ];\n      //     }\n      //     // This calculation uses Singular Value Decomposition.\n      //     // The SVD can be represented with formula A = USV. We are interested in the\n      //     // matrix S here because it represents the scale values.\n      //     static singularValueDecompose2dScale(m) {\n      //         const transpose = [m[0], m[2], m[1], m[3]];\n      //         // Multiply matrix m with its transpose.\n      //         const a = m[0] * transpose[0] + m[1] * transpose[2];\n      //         const b = m[0] * transpose[1] + m[1] * transpose[3];\n      //         const c = m[2] * transpose[0] + m[3] * transpose[2];\n      //         const d = m[2] * transpose[1] + m[3] * transpose[3];\n      //         // Solve the second degree polynomial to get roots.\n      //         const first = (a + d) / 2;\n      //         const second = Math.sqrt((a + d) ** 2 - 4 * (a * d - c * b)) / 2;\n      //         const sx = first + second || 1;\n      //         const sy = first - second || 1;\n      //         // Scale values are the square roots of the eigenvalues.\n      //         return [Math.sqrt(sx), Math.sqrt(sy)];\n      //     }\n      //     // Normalize rectangle rect=[x1, y1, x2, y2] so that (x1,y1) < (x2,y2)\n      //     // For coordinate systems whose origin lies in the bottom-left, this\n      //     // means normalization to (BL,TR) ordering. For systems with origin in the\n      //     // top-left, this means (TL,BR) ordering.\n      static normalizeRect(rect) {\n          const r = rect.slice(0); // clone rect\n          if (rect[0] > rect[2]) {\n              r[0] = rect[2];\n              r[2] = rect[0];\n          }\n          if (rect[1] > rect[3]) {\n              r[1] = rect[3];\n              r[3] = rect[1];\n          }\n          return r;\n      }\n  }\n  // const PDFStringTranslateTable = [\n  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x2d8,\n  //     0x2c7, 0x2c6, 0x2d9, 0x2dd, 0x2db, 0x2da, 0x2dc, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  //     0, 0, 0, 0, 0, 0, 0, 0, 0x2022, 0x2020, 0x2021, 0x2026, 0x2014, 0x2013, 0x192,\n  //     0x2044, 0x2039, 0x203a, 0x2212, 0x2030, 0x201e, 0x201c, 0x201d, 0x2018,\n  //     0x2019, 0x201a, 0x2122, 0xfb01, 0xfb02, 0x141, 0x152, 0x160, 0x178, 0x17d,\n  //     0x131, 0x142, 0x153, 0x161, 0x17e, 0, 0x20ac,\n  // ];\n  // function stringToPDFString(str) {\n  //     // See section 7.9.2.2 Text String Type.\n  //     // The string can contain some language codes bracketed with 0x0b,\n  //     // so we must remove them.\n  //     if (str[0] >= \"\\xEF\") {\n  //         let encoding;\n  //         if (str[0] === \"\\xFE\" && str[1] === \"\\xFF\") {\n  //             encoding = \"utf-16be\";\n  //             if (str.length % 2 === 1) {\n  //                 str = str.slice(0, -1);\n  //             }\n  //         } else if (str[0] === \"\\xFF\" && str[1] === \"\\xFE\") {\n  //             encoding = \"utf-16le\";\n  //             if (str.length % 2 === 1) {\n  //                 str = str.slice(0, -1);\n  //             }\n  //         } else if (str[0] === \"\\xEF\" && str[1] === \"\\xBB\" && str[2] === \"\\xBF\") {\n  //             encoding = \"utf-8\";\n  //         }\n  //         if (encoding) {\n  //             try {\n  //                 const decoder = new TextDecoder(encoding, { fatal: true });\n  //                 const buffer = stringToBytes(str);\n  //                 const decoded = decoder.decode(buffer);\n  //                 if (!decoded.includes(\"\\x1b\")) {\n  //                     return decoded;\n  //                 }\n  //                 return decoded.replaceAll(/\\x1b[^\\x1b]*(?:\\x1b|$)/g, \"\");\n  //             } catch (ex) {\n  //                 warn(`stringToPDFString: \"${ex}\".`);\n  //             }\n  //         }\n  //     }\n  //     // ISO Latin 1\n  //     const strBuf = [];\n  //     for (let i = 0, ii = str.length; i < ii; i++) {\n  //         const charCode = str.charCodeAt(i);\n  //         if (charCode === 0x1b) {\n  //             // eslint-disable-next-line no-empty\n  //             while (++i < ii && str.charCodeAt(i) !== 0x1b) { }\n  //             continue;\n  //         }\n  //         const code = PDFStringTranslateTable[charCode];\n  //         strBuf.push(code ? String.fromCharCode(code) : str.charAt(i));\n  //     }\n  //     return strBuf.join(\"\");\n  // }\n  // function stringToUTF8String(str) {\n  //     return decodeURIComponent(escape(str));\n  // }\n  // function utf8StringToString(str) {\n  //     return unescape(encodeURIComponent(str));\n  // }\n  // function isArrayEqual(arr1, arr2) {\n  //     if (arr1.length !== arr2.length) {\n  //         return false;\n  //     }\n  //     for (let i = 0, ii = arr1.length; i < ii; i++) {\n  //         if (arr1[i] !== arr2[i]) {\n  //             return false;\n  //         }\n  //     }\n  //     return true;\n  // }\n  // function getModificationDate(date = new Date()) {\n  //     const buffer = [\n  //         date.getUTCFullYear().toString(),\n  //         (date.getUTCMonth() + 1).toString().padStart(2, \"0\"),\n  //         date.getUTCDate().toString().padStart(2, \"0\"),\n  //         date.getUTCHours().toString().padStart(2, \"0\"),\n  //         date.getUTCMinutes().toString().padStart(2, \"0\"),\n  //         date.getUTCSeconds().toString().padStart(2, \"0\"),\n  //     ];\n  //     return buffer.join(\"\");\n  // }\n  // let NormalizeRegex = null;\n  // let NormalizationMap = null;\n  // function normalizeUnicode(str) {\n  //     if (!NormalizeRegex) {\n  //         // In order to generate the following regex:\n  //         //  - create a PDF containing all the chars in the range 0000-FFFF with\n  //         //    a NFKC which is different of the char.\n  //         //  - copy and paste all those chars and get the ones where NFKC is\n  //         //    required.\n  //         // It appears that most the chars here contain some ligatures.\n  //         NormalizeRegex =\n  //             /([\\u00a0\\u00b5\\u037e\\u0eb3\\u2000-\\u200a\\u202f\\u2126\\ufb00-\\ufb04\\ufb06\\ufb20-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40-\\ufb41\\ufb43-\\ufb44\\ufb46-\\ufba1\\ufba4-\\ufba9\\ufbae-\\ufbb1\\ufbd3-\\ufbdc\\ufbde-\\ufbe7\\ufbea-\\ufbf8\\ufbfc-\\ufbfd\\ufc00-\\ufc5d\\ufc64-\\ufcf1\\ufcf5-\\ufd3d\\ufd88\\ufdf4\\ufdfa-\\ufdfb\\ufe71\\ufe77\\ufe79\\ufe7b\\ufe7d]+)|(\\ufb05+)/gu;\n  //         NormalizationMap = new Map([[\"ﬅ\", \"ſt\"]]);\n  //     }\n  //     return str.replaceAll(NormalizeRegex, (_, p1, p2) =>\n  //         p1 ? p1.normalize(\"NFKC\") : NormalizationMap.get(p2)\n  //     );\n  // }\n  function getUuid() {\n      if (\n      // (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) ||\n      (typeof crypto !== \"undefined\" && crypto && typeof crypto.randomUUID === \"function\")) {\n          return crypto.randomUUID();\n      }\n      const buf = new Uint8Array(32);\n      if (typeof crypto !== \"undefined\" &&\n          crypto && typeof crypto.getRandomValues === \"function\") {\n          crypto.getRandomValues(buf);\n      }\n      else {\n          for (let i = 0; i < 32; i++) {\n              buf[i] = Math.floor(Math.random() * 255);\n          }\n      }\n      return bytesToString(buf);\n  }\n  const AnnotationPrefix = \"pdfjs_internal_id_\";\n\n  /* Copyright 2022 Mozilla Foundation\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *     http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   * See the License for the specific language governing permissions and\n   * limitations under the License.\n   */\n  var _IdManager_id;\n  class IdManager {\n      constructor(idPrefix = AnnotationEditorPrefix) {\n          _IdManager_id.set(this, 0);\n          this.idPrefix = AnnotationEditorPrefix;\n          // if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"TESTING\")) {\n          Object.defineProperty(this, \"reset\", {\n              value: () => (__classPrivateFieldSet(this, _IdManager_id, 0, \"f\"))\n          });\n          // }\n          this.idPrefix = idPrefix;\n      }\n      get id() {\n          var _a, _b;\n          return `${this.idPrefix}${__classPrivateFieldSet(this, _IdManager_id, (_b = __classPrivateFieldGet(this, _IdManager_id, \"f\"), _a = _b++, _b), \"f\"), _a}`;\n      }\n  }\n  _IdManager_id = new WeakMap();\n\n  /* Copyright 2022 Mozilla Foundation\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *     http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   * See the License for the specific language governing permissions and\n   * limitations under the License.\n   */\n  var _CommandManager_commands, _CommandManager_locked, _CommandManager_maxSize, _CommandManager_position;\n  /*\n   * Class to handle undo/redo.\n   * Commands are just saved in a buffer.\n   * If we hit some memory issues we could likely use a circular buffer.\n   * It has to be used as a singleton.\n   */\n  class CommandManager {\n      constructor(maxSize = 128) {\n          _CommandManager_commands.set(this, []);\n          _CommandManager_locked.set(this, false);\n          _CommandManager_maxSize.set(this, void 0);\n          _CommandManager_position.set(this, -1);\n          __classPrivateFieldSet(this, _CommandManager_maxSize, maxSize, \"f\");\n      }\n      /**\n       * @typedef {Object} addOptions\n       * @property {function} cmd\n       * @property {function} undo\n       * @property {function} [post]\n       * @property {boolean} mustExec\n       * @property {number} type\n       * @property {boolean} overwriteIfSameType\n       * @property {boolean} keepUndo\n       */\n      /*\n       * Add a new couple of commands to be used in case of redo/undo.\n       * @param {addOptions} options\n       */\n      add({ cmd, undo, post, mustExec, type = NaN, overwriteIfSameType = false, keepUndo = false }) {\n          if (mustExec) {\n              cmd();\n          }\n          if (__classPrivateFieldGet(this, _CommandManager_locked, \"f\")) {\n              return;\n          }\n          const save = { cmd, undo, post, type };\n          if (__classPrivateFieldGet(this, _CommandManager_position, \"f\") === -1) {\n              if (__classPrivateFieldGet(this, _CommandManager_commands, \"f\").length > 0) {\n                  // All the commands have been undone and then a new one is added\n                  // hence we clear the queue.\n                  __classPrivateFieldGet(this, _CommandManager_commands, \"f\").length = 0;\n              }\n              __classPrivateFieldSet(this, _CommandManager_position, 0, \"f\");\n              __classPrivateFieldGet(this, _CommandManager_commands, \"f\").push(save);\n              return;\n          }\n          if (overwriteIfSameType && __classPrivateFieldGet(this, _CommandManager_commands, \"f\")[__classPrivateFieldGet(this, _CommandManager_position, \"f\")].type === type) {\n              // For example when we change a color we don't want to\n              // be able to undo all the steps, hence we only want to\n              // keep the last undoable action in this sequence of actions.\n              if (keepUndo) {\n                  save.undo = __classPrivateFieldGet(this, _CommandManager_commands, \"f\")[__classPrivateFieldGet(this, _CommandManager_position, \"f\")].undo;\n              }\n              __classPrivateFieldGet(this, _CommandManager_commands, \"f\")[__classPrivateFieldGet(this, _CommandManager_position, \"f\")] = save;\n              return;\n          }\n          const next = __classPrivateFieldGet(this, _CommandManager_position, \"f\") + 1;\n          if (next === __classPrivateFieldGet(this, _CommandManager_maxSize, \"f\")) {\n              __classPrivateFieldGet(this, _CommandManager_commands, \"f\").splice(0, 1);\n          }\n          else {\n              __classPrivateFieldSet(this, _CommandManager_position, next, \"f\");\n              if (next < __classPrivateFieldGet(this, _CommandManager_commands, \"f\").length) {\n                  __classPrivateFieldGet(this, _CommandManager_commands, \"f\").splice(next);\n              }\n          }\n          __classPrivateFieldGet(this, _CommandManager_commands, \"f\").push(save);\n      }\n      /**\n       * Undo the last command.\n       */\n      undo() {\n          if (__classPrivateFieldGet(this, _CommandManager_position, \"f\") === -1) {\n              // Nothing to undo.\n              return;\n          }\n          // Avoid to insert something during the undo execution.\n          __classPrivateFieldSet(this, _CommandManager_locked, true, \"f\");\n          const { undo, post } = __classPrivateFieldGet(this, _CommandManager_commands, \"f\")[__classPrivateFieldGet(this, _CommandManager_position, \"f\")];\n          undo();\n          post === null || post === void 0 ? void 0 : post();\n          __classPrivateFieldSet(this, _CommandManager_locked, false, \"f\");\n          __classPrivateFieldSet(this, _CommandManager_position, __classPrivateFieldGet(this, _CommandManager_position, \"f\") - 1, \"f\");\n      }\n      /**\n       * Redo the last command.\n       */\n      redo() {\n          if (__classPrivateFieldGet(this, _CommandManager_position, \"f\") < __classPrivateFieldGet(this, _CommandManager_commands, \"f\").length - 1) {\n              __classPrivateFieldSet(this, _CommandManager_position, __classPrivateFieldGet(this, _CommandManager_position, \"f\") + 1, \"f\");\n              // Avoid to insert something during the redo execution.\n              __classPrivateFieldSet(this, _CommandManager_locked, true, \"f\");\n              const { cmd, post } = __classPrivateFieldGet(this, _CommandManager_commands, \"f\")[__classPrivateFieldGet(this, _CommandManager_position, \"f\")];\n              cmd();\n              post === null || post === void 0 ? void 0 : post();\n              __classPrivateFieldSet(this, _CommandManager_locked, false, \"f\");\n          }\n      }\n      /**\n       * Check if there is something to undo.\n       * @returns {boolean}\n       */\n      hasSomethingToUndo() {\n          return __classPrivateFieldGet(this, _CommandManager_position, \"f\") !== -1;\n      }\n      /**\n       * Check if there is something to redo.\n       * @returns {boolean}\n       */\n      hasSomethingToRedo() {\n          return __classPrivateFieldGet(this, _CommandManager_position, \"f\") < __classPrivateFieldGet(this, _CommandManager_commands, \"f\").length - 1;\n      }\n      destroy() {\n          __classPrivateFieldSet(this, _CommandManager_commands, null, \"f\");\n      }\n  }\n  _CommandManager_commands = new WeakMap(), _CommandManager_locked = new WeakMap(), _CommandManager_maxSize = new WeakMap(), _CommandManager_position = new WeakMap();\n\n  /* Copyright 2014 Mozilla Foundation\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *     http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   * See the License for the specific language governing permissions and\n   * limitations under the License.\n   */\n  var _AnnotationEditorUIManager_instances, _AnnotationEditorUIManager_abortController, _AnnotationEditorUIManager_activeEditor, _AnnotationEditorUIManager_allEditors, _AnnotationEditorUIManager_allLayers, _AnnotationEditorUIManager_annotationStorage, _AnnotationEditorUIManager_changedExistingAnnotations, _AnnotationEditorUIManager_commandManager, _AnnotationEditorUIManager_currentPageIndex, _AnnotationEditorUIManager_deletedAnnotationsElementIds, _AnnotationEditorUIManager_draggingEditors, _AnnotationEditorUIManager_editorTypes, _AnnotationEditorUIManager_editorsToRescale, _AnnotationEditorUIManager_enableHighlightFloatingButton, _AnnotationEditorUIManager_focusMainContainerTimeoutId, _AnnotationEditorUIManager_focusManagerAC, _AnnotationEditorUIManager_highlightColors, _AnnotationEditorUIManager_highlightWhenShiftUp, _AnnotationEditorUIManager_highlightToolbar, _AnnotationEditorUIManager_idManager, _AnnotationEditorUIManager_isEnabled, _AnnotationEditorUIManager_isWaiting, _AnnotationEditorUIManager_lastActiveElement, _AnnotationEditorUIManager_mode, _AnnotationEditorUIManager_selectedEditors, _AnnotationEditorUIManager_selectedTextNode, _AnnotationEditorUIManager_showAllStates, _AnnotationEditorUIManager_previousStates, _AnnotationEditorUIManager_translation, _AnnotationEditorUIManager_translationTimeoutId, _AnnotationEditorUIManager_container, _AnnotationEditorUIManager_viewer, _AnnotationEditorUIManager_getAnchorElementForSelection, _AnnotationEditorUIManager_getLayerForTextLayer, _AnnotationEditorUIManager_displayHighlightToolbar, _AnnotationEditorUIManager_selectionChange, _AnnotationEditorUIManager_onSelectEnd, _AnnotationEditorUIManager_addSelectionListener, _AnnotationEditorUIManager_addFocusManager, _AnnotationEditorUIManager_removeFocusManager, _AnnotationEditorUIManager_addKeyboardManager, _AnnotationEditorUIManager_removeKeyboardManager, _AnnotationEditorUIManager_addCopyPasteListeners, _AnnotationEditorUIManager_removeCopyPasteListeners, _AnnotationEditorUIManager_addDragAndDropListeners, _AnnotationEditorUIManager_dispatchUpdateStates, _AnnotationEditorUIManager_dispatchUpdateUI, _AnnotationEditorUIManager_enableAll, _AnnotationEditorUIManager_disableAll, _AnnotationEditorUIManager_addEditorToLayer, _AnnotationEditorUIManager_lastSelectedEditor_get, _AnnotationEditorUIManager_isEmpty, _AnnotationEditorUIManager_selectEditors;\n  // import { ImageManager } from \"./helpers/image-manager\";\n  class AnnotationEditorUIManager {\n      // static get _keyboardManager() {\n      //     const proto = AnnotationEditorUIManager.prototype;\n      //     /**\n      //      * If the focused element is an input, we don't want to handle the arrow.\n      //      * For example, sliders can be controlled with the arrow keys.\n      //      */\n      //     const arrowChecker = self =>\n      //         self.#container.contains(document.activeElement) &&\n      //         document.activeElement.tagName !== \"BUTTON\" &&\n      //         self.hasSomethingToControl();\n      //     const textInputChecker = (_self, { target: el }) => {\n      //         if (el instanceof HTMLInputElement) {\n      //             const { type } = el;\n      //             return type !== \"text\" && type !== \"number\";\n      //         }\n      //         return true;\n      //     };\n      //     const small = this.TRANSLATE_SMALL;\n      //     const big = this.TRANSLATE_BIG;\n      //     return shadow(\n      //         this,\n      //         \"_keyboardManager\",\n      //         new KeyboardManager([\n      //             [\n      //                 [\"ctrl+a\", \"mac+meta+a\"],\n      //                 proto.selectAll,\n      //                 { checker: textInputChecker },\n      //             ],\n      //             [[\"ctrl+z\", \"mac+meta+z\"], proto.undo, { checker: textInputChecker }],\n      //             [\n      //                 // On mac, depending of the OS version, the event.key is either \"z\" or\n      //                 // \"Z\" when the user presses \"meta+shift+z\".\n      //                 [\n      //                     \"ctrl+y\",\n      //                     \"ctrl+shift+z\",\n      //                     \"mac+meta+shift+z\",\n      //                     \"ctrl+shift+Z\",\n      //                     \"mac+meta+shift+Z\",\n      //                 ],\n      //                 proto.redo,\n      //                 { checker: textInputChecker },\n      //             ],\n      //             [\n      //                 [\n      //                     \"Backspace\",\n      //                     \"alt+Backspace\",\n      //                     \"ctrl+Backspace\",\n      //                     \"shift+Backspace\",\n      //                     \"mac+Backspace\",\n      //                     \"mac+alt+Backspace\",\n      //                     \"mac+ctrl+Backspace\",\n      //                     \"Delete\",\n      //                     \"ctrl+Delete\",\n      //                     \"shift+Delete\",\n      //                     \"mac+Delete\",\n      //                 ],\n      //                 proto.delete,\n      //                 { checker: textInputChecker },\n      //             ],\n      //             [\n      //                 [\"Enter\", \"mac+Enter\"],\n      //                 proto.addNewEditorFromKeyboard,\n      //                 {\n      //                     // Those shortcuts can be used in the toolbar for some other actions\n      //                     // like zooming, hence we need to check if the container has the\n      //                     // focus.\n      //                     checker: (self, { target: el }) =>\n      //                         !(el instanceof HTMLButtonElement) &&\n      //                         self.#container.contains(el) &&\n      //                         !self.isEnterHandled,\n      //                 },\n      //             ],\n      //             [\n      //                 [\" \", \"mac+ \"],\n      //                 proto.addNewEditorFromKeyboard,\n      //                 {\n      //                     // Those shortcuts can be used in the toolbar for some other actions\n      //                     // like zooming, hence we need to check if the container has the\n      //                     // focus.\n      //                     checker: (self, { target: el }) =>\n      //                         !(el instanceof HTMLButtonElement) &&\n      //                         self.#container.contains(document.activeElement),\n      //                 },\n      //             ],\n      //             [[\"Escape\", \"mac+Escape\"], proto.unselectAll],\n      //             [\n      //                 [\"ArrowLeft\", \"mac+ArrowLeft\"],\n      //                 proto.translateSelectedEditors,\n      //                 { args: [-small, 0], checker: arrowChecker },\n      //             ],\n      //             [\n      //                 [\"ctrl+ArrowLeft\", \"mac+shift+ArrowLeft\"],\n      //                 proto.translateSelectedEditors,\n      //                 { args: [-big, 0], checker: arrowChecker },\n      //             ],\n      //             [\n      //                 [\"ArrowRight\", \"mac+ArrowRight\"],\n      //                 proto.translateSelectedEditors,\n      //                 { args: [small, 0], checker: arrowChecker },\n      //             ],\n      //             [\n      //                 [\"ctrl+ArrowRight\", \"mac+shift+ArrowRight\"],\n      //                 proto.translateSelectedEditors,\n      //                 { args: [big, 0], checker: arrowChecker },\n      //             ],\n      //             [\n      //                 [\"ArrowUp\", \"mac+ArrowUp\"],\n      //                 proto.translateSelectedEditors,\n      //                 { args: [0, -small], checker: arrowChecker },\n      //             ],\n      //             [\n      //                 [\"ctrl+ArrowUp\", \"mac+shift+ArrowUp\"],\n      //                 proto.translateSelectedEditors,\n      //                 { args: [0, -big], checker: arrowChecker },\n      //             ],\n      //             [\n      //                 [\"ArrowDown\", \"mac+ArrowDown\"],\n      //                 proto.translateSelectedEditors,\n      //                 { args: [0, small], checker: arrowChecker },\n      //             ],\n      //             [\n      //                 [\"ctrl+ArrowDown\", \"mac+shift+ArrowDown\"],\n      //                 proto.translateSelectedEditors,\n      //                 { args: [0, big], checker: arrowChecker },\n      //             ],\n      //         ])\n      //     );\n      // }\n      constructor({ container = null, viewer, pdfViewer, \n      // altTextManager,\n      eventBus, pdfDocument, \n      // pageColors,\n      highlightColors = \"\"\n      // enableHighlightFloatingButton,\n      // enableUpdatedAddImage,\n      // enableNewAltTextWhenAddingImage,\n      // mlManager\n       }) {\n          _AnnotationEditorUIManager_instances.add(this);\n          // todo: props\n          // todo: extract to pdf viewer\n          this.pdfViewer = null;\n          this.annotationEditorMode = kendo_pdfjs_loader_js.AnnotationEditorType.NONE;\n          this.viewParameters = {};\n          this.isShiftKeyDown = false;\n          this._eventBus = null;\n          // todo: props\n          _AnnotationEditorUIManager_abortController.set(this, new AbortController());\n          _AnnotationEditorUIManager_activeEditor.set(this, null);\n          _AnnotationEditorUIManager_allEditors.set(this, new Map());\n          _AnnotationEditorUIManager_allLayers.set(this, new Map());\n          // #altTextManager = null;\n          _AnnotationEditorUIManager_annotationStorage.set(this, null);\n          _AnnotationEditorUIManager_changedExistingAnnotations.set(this, null);\n          _AnnotationEditorUIManager_commandManager.set(this, new CommandManager());\n          // #copyPasteAC = null;\n          _AnnotationEditorUIManager_currentPageIndex.set(this, 0);\n          _AnnotationEditorUIManager_deletedAnnotationsElementIds.set(this, new Set());\n          _AnnotationEditorUIManager_draggingEditors.set(this, null);\n          _AnnotationEditorUIManager_editorTypes.set(this, null);\n          _AnnotationEditorUIManager_editorsToRescale.set(this, new Set());\n          // todo: change default value\n          // #enableHighlightFloatingButton = false;\n          _AnnotationEditorUIManager_enableHighlightFloatingButton.set(this, true);\n          // #enableUpdatedAddImage = false;\n          // #enableNewAltTextWhenAddingImage = false;\n          // #filterFactory = null;\n          _AnnotationEditorUIManager_focusMainContainerTimeoutId.set(this, null);\n          _AnnotationEditorUIManager_focusManagerAC.set(this, null);\n          // todo: this is defined in \"highlightEditorColors\" in pdf.js as\n          // value: \"yellow=#FFFF98,green=#53FFBC,blue=#80EBFF,pink=#FFCBE6,red=#FF4F5F\",\n          _AnnotationEditorUIManager_highlightColors.set(this, \"\");\n          _AnnotationEditorUIManager_highlightWhenShiftUp.set(this, false);\n          _AnnotationEditorUIManager_highlightToolbar.set(this, null);\n          _AnnotationEditorUIManager_idManager.set(this, new IdManager());\n          _AnnotationEditorUIManager_isEnabled.set(this, false);\n          _AnnotationEditorUIManager_isWaiting.set(this, false);\n          // #keyboardManagerAC = null;\n          _AnnotationEditorUIManager_lastActiveElement.set(this, null);\n          // #mainHighlightColorPicker = null;\n          // #mlManager = null;\n          _AnnotationEditorUIManager_mode.set(this, kendo_pdfjs_loader_js.AnnotationEditorType.NONE);\n          _AnnotationEditorUIManager_selectedEditors.set(this, new Set());\n          _AnnotationEditorUIManager_selectedTextNode.set(this, null);\n          // #pageColors = null;\n          _AnnotationEditorUIManager_showAllStates.set(this, null);\n          _AnnotationEditorUIManager_previousStates.set(this, {\n              isEditing: false,\n              isEmpty: true,\n              hasSomethingToUndo: false,\n              hasSomethingToRedo: false,\n              hasSelectedEditor: false,\n              hasSelectedText: false\n          });\n          _AnnotationEditorUIManager_translation.set(this, [0, 0]);\n          _AnnotationEditorUIManager_translationTimeoutId.set(this, null);\n          _AnnotationEditorUIManager_container.set(this, null);\n          _AnnotationEditorUIManager_viewer.set(this, null);\n          // // const signal = (this._signal = this.#abortController.signal);\n          const signal = this._signal = __classPrivateFieldGet(this, _AnnotationEditorUIManager_abortController, \"f\").signal;\n          __classPrivateFieldSet(this, _AnnotationEditorUIManager_container, container, \"f\");\n          __classPrivateFieldSet(this, _AnnotationEditorUIManager_viewer, viewer, \"f\");\n          this.pdfViewer = pdfViewer;\n          // this.#altTextManager = altTextManager;\n          this._eventBus = eventBus;\n          this._eventBus._on(\"editingaction\", this.onEditingAction.bind(this), {\n              signal\n          });\n          this._eventBus._on(\"pagechanging\", this.onPageChanging.bind(this), {\n              signal\n          });\n          this._eventBus._on(\"scalechanging\", this.onScaleChanging.bind(this), {\n              signal\n          });\n          this._eventBus._on(\"rotationchanging\", this.onRotationChanging.bind(this), {\n              signal\n          });\n          this._eventBus._on(\"setpreference\", this.onSetPreference.bind(this), {\n              signal\n          });\n          this._eventBus._on(\"namedaction\", this.onNamedAction.bind(this), {\n              signal\n          });\n          __classPrivateFieldGet(this, _AnnotationEditorUIManager_instances, \"m\", _AnnotationEditorUIManager_addSelectionListener).call(this);\n          __classPrivateFieldGet(this, _AnnotationEditorUIManager_instances, \"m\", _AnnotationEditorUIManager_addDragAndDropListeners).call(this);\n          __classPrivateFieldGet(this, _AnnotationEditorUIManager_instances, \"m\", _AnnotationEditorUIManager_addKeyboardManager).call(this);\n          __classPrivateFieldSet(this, _AnnotationEditorUIManager_annotationStorage, pdfDocument.annotationStorage, \"f\");\n          // this.#filterFactory = pdfDocument.filterFactory;\n          // this.#pageColors = pageColors;\n          __classPrivateFieldSet(this, _AnnotationEditorUIManager_highlightColors, highlightColors || \"\", \"f\");\n          // this.#enableHighlightFloatingButton = enableHighlightFloatingButton;\n          // this.#enableUpdatedAddImage = enableUpdatedAddImage;\n          // this.#enableNewAltTextWhenAddingImage = enableNewAltTextWhenAddingImage;\n          // this.#mlManager = mlManager || null;\n          this.viewParameters = {\n              realScale: kendo_pdfjs_loader_js.PixelsPerInch.PDF_TO_CSS_UNITS,\n              rotation: 0\n          };\n          // this.isShiftKeyDown = false;\n          // if ( typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"TESTING\")) {\n          //     window.uiManager = this;\n          //     Object.defineProperty(this, \"reset\", {\n          //         value: () => {\n          //             this.selectAll();\n          //             this.delete();\n          //             this.#idManager.reset();\n          //         },\n          //     });\n          // }\n      }\n      destroy() {\n          var _a;\n          (_a = __classPrivateFieldGet(this, _AnnotationEditorUIManager_abortController, \"f\")) === null || _a === void 0 ? void 0 : _a.abort();\n          __classPrivateFieldSet(this, _AnnotationEditorUIManager_abortController, null, \"f\");\n          this._signal = null;\n          for (const layer of __classPrivateFieldGet(this, _AnnotationEditorUIManager_allLayers, \"f\").values()) {\n              layer.destroy();\n          }\n          __classPrivateFieldGet(this, _AnnotationEditorUIManager_allLayers, \"f\").clear();\n          __classPrivateFieldGet(this, _AnnotationEditorUIManager_allEditors, \"f\").clear();\n          __classPrivateFieldGet(this, _AnnotationEditorUIManager_editorsToRescale, \"f\").clear();\n          __classPrivateFieldSet(this, _AnnotationEditorUIManager_activeEditor, null, \"f\");\n          __classPrivateFieldGet(this, _AnnotationEditorUIManager_selectedEditors, \"f\").clear();\n          __classPrivateFieldGet(this, _AnnotationEditorUIManager_commandManager, \"f\").destroy();\n          // this.#altTextManager?.destroy();\n          // this.#highlightToolbar?.hide();\n          // this.#highlightToolbar = null;\n          if (__classPrivateFieldGet(this, _AnnotationEditorUIManager_focusMainContainerTimeoutId, \"f\")) {\n              clearTimeout(__classPrivateFieldGet(this, _AnnotationEditorUIManager_focusMainContainerTimeoutId, \"f\"));\n              __classPrivateFieldSet(this, _AnnotationEditorUIManager_focusMainContainerTimeoutId, null, \"f\");\n          }\n          if (__classPrivateFieldGet(this, _AnnotationEditorUIManager_translationTimeoutId, \"f\")) {\n              clearTimeout(__classPrivateFieldGet(this, _AnnotationEditorUIManager_translationTimeoutId, \"f\"));\n              __classPrivateFieldSet(this, _AnnotationEditorUIManager_translationTimeoutId, null, \"f\");\n          }\n      }\n      // todo: new\n      getTextLayerForAnchor(anchorElement) {\n          if (!anchorElement) {\n              return null;\n          }\n          return anchorElement.closest(\".textLayer\") || anchorElement.closest(\".k-text-layer\");\n      }\n      combinedSignal(abortSignal) {\n          if (AbortSignal && AbortSignal[\"any\"]) {\n              return AbortSignal.any([this._signal, abortSignal.signal]);\n          }\n          else {\n              // add this for the unit tests\n              // AbortSignal.any is an API since March 2024\n              // however, this API is not currently available in\n              // the node/jest-related bits version that we are using\n              return this._signal || abortSignal.signal;\n          }\n      }\n      // get mlManager() {\n      //     return this.#mlManager;\n      // }\n      // get useNewAltTextFlow() {\n      //     return this.#enableUpdatedAddImage;\n      // }\n      // get useNewAltTextWhenAddingImage() {\n      //     return this.#enableNewAltTextWhenAddingImage;\n      // }\n      // get hcmFilter() {\n      //     return shadow(\n      //         this,\n      //         \"hcmFilter\",\n      //         this.#pageColors\n      //             ? this.#filterFactory.addHCMFilter(\n      //                 this.#pageColors.foreground,\n      //                 this.#pageColors.background\n      //             )\n      //             : \"none\"\n      //     );\n      // }\n      get direction() {\n          return kendo_pdfjs_loader_js.shadow(this, \"direction\", getComputedStyle(__classPrivateFieldGet(this, _AnnotationEditorUIManager_container, \"f\")).direction);\n      }\n      get highlightColors() {\n          return kendo_pdfjs_loader_js.shadow(this, \"highlightColors\", __classPrivateFieldGet(this, _AnnotationEditorUIManager_highlightColors, \"f\")\n              ? new Map(\n              // Array.from(\n              //     this.#highlightColors\n              //         .split(\",\")\n              //         .map(pair => pair.split(\"=\").map(x => x.trim()))\n              // )\n              )\n              : null);\n      }\n      get highlightColorNames() {\n          return kendo_pdfjs_loader_js.shadow(this, \"highlightColorNames\", this.highlightColors\n              ? new Map(Array.from(this.highlightColors, e => e.reverse()))\n              : null);\n      }\n      // setMainHighlightColorPicker(colorPicker) {\n      //     this.#mainHighlightColorPicker = colorPicker;\n      // }\n      // editAltText(editor, firstTime = false) {\n      //     this.#altTextManager?.editAltText(this, editor, firstTime);\n      // }\n      switchToMode(mode, callback) {\n          // Switching to a mode can be asynchronous.\n          this._eventBus.on(\"annotationeditormodechanged\", callback, {\n              once: true,\n              signal: this._signal,\n              mode\n          });\n          this._eventBus.dispatch(\"showannotationeditorui\", {\n              source: this,\n              mode\n          });\n      }\n      setPreference(name, value) {\n          this._eventBus.dispatch(\"setpreference\", {\n              source: this,\n              name,\n              value\n          });\n      }\n      // onSetPreference({ name, value }) {\n      onSetPreference({ name }) {\n          switch (name) {\n              case \"enableNewAltTextWhenAddingImage\":\n                  // this.#enableNewAltTextWhenAddingImage = value;\n                  break;\n              default: break;\n          }\n      }\n      onNamedAction(event) {\n          // Processing a couple of named actions that might be useful, see also\n          // `PDFLinkService.executeNamedAction`.\n          switch (event.action) {\n              case \"Print\":\n                  this.triggerPrinting();\n                  break;\n              case \"SaveAs\":\n                  this.downloadOrSave();\n                  break;\n          }\n      }\n      onPageChanging({ pageNumber }) {\n          __classPrivateFieldSet(this, _AnnotationEditorUIManager_currentPageIndex, pageNumber - 1, \"f\");\n      }\n      focusMainContainer() {\n          var _a;\n          (_a = __classPrivateFieldGet(this, _AnnotationEditorUIManager_container, \"f\")) === null || _a === void 0 ? void 0 : _a.focus();\n      }\n      findParent(x, y) {\n          for (const layer of __classPrivateFieldGet(this, _AnnotationEditorUIManager_allLayers, \"f\").values()) {\n              const { x: layerX, y: layerY, width, height } = layer.div.getBoundingClientRect();\n              if (x >= layerX &&\n                  x <= layerX + width &&\n                  y >= layerY &&\n                  y <= layerY + height) {\n                  return layer;\n              }\n          }\n          return null;\n      }\n      triggerPrinting() {\n          var _a;\n          (_a = this.pdfViewer) === null || _a === void 0 ? void 0 : _a.printFile();\n      }\n      downloadOrSave() {\n          var _a, _b;\n          (_a = this.pdfViewer) === null || _a === void 0 ? void 0 : _a.downloadFile({\n              fileName: (_b = this.pdfViewer) === null || _b === void 0 ? void 0 : _b.options.downloadFileName\n          });\n      }\n      disableUserSelect(value = false) {\n          var _a;\n          (_a = __classPrivateFieldGet(this, _AnnotationEditorUIManager_viewer, \"f\")) === null || _a === void 0 ? void 0 : _a.classList.toggle(\"noUserSelect\", value);\n      }\n      addShouldRescale(editor) {\n          __classPrivateFieldGet(this, _AnnotationEditorUIManager_editorsToRescale, \"f\").add(editor);\n      }\n      removeShouldRescale(editor) {\n          __classPrivateFieldGet(this, _AnnotationEditorUIManager_editorsToRescale, \"f\").delete(editor);\n      }\n      onScaleChanging({ scale }) {\n          this.commitOrRemove();\n          this.viewParameters.realScale = scale * kendo_pdfjs_loader_js.PixelsPerInch.PDF_TO_CSS_UNITS;\n          for (const editor of __classPrivateFieldGet(this, _AnnotationEditorUIManager_editorsToRescale, \"f\")) {\n              editor.onScaleChanging();\n          }\n      }\n      onRotationChanging({ pagesRotation }) {\n          this.commitOrRemove();\n          this.viewParameters.rotation = pagesRotation;\n      }\n      highlightSelection(methodOfCreation = \"\") {\n          const selection = document.getSelection();\n          if (!selection || selection.isCollapsed) {\n              return;\n          }\n          const { anchorNode, anchorOffset, focusNode, focusOffset } = selection;\n          const text = selection.toString();\n          const anchorElement = __classPrivateFieldGet(this, _AnnotationEditorUIManager_instances, \"m\", _AnnotationEditorUIManager_getAnchorElementForSelection).call(this, selection);\n          // const textLayer = anchorElement.closest(\".textLayer\");\n          const textLayer = this.getTextLayerForAnchor(anchorElement);\n          const boxes = this.getSelectionBoxes(textLayer);\n          if (!boxes) {\n              return;\n          }\n          selection.empty();\n          const layer = __classPrivateFieldGet(this, _AnnotationEditorUIManager_instances, \"m\", _AnnotationEditorUIManager_getLayerForTextLayer).call(this, textLayer);\n          const isNoneMode = __classPrivateFieldGet(this, _AnnotationEditorUIManager_mode, \"f\") === kendo_pdfjs_loader_js.AnnotationEditorType.NONE;\n          const callback = () => {\n              layer === null || layer === void 0 ? void 0 : layer.createAndAddNewEditor({ x: 0, y: 0 }, false, {\n                  methodOfCreation,\n                  boxes,\n                  anchorNode,\n                  anchorOffset,\n                  focusNode,\n                  focusOffset,\n                  text\n              });\n              if (isNoneMode) {\n                  // this.showAllEditors(\"highlight\", true, /* updateButton = */ true);\n                  this.showAllEditors(\"highlight\", true);\n              }\n          };\n          if (isNoneMode) {\n              this.switchToMode(kendo_pdfjs_loader_js.AnnotationEditorType.HIGHLIGHT, callback);\n              return;\n          }\n          callback();\n      }\n      showEditorToolBar(anchor) {\n          if (!anchor) {\n              return;\n          }\n          const annotationEditorMode = this.getMode();\n          if (annotationEditorMode !== kendo_pdfjs_loader_js.AnnotationEditorType.HIGHLIGHT &&\n              annotationEditorMode !== kendo_pdfjs_loader_js.AnnotationEditorType.FREETEXT) {\n              return;\n          }\n          this._eventBus.dispatch(\"kendoAnnotationEditorToolBarShow\", {\n              source: this,\n              anchor: anchor\n          });\n      }\n      hideEditorToolBar() {\n          this._eventBus.dispatch(\"kendoAnnotationEditorToolBarHide\", {\n              source: this\n          });\n      }\n      /**\n       * Add an editor in the annotation storage.\n       * @param {AnnotationEditor} editor\n       */\n      addToAnnotationStorage(editor) {\n          if (!editor.isEmpty() &&\n              __classPrivateFieldGet(this, _AnnotationEditorUIManager_annotationStorage, \"f\") &&\n              !__classPrivateFieldGet(this, _AnnotationEditorUIManager_annotationStorage, \"f\").has(editor.id)) {\n              __classPrivateFieldGet(this, _AnnotationEditorUIManager_annotationStorage, \"f\").setValue(editor.id, editor);\n          }\n      }\n      blur() {\n          this.isShiftKeyDown = false;\n          if (__classPrivateFieldGet(this, _AnnotationEditorUIManager_highlightWhenShiftUp, \"f\")) {\n              __classPrivateFieldSet(this, _AnnotationEditorUIManager_highlightWhenShiftUp, false, \"f\");\n              __classPrivateFieldGet(this, _AnnotationEditorUIManager_instances, \"m\", _AnnotationEditorUIManager_onSelectEnd).call(this, \"main_toolbar\");\n          }\n          if (!this.hasSelection) {\n              return;\n          }\n          // When several editors are selected and the window loses focus, we want to\n          // keep the last active element in order to be able to focus it again when\n          // the window gets the focus back but we don't want to trigger any focus\n          // callbacks else only one editor will be selected.\n          const { activeElement } = document;\n          for (const editor of __classPrivateFieldGet(this, _AnnotationEditorUIManager_selectedEditors, \"f\")) {\n              if (editor.div.contains(activeElement)) {\n                  __classPrivateFieldSet(this, _AnnotationEditorUIManager_lastActiveElement, [editor, activeElement], \"f\");\n                  editor._focusEventsAllowed = false;\n                  break;\n              }\n          }\n      }\n      focus() {\n          if (!__classPrivateFieldGet(this, _AnnotationEditorUIManager_lastActiveElement, \"f\")) {\n              return;\n          }\n          const [lastEditor, lastActiveElement] = __classPrivateFieldGet(this, _AnnotationEditorUIManager_lastActiveElement, \"f\");\n          __classPrivateFieldSet(this, _AnnotationEditorUIManager_lastActiveElement, null, \"f\");\n          lastActiveElement.addEventListener(\"focusin\", () => {\n              lastEditor._focusEventsAllowed = true;\n          }, { once: true, signal: this._signal });\n          lastActiveElement.focus();\n      }\n      addEditListeners() {\n          __classPrivateFieldGet(this, _AnnotationEditorUIManager_instances, \"m\", _AnnotationEditorUIManager_addKeyboardManager).call(this);\n          __classPrivateFieldGet(this, _AnnotationEditorUIManager_instances, \"m\", _AnnotationEditorUIManager_addCopyPasteListeners).call(this);\n      }\n      removeEditListeners() {\n          __classPrivateFieldGet(this, _AnnotationEditorUIManager_instances, \"m\", _AnnotationEditorUIManager_removeKeyboardManager).call(this);\n          __classPrivateFieldGet(this, _AnnotationEditorUIManager_instances, \"m\", _AnnotationEditorUIManager_removeCopyPasteListeners).call(this);\n      }\n      dragOver(event) {\n          for (const { type } of event.dataTransfer.items) {\n              for (const editorType of __classPrivateFieldGet(this, _AnnotationEditorUIManager_editorTypes, \"f\")) {\n                  if (editorType.isHandlingMimeForPasting(type)) {\n                      event.dataTransfer.dropEffect = \"copy\";\n                      event.preventDefault();\n                      return;\n                  }\n              }\n          }\n      }\n      /**\n       * Drop callback.\n       * @param {DragEvent} event\n       */\n      drop(event) {\n          for (const item of event.dataTransfer.items) {\n              for (const editorType of __classPrivateFieldGet(this, _AnnotationEditorUIManager_editorTypes, \"f\")) {\n                  if (editorType.isHandlingMimeForPasting(item.type)) {\n                      editorType.paste(item, this.currentLayer);\n                      event.preventDefault();\n                      return;\n                  }\n              }\n          }\n      }\n      /**\n       * Copy callback.\n       * @param {ClipboardEvent} event\n       */\n      copy(event) {\n          var _a;\n          event.preventDefault();\n          // An editor is being edited so just commit it.\n          (_a = __classPrivateFieldGet(this, _AnnotationEditorUIManager_activeEditor, \"f\")) === null || _a === void 0 ? void 0 : _a.commitOrRemove();\n          if (!this.hasSelection) {\n              return;\n          }\n          const editors = [];\n          for (const editor of __classPrivateFieldGet(this, _AnnotationEditorUIManager_selectedEditors, \"f\")) {\n              const serialized = editor.serialize(/* isForCopying = */ true);\n              if (serialized) {\n                  editors.push(serialized);\n              }\n          }\n          if (editors.length === 0) {\n              return;\n          }\n          event.clipboardData.setData(\"application/pdfjs\", JSON.stringify(editors));\n      }\n      /**\n       * Cut callback.\n       * @param {ClipboardEvent} event\n       */\n      cut(event) {\n          this.copy(event);\n          this.delete();\n      }\n      /**\n       * Paste callback.\n       * @param {ClipboardEvent} event\n       */\n      paste(event) {\n          event.preventDefault();\n          const { clipboardData } = event;\n          for (const item of clipboardData.items) {\n              for (const editorType of __classPrivateFieldGet(this, _AnnotationEditorUIManager_editorTypes, \"f\")) {\n                  if (editorType.isHandlingMimeForPasting(item.type)) {\n                      editorType.paste(item, this.currentLayer);\n                      return;\n                  }\n              }\n          }\n          let data = clipboardData.getData(\"application/pdfjs\");\n          if (!data) {\n              return;\n          }\n          try {\n              data = JSON.parse(data);\n          }\n          catch (ex) {\n              // warn(`paste: \"${ex.message}\".`);\n              return;\n          }\n          if (!Array.isArray(data)) {\n              return;\n          }\n          this.unselectAll();\n          const layer = this.currentLayer;\n          try {\n              const newEditors = [];\n              for (const editor of data) {\n                  const deserializedEditor = layer.deserialize(editor);\n                  if (!deserializedEditor) {\n                      return;\n                  }\n                  newEditors.push(deserializedEditor);\n              }\n              const cmd = () => {\n                  for (const editor of newEditors) {\n                      __classPrivateFieldGet(this, _AnnotationEditorUIManager_instances, \"m\", _AnnotationEditorUIManager_addEditorToLayer).call(this, editor);\n                  }\n                  __classPrivateFieldGet(this, _AnnotationEditorUIManager_instances, \"m\", _AnnotationEditorUIManager_selectEditors).call(this, newEditors);\n              };\n              const undo = () => {\n                  for (const editor of newEditors) {\n                      editor.remove();\n                  }\n              };\n              this.addCommands({ cmd, undo, mustExec: true });\n          }\n          catch (ex) {\n              // warn(`paste: \"${ex.message}\".`);\n          }\n      }\n      // /**\n      //  * Keydown callback.\n      //  * @param {KeyboardEvent} event\n      //  */\n      // keydown(event) {\n      //     if (!this.isShiftKeyDown && event.key === \"Shift\") {\n      //         this.isShiftKeyDown = true;\n      //     }\n      //     if (\n      //         this.#mode !== AnnotationEditorType.NONE &&\n      //         !this.isEditorHandlingKeyboard\n      //     ) {\n      //         AnnotationEditorUIManager._keyboardManager.exec(this, event);\n      //     }\n      // }\n      // /**\n      //  * Keyup callback.\n      //  * @param {KeyboardEvent} event\n      //  */\n      // keyup(event) {\n      //     if (this.isShiftKeyDown && event.key === \"Shift\") {\n      //         this.isShiftKeyDown = false;\n      //         if (this.#highlightWhenShiftUp) {\n      //             this.#highlightWhenShiftUp = false;\n      //             this.#onSelectEnd(\"main_toolbar\");\n      //         }\n      //     }\n      // }\n      /**\n       * Execute an action for a given name.\n       * For example, the user can click on the \"Undo\" entry in the context menu\n       * and it'll trigger the undo action.\n       */\n      onEditingAction({ name }) {\n          switch (name) {\n              case \"undo\":\n              case \"redo\":\n              case \"delete\":\n              case \"selectAll\":\n                  this[name]();\n                  break;\n              case \"highlightSelection\":\n                  this.highlightSelection(\"context_menu\");\n                  break;\n              default: break;\n          }\n      }\n      /**\n       * Set the editing state.\n       * It can be useful to temporarily disable it when the user is editing a\n       * FreeText annotation.\n       * @param {boolean} isEditing\n       */\n      setEditingState(isEditing) {\n          // setEditingState() {\n          if (isEditing) {\n              __classPrivateFieldGet(this, _AnnotationEditorUIManager_instances, \"m\", _AnnotationEditorUIManager_addFocusManager).call(this);\n              __classPrivateFieldGet(this, _AnnotationEditorUIManager_instances, \"m\", _AnnotationEditorUIManager_addCopyPasteListeners).call(this);\n              __classPrivateFieldGet(this, _AnnotationEditorUIManager_instances, \"m\", _AnnotationEditorUIManager_dispatchUpdateStates).call(this, {\n                  isEditing: __classPrivateFieldGet(this, _AnnotationEditorUIManager_mode, \"f\") !== kendo_pdfjs_loader_js.AnnotationEditorType.NONE,\n                  isEmpty: __classPrivateFieldGet(this, _AnnotationEditorUIManager_instances, \"m\", _AnnotationEditorUIManager_isEmpty).call(this),\n                  hasSomethingToUndo: __classPrivateFieldGet(this, _AnnotationEditorUIManager_commandManager, \"f\").hasSomethingToUndo(),\n                  hasSomethingToRedo: __classPrivateFieldGet(this, _AnnotationEditorUIManager_commandManager, \"f\").hasSomethingToRedo(),\n                  hasSelectedEditor: false\n              });\n          }\n          else {\n              __classPrivateFieldGet(this, _AnnotationEditorUIManager_instances, \"m\", _AnnotationEditorUIManager_removeFocusManager).call(this);\n              __classPrivateFieldGet(this, _AnnotationEditorUIManager_instances, \"m\", _AnnotationEditorUIManager_removeCopyPasteListeners).call(this);\n              __classPrivateFieldGet(this, _AnnotationEditorUIManager_instances, \"m\", _AnnotationEditorUIManager_dispatchUpdateStates).call(this, {\n                  isEditing: false\n              });\n              this.disableUserSelect(false);\n          }\n      }\n      registerEditorTypes(types) {\n          if (__classPrivateFieldGet(this, _AnnotationEditorUIManager_editorTypes, \"f\")) {\n              return;\n          }\n          __classPrivateFieldSet(this, _AnnotationEditorUIManager_editorTypes, types, \"f\");\n          for (const editorType of __classPrivateFieldGet(this, _AnnotationEditorUIManager_editorTypes, \"f\")) {\n              __classPrivateFieldGet(this, _AnnotationEditorUIManager_instances, \"m\", _AnnotationEditorUIManager_dispatchUpdateUI).call(this, editorType.defaultPropertiesToUpdate);\n          }\n      }\n      /**\n       * Get an id.\n       * @returns {string}\n       */\n      getId() {\n          return __classPrivateFieldGet(this, _AnnotationEditorUIManager_idManager, \"f\").id;\n      }\n      get currentLayer() {\n          return __classPrivateFieldGet(this, _AnnotationEditorUIManager_allLayers, \"f\").get(__classPrivateFieldGet(this, _AnnotationEditorUIManager_currentPageIndex, \"f\"));\n      }\n      getLayer(pageIndex) {\n          return __classPrivateFieldGet(this, _AnnotationEditorUIManager_allLayers, \"f\").get(pageIndex);\n      }\n      get currentPageIndex() {\n          return __classPrivateFieldGet(this, _AnnotationEditorUIManager_currentPageIndex, \"f\");\n      }\n      /**\n       * Add a new layer for a page which will contains the editors.\n       * @param {AnnotationEditorLayer} layer\n       */\n      addLayer(layer) {\n          __classPrivateFieldGet(this, _AnnotationEditorUIManager_allLayers, \"f\").set(layer.pageIndex, layer);\n          if (__classPrivateFieldGet(this, _AnnotationEditorUIManager_isEnabled, \"f\")) {\n              layer.enable();\n          }\n          else {\n              layer.disable();\n          }\n      }\n      /**\n       * Remove a layer.\n       * @param {AnnotationEditorLayer} layer\n       */\n      removeLayer(layer) {\n          __classPrivateFieldGet(this, _AnnotationEditorUIManager_allLayers, \"f\").delete(layer.pageIndex);\n      }\n      /**\n       * Change the editor mode (None, FreeText, Ink, ...)\n       * @param {number} mode\n       * @param {string|null} editId\n       * @param {boolean} [isFromKeyboard] - true if the mode change is due to a\n       *   keyboard action.\n       */\n      updateMode(mode, editId = null, isFromKeyboard = false) {\n          // todo: set isFromKeyboard intentionally to allow editor creation\n          // updateMode(mode, editId = null, isFromKeyboard = true) {\n          if (__classPrivateFieldGet(this, _AnnotationEditorUIManager_mode, \"f\") === mode) {\n              return;\n          }\n          __classPrivateFieldSet(this, _AnnotationEditorUIManager_mode, mode, \"f\");\n          if (mode === kendo_pdfjs_loader_js.AnnotationEditorType.NONE) {\n              this.setEditingState(false);\n              __classPrivateFieldGet(this, _AnnotationEditorUIManager_instances, \"m\", _AnnotationEditorUIManager_disableAll).call(this);\n              return;\n          }\n          this.setEditingState(true);\n          __classPrivateFieldGet(this, _AnnotationEditorUIManager_instances, \"m\", _AnnotationEditorUIManager_enableAll).call(this);\n          this.unselectAll();\n          for (const layer of __classPrivateFieldGet(this, _AnnotationEditorUIManager_allLayers, \"f\").values()) {\n              layer.updateMode(mode);\n          }\n          if (!editId && isFromKeyboard) {\n              this.addNewEditorFromKeyboard();\n              return;\n          }\n          if (!editId) {\n              return;\n          }\n          for (const editor of __classPrivateFieldGet(this, _AnnotationEditorUIManager_allEditors, \"f\").values()) {\n              if (editor.annotationElementId === editId) {\n                  this.setSelected(editor);\n                  editor.enterInEditMode();\n                  break;\n              }\n          }\n      }\n      addNewEditorFromKeyboard() {\n          if (this.currentLayer.canCreateNewEmptyEditor()) {\n              this.currentLayer.addNewEditor();\n          }\n      }\n      /**\n       * Update the toolbar if it's required to reflect the tool currently used.\n       * @param {number} mode\n       * @returns {undefined}\n       */\n      updateToolbar(mode) {\n          if (mode === __classPrivateFieldGet(this, _AnnotationEditorUIManager_mode, \"f\")) {\n              return;\n          }\n          this._eventBus.dispatch(\"switchannotationeditormode\", {\n              source: this,\n              mode\n          });\n      }\n      /**\n       * Update a parameter in the current editor or globally.\n       * @param {number} type\n       * @param {*} value\n       */\n      updateParams(type, value) {\n          if (!__classPrivateFieldGet(this, _AnnotationEditorUIManager_editorTypes, \"f\")) {\n              return;\n          }\n          switch (type) {\n              case kendo_pdfjs_loader_js.AnnotationEditorParamsType.CREATE:\n                  this.currentLayer.addNewEditor();\n                  return;\n              case kendo_pdfjs_loader_js.AnnotationEditorParamsType.HIGHLIGHT_DEFAULT_COLOR:\n                  // this.#mainHighlightColorPicker?.updateColor(value);\n                  break;\n              case kendo_pdfjs_loader_js.AnnotationEditorParamsType.HIGHLIGHT_SHOW_ALL:\n                  // this._eventBus.dispatch(\"reporttelemetry\", {\n                  //     source: this,\n                  //     details: {\n                  //         type: \"editing\",\n                  //         data: {\n                  //             type: \"highlight\",\n                  //             action: \"toggle_visibility\",\n                  //         },\n                  //     },\n                  // });\n                  (__classPrivateFieldSet(this, _AnnotationEditorUIManager_showAllStates, __classPrivateFieldGet(this, _AnnotationEditorUIManager_showAllStates, \"f\") || new Map(), \"f\")).set(type, value);\n                  this.showAllEditors(\"highlight\", value);\n                  break;\n              default: break;\n          }\n          for (const editor of __classPrivateFieldGet(this, _AnnotationEditorUIManager_selectedEditors, \"f\")) {\n              editor.updateParams(type, value);\n          }\n          for (const editorType of __classPrivateFieldGet(this, _AnnotationEditorUIManager_editorTypes, \"f\")) {\n              editorType.updateDefaultParams(type, value);\n          }\n      }\n      // showAllEditors(type, visible, updateButton = false) {\n      showAllEditors(type, visible) {\n          var _a, _b;\n          for (const editor of __classPrivateFieldGet(this, _AnnotationEditorUIManager_allEditors, \"f\").values()) {\n              if (editor.editorType === type) {\n                  editor.show(visible);\n              }\n          }\n          const state = (_b = (_a = __classPrivateFieldGet(this, _AnnotationEditorUIManager_showAllStates, \"f\")) === null || _a === void 0 ? void 0 : _a.get(kendo_pdfjs_loader_js.AnnotationEditorParamsType.HIGHLIGHT_SHOW_ALL)) !== null && _b !== void 0 ? _b : true;\n          if (state !== visible) {\n              __classPrivateFieldGet(this, _AnnotationEditorUIManager_instances, \"m\", _AnnotationEditorUIManager_dispatchUpdateUI).call(this, [\n                  [kendo_pdfjs_loader_js.AnnotationEditorParamsType.HIGHLIGHT_SHOW_ALL, visible]\n              ]);\n          }\n      }\n      enableWaiting(mustWait = false) {\n          if (__classPrivateFieldGet(this, _AnnotationEditorUIManager_isWaiting, \"f\") === mustWait) {\n              return;\n          }\n          __classPrivateFieldSet(this, _AnnotationEditorUIManager_isWaiting, mustWait, \"f\");\n          for (const layer of __classPrivateFieldGet(this, _AnnotationEditorUIManager_allLayers, \"f\").values()) {\n              if (mustWait) {\n                  layer.disableClick();\n              }\n              else {\n                  layer.enableClick();\n              }\n              layer.div.classList.toggle(\"waiting\", mustWait);\n          }\n      }\n      /**\n       * Get all the editors belonging to a given page.\n       * @param {number} pageIndex\n       * @returns {Array<AnnotationEditor>}\n       */\n      getEditors(pageIndex) {\n          const editors = [];\n          for (const editor of __classPrivateFieldGet(this, _AnnotationEditorUIManager_allEditors, \"f\").values()) {\n              if (editor.pageIndex === pageIndex) {\n                  editors.push(editor);\n              }\n          }\n          return editors;\n      }\n      /**\n       * Get an editor with the given id.\n       * @param {string} id\n       * @returns {AnnotationEditor}\n       */\n      getEditor(id) {\n          return __classPrivateFieldGet(this, _AnnotationEditorUIManager_allEditors, \"f\").get(id);\n      }\n      /**\n       * Add a new editor.\n       * @param {AnnotationEditor} editor\n       */\n      addEditor(editor) {\n          __classPrivateFieldGet(this, _AnnotationEditorUIManager_allEditors, \"f\").set(editor.id, editor);\n      }\n      /**\n       * Remove an editor.\n       * @param {AnnotationEditor} editor\n       */\n      removeEditor(editor) {\n          var _a;\n          if (editor.div.contains(document.activeElement)) {\n              if (__classPrivateFieldGet(this, _AnnotationEditorUIManager_focusMainContainerTimeoutId, \"f\")) {\n                  clearTimeout(__classPrivateFieldGet(this, _AnnotationEditorUIManager_focusMainContainerTimeoutId, \"f\"));\n              }\n              __classPrivateFieldSet(this, _AnnotationEditorUIManager_focusMainContainerTimeoutId, setTimeout(() => {\n                  // When the div is removed from DOM the focus can move on the\n                  // document.body, so we need to move it back to the main container.\n                  this.focusMainContainer();\n                  __classPrivateFieldSet(this, _AnnotationEditorUIManager_focusMainContainerTimeoutId, null, \"f\");\n              }, 0), \"f\");\n          }\n          __classPrivateFieldGet(this, _AnnotationEditorUIManager_allEditors, \"f\").delete(editor.id);\n          this.unselect(editor);\n          if (!editor.annotationElementId ||\n              !__classPrivateFieldGet(this, _AnnotationEditorUIManager_deletedAnnotationsElementIds, \"f\").has(editor.annotationElementId)) {\n              (_a = __classPrivateFieldGet(this, _AnnotationEditorUIManager_annotationStorage, \"f\")) === null || _a === void 0 ? void 0 : _a.remove(editor.id);\n          }\n      }\n      /**\n       * The annotation element with the given id has been deleted.\n       * @param {AnnotationEditor} editor\n       */\n      addDeletedAnnotationElement(editor) {\n          __classPrivateFieldGet(this, _AnnotationEditorUIManager_deletedAnnotationsElementIds, \"f\").add(editor.annotationElementId);\n          this.addChangedExistingAnnotation(editor);\n          editor.deleted = true;\n      }\n      /**\n       * Check if the annotation element with the given id has been deleted.\n       * @param {string} annotationElementId\n       * @returns {boolean}\n       */\n      isDeletedAnnotationElement(annotationElementId) {\n          return __classPrivateFieldGet(this, _AnnotationEditorUIManager_deletedAnnotationsElementIds, \"f\").has(annotationElementId);\n      }\n      /**\n       * The annotation element with the given id have been restored.\n       * @param {AnnotationEditor} editor\n       */\n      removeDeletedAnnotationElement(editor) {\n          __classPrivateFieldGet(this, _AnnotationEditorUIManager_deletedAnnotationsElementIds, \"f\").delete(editor.annotationElementId);\n          this.removeChangedExistingAnnotation(editor);\n          editor.deleted = false;\n      }\n      /**\n       * Set the given editor as the active one.\n       * @param {AnnotationEditor} editor\n       */\n      setActiveEditor(editor) {\n          if (__classPrivateFieldGet(this, _AnnotationEditorUIManager_activeEditor, \"f\") === editor) {\n              return;\n          }\n          __classPrivateFieldSet(this, _AnnotationEditorUIManager_activeEditor, editor, \"f\");\n          if (editor) {\n              __classPrivateFieldGet(this, _AnnotationEditorUIManager_instances, \"m\", _AnnotationEditorUIManager_dispatchUpdateUI).call(this, editor.propertiesToUpdate);\n          }\n      }\n      /**\n       * Update the UI of the active editor.\n       * @param {AnnotationEditor} editor\n       */\n      updateUI(editor) {\n          if (__classPrivateFieldGet(this, _AnnotationEditorUIManager_instances, \"a\", _AnnotationEditorUIManager_lastSelectedEditor_get) === editor) {\n              __classPrivateFieldGet(this, _AnnotationEditorUIManager_instances, \"m\", _AnnotationEditorUIManager_dispatchUpdateUI).call(this, editor.propertiesToUpdate);\n          }\n      }\n      /**\n       * Add or remove an editor the current selection.\n       * @param {AnnotationEditor} editor\n       */\n      toggleSelected(editor) {\n          if (__classPrivateFieldGet(this, _AnnotationEditorUIManager_selectedEditors, \"f\").has(editor)) {\n              __classPrivateFieldGet(this, _AnnotationEditorUIManager_selectedEditors, \"f\").delete(editor);\n              editor.unselect();\n              __classPrivateFieldGet(this, _AnnotationEditorUIManager_instances, \"m\", _AnnotationEditorUIManager_dispatchUpdateStates).call(this, {\n                  hasSelectedEditor: this.hasSelection\n              });\n              return;\n          }\n          __classPrivateFieldGet(this, _AnnotationEditorUIManager_selectedEditors, \"f\").add(editor);\n          editor.select();\n          __classPrivateFieldGet(this, _AnnotationEditorUIManager_instances, \"m\", _AnnotationEditorUIManager_dispatchUpdateUI).call(this, editor.propertiesToUpdate);\n          __classPrivateFieldGet(this, _AnnotationEditorUIManager_instances, \"m\", _AnnotationEditorUIManager_dispatchUpdateStates).call(this, {\n              hasSelectedEditor: true\n          });\n      }\n      /**\n       * Set the last selected editor.\n       * @param {AnnotationEditor} editor\n       */\n      setSelected(editor) {\n          for (const selectedEditor of __classPrivateFieldGet(this, _AnnotationEditorUIManager_selectedEditors, \"f\")) {\n              if (selectedEditor !== editor) {\n                  selectedEditor.unselect();\n              }\n          }\n          __classPrivateFieldGet(this, _AnnotationEditorUIManager_selectedEditors, \"f\").clear();\n          __classPrivateFieldGet(this, _AnnotationEditorUIManager_selectedEditors, \"f\").add(editor);\n          editor.select();\n          __classPrivateFieldGet(this, _AnnotationEditorUIManager_instances, \"m\", _AnnotationEditorUIManager_dispatchUpdateUI).call(this, editor.propertiesToUpdate);\n          __classPrivateFieldGet(this, _AnnotationEditorUIManager_instances, \"m\", _AnnotationEditorUIManager_dispatchUpdateStates).call(this, {\n              hasSelectedEditor: true\n          });\n      }\n      /**\n       * Check if the editor is selected.\n       * @param {AnnotationEditor} editor\n       */\n      isSelected(editor) {\n          return __classPrivateFieldGet(this, _AnnotationEditorUIManager_selectedEditors, \"f\").has(editor);\n      }\n      get firstSelectedEditor() {\n          return __classPrivateFieldGet(this, _AnnotationEditorUIManager_selectedEditors, \"f\").values().next().value;\n      }\n      /**\n       * Unselect an editor.\n       * @param {AnnotationEditor} editor\n       */\n      unselect(editor) {\n          editor.unselect();\n          __classPrivateFieldGet(this, _AnnotationEditorUIManager_selectedEditors, \"f\").delete(editor);\n          __classPrivateFieldGet(this, _AnnotationEditorUIManager_instances, \"m\", _AnnotationEditorUIManager_dispatchUpdateStates).call(this, {\n              hasSelectedEditor: this.hasSelection\n          });\n      }\n      get hasSelection() {\n          return __classPrivateFieldGet(this, _AnnotationEditorUIManager_selectedEditors, \"f\").size !== 0;\n      }\n      get isEnterHandled() {\n          return (__classPrivateFieldGet(this, _AnnotationEditorUIManager_selectedEditors, \"f\").size === 1 &&\n              this.firstSelectedEditor.isEnterHandled);\n      }\n      /**\n       * Undo the last command.\n       */\n      undo() {\n          __classPrivateFieldGet(this, _AnnotationEditorUIManager_commandManager, \"f\").undo();\n          __classPrivateFieldGet(this, _AnnotationEditorUIManager_instances, \"m\", _AnnotationEditorUIManager_dispatchUpdateStates).call(this, {\n              hasSomethingToUndo: __classPrivateFieldGet(this, _AnnotationEditorUIManager_commandManager, \"f\").hasSomethingToUndo(),\n              hasSomethingToRedo: true,\n              isEmpty: __classPrivateFieldGet(this, _AnnotationEditorUIManager_instances, \"m\", _AnnotationEditorUIManager_isEmpty).call(this)\n          });\n      }\n      /**\n       * Redo the last undoed command.\n       */\n      redo() {\n          __classPrivateFieldGet(this, _AnnotationEditorUIManager_commandManager, \"f\").redo();\n          __classPrivateFieldGet(this, _AnnotationEditorUIManager_instances, \"m\", _AnnotationEditorUIManager_dispatchUpdateStates).call(this, {\n              hasSomethingToUndo: true,\n              hasSomethingToRedo: __classPrivateFieldGet(this, _AnnotationEditorUIManager_commandManager, \"f\").hasSomethingToRedo(),\n              isEmpty: __classPrivateFieldGet(this, _AnnotationEditorUIManager_instances, \"m\", _AnnotationEditorUIManager_isEmpty).call(this)\n          });\n      }\n      /**\n       * Add a command to execute (cmd) and another one to undo it.\n       * @param {Object} params\n       */\n      addCommands(params) {\n          __classPrivateFieldGet(this, _AnnotationEditorUIManager_commandManager, \"f\").add(params);\n          __classPrivateFieldGet(this, _AnnotationEditorUIManager_instances, \"m\", _AnnotationEditorUIManager_dispatchUpdateStates).call(this, {\n              hasSomethingToUndo: true,\n              hasSomethingToRedo: false,\n              isEmpty: __classPrivateFieldGet(this, _AnnotationEditorUIManager_instances, \"m\", _AnnotationEditorUIManager_isEmpty).call(this)\n          });\n      }\n      /**\n       * Delete the current editor or all.\n       */\n      delete() {\n          this.commitOrRemove();\n          if (!this.hasSelection) {\n              return;\n          }\n          const editors = [...__classPrivateFieldGet(this, _AnnotationEditorUIManager_selectedEditors, \"f\")];\n          const cmd = () => {\n              for (const editor of editors) {\n                  editor.remove();\n              }\n          };\n          const undo = () => {\n              for (const editor of editors) {\n                  __classPrivateFieldGet(this, _AnnotationEditorUIManager_instances, \"m\", _AnnotationEditorUIManager_addEditorToLayer).call(this, editor);\n              }\n          };\n          this.addCommands({ cmd, undo, mustExec: true });\n      }\n      commitOrRemove() {\n          var _a;\n          // An editor is being edited so just commit it.\n          (_a = __classPrivateFieldGet(this, _AnnotationEditorUIManager_activeEditor, \"f\")) === null || _a === void 0 ? void 0 : _a.commitOrRemove();\n      }\n      hasSomethingToControl() {\n          return __classPrivateFieldGet(this, _AnnotationEditorUIManager_activeEditor, \"f\") || this.hasSelection;\n      }\n      /**\n       * Select all the editors.\n       */\n      selectAll() {\n          for (const editor of __classPrivateFieldGet(this, _AnnotationEditorUIManager_selectedEditors, \"f\")) {\n              editor.commit();\n          }\n          __classPrivateFieldGet(this, _AnnotationEditorUIManager_instances, \"m\", _AnnotationEditorUIManager_selectEditors).call(this, __classPrivateFieldGet(this, _AnnotationEditorUIManager_allEditors, \"f\").values());\n      }\n      /**\n       * Unselect all the selected editors.\n       */\n      unselectAll() {\n          if (__classPrivateFieldGet(this, _AnnotationEditorUIManager_activeEditor, \"f\")) {\n              // An editor is being edited so just commit it.\n              __classPrivateFieldGet(this, _AnnotationEditorUIManager_activeEditor, \"f\").commitOrRemove();\n              if (__classPrivateFieldGet(this, _AnnotationEditorUIManager_mode, \"f\") !== kendo_pdfjs_loader_js.AnnotationEditorType.NONE) {\n                  // If the mode is NONE, we want to really unselect the editor, hence we\n                  // mustn't return here.\n                  return;\n              }\n          }\n          if (!this.hasSelection) {\n              return;\n          }\n          for (const editor of __classPrivateFieldGet(this, _AnnotationEditorUIManager_selectedEditors, \"f\")) {\n              editor.unselect();\n          }\n          __classPrivateFieldGet(this, _AnnotationEditorUIManager_selectedEditors, \"f\").clear();\n          __classPrivateFieldGet(this, _AnnotationEditorUIManager_instances, \"m\", _AnnotationEditorUIManager_dispatchUpdateStates).call(this, {\n              hasSelectedEditor: false\n          });\n      }\n      translateSelectedEditors(x, y, noCommit = false) {\n          if (!noCommit) {\n              this.commitOrRemove();\n          }\n          if (!this.hasSelection) {\n              return;\n          }\n          __classPrivateFieldGet(this, _AnnotationEditorUIManager_translation, \"f\")[0] += x;\n          __classPrivateFieldGet(this, _AnnotationEditorUIManager_translation, \"f\")[1] += y;\n          const [totalX, totalY] = __classPrivateFieldGet(this, _AnnotationEditorUIManager_translation, \"f\");\n          const editors = [...__classPrivateFieldGet(this, _AnnotationEditorUIManager_selectedEditors, \"f\")];\n          // We don't want to have an undo/redo for each translation so we wait a bit\n          // before adding the command to the command manager.\n          const TIME_TO_WAIT = 1000;\n          if (__classPrivateFieldGet(this, _AnnotationEditorUIManager_translationTimeoutId, \"f\")) {\n              clearTimeout(__classPrivateFieldGet(this, _AnnotationEditorUIManager_translationTimeoutId, \"f\"));\n          }\n          __classPrivateFieldSet(this, _AnnotationEditorUIManager_translationTimeoutId, setTimeout(() => {\n              __classPrivateFieldSet(this, _AnnotationEditorUIManager_translationTimeoutId, null, \"f\");\n              __classPrivateFieldGet(this, _AnnotationEditorUIManager_translation, \"f\")[0] = __classPrivateFieldGet(this, _AnnotationEditorUIManager_translation, \"f\")[1] = 0;\n              this.addCommands({\n                  cmd: () => {\n                      for (const editor of editors) {\n                          if (__classPrivateFieldGet(this, _AnnotationEditorUIManager_allEditors, \"f\").has(editor.id)) {\n                              editor.translateInPage(totalX, totalY);\n                          }\n                      }\n                  },\n                  undo: () => {\n                      for (const editor of editors) {\n                          if (__classPrivateFieldGet(this, _AnnotationEditorUIManager_allEditors, \"f\").has(editor.id)) {\n                              editor.translateInPage(-totalX, -totalY);\n                          }\n                      }\n                  },\n                  mustExec: false\n              });\n          }, TIME_TO_WAIT), \"f\");\n          for (const editor of editors) {\n              editor.translateInPage(x, y);\n          }\n      }\n      /**\n       * Set up the drag session for moving the selected editors.\n       */\n      setUpDragSession() {\n          // // Note: don't use any references to the editor's parent which can be null\n          // // if the editor belongs to a destroyed page.\n          if (!this.hasSelection) {\n              return;\n          }\n          // Avoid to have spurious text selection in the text layer when dragging.\n          this.disableUserSelect(true);\n          __classPrivateFieldSet(this, _AnnotationEditorUIManager_draggingEditors, new Map(), \"f\");\n          for (const editor of __classPrivateFieldGet(this, _AnnotationEditorUIManager_selectedEditors, \"f\")) {\n              __classPrivateFieldGet(this, _AnnotationEditorUIManager_draggingEditors, \"f\").set(editor, {\n                  savedX: editor.x,\n                  savedY: editor.y,\n                  savedPageIndex: editor.pageIndex,\n                  newX: 0,\n                  newY: 0,\n                  newPageIndex: -1\n              });\n          }\n      }\n      /**\n       * Ends the drag session.\n       * @returns {boolean} true if at least one editor has been moved.\n       */\n      endDragSession() {\n          if (!__classPrivateFieldGet(this, _AnnotationEditorUIManager_draggingEditors, \"f\")) {\n              return false;\n          }\n          this.disableUserSelect(false);\n          const map = __classPrivateFieldGet(this, _AnnotationEditorUIManager_draggingEditors, \"f\");\n          __classPrivateFieldSet(this, _AnnotationEditorUIManager_draggingEditors, null, \"f\");\n          let mustBeAddedInUndoStack = false;\n          for (const [{ x, y, pageIndex }, value] of map) {\n              value.newX = x;\n              value.newY = y;\n              value.newPageIndex = pageIndex;\n              mustBeAddedInUndoStack || (mustBeAddedInUndoStack = x !== value.savedX ||\n                  y !== value.savedY ||\n                  pageIndex !== value.savedPageIndex);\n          }\n          if (!mustBeAddedInUndoStack) {\n              return false;\n          }\n          const move = (editor, x, y, pageIndex) => {\n              if (__classPrivateFieldGet(this, _AnnotationEditorUIManager_allEditors, \"f\").has(editor.id)) {\n                  // The editor can be undone/redone on a page which is not visible (and\n                  // which potentially has no annotation editor layer), hence we need to\n                  // use the pageIndex instead of the parent.\n                  const parent = __classPrivateFieldGet(this, _AnnotationEditorUIManager_allLayers, \"f\").get(pageIndex);\n                  if (parent) {\n                      editor._setParentAndPosition(parent, x, y);\n                  }\n                  else {\n                      editor.pageIndex = pageIndex;\n                      editor.x = x;\n                      editor.y = y;\n                  }\n              }\n          };\n          this.addCommands({\n              cmd: () => {\n                  for (const [editor, { newX, newY, newPageIndex }] of map) {\n                      move(editor, newX, newY, newPageIndex);\n                  }\n              },\n              undo: () => {\n                  for (const [editor, { savedX, savedY, savedPageIndex }] of map) {\n                      move(editor, savedX, savedY, savedPageIndex);\n                  }\n              },\n              mustExec: true\n          });\n          return true;\n      }\n      /**\n       * Drag the set of selected editors.\n       * @param {number} tx\n       * @param {number} ty\n       */\n      dragSelectedEditors(tx, ty) {\n          if (!__classPrivateFieldGet(this, _AnnotationEditorUIManager_draggingEditors, \"f\")) {\n              return;\n          }\n          for (const editor of __classPrivateFieldGet(this, _AnnotationEditorUIManager_draggingEditors, \"f\").keys()) {\n              editor.drag(tx, ty);\n          }\n      }\n      /**\n       * Rebuild the editor (usually on undo/redo actions) on a potentially\n       * non-rendered page.\n       * @param {AnnotationEditor} editor\n       */\n      rebuild(editor) {\n          if (editor.parent === null) {\n              const parent = this.getLayer(editor.pageIndex);\n              if (parent) {\n                  parent.changeParent(editor);\n                  parent.addOrRebuild(editor);\n              }\n              else {\n                  this.addEditor(editor);\n                  this.addToAnnotationStorage(editor);\n                  editor.rebuild();\n              }\n          }\n          else {\n              editor.parent.addOrRebuild(editor);\n          }\n      }\n      // get isEditorHandlingKeyboard() {\n      //     return (\n      //         this.getActive()?.shouldGetKeyboardEvents() ||\n      //         (this.#selectedEditors.size === 1 &&\n      //             this.firstSelectedEditor.shouldGetKeyboardEvents())\n      //     );\n      // }\n      /**\n       * Is the current editor the one passed as argument?\n       * @param {AnnotationEditor} editor\n       * @returns\n       */\n      isActive(editor) {\n          return __classPrivateFieldGet(this, _AnnotationEditorUIManager_activeEditor, \"f\") === editor;\n      }\n      /**\n       * Get the current active editor.\n       * @returns {AnnotationEditor|null}\n       */\n      getActive() {\n          return __classPrivateFieldGet(this, _AnnotationEditorUIManager_activeEditor, \"f\");\n      }\n      getActiveEditor() {\n          return __classPrivateFieldGet(this, _AnnotationEditorUIManager_activeEditor, \"f\");\n      }\n      /**\n       * Get the current editor mode.\n       * @returns {number}\n       */\n      getMode() {\n          return __classPrivateFieldGet(this, _AnnotationEditorUIManager_mode, \"f\");\n      }\n      // get imageManager() {\n      //     return shadow(this, \"imageManager\", new ImageManager());\n      // }\n      getSelectionBoxes(textLayer) {\n          if (!textLayer) {\n              return null;\n          }\n          const selection = document.getSelection();\n          for (let i = 0, ii = selection.rangeCount; i < ii; i++) {\n              if (!textLayer.contains(selection.getRangeAt(i).commonAncestorContainer)) {\n                  return null;\n              }\n          }\n          const { x: layerX, y: layerY, width: parentWidth, height: parentHeight } = textLayer.getBoundingClientRect();\n          // We must rotate the boxes because we want to have them in the non-rotated\n          // page coordinates.\n          let rotator;\n          switch (textLayer.getAttribute(\"data-main-rotation\")) {\n              case \"90\":\n                  rotator = (x, y, w, h) => ({\n                      x: (y - layerY) / parentHeight,\n                      y: 1 - (x + w - layerX) / parentWidth,\n                      width: h / parentHeight,\n                      height: w / parentWidth\n                  });\n                  break;\n              case \"180\":\n                  rotator = (x, y, w, h) => ({\n                      x: 1 - (x + w - layerX) / parentWidth,\n                      y: 1 - (y + h - layerY) / parentHeight,\n                      width: w / parentWidth,\n                      height: h / parentHeight\n                  });\n                  break;\n              case \"270\":\n                  rotator = (x, y, w, h) => ({\n                      x: 1 - (y + h - layerY) / parentHeight,\n                      y: (x - layerX) / parentWidth,\n                      width: h / parentHeight,\n                      height: w / parentWidth\n                  });\n                  break;\n              default:\n                  rotator = (x, y, w, h) => ({\n                      x: (x - layerX) / parentWidth,\n                      y: (y - layerY) / parentHeight,\n                      width: w / parentWidth,\n                      height: h / parentHeight\n                  });\n                  break;\n          }\n          const boxes = [];\n          for (let i = 0, ii = selection.rangeCount; i < ii; i++) {\n              const range = selection.getRangeAt(i);\n              if (range.collapsed) {\n                  continue;\n              }\n              for (const { x, y, width, height } of range.getClientRects()) {\n                  if (width === 0 || height === 0) {\n                      continue;\n                  }\n                  boxes.push(rotator(x, y, width, height));\n              }\n          }\n          return boxes.length === 0 ? null : boxes;\n      }\n      addChangedExistingAnnotation({ annotationElementId, id }) {\n          (__classPrivateFieldSet(this, _AnnotationEditorUIManager_changedExistingAnnotations, __classPrivateFieldGet(this, _AnnotationEditorUIManager_changedExistingAnnotations, \"f\") || new Map(), \"f\")).set(annotationElementId, id);\n      }\n      removeChangedExistingAnnotation({ annotationElementId }) {\n          var _a;\n          (_a = __classPrivateFieldGet(this, _AnnotationEditorUIManager_changedExistingAnnotations, \"f\")) === null || _a === void 0 ? void 0 : _a.delete(annotationElementId);\n      }\n      renderAnnotationElement(annotation) {\n          var _a;\n          const editorId = (_a = __classPrivateFieldGet(this, _AnnotationEditorUIManager_changedExistingAnnotations, \"f\")) === null || _a === void 0 ? void 0 : _a.get(annotation.data.id);\n          if (!editorId) {\n              return;\n          }\n          const editor = __classPrivateFieldGet(this, _AnnotationEditorUIManager_annotationStorage, \"f\").getRawValue(editorId);\n          if (!editor) {\n              return;\n          }\n          if (__classPrivateFieldGet(this, _AnnotationEditorUIManager_mode, \"f\") === kendo_pdfjs_loader_js.AnnotationEditorType.NONE && !editor.hasBeenModified) {\n              return;\n          }\n          editor.renderAnnotationElement(annotation);\n      }\n  }\n  _AnnotationEditorUIManager_abortController = new WeakMap(), _AnnotationEditorUIManager_activeEditor = new WeakMap(), _AnnotationEditorUIManager_allEditors = new WeakMap(), _AnnotationEditorUIManager_allLayers = new WeakMap(), _AnnotationEditorUIManager_annotationStorage = new WeakMap(), _AnnotationEditorUIManager_changedExistingAnnotations = new WeakMap(), _AnnotationEditorUIManager_commandManager = new WeakMap(), _AnnotationEditorUIManager_currentPageIndex = new WeakMap(), _AnnotationEditorUIManager_deletedAnnotationsElementIds = new WeakMap(), _AnnotationEditorUIManager_draggingEditors = new WeakMap(), _AnnotationEditorUIManager_editorTypes = new WeakMap(), _AnnotationEditorUIManager_editorsToRescale = new WeakMap(), _AnnotationEditorUIManager_enableHighlightFloatingButton = new WeakMap(), _AnnotationEditorUIManager_focusMainContainerTimeoutId = new WeakMap(), _AnnotationEditorUIManager_focusManagerAC = new WeakMap(), _AnnotationEditorUIManager_highlightColors = new WeakMap(), _AnnotationEditorUIManager_highlightWhenShiftUp = new WeakMap(), _AnnotationEditorUIManager_highlightToolbar = new WeakMap(), _AnnotationEditorUIManager_idManager = new WeakMap(), _AnnotationEditorUIManager_isEnabled = new WeakMap(), _AnnotationEditorUIManager_isWaiting = new WeakMap(), _AnnotationEditorUIManager_lastActiveElement = new WeakMap(), _AnnotationEditorUIManager_mode = new WeakMap(), _AnnotationEditorUIManager_selectedEditors = new WeakMap(), _AnnotationEditorUIManager_selectedTextNode = new WeakMap(), _AnnotationEditorUIManager_showAllStates = new WeakMap(), _AnnotationEditorUIManager_previousStates = new WeakMap(), _AnnotationEditorUIManager_translation = new WeakMap(), _AnnotationEditorUIManager_translationTimeoutId = new WeakMap(), _AnnotationEditorUIManager_container = new WeakMap(), _AnnotationEditorUIManager_viewer = new WeakMap(), _AnnotationEditorUIManager_instances = new WeakSet(), _AnnotationEditorUIManager_getAnchorElementForSelection = function _AnnotationEditorUIManager_getAnchorElementForSelection({ anchorNode }) {\n      return anchorNode.nodeType === Node.TEXT_NODE\n          ? anchorNode.parentElement\n          : anchorNode;\n  }, _AnnotationEditorUIManager_getLayerForTextLayer = function _AnnotationEditorUIManager_getLayerForTextLayer(textLayer) {\n      const { currentLayer } = this;\n      if (currentLayer.hasTextLayer(textLayer)) {\n          return currentLayer;\n      }\n      for (const layer of __classPrivateFieldGet(this, _AnnotationEditorUIManager_allLayers, \"f\").values()) {\n          if (layer.hasTextLayer(textLayer)) {\n              return layer;\n          }\n      }\n      return null;\n  }, _AnnotationEditorUIManager_displayHighlightToolbar = function _AnnotationEditorUIManager_displayHighlightToolbar() {\n      const selection = document.getSelection();\n      if (!selection || selection.isCollapsed) {\n          return;\n      }\n      const anchorElement = __classPrivateFieldGet(this, _AnnotationEditorUIManager_instances, \"m\", _AnnotationEditorUIManager_getAnchorElementForSelection).call(this, selection);\n      const textLayer = this.getTextLayerForAnchor(anchorElement);\n      const boxes = this.getSelectionBoxes(textLayer);\n      if (!boxes) {\n          return;\n      }\n      this.showEditorToolBar(anchorElement);\n      // this._eventBus.dispatch(\"showannotationeditorui\", {\n      //     source: this,\n      //     details: Object.assign(this.#previousStates, details),\n      // });\n      // this.#highlightToolbar ||= new HighlightToolbar(this);\n      // this.#highlightToolbar.show(textLayer, boxes, this.direction === \"ltr\");\n  }, _AnnotationEditorUIManager_selectionChange = function _AnnotationEditorUIManager_selectionChange() {\n      var _a, _b;\n      const selection = document.getSelection();\n      if (!selection || selection.isCollapsed) {\n          if (__classPrivateFieldGet(this, _AnnotationEditorUIManager_selectedTextNode, \"f\")) {\n              // this.#highlightToolbar?.hide();\n              __classPrivateFieldSet(this, _AnnotationEditorUIManager_selectedTextNode, null, \"f\");\n              __classPrivateFieldGet(this, _AnnotationEditorUIManager_instances, \"m\", _AnnotationEditorUIManager_dispatchUpdateStates).call(this, {\n                  hasSelectedText: false\n              });\n          }\n          return;\n      }\n      const { anchorNode } = selection;\n      if (anchorNode === __classPrivateFieldGet(this, _AnnotationEditorUIManager_selectedTextNode, \"f\")) {\n          return;\n      }\n      const anchorElement = __classPrivateFieldGet(this, _AnnotationEditorUIManager_instances, \"m\", _AnnotationEditorUIManager_getAnchorElementForSelection).call(this, selection);\n      // const textLayer = anchorElement.closest(\".textLayer\");\n      const textLayer = this.getTextLayerForAnchor(anchorElement);\n      if (!textLayer) {\n          if (__classPrivateFieldGet(this, _AnnotationEditorUIManager_selectedTextNode, \"f\")) {\n              (_a = __classPrivateFieldGet(this, _AnnotationEditorUIManager_highlightToolbar, \"f\")) === null || _a === void 0 ? void 0 : _a.hide();\n              __classPrivateFieldSet(this, _AnnotationEditorUIManager_selectedTextNode, null, \"f\");\n              __classPrivateFieldGet(this, _AnnotationEditorUIManager_instances, \"m\", _AnnotationEditorUIManager_dispatchUpdateStates).call(this, {\n                  hasSelectedText: false\n              });\n          }\n          return;\n      }\n      (_b = __classPrivateFieldGet(this, _AnnotationEditorUIManager_highlightToolbar, \"f\")) === null || _b === void 0 ? void 0 : _b.hide();\n      __classPrivateFieldSet(this, _AnnotationEditorUIManager_selectedTextNode, anchorNode, \"f\");\n      __classPrivateFieldGet(this, _AnnotationEditorUIManager_instances, \"m\", _AnnotationEditorUIManager_dispatchUpdateStates).call(this, {\n          hasSelectedText: true\n      });\n      if (__classPrivateFieldGet(this, _AnnotationEditorUIManager_mode, \"f\") !== kendo_pdfjs_loader_js.AnnotationEditorType.HIGHLIGHT && __classPrivateFieldGet(this, _AnnotationEditorUIManager_mode, \"f\") !== kendo_pdfjs_loader_js.AnnotationEditorType.NONE) {\n          return;\n      }\n      if (__classPrivateFieldGet(this, _AnnotationEditorUIManager_mode, \"f\") === kendo_pdfjs_loader_js.AnnotationEditorType.HIGHLIGHT) {\n          // this.showAllEditors(\"highlight\", true, /* updateButton = */ true);\n          this.showAllEditors(\"highlight\", true);\n      }\n      // this.#highlightWhenShiftUp = this.isShiftKeyDown;\n      if (!this.isShiftKeyDown) {\n          const activeLayer = __classPrivateFieldGet(this, _AnnotationEditorUIManager_mode, \"f\") === kendo_pdfjs_loader_js.AnnotationEditorType.HIGHLIGHT\n              ? __classPrivateFieldGet(this, _AnnotationEditorUIManager_instances, \"m\", _AnnotationEditorUIManager_getLayerForTextLayer).call(this, textLayer)\n              : null;\n          activeLayer === null || activeLayer === void 0 ? void 0 : activeLayer.toggleDrawing();\n          const abortController = new AbortController();\n          const signal = this.combinedSignal(abortController);\n          const pointerup = e => {\n              if (e.type === \"pointerup\" && e.button !== 0) {\n                  // Do nothing on right click.\n                  return;\n              }\n              abortController.abort();\n              activeLayer === null || activeLayer === void 0 ? void 0 : activeLayer.toggleDrawing(true);\n              if (e.type === \"pointerup\") {\n                  __classPrivateFieldGet(this, _AnnotationEditorUIManager_instances, \"m\", _AnnotationEditorUIManager_onSelectEnd).call(this, \"main_toolbar\");\n              }\n          };\n          window.removeEventListener(\"pointerup\", pointerup);\n          window.addEventListener(\"pointerup\", pointerup, { signal });\n          window.removeEventListener(\"blur\", pointerup);\n          window.addEventListener(\"blur\", pointerup, { signal });\n      }\n  }, _AnnotationEditorUIManager_onSelectEnd = function _AnnotationEditorUIManager_onSelectEnd(methodOfCreation = \"\") {\n      if (__classPrivateFieldGet(this, _AnnotationEditorUIManager_mode, \"f\") === kendo_pdfjs_loader_js.AnnotationEditorType.HIGHLIGHT) {\n          this.highlightSelection(methodOfCreation);\n      }\n      else if (__classPrivateFieldGet(this, _AnnotationEditorUIManager_enableHighlightFloatingButton, \"f\")) {\n          __classPrivateFieldGet(this, _AnnotationEditorUIManager_instances, \"m\", _AnnotationEditorUIManager_displayHighlightToolbar).call(this);\n      }\n  }, _AnnotationEditorUIManager_addSelectionListener = function _AnnotationEditorUIManager_addSelectionListener() {\n      document.addEventListener(\"selectionchange\", __classPrivateFieldGet(this, _AnnotationEditorUIManager_instances, \"m\", _AnnotationEditorUIManager_selectionChange).bind(this), { signal: this._signal });\n  }, _AnnotationEditorUIManager_addFocusManager = function _AnnotationEditorUIManager_addFocusManager() {\n      if (__classPrivateFieldGet(this, _AnnotationEditorUIManager_focusManagerAC, \"f\")) {\n          return;\n      }\n      __classPrivateFieldSet(this, _AnnotationEditorUIManager_focusManagerAC, new AbortController(), \"f\");\n      const signal = this.combinedSignal(__classPrivateFieldGet(this, _AnnotationEditorUIManager_focusManagerAC, \"f\"));\n      window.addEventListener(\"focus\", this.focus.bind(this), { signal });\n      window.addEventListener(\"blur\", this.blur.bind(this), { signal });\n  }, _AnnotationEditorUIManager_removeFocusManager = function _AnnotationEditorUIManager_removeFocusManager() {\n      var _a;\n      (_a = __classPrivateFieldGet(this, _AnnotationEditorUIManager_focusManagerAC, \"f\")) === null || _a === void 0 ? void 0 : _a.abort();\n      __classPrivateFieldSet(this, _AnnotationEditorUIManager_focusManagerAC, null, \"f\");\n  }, _AnnotationEditorUIManager_addKeyboardManager = function _AnnotationEditorUIManager_addKeyboardManager() {\n      //     if (this.#keyboardManagerAC) {\n      //         return;\n      //     }\n      //     this.#keyboardManagerAC = new AbortController();\n      //     const signal = this.combinedSignal(this.#keyboardManagerAC);\n      //     // The keyboard events are caught at the container level in order to be able\n      //     // to execute some callbacks even if the current page doesn't have focus.\n      //     window.addEventListener(\"keydown\", this.keydown.bind(this), { signal });\n      //     window.addEventListener(\"keyup\", this.keyup.bind(this), { signal });\n  }, _AnnotationEditorUIManager_removeKeyboardManager = function _AnnotationEditorUIManager_removeKeyboardManager() {\n      //     this.#keyboardManagerAC?.abort();\n      //     this.#keyboardManagerAC = null;\n  }, _AnnotationEditorUIManager_addCopyPasteListeners = function _AnnotationEditorUIManager_addCopyPasteListeners() {\n      //     if (this.#copyPasteAC) {\n      //         return;\n      //     }\n      //     this.#copyPasteAC = new AbortController();\n      //     const signal = this.combinedSignal(this.#copyPasteAC);\n      //     document.addEventListener(\"copy\", this.copy.bind(this), { signal });\n      //     document.addEventListener(\"cut\", this.cut.bind(this), { signal });\n      //     document.addEventListener(\"paste\", this.paste.bind(this), { signal });\n  }, _AnnotationEditorUIManager_removeCopyPasteListeners = function _AnnotationEditorUIManager_removeCopyPasteListeners() {\n      //     this.#copyPasteAC?.abort();\n      //     this.#copyPasteAC = null;\n  }, _AnnotationEditorUIManager_addDragAndDropListeners = function _AnnotationEditorUIManager_addDragAndDropListeners() {\n      const signal = this._signal;\n      document.addEventListener(\"dragover\", this.dragOver.bind(this), { signal });\n      document.addEventListener(\"drop\", this.drop.bind(this), { signal });\n  }, _AnnotationEditorUIManager_dispatchUpdateStates = function _AnnotationEditorUIManager_dispatchUpdateStates(details) {\n      if (!details) {\n          return;\n      }\n      const hasChanged = Object.entries(details).some(([key, value]) => __classPrivateFieldGet(this, _AnnotationEditorUIManager_previousStates, \"f\")[key] !== value);\n      if (hasChanged) {\n          this._eventBus.dispatch(\"annotationeditorstateschanged\", {\n              source: this,\n              details: Object.assign(__classPrivateFieldGet(this, _AnnotationEditorUIManager_previousStates, \"f\"), details)\n          });\n          // We could listen on our own event but it sounds like a bit weird and\n          // it's a way to simpler to handle that stuff here instead of having to\n          // add something in every place where an editor can be unselected.\n          if (__classPrivateFieldGet(this, _AnnotationEditorUIManager_mode, \"f\") === kendo_pdfjs_loader_js.AnnotationEditorType.HIGHLIGHT &&\n              details.hasSelectedEditor === false) {\n              __classPrivateFieldGet(this, _AnnotationEditorUIManager_instances, \"m\", _AnnotationEditorUIManager_dispatchUpdateUI).call(this, [\n                  [kendo_pdfjs_loader_js.AnnotationEditorParamsType.HIGHLIGHT_FREE, true]\n              ]);\n          }\n      }\n  }, _AnnotationEditorUIManager_dispatchUpdateUI = function _AnnotationEditorUIManager_dispatchUpdateUI(details) {\n      this._eventBus.dispatch(\"annotationeditorparamschanged\", {\n          source: this,\n          details\n      });\n  }, _AnnotationEditorUIManager_enableAll = function _AnnotationEditorUIManager_enableAll() {\n      if (!__classPrivateFieldGet(this, _AnnotationEditorUIManager_isEnabled, \"f\")) {\n          __classPrivateFieldSet(this, _AnnotationEditorUIManager_isEnabled, true, \"f\");\n          for (const layer of __classPrivateFieldGet(this, _AnnotationEditorUIManager_allLayers, \"f\").values()) {\n              layer.enable();\n          }\n          for (const editor of __classPrivateFieldGet(this, _AnnotationEditorUIManager_allEditors, \"f\").values()) {\n              editor.enable();\n          }\n      }\n  }, _AnnotationEditorUIManager_disableAll = function _AnnotationEditorUIManager_disableAll() {\n      this.unselectAll();\n      if (__classPrivateFieldGet(this, _AnnotationEditorUIManager_isEnabled, \"f\")) {\n          __classPrivateFieldSet(this, _AnnotationEditorUIManager_isEnabled, false, \"f\");\n          for (const layer of __classPrivateFieldGet(this, _AnnotationEditorUIManager_allLayers, \"f\").values()) {\n              layer.disable();\n          }\n          for (const editor of __classPrivateFieldGet(this, _AnnotationEditorUIManager_allEditors, \"f\").values()) {\n              editor.disable();\n          }\n      }\n  }, _AnnotationEditorUIManager_addEditorToLayer = function _AnnotationEditorUIManager_addEditorToLayer(editor) {\n      const layer = __classPrivateFieldGet(this, _AnnotationEditorUIManager_allLayers, \"f\").get(editor.pageIndex);\n      if (layer) {\n          layer.addOrRebuild(editor);\n      }\n      else {\n          this.addEditor(editor);\n          this.addToAnnotationStorage(editor);\n      }\n  }, _AnnotationEditorUIManager_lastSelectedEditor_get = function _AnnotationEditorUIManager_lastSelectedEditor_get() {\n      let ed = null;\n      for (ed of __classPrivateFieldGet(this, _AnnotationEditorUIManager_selectedEditors, \"f\")) {\n          // Iterate to get the last element.\n      }\n      return ed;\n  }, _AnnotationEditorUIManager_isEmpty = function _AnnotationEditorUIManager_isEmpty() {\n      if (__classPrivateFieldGet(this, _AnnotationEditorUIManager_allEditors, \"f\").size === 0) {\n          return true;\n      }\n      if (__classPrivateFieldGet(this, _AnnotationEditorUIManager_allEditors, \"f\").size === 1) {\n          for (const editor of __classPrivateFieldGet(this, _AnnotationEditorUIManager_allEditors, \"f\").values()) {\n              return editor.isEmpty();\n          }\n      }\n      return false;\n  }, _AnnotationEditorUIManager_selectEditors = function _AnnotationEditorUIManager_selectEditors(editors) {\n      for (const editor of __classPrivateFieldGet(this, _AnnotationEditorUIManager_selectedEditors, \"f\")) {\n          editor.unselect();\n      }\n      __classPrivateFieldGet(this, _AnnotationEditorUIManager_selectedEditors, \"f\").clear();\n      for (const editor of editors) {\n          if (editor.isEmpty()) {\n              continue;\n          }\n          __classPrivateFieldGet(this, _AnnotationEditorUIManager_selectedEditors, \"f\").add(editor);\n          editor.select();\n      }\n      __classPrivateFieldGet(this, _AnnotationEditorUIManager_instances, \"m\", _AnnotationEditorUIManager_dispatchUpdateStates).call(this, { hasSelectedEditor: this.hasSelection });\n  };\n  AnnotationEditorUIManager.TRANSLATE_SMALL = 1; // page units.\n  AnnotationEditorUIManager.TRANSLATE_BIG = 10; // page units.\n\n  /* Copyright 2012 Mozilla Foundation\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *     http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   * See the License for the specific language governing permissions and\n   * limitations under the License.\n   */\n  // const WaitOnType = {\n  //     EVENT: \"event\",\n  //     TIMEOUT: \"timeout\",\n  // };\n  var _EventBus_listeners;\n  // /**\n  //  * @typedef {Object} WaitOnEventOrTimeoutParameters\n  //  * @property {Object} target - The event target, can for example be:\n  //  *   `window`, `document`, a DOM element, or an {EventBus} instance.\n  //  * @property {string} name - The name of the event.\n  //  * @property {number} delay - The delay, in milliseconds, after which the\n  //  *   timeout occurs (if the event wasn't already dispatched).\n  //  */\n  // /**\n  //  * Allows waiting for an event or a timeout, whichever occurs first.\n  //  * Can be used to ensure that an action always occurs, even when an event\n  //  * arrives late or not at all.\n  //  *\n  //  * @param {WaitOnEventOrTimeoutParameters}\n  //  * @returns {Promise} A promise that is resolved with a {WaitOnType} value.\n  //  */\n  // async function waitOnEventOrTimeout({ target, name, delay = 0 }) {\n  //     if (\n  //         typeof target !== \"object\" ||\n  //         !(name && typeof name === \"string\") ||\n  //         !(Number.isInteger(delay) && delay >= 0)\n  //     ) {\n  //         throw new Error(\"waitOnEventOrTimeout - invalid parameters.\");\n  //     }\n  //     const { promise, resolve } = Promise.withResolvers();\n  //     const ac = new AbortController();\n  //     function handler(type) {\n  //         ac.abort(); // Remove event listener.\n  //         clearTimeout(timeout);\n  //         resolve(type);\n  //     }\n  //     const evtMethod = target instanceof EventBus ? \"_on\" : \"addEventListener\";\n  //     target[evtMethod](name, handler.bind(null, WaitOnType.EVENT), {\n  //         signal: ac.signal,\n  //     });\n  //     const timeout = setTimeout(handler.bind(null, WaitOnType.TIMEOUT), delay);\n  //     return promise;\n  // }\n  /**\n   * Simple event bus for an application. Listeners are attached using the `on`\n   * and `off` methods. To raise an event, the `dispatch` method shall be used.\n   */\n  class EventBus {\n      constructor() {\n          _EventBus_listeners.set(this, Object.create(null));\n      }\n      /**\n       * Returs the current event listeners - used purely for debugging purposes.\n       */\n      getListeners() {\n          return __classPrivateFieldGet(this, _EventBus_listeners, \"f\");\n      }\n      /**\n       * @param {string} eventName\n       * @param {function} listener\n       * @param {Object} [options]\n       */\n      on(eventName, listener, options = null) {\n          this._on(eventName, listener, {\n              external: true,\n              once: options === null || options === void 0 ? void 0 : options.once,\n              signal: options === null || options === void 0 ? void 0 : options.signal\n          });\n      }\n      /**\n       * @param {string} eventName\n       * @param {function} listener\n       * @param {Object} [options]\n       */\n      off(eventName, listener) {\n          this._off(eventName, listener);\n      }\n      /**\n       * @param {string} eventName\n       * @param {Object} data\n       */\n      dispatch(eventName, data) {\n          const eventListeners = __classPrivateFieldGet(this, _EventBus_listeners, \"f\")[eventName];\n          if (!eventListeners || eventListeners.length === 0) {\n              return;\n          }\n          let externalListeners;\n          // Making copy of the listeners array in case if it will be modified\n          // during dispatch.\n          for (const { listener, external, once } of eventListeners.slice(0)) {\n              if (once) {\n                  this._off(eventName, listener);\n              }\n              if (external) {\n                  (externalListeners || (externalListeners = [])).push(listener);\n                  continue;\n              }\n              listener(data);\n          }\n          // Dispatch any \"external\" listeners *after* the internal ones, to give the\n          // viewer components time to handle events and update their state first.\n          if (externalListeners) {\n              for (const listener of externalListeners) {\n                  listener(data);\n              }\n              externalListeners = null;\n          }\n      }\n      /**\n       * @ignore\n       */\n      _on(eventName, listener, options = null) {\n          var _a;\n          let rmAbort = null;\n          if ((options === null || options === void 0 ? void 0 : options.signal) instanceof AbortSignal) {\n              const { signal } = options;\n              if (signal.aborted) {\n                  // console.error(\"Cannot use an `aborted` signal.\");\n                  return;\n              }\n              const onAbort = () => this._off(eventName, listener);\n              rmAbort = () => signal.removeEventListener(\"abort\", onAbort);\n              signal.addEventListener(\"abort\", onAbort);\n          }\n          const eventListeners = ((_a = __classPrivateFieldGet(this, _EventBus_listeners, \"f\"))[eventName] || (_a[eventName] = []));\n          eventListeners.push({\n              listener,\n              external: (options === null || options === void 0 ? void 0 : options.external) === true,\n              once: (options === null || options === void 0 ? void 0 : options.once) === true,\n              rmAbort\n          });\n      }\n      /**\n       * @ignore\n       */\n      _off(eventName, listener) {\n          var _a;\n          const eventListeners = __classPrivateFieldGet(this, _EventBus_listeners, \"f\")[eventName];\n          if (!eventListeners) {\n              return;\n          }\n          for (let i = 0, ii = eventListeners.length; i < ii; i++) {\n              const evt = eventListeners[i];\n              if (evt.listener === listener) {\n                  (_a = evt.rmAbort) === null || _a === void 0 ? void 0 : _a.call(evt); // Ensure that the `AbortSignal` listener is removed.\n                  eventListeners.splice(i, 1);\n                  return;\n              }\n          }\n      }\n  }\n  _EventBus_listeners = new WeakMap();\n\n  /* Copyright 2012 Mozilla Foundation\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *     http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   * See the License for the specific language governing permissions and\n   * limitations under the License.\n   */\n  // const DEFAULT_SCALE_VALUE = \"auto\";\n  const DEFAULT_SCALE = 1.0;\n  // const DEFAULT_SCALE_DELTA = 1.1;\n  // const MIN_SCALE = 0.1;\n  // const MAX_SCALE = 10.0;\n  // const UNKNOWN_SCALE = 0;\n  // const MAX_AUTO_SCALE = 1.25;\n  // const SCROLLBAR_PADDING = 40;\n  // const VERTICAL_PADDING = 5;\n  const RenderingStates = {\n      INITIAL: 0,\n      RUNNING: 1,\n      PAUSED: 2,\n      FINISHED: 3\n  };\n  const PresentationModeState = {\n      UNKNOWN: 0,\n      NORMAL: 1,\n      CHANGING: 2,\n      FULLSCREEN: 3\n  };\n  // const SidebarView = {\n  //   UNKNOWN: -1,\n  //   NONE: 0,\n  //   THUMBS: 1, // Default value.\n  //   OUTLINE: 2,\n  //   ATTACHMENTS: 3,\n  //   LAYERS: 4,\n  // };\n  const TextLayerMode = {\n      DISABLE: 0,\n      ENABLE: 1,\n      ENABLE_PERMISSIONS: 2\n  };\n  const ScrollMode = {\n      UNKNOWN: -1,\n      VERTICAL: 0, // Default value.\n      HORIZONTAL: 1,\n      WRAPPED: 2,\n      PAGE: 3\n  };\n  // const SpreadMode = {\n  //   UNKNOWN: -1,\n  //   NONE: 0, // Default value.\n  //   ODD: 1,\n  //   EVEN: 2,\n  // };\n  // const CursorTool = {\n  //   SELECT: 0, // The default value.\n  //   HAND: 1,\n  //   ZOOM: 2,\n  // };\n  // // Used by `PDFViewerApplication`, and by the API unit-tests.\n  // const AutoPrintRegExp = /\\bprint\\s*\\(/;\n  // /**\n  //  * Scale factors for the canvas, necessary with HiDPI displays.\n  //  */\n  // class OutputScale {\n  //   constructor() {\n  //     const pixelRatio = window.devicePixelRatio || 1;\n  //     /**\n  //      * @type {number} Horizontal scale.\n  //      */\n  //     this.sx = pixelRatio;\n  //     /**\n  //      * @type {number} Vertical scale.\n  //      */\n  //     this.sy = pixelRatio;\n  //   }\n  //   /**\n  //    * @type {boolean} Returns `true` when scaling is required, `false` otherwise.\n  //    */\n  //   get scaled() {\n  //     return this.sx !== 1 || this.sy !== 1;\n  //   }\n  // }\n  /**\n   * Scrolls specified element into view of its parent.\n   * @param {HTMLElement} element - The element to be visible.\n   * @param {Object} [spot] - An object with optional top and left properties,\n   *   specifying the offset from the top left edge.\n   * @param {number} [spot.left]\n   * @param {number} [spot.top]\n   * @param {boolean} [scrollMatches] - When scrolling search results into view,\n   *   ignore elements that either: Contains marked content identifiers,\n   *   or have the CSS-rule `overflow: hidden;` set. The default value is `false`.\n   */\n  function scrollIntoView(element, spot, scrollMatches = false) {\n      // Assuming offsetParent is available (it's not available when viewer is in\n      // hidden iframe or object). We have to scroll: if the offsetParent is not set\n      // producing the error. See also animationStarted.\n      let parent = element.offsetParent;\n      if (!parent) {\n          // eslint-disable-next-line no-console\n          console.error(\"offsetParent is not set -- cannot scroll\");\n          return;\n      }\n      let offsetY = element.offsetTop + element.clientTop;\n      let offsetX = element.offsetLeft + element.clientLeft;\n      while ((parent.clientHeight === parent.scrollHeight &&\n          parent.clientWidth === parent.scrollWidth) ||\n          (scrollMatches &&\n              (parent.classList.contains(\"markedContent\") || parent.classList.contains(\"k-marked-content\") ||\n                  getComputedStyle(parent).overflow === \"hidden\"))) {\n          offsetY += parent.offsetTop;\n          offsetX += parent.offsetLeft;\n          parent = parent.offsetParent;\n          if (!parent) {\n              return; // no need to scroll\n          }\n      }\n      if (spot) {\n          if (spot.top !== undefined) {\n              offsetY += spot.top;\n          }\n          if (spot.left !== undefined) {\n              offsetX += spot.left;\n              parent.scrollLeft = offsetX;\n          }\n      }\n      parent.scrollTop = offsetY;\n  }\n  // /**\n  //  * Helper function to start monitoring the scroll event and converting them into\n  //  * PDF.js friendly one: with scroll debounce and scroll direction.\n  //  */\n  // function watchScroll(viewAreaElement, callback, abortSignal = undefined) {\n  //   const debounceScroll = function (evt) {\n  //     if (rAF) {\n  //       return;\n  //     }\n  //     // schedule an invocation of scroll for next animation frame.\n  //     rAF = window.requestAnimationFrame(function viewAreaElementScrolled() {\n  //       rAF = null;\n  //       const currentX = viewAreaElement.scrollLeft;\n  //       const lastX = state.lastX;\n  //       if (currentX !== lastX) {\n  //         state.right = currentX > lastX;\n  //       }\n  //       state.lastX = currentX;\n  //       const currentY = viewAreaElement.scrollTop;\n  //       const lastY = state.lastY;\n  //       if (currentY !== lastY) {\n  //         state.down = currentY > lastY;\n  //       }\n  //       state.lastY = currentY;\n  //       callback(state);\n  //     });\n  //   };\n  //   const state = {\n  //     right: true,\n  //     down: true,\n  //     lastX: viewAreaElement.scrollLeft,\n  //     lastY: viewAreaElement.scrollTop,\n  //     _eventHandler: debounceScroll,\n  //   };\n  //   let rAF = null;\n  //   viewAreaElement.addEventListener(\"scroll\", debounceScroll, {\n  //     useCapture: true,\n  //     signal: abortSignal,\n  //   });\n  //   abortSignal?.addEventListener(\n  //     \"abort\",\n  //     () => window.cancelAnimationFrame(rAF),\n  //     { once: true }\n  //   );\n  //   return state;\n  // }\n  /**\n   * Helper function to parse query string (e.g. ?param1=value&param2=...).\n   * @param {string} query\n   * @returns {Map}\n   */\n  function parseQueryString(query) {\n      const params = new Map();\n      const urlSearchParams = new URLSearchParams(query);\n      for (const [key, value] of urlSearchParams) {\n          // for (const [key, value] of new URLSearchParams(query)) {\n          params.set(key.toLowerCase(), value);\n      }\n      return params;\n  }\n  // const InvisibleCharsRegExp = /[\\x00-\\x1F]/g;\n  // /**\n  //  * @param {string} str\n  //  * @param {boolean} [replaceInvisible]\n  //  */\n  // function removeNullCharacters(str, replaceInvisible = false) {\n  //   if (!InvisibleCharsRegExp.test(str)) {\n  //     return str;\n  //   }\n  //   if (replaceInvisible) {\n  //     return str.replaceAll(InvisibleCharsRegExp, m => (m === \"\\x00\" ? \"\" : \" \"));\n  //   }\n  //   return str.replaceAll(\"\\x00\", \"\");\n  // }\n  /**\n   * Use binary search to find the index of the first item in a given array which\n   * passes a given condition. The items are expected to be sorted in the sense\n   * that if the condition is true for one item in the array, then it is also true\n   * for all following items.\n   *\n   * @returns {number} Index of the first array element to pass the test,\n   *                   or |items.length| if no such element exists.\n   */\n  function binarySearchFirstItem(items, condition, start = 0) {\n      let minIndex = start;\n      let maxIndex = items.length - 1;\n      if (maxIndex < 0 || !condition(items[maxIndex])) {\n          return items.length;\n      }\n      if (condition(items[minIndex])) {\n          return minIndex;\n      }\n      while (minIndex < maxIndex) {\n          const currentIndex = (minIndex + maxIndex) >> 1;\n          const currentItem = items[currentIndex];\n          if (condition(currentItem)) {\n              maxIndex = currentIndex;\n          }\n          else {\n              minIndex = currentIndex + 1;\n          }\n      }\n      return minIndex; /* === maxIndex */\n  }\n\n  /* Copyright 2022 Mozilla Foundation\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *     http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   * See the License for the specific language governing permissions and\n   * limitations under the License.\n   */\n  var _TextAccessibilityManager_instances, _a$8, _TextAccessibilityManager_enabled, _TextAccessibilityManager_textChildren, _TextAccessibilityManager_textNodes, _TextAccessibilityManager_waitingElements, _TextAccessibilityManager_compareElementPositions, _TextAccessibilityManager_addIdToAriaOwns;\n  /**\n   * This class aims to provide some methods:\n   *  - to reorder elements in the DOM with respect to the visual order;\n   *  - to create a link, using aria-owns, between spans in the textLayer and\n   *    annotations in the annotationLayer. The goal is to help to know\n   *    where the annotations are in the text flow.\n   */\n  class TextAccessibilityManager {\n      constructor() {\n          _TextAccessibilityManager_instances.add(this);\n          _TextAccessibilityManager_enabled.set(this, false);\n          _TextAccessibilityManager_textChildren.set(this, null);\n          _TextAccessibilityManager_textNodes.set(this, new Map());\n          _TextAccessibilityManager_waitingElements.set(this, new Map());\n      }\n      setTextMapping(textDivs) {\n          __classPrivateFieldSet(this, _TextAccessibilityManager_textChildren, textDivs, \"f\");\n      }\n      /**\n       * Function called when the text layer has finished rendering.\n       */\n      enable() {\n          if (__classPrivateFieldGet(this, _TextAccessibilityManager_enabled, \"f\")) {\n              // throw new Error(\"TextAccessibilityManager is already enabled.\");\n          }\n          if (!__classPrivateFieldGet(this, _TextAccessibilityManager_textChildren, \"f\")) {\n              throw new Error(\"Text divs and strings have not been set.\");\n          }\n          __classPrivateFieldSet(this, _TextAccessibilityManager_enabled, true, \"f\");\n          __classPrivateFieldSet(this, _TextAccessibilityManager_textChildren, __classPrivateFieldGet(this, _TextAccessibilityManager_textChildren, \"f\").slice(), \"f\");\n          __classPrivateFieldGet(this, _TextAccessibilityManager_textChildren, \"f\").sort(__classPrivateFieldGet(_a$8, _a$8, \"m\", _TextAccessibilityManager_compareElementPositions));\n          if (__classPrivateFieldGet(this, _TextAccessibilityManager_textNodes, \"f\").size > 0) {\n              // Some links have been made before this manager has been disabled, hence\n              // we restore them.\n              const textChildren = __classPrivateFieldGet(this, _TextAccessibilityManager_textChildren, \"f\");\n              for (const [id, nodeIndex] of __classPrivateFieldGet(this, _TextAccessibilityManager_textNodes, \"f\")) {\n                  const element = document.getElementById(id);\n                  if (!element) {\n                      // If the page was *fully* reset the element no longer exists, and it\n                      // will be re-inserted later (i.e. when the annotationLayer renders).\n                      __classPrivateFieldGet(this, _TextAccessibilityManager_textNodes, \"f\").delete(id);\n                      continue;\n                  }\n                  __classPrivateFieldGet(this, _TextAccessibilityManager_instances, \"m\", _TextAccessibilityManager_addIdToAriaOwns).call(this, id, textChildren[nodeIndex]);\n              }\n          }\n          for (const [element, isRemovable] of __classPrivateFieldGet(this, _TextAccessibilityManager_waitingElements, \"f\")) {\n              this.addPointerInTextLayer(element, isRemovable);\n          }\n          __classPrivateFieldGet(this, _TextAccessibilityManager_waitingElements, \"f\").clear();\n      }\n      disable() {\n          if (!__classPrivateFieldGet(this, _TextAccessibilityManager_enabled, \"f\")) {\n              return;\n          }\n          // Don't clear this.#textNodes which is used to rebuild the aria-owns\n          // in case it's re-enabled at some point.\n          __classPrivateFieldGet(this, _TextAccessibilityManager_waitingElements, \"f\").clear();\n          __classPrivateFieldSet(this, _TextAccessibilityManager_textChildren, null, \"f\");\n          __classPrivateFieldSet(this, _TextAccessibilityManager_enabled, false, \"f\");\n      }\n      /**\n       * Remove an aria-owns id from a node in the text layer.\n       * @param {HTMLElement} element\n       */\n      removePointerInTextLayer(element) {\n          if (!__classPrivateFieldGet(this, _TextAccessibilityManager_enabled, \"f\")) {\n              __classPrivateFieldGet(this, _TextAccessibilityManager_waitingElements, \"f\").delete(element);\n              return;\n          }\n          const children = __classPrivateFieldGet(this, _TextAccessibilityManager_textChildren, \"f\");\n          if (!children || children.length === 0) {\n              return;\n          }\n          const { id } = element;\n          const nodeIndex = __classPrivateFieldGet(this, _TextAccessibilityManager_textNodes, \"f\").get(id);\n          if (nodeIndex === undefined) {\n              return;\n          }\n          const node = children[nodeIndex];\n          __classPrivateFieldGet(this, _TextAccessibilityManager_textNodes, \"f\").delete(id);\n          let owns = node.getAttribute(\"aria-owns\");\n          if (owns === null || owns === void 0 ? void 0 : owns.includes(id)) {\n              owns = owns\n                  .split(\" \")\n                  .filter(x => x !== id)\n                  .join(\" \");\n              if (owns) {\n                  node.setAttribute(\"aria-owns\", owns);\n              }\n              else {\n                  node.removeAttribute(\"aria-owns\");\n                  node.setAttribute(\"role\", \"presentation\");\n              }\n          }\n      }\n      /**\n       * Find the text node which is the nearest and add an aria-owns attribute\n       * in order to correctly position this editor in the text flow.\n       * @param {HTMLElement} element\n       * @param {boolean} isRemovable\n       * @returns {string|null} The id in the struct tree if any.\n       */\n      addPointerInTextLayer(element, isRemovable) {\n          // todo: mocked highlight editor is null here\n          if (!element) {\n              // eslint-disable-next-line no-console\n              console.warn(\"no element\");\n              return;\n          }\n          const { id } = element;\n          if (!id) {\n              return null;\n          }\n          if (!__classPrivateFieldGet(this, _TextAccessibilityManager_enabled, \"f\")) {\n              // The text layer needs to be there, so we postpone the association.\n              __classPrivateFieldGet(this, _TextAccessibilityManager_waitingElements, \"f\").set(element, isRemovable);\n              return null;\n          }\n          if (isRemovable) {\n              this.removePointerInTextLayer(element);\n          }\n          const children = __classPrivateFieldGet(this, _TextAccessibilityManager_textChildren, \"f\");\n          if (!children || children.length === 0) {\n              return null;\n          }\n          const index = binarySearchFirstItem(children, node => __classPrivateFieldGet(_a$8, _a$8, \"m\", _TextAccessibilityManager_compareElementPositions).call(_a$8, element, node) < 0);\n          const nodeIndex = Math.max(0, index - 1);\n          const child = children[nodeIndex];\n          __classPrivateFieldGet(this, _TextAccessibilityManager_instances, \"m\", _TextAccessibilityManager_addIdToAriaOwns).call(this, id, child);\n          __classPrivateFieldGet(this, _TextAccessibilityManager_textNodes, \"f\").set(id, nodeIndex);\n          const parent = child.parentNode;\n          // return parent?.classList.contains(\"markedContent\") ? parent.id : null;\n          return (parent === null || parent === void 0 ? void 0 : parent.classList.contains(\"markedContent\")) ||\n              (parent === null || parent === void 0 ? void 0 : parent.classList.contains(\"k-marked-content\")) ? parent.id : null;\n      }\n      /**\n       * Move a div in the DOM in order to respect the visual order.\n       * @param {HTMLDivElement} element\n       * @returns {string|null} The id in the struct tree if any.\n       */\n      moveElementInDOM(container, element, contentElement, isRemovable) {\n          const id = this.addPointerInTextLayer(contentElement, isRemovable);\n          if (!container.hasChildNodes()) {\n              container.append(element);\n              return id;\n          }\n          // todo: use children to skip text nodes\n          // const children = Array.from(container.childNodes).filter(\n          const children = Array.from(container.children).filter(node => node !== element);\n          if (children.length === 0) {\n              return id;\n          }\n          const elementToCompare = contentElement || element;\n          const index = binarySearchFirstItem(children, node => __classPrivateFieldGet(_a$8, _a$8, \"m\", _TextAccessibilityManager_compareElementPositions).call(_a$8, elementToCompare, node) < 0);\n          if (index === 0) {\n              children[0].before(element);\n          }\n          else {\n              children[index - 1].after(element);\n          }\n          return id;\n      }\n      destroy() {\n          __classPrivateFieldSet(this, _TextAccessibilityManager_textNodes, new Map(), \"f\");\n          __classPrivateFieldSet(this, _TextAccessibilityManager_waitingElements, new Map(), \"f\");\n          __classPrivateFieldSet(this, _TextAccessibilityManager_textChildren, null, \"f\");\n      }\n  }\n  _a$8 = TextAccessibilityManager, _TextAccessibilityManager_enabled = new WeakMap(), _TextAccessibilityManager_textChildren = new WeakMap(), _TextAccessibilityManager_textNodes = new WeakMap(), _TextAccessibilityManager_waitingElements = new WeakMap(), _TextAccessibilityManager_instances = new WeakSet(), _TextAccessibilityManager_compareElementPositions = function _TextAccessibilityManager_compareElementPositions(e1, e2) {\n      const rect1 = e1.getBoundingClientRect();\n      const rect2 = e2.getBoundingClientRect();\n      if (rect1.width === 0 && rect1.height === 0) {\n          return +1;\n      }\n      if (rect2.width === 0 && rect2.height === 0) {\n          return -1;\n      }\n      const top1 = rect1.y;\n      const bot1 = rect1.y + rect1.height;\n      const mid1 = rect1.y + rect1.height / 2;\n      const top2 = rect2.y;\n      const bot2 = rect2.y + rect2.height;\n      const mid2 = rect2.y + rect2.height / 2;\n      if (mid1 <= top2 && mid2 >= bot1) {\n          return -1;\n      }\n      if (mid2 <= top1 && mid1 >= bot2) {\n          return +1;\n      }\n      const centerX1 = rect1.x + rect1.width / 2;\n      const centerX2 = rect2.x + rect2.width / 2;\n      return centerX1 - centerX2;\n  }, _TextAccessibilityManager_addIdToAriaOwns = function _TextAccessibilityManager_addIdToAriaOwns(id, node) {\n      const owns = node.getAttribute(\"aria-owns\");\n      if (!(owns === null || owns === void 0 ? void 0 : owns.includes(id))) {\n          node.setAttribute(\"aria-owns\", owns ? `${owns} ${id}` : id);\n      }\n      node.removeAttribute(\"role\");\n  };\n\n  /* Copyright 2012 Mozilla Foundation\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *     http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   * See the License for the specific language governing permissions and\n   * limitations under the License.\n   */\n  var _TextLayerBuilder_instances, _a$7, _TextLayerBuilder_onAppend, _TextLayerBuilder_textLayer, _TextLayerBuilder_textLayers, _TextLayerBuilder_selectionChangeAbortController, _TextLayerBuilder_bindMouse, _TextLayerBuilder_removeGlobalSelectionListener, _TextLayerBuilder_enableGlobalSelectionListener;\n  /**\n   * The text layer builder provides text selection functionality for the PDF.\n   * It does this by creating overlay divs over the PDF's text. These divs\n   * contain text that matches the PDF text they are overlaying.\n   */\n  class TextLayerBuilder {\n      constructor({ pdfPage, \n      // highlighter = null,\n      accessibilityManager, \n      // enablePermissions = false,\n      // todo: fix styles\n      styles, onAppend = null }) {\n          _TextLayerBuilder_instances.add(this);\n          // todo: props\n          this.pdfPage = null;\n          // highlighter = null;\n          this.div = null;\n          this.accessibilityManager = null;\n          // todo: props\n          // #enablePermissions = false;\n          _TextLayerBuilder_onAppend.set(this, null);\n          // #renderingDone = false;\n          _TextLayerBuilder_textLayer.set(this, null);\n          this.pdfPage = pdfPage;\n          // this.highlighter = highlighter;\n          this.accessibilityManager = accessibilityManager;\n          // this.#enablePermissions = enablePermissions === true;\n          __classPrivateFieldSet(this, _TextLayerBuilder_onAppend, onAppend, \"f\");\n          this.div = document.createElement(\"div\");\n          this.div.tabIndex = 0;\n          // this.div.className = \"textLayer\";\n          // todo: fix classes\n          this.div.classList.add(\"k-text-layer\");\n          // todo: fix styles\n          Object.keys(styles).forEach((key) => (this.div.style[key] = styles[key]));\n      }\n      /**\n       * Renders the text layer.\n       * @param {PageViewport} viewport\n       * @param {Object} [textContentParams]\n       */\n      render(viewport_1) {\n          return __awaiter(this, arguments, void 0, function* (viewport, textContentParams = null) {\n              var _b, _c, _d;\n              // if (this.#renderingDone && this.#textLayer) {\n              if (__classPrivateFieldGet(this, _TextLayerBuilder_textLayer, \"f\")) {\n                  __classPrivateFieldGet(this, _TextLayerBuilder_textLayer, \"f\").update({\n                      viewport,\n                      onBefore: this.hide.bind(this)\n                  });\n                  this.show();\n                  return;\n              }\n              this.cancel();\n              __classPrivateFieldSet(this, _TextLayerBuilder_textLayer, new kendo_pdfjs_loader_js.TextLayer({\n                  textContentSource: this.pdfPage.streamTextContent(textContentParams || {\n                      // includeMarkedContent: true,\n                      // setting this to false requires removing \"await\"\n                      // in page.ts when calling this.#renderTextLayer()\n                      includeMarkedContent: false,\n                      disableNormalization: true\n                  }),\n                  container: this.div,\n                  viewport\n              }), \"f\");\n              // const { textDivs, textContentItemsStr } = this.#textLayer;\n              const { textDivs } = __classPrivateFieldGet(this, _TextLayerBuilder_textLayer, \"f\");\n              // this.highlighter?.setTextMapping(textDivs, textContentItemsStr);\n              (_b = this.accessibilityManager) === null || _b === void 0 ? void 0 : _b.setTextMapping(textDivs);\n              yield __classPrivateFieldGet(this, _TextLayerBuilder_textLayer, \"f\").render();\n              // this.#renderingDone = true;\n              // todo: manually add \"k-marked-content\" class\n              // as pdf.js text layer cannot render it\n              const markedContentElements = Array.from(this.div.querySelectorAll(\".markedContent\") || []) || [];\n              markedContentElements.forEach(x => addClass(\"k-marked-content\", x));\n              if (markedContentElements && markedContentElements.length > 0) {\n                  const endOfContent = document.createElement(\"div\");\n                  endOfContent.className = \"endOfContent\";\n                  this.div.append(endOfContent);\n                  __classPrivateFieldGet(this, _TextLayerBuilder_instances, \"m\", _TextLayerBuilder_bindMouse).call(this, endOfContent);\n              }\n              // Ensure that the textLayer is appended to the DOM *before* handling\n              // e.g. a pending search operation.\n              (_c = __classPrivateFieldGet(this, _TextLayerBuilder_onAppend, \"f\")) === null || _c === void 0 ? void 0 : _c.call(this, this.div);\n              // this.highlighter?.enable();\n              (_d = this.accessibilityManager) === null || _d === void 0 ? void 0 : _d.enable();\n          });\n      }\n      hide() {\n          // if (!this.div.hidden && this.#renderingDone) {\n          if (!this.div.hidden) {\n              // We turn off the highlighter in order to avoid to scroll into view an\n              // element of the text layer which could be hidden.\n              // this.highlighter?.disable();\n              this.div.hidden = true;\n          }\n      }\n      show() {\n          // if (this.div.hidden && this.#renderingDone) {\n          if (this.div.hidden) {\n              this.div.hidden = false;\n              // this.highlighter?.enable();\n          }\n      }\n      /**\n       * Cancel rendering of the text layer.\n       */\n      cancel() {\n          var _b, _c, _d;\n          (_b = __classPrivateFieldGet(this, _TextLayerBuilder_textLayer, \"f\")) === null || _b === void 0 ? void 0 : _b.cancel();\n          __classPrivateFieldSet(this, _TextLayerBuilder_textLayer, null, \"f\");\n          // this.highlighter?.disable();\n          (_c = this.accessibilityManager) === null || _c === void 0 ? void 0 : _c.disable();\n          (_d = this.accessibilityManager) === null || _d === void 0 ? void 0 : _d.destroy();\n          __classPrivateFieldGet(_a$7, _a$7, \"m\", _TextLayerBuilder_removeGlobalSelectionListener).call(_a$7, this.div);\n      }\n      destroy() {\n          var _b, _c;\n          kendo_pdfjs_loader_js.TextLayer.cleanup();\n          this.cancel();\n          this.pdfPage = null;\n          // this.highlighter = null;\n          (_b = this.accessibilityManager) === null || _b === void 0 ? void 0 : _b.destroy();\n          this.accessibilityManager = null;\n          (_c = this.div) === null || _c === void 0 ? void 0 : _c.remove();\n          this.div = null;\n      }\n  }\n  _a$7 = TextLayerBuilder, _TextLayerBuilder_onAppend = new WeakMap(), _TextLayerBuilder_textLayer = new WeakMap(), _TextLayerBuilder_instances = new WeakSet(), _TextLayerBuilder_bindMouse = function _TextLayerBuilder_bindMouse(end) {\n      const { div } = this;\n      // div.addEventListener(\"mousedown\", () => {\n      //     div.classList.add(\"selecting\");\n      // });\n      // div.addEventListener(\"copy\", event => {\n      //     if (!this.#enablePermissions) {\n      //         const selection = document.getSelection();\n      //         event.clipboardData.setData(\n      //             \"text/plain\",\n      //             removeNullCharacters(normalizeUnicode(selection.toString()))\n      //         );\n      //     }\n      //     event.preventDefault();\n      //     event.stopPropagation();\n      // });\n      __classPrivateFieldGet(_a$7, _a$7, \"f\", _TextLayerBuilder_textLayers).set(div, end);\n      __classPrivateFieldGet(_a$7, _a$7, \"m\", _TextLayerBuilder_enableGlobalSelectionListener).call(_a$7);\n  }, _TextLayerBuilder_removeGlobalSelectionListener = function _TextLayerBuilder_removeGlobalSelectionListener(textLayerDiv) {\n      var _b;\n      __classPrivateFieldGet(this, _a$7, \"f\", _TextLayerBuilder_textLayers).delete(textLayerDiv);\n      if (__classPrivateFieldGet(this, _a$7, \"f\", _TextLayerBuilder_textLayers).size === 0) {\n          (_b = __classPrivateFieldGet(this, _a$7, \"f\", _TextLayerBuilder_selectionChangeAbortController)) === null || _b === void 0 ? void 0 : _b.abort();\n          __classPrivateFieldSet(this, _a$7, null, \"f\", _TextLayerBuilder_selectionChangeAbortController);\n      }\n  }, _TextLayerBuilder_enableGlobalSelectionListener = function _TextLayerBuilder_enableGlobalSelectionListener() {\n      // if (this.#selectionChangeAbortController) {\n      //     // document-level event listeners already installed\n      //     return;\n      // }\n      // this.#selectionChangeAbortController = new AbortController();\n      // const { signal } = this.#selectionChangeAbortController;\n      // const reset = (end, textLayer) => {\n      //     if (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"MOZCENTRAL\")) {\n      //         textLayer.append(end);\n      //         end.style.width = \"\";\n      //         end.style.height = \"\";\n      //     }\n      //     textLayer.classList.remove(\"selecting\");\n      // };\n      // let isPointerDown = false;\n      // document.addEventListener(\n      //     \"pointerdown\",\n      //     () => {\n      //         isPointerDown = true;\n      //     },\n      //     { signal }\n      // );\n      // document.addEventListener(\n      //     \"pointerup\",\n      //     () => {\n      //         isPointerDown = false;\n      //         this.#textLayers.forEach(reset);\n      //     },\n      //     { signal }\n      // );\n      // window.addEventListener(\n      //     \"blur\",\n      //     () => {\n      //         isPointerDown = false;\n      //         this.#textLayers.forEach(reset);\n      //     },\n      //     { signal }\n      // );\n      // document.addEventListener(\n      //     \"keyup\",\n      //     () => {\n      //         if (!isPointerDown) {\n      //             this.#textLayers.forEach(reset);\n      //         }\n      //     },\n      //     { signal }\n      // );\n      // if (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"MOZCENTRAL\")) {\n      //     // eslint-disable-next-line no-var\n      //     var isFirefox, prevRange;\n      // }\n      // document.addEventListener(\n      //     \"selectionchange\",\n      //     () => {\n      //         const selection = document.getSelection();\n      //         if (selection.rangeCount === 0) {\n      //             this.#textLayers.forEach(reset);\n      //             return;\n      //         }\n      //         // Even though the spec says that .rangeCount should be 0 or 1, Firefox\n      //         // creates multiple ranges when selecting across multiple pages.\n      //         // Make sure to collect all the .textLayer elements where the selection\n      //         // is happening.\n      //         const activeTextLayers = new Set();\n      //         for (let i = 0; i < selection.rangeCount; i++) {\n      //             const range = selection.getRangeAt(i);\n      //             for (const textLayerDiv of this.#textLayers.keys()) {\n      //                 if (\n      //                     !activeTextLayers.has(textLayerDiv) &&\n      //                     range.intersectsNode(textLayerDiv)\n      //                 ) {\n      //                     activeTextLayers.add(textLayerDiv);\n      //                 }\n      //             }\n      //         }\n      //         for (const [textLayerDiv, endDiv] of this.#textLayers) {\n      //             if (activeTextLayers.has(textLayerDiv)) {\n      //                 textLayerDiv.classList.add(\"selecting\");\n      //             } else {\n      //                 reset(endDiv, textLayerDiv);\n      //             }\n      //         }\n      //         if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n      //             return;\n      //         }\n      //         if (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"CHROME\")) {\n      //             isFirefox ??=\n      //                 getComputedStyle(\n      //                     this.#textLayers.values().next().value\n      //                 ).getPropertyValue(\"-moz-user-select\") === \"none\";\n      //             if (isFirefox) {\n      //                 return;\n      //             }\n      //         }\n      //         // In non-Firefox browsers, when hovering over an empty space (thus,\n      //         // on .endOfContent), the selection will expand to cover all the\n      //         // text between the current selection and .endOfContent. By moving\n      //         // .endOfContent to right after (or before, depending on which side\n      //         // of the selection the user is moving), we limit the selection jump\n      //         // to at most cover the enteirety of the <span> where the selection\n      //         // is being modified.\n      //         const range = selection.getRangeAt(0);\n      //         const modifyStart =\n      //             prevRange &&\n      //             (range.compareBoundaryPoints(Range.END_TO_END, prevRange) === 0 ||\n      //                 range.compareBoundaryPoints(Range.START_TO_END, prevRange) === 0);\n      //         let anchor = modifyStart ? range.startContainer : range.endContainer;\n      //         if (anchor.nodeType === Node.TEXT_NODE) {\n      //             anchor = anchor.parentNode;\n      //         }\n      //         const parentTextLayer = anchor.parentElement.closest(\".textLayer\");\n      //         const endDiv = this.#textLayers.get(parentTextLayer);\n      //         if (endDiv) {\n      //             endDiv.style.width = parentTextLayer.style.width;\n      //             endDiv.style.height = parentTextLayer.style.height;\n      //             anchor.parentElement.insertBefore(\n      //                 endDiv,\n      //                 modifyStart ? anchor : anchor.nextSibling\n      //             );\n      //         }\n      //         prevRange = range.cloneRange();\n      //     },\n      //     { signal }\n      // );\n  };\n  _TextLayerBuilder_textLayers = { value: new Map() };\n  _TextLayerBuilder_selectionChangeAbortController = { value: null };\n\n  /* Copyright 2020 Mozilla Foundation\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *     http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   * See the License for the specific language governing permissions and\n   * limitations under the License.\n   */\n  /**\n   * PLEASE NOTE: This file is currently imported in both the `../display/` and\n   *              `../scripting_api/` folders, hence be EXTREMELY careful about\n   *              introducing any dependencies here since that can lead to an\n   *              unexpected/unnecessary size increase of the *built* files.\n   */\n  function makeColorComp(n) {\n      return Math.floor(Math.max(0, Math.min(1, n)) * 255)\n          .toString(16)\n          .padStart(2, \"0\");\n  }\n  function scaleAndClamp(x) {\n      return Math.max(0, Math.min(255, 255 * x));\n  }\n  // PDF specifications section 10.3\n  class ColorConverters {\n      static CMYK_G([c, y, m, k]) {\n          return [\"G\", 1 - Math.min(1, 0.3 * c + 0.59 * m + 0.11 * y + k)];\n      }\n      static G_CMYK([g]) {\n          return [\"CMYK\", 0, 0, 0, 1 - g];\n      }\n      static G_RGB([g]) {\n          return [\"RGB\", g, g, g];\n      }\n      static G_rgb([g]) {\n          g = scaleAndClamp(g);\n          return [g, g, g];\n      }\n      static G_HTML([g]) {\n          const G = makeColorComp(g);\n          return `#${G}${G}${G}`;\n      }\n      static RGB_G([r, g, b]) {\n          return [\"G\", 0.3 * r + 0.59 * g + 0.11 * b];\n      }\n      static RGB_rgb(color) {\n          return color.map(scaleAndClamp);\n      }\n      static RGB_HTML(color) {\n          return `#${color.map(makeColorComp).join(\"\")}`;\n      }\n      static T_HTML() {\n          return \"#00000000\";\n      }\n      static T_rgb() {\n          return [null];\n      }\n      static CMYK_RGB([c, y, m, k]) {\n          return [\n              \"RGB\",\n              1 - Math.min(1, c + k),\n              1 - Math.min(1, m + k),\n              1 - Math.min(1, y + k)\n          ];\n      }\n      static CMYK_rgb([c, y, m, k]) {\n          return [\n              scaleAndClamp(1 - Math.min(1, c + k)),\n              scaleAndClamp(1 - Math.min(1, m + k)),\n              scaleAndClamp(1 - Math.min(1, y + k))\n          ];\n      }\n      static CMYK_HTML(components) {\n          const rgb = this.CMYK_RGB(components).slice(1);\n          return this.RGB_HTML(rgb);\n      }\n      static RGB_CMYK([r, g, b]) {\n          const c = 1 - r;\n          const m = 1 - g;\n          const y = 1 - b;\n          const k = Math.min(c, m, y);\n          return [\"CMYK\", c, m, y, k];\n      }\n  }\n\n  /* Copyright 2015 Mozilla Foundation\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *     http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   * See the License for the specific language governing permissions and\n   * limitations under the License.\n   */\n  // import {\n  //     BaseCanvasFactory,\n  //     BaseCMapReaderFactory,\n  //     BaseFilterFactory,\n  //     BaseStandardFontDataFactory,\n  //     BaseSVGFactory,\n  // } from \"./base_factory.js\";\n  // import {\n  //     BaseException,\n  //     FeatureTest,\n  //     shadow,\n  //     stringToBytes,\n  //     Util,\n  //     warn,\n  // } from \"../shared/util.js\";\n  // const SVG_NS = \"http://www.w3.org/2000/svg\";\n  // class PixelsPerInch {\n  //     static CSS = 96.0;\n  //     static PDF = 72.0;\n  //     static PDF_TO_CSS_UNITS = this.CSS / this.PDF;\n  // }\n  // /**\n  //  * FilterFactory aims to create some SVG filters we can use when drawing an\n  //  * image (or whatever) on a canvas.\n  //  * Filters aren't applied with ctx.putImageData because it just overwrites the\n  //  * underlying pixels.\n  //  * With these filters, it's possible for example to apply some transfer maps on\n  //  * an image without the need to apply them on the pixel arrays: the renderer\n  //  * does the magic for us.\n  //  */\n  // class DOMFilterFactory extends BaseFilterFactory {\n  //     #baseUrl;\n  //     #_cache;\n  //     #_defs;\n  //     #docId;\n  //     #document;\n  //     #_hcmCache;\n  //     #id = 0;\n  //     constructor({ docId, ownerDocument = globalThis.document } = {}) {\n  //         super();\n  //         this.#docId = docId;\n  //         this.#document = ownerDocument;\n  //     }\n  //     get #cache() {\n  //         return (this.#_cache ||= new Map());\n  //     }\n  //     get #hcmCache() {\n  //         return (this.#_hcmCache ||= new Map());\n  //     }\n  //     get #defs() {\n  //         if (!this.#_defs) {\n  //             const div = this.#document.createElement(\"div\");\n  //             const { style } = div;\n  //             style.visibility = \"hidden\";\n  //             style.contain = \"strict\";\n  //             style.width = style.height = 0;\n  //             style.position = \"absolute\";\n  //             style.top = style.left = 0;\n  //             style.zIndex = -1;\n  //             const svg = this.#document.createElementNS(SVG_NS, \"svg\");\n  //             svg.setAttribute(\"width\", 0);\n  //             svg.setAttribute(\"height\", 0);\n  //             this.#_defs = this.#document.createElementNS(SVG_NS, \"defs\");\n  //             div.append(svg);\n  //             svg.append(this.#_defs);\n  //             this.#document.body.append(div);\n  //         }\n  //         return this.#_defs;\n  //     }\n  //     #createTables(maps) {\n  //         if (maps.length === 1) {\n  //             const mapR = maps[0];\n  //             const buffer = new Array(256);\n  //             for (let i = 0; i < 256; i++) {\n  //                 buffer[i] = mapR[i] / 255;\n  //             }\n  //             const table = buffer.join(\",\");\n  //             return [table, table, table];\n  //         }\n  //         const [mapR, mapG, mapB] = maps;\n  //         const bufferR = new Array(256);\n  //         const bufferG = new Array(256);\n  //         const bufferB = new Array(256);\n  //         for (let i = 0; i < 256; i++) {\n  //             bufferR[i] = mapR[i] / 255;\n  //             bufferG[i] = mapG[i] / 255;\n  //             bufferB[i] = mapB[i] / 255;\n  //         }\n  //         return [bufferR.join(\",\"), bufferG.join(\",\"), bufferB.join(\",\")];\n  //     }\n  //     #createUrl(id) {\n  //         if (this.#baseUrl === undefined) {\n  //             // Unless a `<base>`-element is present a relative URL should work.\n  //             this.#baseUrl = \"\";\n  //             const url = this.#document.URL;\n  //             if (url !== this.#document.baseURI) {\n  //                 if (isDataScheme(url)) {\n  //                     warn('#createUrl: ignore \"data:\"-URL for performance reasons.');\n  //                 } else {\n  //                     this.#baseUrl = url.split(\"#\", 1)[0];\n  //                 }\n  //             }\n  //         }\n  //         return `url(${this.#baseUrl}#${id})`;\n  //     }\n  //     addFilter(maps) {\n  //         if (!maps) {\n  //             return \"none\";\n  //         }\n  //         // When a page is zoomed the page is re-drawn but the maps are likely\n  //         // the same.\n  //         let value = this.#cache.get(maps);\n  //         if (value) {\n  //             return value;\n  //         }\n  //         const [tableR, tableG, tableB] = this.#createTables(maps);\n  //         const key = maps.length === 1 ? tableR : `${tableR}${tableG}${tableB}`;\n  //         value = this.#cache.get(key);\n  //         if (value) {\n  //             this.#cache.set(maps, value);\n  //             return value;\n  //         }\n  //         // We create a SVG filter: feComponentTransferElement\n  //         //  https://www.w3.org/TR/SVG11/filters.html#feComponentTransferElement\n  //         const id = `g_${this.#docId}_transfer_map_${this.#id++}`;\n  //         const url = this.#createUrl(id);\n  //         this.#cache.set(maps, url);\n  //         this.#cache.set(key, url);\n  //         const filter = this.#createFilter(id);\n  //         this.#addTransferMapConversion(tableR, tableG, tableB, filter);\n  //         return url;\n  //     }\n  //     addHCMFilter(fgColor, bgColor) {\n  //         const key = `${fgColor}-${bgColor}`;\n  //         const filterName = \"base\";\n  //         let info = this.#hcmCache.get(filterName);\n  //         if (info?.key === key) {\n  //             return info.url;\n  //         }\n  //         if (info) {\n  //             info.filter?.remove();\n  //             info.key = key;\n  //             info.url = \"none\";\n  //             info.filter = null;\n  //         } else {\n  //             info = {\n  //                 key,\n  //                 url: \"none\",\n  //                 filter: null,\n  //             };\n  //             this.#hcmCache.set(filterName, info);\n  //         }\n  //         if (!fgColor || !bgColor) {\n  //             return info.url;\n  //         }\n  //         const fgRGB = this.#getRGB(fgColor);\n  //         fgColor = Util.makeHexColor(...fgRGB);\n  //         const bgRGB = this.#getRGB(bgColor);\n  //         bgColor = Util.makeHexColor(...bgRGB);\n  //         this.#defs.style.color = \"\";\n  //         if (\n  //             (fgColor === \"#000000\" && bgColor === \"#ffffff\") ||\n  //             fgColor === bgColor\n  //         ) {\n  //             return info.url;\n  //         }\n  //         // https://developer.mozilla.org/en-US/docs/Web/Accessibility/Understanding_Colors_and_Luminance\n  //         //\n  //         // Relative luminance:\n  //         // https://www.w3.org/TR/WCAG20/#relativeluminancedef\n  //         //\n  //         // We compute the rounded luminance of the default background color.\n  //         // Then for every color in the pdf, if its rounded luminance is the\n  //         // same as the background one then it's replaced by the new\n  //         // background color else by the foreground one.\n  //         const map = new Array(256);\n  //         for (let i = 0; i <= 255; i++) {\n  //             const x = i / 255;\n  //             map[i] = x <= 0.03928 ? x / 12.92 : ((x + 0.055) / 1.055) ** 2.4;\n  //         }\n  //         const table = map.join(\",\");\n  //         const id = `g_${this.#docId}_hcm_filter`;\n  //         const filter = (info.filter = this.#createFilter(id));\n  //         this.#addTransferMapConversion(table, table, table, filter);\n  //         this.#addGrayConversion(filter);\n  //         const getSteps = (c, n) => {\n  //             const start = fgRGB[c] / 255;\n  //             const end = bgRGB[c] / 255;\n  //             const arr = new Array(n + 1);\n  //             for (let i = 0; i <= n; i++) {\n  //                 arr[i] = start + (i / n) * (end - start);\n  //             }\n  //             return arr.join(\",\");\n  //         };\n  //         this.#addTransferMapConversion(\n  //             getSteps(0, 5),\n  //             getSteps(1, 5),\n  //             getSteps(2, 5),\n  //             filter\n  //         );\n  //         info.url = this.#createUrl(id);\n  //         return info.url;\n  //     }\n  //     addAlphaFilter(map) {\n  //         // When a page is zoomed the page is re-drawn but the maps are likely\n  //         // the same.\n  //         let value = this.#cache.get(map);\n  //         if (value) {\n  //             return value;\n  //         }\n  //         const [tableA] = this.#createTables([map]);\n  //         const key = `alpha_${tableA}`;\n  //         value = this.#cache.get(key);\n  //         if (value) {\n  //             this.#cache.set(map, value);\n  //             return value;\n  //         }\n  //         const id = `g_${this.#docId}_alpha_map_${this.#id++}`;\n  //         const url = this.#createUrl(id);\n  //         this.#cache.set(map, url);\n  //         this.#cache.set(key, url);\n  //         const filter = this.#createFilter(id);\n  //         this.#addTransferMapAlphaConversion(tableA, filter);\n  //         return url;\n  //     }\n  //     addLuminosityFilter(map) {\n  //         // When a page is zoomed the page is re-drawn but the maps are likely\n  //         // the same.\n  //         let value = this.#cache.get(map || \"luminosity\");\n  //         if (value) {\n  //             return value;\n  //         }\n  //         let tableA, key;\n  //         if (map) {\n  //             [tableA] = this.#createTables([map]);\n  //             key = `luminosity_${tableA}`;\n  //         } else {\n  //             key = \"luminosity\";\n  //         }\n  //         value = this.#cache.get(key);\n  //         if (value) {\n  //             this.#cache.set(map, value);\n  //             return value;\n  //         }\n  //         const id = `g_${this.#docId}_luminosity_map_${this.#id++}`;\n  //         const url = this.#createUrl(id);\n  //         this.#cache.set(map, url);\n  //         this.#cache.set(key, url);\n  //         const filter = this.#createFilter(id);\n  //         this.#addLuminosityConversion(filter);\n  //         if (map) {\n  //             this.#addTransferMapAlphaConversion(tableA, filter);\n  //         }\n  //         return url;\n  //     }\n  //     addHighlightHCMFilter(filterName, fgColor, bgColor, newFgColor, newBgColor) {\n  //         const key = `${fgColor}-${bgColor}-${newFgColor}-${newBgColor}`;\n  //         let info = this.#hcmCache.get(filterName);\n  //         if (info?.key === key) {\n  //             return info.url;\n  //         }\n  //         if (info) {\n  //             info.filter?.remove();\n  //             info.key = key;\n  //             info.url = \"none\";\n  //             info.filter = null;\n  //         } else {\n  //             info = {\n  //                 key,\n  //                 url: \"none\",\n  //                 filter: null,\n  //             };\n  //             this.#hcmCache.set(filterName, info);\n  //         }\n  //         if (!fgColor || !bgColor) {\n  //             return info.url;\n  //         }\n  //         const [fgRGB, bgRGB] = [fgColor, bgColor].map(this.#getRGB.bind(this));\n  //         let fgGray = Math.round(\n  //             0.2126 * fgRGB[0] + 0.7152 * fgRGB[1] + 0.0722 * fgRGB[2]\n  //         );\n  //         let bgGray = Math.round(\n  //             0.2126 * bgRGB[0] + 0.7152 * bgRGB[1] + 0.0722 * bgRGB[2]\n  //         );\n  //         let [newFgRGB, newBgRGB] = [newFgColor, newBgColor].map(\n  //             this.#getRGB.bind(this)\n  //         );\n  //         if (bgGray < fgGray) {\n  //             [fgGray, bgGray, newFgRGB, newBgRGB] = [\n  //                 bgGray,\n  //                 fgGray,\n  //                 newBgRGB,\n  //                 newFgRGB,\n  //             ];\n  //         }\n  //         this.#defs.style.color = \"\";\n  //         // Now we can create the filters to highlight some canvas parts.\n  //         // The colors in the pdf will almost be Canvas and CanvasText, hence we\n  //         // want to filter them to finally get Highlight and HighlightText.\n  //         // Since we're in HCM the background color and the foreground color should\n  //         // be really different when converted to grayscale (if they're not then it\n  //         // means that we've a poor contrast). Once the canvas colors are converted\n  //         // to grayscale we can easily map them on their new colors.\n  //         // The grayscale step is important because if we've something like:\n  //         //   fgColor = #FF....\n  //         //   bgColor = #FF....\n  //         //   then we are enable to map the red component on the new red components\n  //         //   which can be different.\n  //         const getSteps = (fg, bg, n) => {\n  //             const arr = new Array(256);\n  //             const step = (bgGray - fgGray) / n;\n  //             const newStart = fg / 255;\n  //             const newStep = (bg - fg) / (255 * n);\n  //             let prev = 0;\n  //             for (let i = 0; i <= n; i++) {\n  //                 const k = Math.round(fgGray + i * step);\n  //                 const value = newStart + i * newStep;\n  //                 for (let j = prev; j <= k; j++) {\n  //                     arr[j] = value;\n  //                 }\n  //                 prev = k + 1;\n  //             }\n  //             for (let i = prev; i < 256; i++) {\n  //                 arr[i] = arr[prev - 1];\n  //             }\n  //             return arr.join(\",\");\n  //         };\n  //         const id = `g_${this.#docId}_hcm_${filterName}_filter`;\n  //         const filter = (info.filter = this.#createFilter(id));\n  //         this.#addGrayConversion(filter);\n  //         this.#addTransferMapConversion(\n  //             getSteps(newFgRGB[0], newBgRGB[0], 5),\n  //             getSteps(newFgRGB[1], newBgRGB[1], 5),\n  //             getSteps(newFgRGB[2], newBgRGB[2], 5),\n  //             filter\n  //         );\n  //         info.url = this.#createUrl(id);\n  //         return info.url;\n  //     }\n  //     destroy(keepHCM = false) {\n  //         if (keepHCM && this.#hcmCache.size !== 0) {\n  //             return;\n  //         }\n  //         if (this.#_defs) {\n  //             this.#_defs.parentNode.parentNode.remove();\n  //             this.#_defs = null;\n  //         }\n  //         if (this.#_cache) {\n  //             this.#_cache.clear();\n  //             this.#_cache = null;\n  //         }\n  //         this.#id = 0;\n  //     }\n  //     #addLuminosityConversion(filter) {\n  //         const feColorMatrix = this.#document.createElementNS(\n  //             SVG_NS,\n  //             \"feColorMatrix\"\n  //         );\n  //         feColorMatrix.setAttribute(\"type\", \"matrix\");\n  //         feColorMatrix.setAttribute(\n  //             \"values\",\n  //             \"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.3 0.59 0.11 0 0\"\n  //         );\n  //         filter.append(feColorMatrix);\n  //     }\n  //     #addGrayConversion(filter) {\n  //         const feColorMatrix = this.#document.createElementNS(\n  //             SVG_NS,\n  //             \"feColorMatrix\"\n  //         );\n  //         feColorMatrix.setAttribute(\"type\", \"matrix\");\n  //         feColorMatrix.setAttribute(\n  //             \"values\",\n  //             \"0.2126 0.7152 0.0722 0 0 0.2126 0.7152 0.0722 0 0 0.2126 0.7152 0.0722 0 0 0 0 0 1 0\"\n  //         );\n  //         filter.append(feColorMatrix);\n  //     }\n  //     #createFilter(id) {\n  //         const filter = this.#document.createElementNS(SVG_NS, \"filter\");\n  //         filter.setAttribute(\"color-interpolation-filters\", \"sRGB\");\n  //         filter.setAttribute(\"id\", id);\n  //         this.#defs.append(filter);\n  //         return filter;\n  //     }\n  //     #appendFeFunc(feComponentTransfer, func, table) {\n  //         const feFunc = this.#document.createElementNS(SVG_NS, func);\n  //         feFunc.setAttribute(\"type\", \"discrete\");\n  //         feFunc.setAttribute(\"tableValues\", table);\n  //         feComponentTransfer.append(feFunc);\n  //     }\n  //     #addTransferMapConversion(rTable, gTable, bTable, filter) {\n  //         const feComponentTransfer = this.#document.createElementNS(\n  //             SVG_NS,\n  //             \"feComponentTransfer\"\n  //         );\n  //         filter.append(feComponentTransfer);\n  //         this.#appendFeFunc(feComponentTransfer, \"feFuncR\", rTable);\n  //         this.#appendFeFunc(feComponentTransfer, \"feFuncG\", gTable);\n  //         this.#appendFeFunc(feComponentTransfer, \"feFuncB\", bTable);\n  //     }\n  //     #addTransferMapAlphaConversion(aTable, filter) {\n  //         const feComponentTransfer = this.#document.createElementNS(\n  //             SVG_NS,\n  //             \"feComponentTransfer\"\n  //         );\n  //         filter.append(feComponentTransfer);\n  //         this.#appendFeFunc(feComponentTransfer, \"feFuncA\", aTable);\n  //     }\n  //     #getRGB(color) {\n  //         this.#defs.style.color = color;\n  //         return getRGB(getComputedStyle(this.#defs).getPropertyValue(\"color\"));\n  //     }\n  // }\n  // class DOMCanvasFactory extends BaseCanvasFactory {\n  //     constructor({ ownerDocument = globalThis.document, enableHWA = false } = {}) {\n  //         super({ enableHWA });\n  //         this._document = ownerDocument;\n  //     }\n  //     /**\n  //      * @ignore\n  //      */\n  //     _createCanvas(width, height) {\n  //         const canvas = this._document.createElement(\"canvas\");\n  //         canvas.width = width;\n  //         canvas.height = height;\n  //         return canvas;\n  //     }\n  // }\n  // async function fetchData(url, type = \"text\") {\n  //     if (\n  //         (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) ||\n  //         isValidFetchUrl(url, document.baseURI)\n  //     ) {\n  //         const response = await fetch(url);\n  //         if (!response.ok) {\n  //             throw new Error(response.statusText);\n  //         }\n  //         switch (type) {\n  //             case \"arraybuffer\":\n  //                 return response.arrayBuffer();\n  //             case \"blob\":\n  //                 return response.blob();\n  //             case \"json\":\n  //                 return response.json();\n  //         }\n  //         return response.text();\n  //     }\n  //     // The Fetch API is not supported.\n  //     return new Promise((resolve, reject) => {\n  //         const request = new XMLHttpRequest();\n  //         request.open(\"GET\", url, /* async = */ true);\n  //         request.responseType = type;\n  //         request.onreadystatechange = () => {\n  //             if (request.readyState !== XMLHttpRequest.DONE) {\n  //                 return;\n  //             }\n  //             if (request.status === 200 || request.status === 0) {\n  //                 switch (type) {\n  //                     case \"arraybuffer\":\n  //                     case \"blob\":\n  //                     case \"json\":\n  //                         resolve(request.response);\n  //                         return;\n  //                 }\n  //                 resolve(request.responseText);\n  //                 return;\n  //             }\n  //             reject(new Error(request.statusText));\n  //         };\n  //         request.send(null);\n  //     });\n  // }\n  // class DOMCMapReaderFactory extends BaseCMapReaderFactory {\n  //     /**\n  //      * @ignore\n  //      */\n  //     _fetchData(url, compressionType) {\n  //         return fetchData(\n  //             url,\n  //         /* type = */ this.isCompressed ? \"arraybuffer\" : \"text\"\n  //         ).then(data => ({\n  //             cMapData:\n  //                 data instanceof ArrayBuffer\n  //                     ? new Uint8Array(data)\n  //                     : stringToBytes(data),\n  //             compressionType,\n  //         }));\n  //     }\n  // }\n  // class DOMStandardFontDataFactory extends BaseStandardFontDataFactory {\n  //     /**\n  //      * @ignore\n  //      */\n  //     _fetchData(url) {\n  //         return fetchData(url, /* type = */ \"arraybuffer\").then(\n  //             data => new Uint8Array(data)\n  //         );\n  //     }\n  // }\n  // class DOMSVGFactory extends BaseSVGFactory {\n  //     /**\n  //      * @ignore\n  //      */\n  //     _createSVG(type) {\n  //         return document.createElementNS(SVG_NS, type);\n  //     }\n  // }\n  // /**\n  //  * @typedef {Object} PageViewportParameters\n  //  * @property {Array<number>} viewBox - The xMin, yMin, xMax and\n  //  *   yMax coordinates.\n  //  * @property {number} scale - The scale of the viewport.\n  //  * @property {number} rotation - The rotation, in degrees, of the viewport.\n  //  * @property {number} [offsetX] - The horizontal, i.e. x-axis, offset. The\n  //  *   default value is `0`.\n  //  * @property {number} [offsetY] - The vertical, i.e. y-axis, offset. The\n  //  *   default value is `0`.\n  //  * @property {boolean} [dontFlip] - If true, the y-axis will not be flipped.\n  //  *   The default value is `false`.\n  //  */\n  // /**\n  //  * @typedef {Object} PageViewportCloneParameters\n  //  * @property {number} [scale] - The scale, overriding the one in the cloned\n  //  *   viewport. The default value is `this.scale`.\n  //  * @property {number} [rotation] - The rotation, in degrees, overriding the one\n  //  *   in the cloned viewport. The default value is `this.rotation`.\n  //  * @property {number} [offsetX] - The horizontal, i.e. x-axis, offset.\n  //  *   The default value is `this.offsetX`.\n  //  * @property {number} [offsetY] - The vertical, i.e. y-axis, offset.\n  //  *   The default value is `this.offsetY`.\n  //  * @property {boolean} [dontFlip] - If true, the x-axis will not be flipped.\n  //  *   The default value is `false`.\n  //  */\n  // /**\n  //  * PDF page viewport created based on scale, rotation and offset.\n  //  */\n  // class PageViewport {\n  //     /**\n  //      * @param {PageViewportParameters}\n  //      */\n  //     constructor({\n  //         viewBox,\n  //         scale,\n  //         rotation,\n  //         offsetX = 0,\n  //         offsetY = 0,\n  //         dontFlip = false,\n  //     }) {\n  //         this.viewBox = viewBox;\n  //         this.scale = scale;\n  //         this.rotation = rotation;\n  //         this.offsetX = offsetX;\n  //         this.offsetY = offsetY;\n  //         // creating transform to convert pdf coordinate system to the normal\n  //         // canvas like coordinates taking in account scale and rotation\n  //         const centerX = (viewBox[2] + viewBox[0]) / 2;\n  //         const centerY = (viewBox[3] + viewBox[1]) / 2;\n  //         let rotateA, rotateB, rotateC, rotateD;\n  //         // Normalize the rotation, by clamping it to the [0, 360) range.\n  //         rotation %= 360;\n  //         if (rotation < 0) {\n  //             rotation += 360;\n  //         }\n  //         switch (rotation) {\n  //             case 180:\n  //                 rotateA = -1;\n  //                 rotateB = 0;\n  //                 rotateC = 0;\n  //                 rotateD = 1;\n  //                 break;\n  //             case 90:\n  //                 rotateA = 0;\n  //                 rotateB = 1;\n  //                 rotateC = 1;\n  //                 rotateD = 0;\n  //                 break;\n  //             case 270:\n  //                 rotateA = 0;\n  //                 rotateB = -1;\n  //                 rotateC = -1;\n  //                 rotateD = 0;\n  //                 break;\n  //             case 0:\n  //                 rotateA = 1;\n  //                 rotateB = 0;\n  //                 rotateC = 0;\n  //                 rotateD = -1;\n  //                 break;\n  //             default:\n  //                 throw new Error(\n  //                     \"PageViewport: Invalid rotation, must be a multiple of 90 degrees.\"\n  //                 );\n  //         }\n  //         if (dontFlip) {\n  //             rotateC = -rotateC;\n  //             rotateD = -rotateD;\n  //         }\n  //         let offsetCanvasX, offsetCanvasY;\n  //         let width, height;\n  //         if (rotateA === 0) {\n  //             offsetCanvasX = Math.abs(centerY - viewBox[1]) * scale + offsetX;\n  //             offsetCanvasY = Math.abs(centerX - viewBox[0]) * scale + offsetY;\n  //             width = (viewBox[3] - viewBox[1]) * scale;\n  //             height = (viewBox[2] - viewBox[0]) * scale;\n  //         } else {\n  //             offsetCanvasX = Math.abs(centerX - viewBox[0]) * scale + offsetX;\n  //             offsetCanvasY = Math.abs(centerY - viewBox[1]) * scale + offsetY;\n  //             width = (viewBox[2] - viewBox[0]) * scale;\n  //             height = (viewBox[3] - viewBox[1]) * scale;\n  //         }\n  //         // creating transform for the following operations:\n  //         // translate(-centerX, -centerY), rotate and flip vertically,\n  //         // scale, and translate(offsetCanvasX, offsetCanvasY)\n  //         this.transform = [\n  //             rotateA * scale,\n  //             rotateB * scale,\n  //             rotateC * scale,\n  //             rotateD * scale,\n  //             offsetCanvasX - rotateA * scale * centerX - rotateC * scale * centerY,\n  //             offsetCanvasY - rotateB * scale * centerX - rotateD * scale * centerY,\n  //         ];\n  //         this.width = width;\n  //         this.height = height;\n  //     }\n  //     /**\n  //      * The original, un-scaled, viewport dimensions.\n  //      * @type {Object}\n  //      */\n  //     get rawDims() {\n  //         const { viewBox } = this;\n  //         return shadow(this, \"rawDims\", {\n  //             pageWidth: viewBox[2] - viewBox[0],\n  //             pageHeight: viewBox[3] - viewBox[1],\n  //             pageX: viewBox[0],\n  //             pageY: viewBox[1],\n  //         });\n  //     }\n  //     /**\n  //      * Clones viewport, with optional additional properties.\n  //      * @param {PageViewportCloneParameters} [params]\n  //      * @returns {PageViewport} Cloned viewport.\n  //      */\n  //     clone({\n  //         scale = this.scale,\n  //         rotation = this.rotation,\n  //         offsetX = this.offsetX,\n  //         offsetY = this.offsetY,\n  //         dontFlip = false,\n  //     } = {}) {\n  //         return new PageViewport({\n  //             viewBox: this.viewBox.slice(),\n  //             scale,\n  //             rotation,\n  //             offsetX,\n  //             offsetY,\n  //             dontFlip,\n  //         });\n  //     }\n  //     /**\n  //      * Converts PDF point to the viewport coordinates. For examples, useful for\n  //      * converting PDF location into canvas pixel coordinates.\n  //      * @param {number} x - The x-coordinate.\n  //      * @param {number} y - The y-coordinate.\n  //      * @returns {Array} Array containing `x`- and `y`-coordinates of the\n  //      *   point in the viewport coordinate space.\n  //      * @see {@link convertToPdfPoint}\n  //      * @see {@link convertToViewportRectangle}\n  //      */\n  //     convertToViewportPoint(x, y) {\n  //         return Util.applyTransform([x, y], this.transform);\n  //     }\n  //     /**\n  //      * Converts PDF rectangle to the viewport coordinates.\n  //      * @param {Array} rect - The xMin, yMin, xMax and yMax coordinates.\n  //      * @returns {Array} Array containing corresponding coordinates of the\n  //      *   rectangle in the viewport coordinate space.\n  //      * @see {@link convertToViewportPoint}\n  //      */\n  //     convertToViewportRectangle(rect) {\n  //         const topLeft = Util.applyTransform([rect[0], rect[1]], this.transform);\n  //         const bottomRight = Util.applyTransform([rect[2], rect[3]], this.transform);\n  //         return [topLeft[0], topLeft[1], bottomRight[0], bottomRight[1]];\n  //     }\n  //     /**\n  //      * Converts viewport coordinates to the PDF location. For examples, useful\n  //      * for converting canvas pixel location into PDF one.\n  //      * @param {number} x - The x-coordinate.\n  //      * @param {number} y - The y-coordinate.\n  //      * @returns {Array} Array containing `x`- and `y`-coordinates of the\n  //      *   point in the PDF coordinate space.\n  //      * @see {@link convertToViewportPoint}\n  //      */\n  //     convertToPdfPoint(x, y) {\n  //         return Util.applyInverseTransform([x, y], this.transform);\n  //     }\n  // }\n  // class RenderingCancelledException extends BaseException {\n  //     constructor(msg, extraDelay = 0) {\n  //         super(msg, \"RenderingCancelledException\");\n  //         this.extraDelay = extraDelay;\n  //     }\n  // }\n  // function isDataScheme(url) {\n  //     const ii = url.length;\n  //     let i = 0;\n  //     while (i < ii && url[i].trim() === \"\") {\n  //         i++;\n  //     }\n  //     return url.substring(i, i + 5).toLowerCase() === \"data:\";\n  // }\n  // function isPdfFile(filename) {\n  //     return typeof filename === \"string\" && /\\.pdf$/i.test(filename);\n  // }\n  // /**\n  //  * Gets the filename from a given URL.\n  //  * @param {string} url\n  //  * @returns {string}\n  //  */\n  // function getFilenameFromUrl(url) {\n  //     [url] = url.split(/[#?]/, 1);\n  //     return url.substring(url.lastIndexOf(\"/\") + 1);\n  // }\n  // /**\n  //  * Returns the filename or guessed filename from the url (see issue 3455).\n  //  * @param {string} url - The original PDF location.\n  //  * @param {string} defaultFilename - The value returned if the filename is\n  //  *   unknown, or the protocol is unsupported.\n  //  * @returns {string} Guessed PDF filename.\n  //  */\n  // function getPdfFilenameFromUrl(url, defaultFilename = \"document.pdf\") {\n  //     if (typeof url !== \"string\") {\n  //         return defaultFilename;\n  //     }\n  //     if (isDataScheme(url)) {\n  //         warn('getPdfFilenameFromUrl: ignore \"data:\"-URL for performance reasons.');\n  //         return defaultFilename;\n  //     }\n  //     const reURI = /^(?:(?:[^:]+:)?\\/\\/[^/]+)?([^?#]*)(\\?[^#]*)?(#.*)?$/;\n  //     //              SCHEME        HOST        1.PATH  2.QUERY   3.REF\n  //     // Pattern to get last matching NAME.pdf\n  //     const reFilename = /[^/?#=]+\\.pdf\\b(?!.*\\.pdf\\b)/i;\n  //     const splitURI = reURI.exec(url);\n  //     let suggestedFilename =\n  //         reFilename.exec(splitURI[1]) ||\n  //         reFilename.exec(splitURI[2]) ||\n  //         reFilename.exec(splitURI[3]);\n  //     if (suggestedFilename) {\n  //         suggestedFilename = suggestedFilename[0];\n  //         if (suggestedFilename.includes(\"%\")) {\n  //             // URL-encoded %2Fpath%2Fto%2Ffile.pdf should be file.pdf\n  //             try {\n  //                 suggestedFilename = reFilename.exec(\n  //                     decodeURIComponent(suggestedFilename)\n  //                 )[0];\n  //             } catch {\n  //                 // Possible (extremely rare) errors:\n  //                 // URIError \"Malformed URI\", e.g. for \"%AA.pdf\"\n  //                 // TypeError \"null has no properties\", e.g. for \"%2F.pdf\"\n  //             }\n  //         }\n  //     }\n  //     return suggestedFilename || defaultFilename;\n  // }\n  // class StatTimer {\n  //     started = Object.create(null);\n  //     times = [];\n  //     time(name) {\n  //         if (name in this.started) {\n  //             warn(`Timer is already running for ${name}`);\n  //         }\n  //         this.started[name] = Date.now();\n  //     }\n  //     timeEnd(name) {\n  //         if (!(name in this.started)) {\n  //             warn(`Timer has not been started for ${name}`);\n  //         }\n  //         this.times.push({\n  //             name,\n  //             start: this.started[name],\n  //             end: Date.now(),\n  //         });\n  //         // Remove timer from started so it can be called again.\n  //         delete this.started[name];\n  //     }\n  //     toString() {\n  //         // Find the longest name for padding purposes.\n  //         const outBuf = [];\n  //         let longest = 0;\n  //         for (const { name } of this.times) {\n  //             longest = Math.max(name.length, longest);\n  //         }\n  //         for (const { name, start, end } of this.times) {\n  //             outBuf.push(`${name.padEnd(longest)} ${end - start}ms\\n`);\n  //         }\n  //         return outBuf.join(\"\");\n  //     }\n  // }\n  // function isValidFetchUrl(url, baseUrl) {\n  //     if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n  //         throw new Error(\"Not implemented: isValidFetchUrl\");\n  //     }\n  //     try {\n  //         const { protocol } = baseUrl ? new URL(url, baseUrl) : new URL(url);\n  //         // The Fetch API only supports the http/https protocols, and not file/ftp.\n  //         return protocol === \"http:\" || protocol === \"https:\";\n  //     } catch {\n  //         return false; // `new URL()` will throw on incorrect data.\n  //     }\n  // }\n  /**\n   * Event handler to suppress context menu.\n   */\n  function noContextMenu(e) {\n      e.preventDefault();\n  }\n  // // Deprecated API function -- display regardless of the `verbosity` setting.\n  // function deprecated(details) {\n  //     console.log(\"Deprecated API usage: \" + details);\n  // }\n  // let pdfDateStringRegex;\n  // class PDFDateString {\n  //     /**\n  //      * Convert a PDF date string to a JavaScript `Date` object.\n  //      *\n  //      * The PDF date string format is described in section 7.9.4 of the official\n  //      * PDF 32000-1:2008 specification. However, in the PDF 1.7 reference (sixth\n  //      * edition) Adobe describes the same format including a trailing apostrophe.\n  //      * This syntax in incorrect, but Adobe Acrobat creates PDF files that contain\n  //      * them. We ignore all apostrophes as they are not necessary for date parsing.\n  //      *\n  //      * Moreover, Adobe Acrobat doesn't handle changing the date to universal time\n  //      * and doesn't use the user's time zone (effectively ignoring the HH' and mm'\n  //      * parts of the date string).\n  //      *\n  //      * @param {string} input\n  //      * @returns {Date|null}\n  //      */\n  //     static toDateObject(input) {\n  //         if (!input || typeof input !== \"string\") {\n  //             return null;\n  //         }\n  //         // Lazily initialize the regular expression.\n  //         pdfDateStringRegex ||= new RegExp(\n  //             \"^D:\" + // Prefix (required)\n  //             \"(\\\\d{4})\" + // Year (required)\n  //             \"(\\\\d{2})?\" + // Month (optional)\n  //             \"(\\\\d{2})?\" + // Day (optional)\n  //             \"(\\\\d{2})?\" + // Hour (optional)\n  //             \"(\\\\d{2})?\" + // Minute (optional)\n  //             \"(\\\\d{2})?\" + // Second (optional)\n  //             \"([Z|+|-])?\" + // Universal time relation (optional)\n  //             \"(\\\\d{2})?\" + // Offset hour (optional)\n  //             \"'?\" + // Splitting apostrophe (optional)\n  //             \"(\\\\d{2})?\" + // Offset minute (optional)\n  //             \"'?\" // Trailing apostrophe (optional)\n  //         );\n  //         // Optional fields that don't satisfy the requirements from the regular\n  //         // expression (such as incorrect digit counts or numbers that are out of\n  //         // range) will fall back the defaults from the specification.\n  //         const matches = pdfDateStringRegex.exec(input);\n  //         if (!matches) {\n  //             return null;\n  //         }\n  //         // JavaScript's `Date` object expects the month to be between 0 and 11\n  //         // instead of 1 and 12, so we have to correct for that.\n  //         const year = parseInt(matches[1], 10);\n  //         let month = parseInt(matches[2], 10);\n  //         month = month >= 1 && month <= 12 ? month - 1 : 0;\n  //         let day = parseInt(matches[3], 10);\n  //         day = day >= 1 && day <= 31 ? day : 1;\n  //         let hour = parseInt(matches[4], 10);\n  //         hour = hour >= 0 && hour <= 23 ? hour : 0;\n  //         let minute = parseInt(matches[5], 10);\n  //         minute = minute >= 0 && minute <= 59 ? minute : 0;\n  //         let second = parseInt(matches[6], 10);\n  //         second = second >= 0 && second <= 59 ? second : 0;\n  //         const universalTimeRelation = matches[7] || \"Z\";\n  //         let offsetHour = parseInt(matches[8], 10);\n  //         offsetHour = offsetHour >= 0 && offsetHour <= 23 ? offsetHour : 0;\n  //         let offsetMinute = parseInt(matches[9], 10) || 0;\n  //         offsetMinute = offsetMinute >= 0 && offsetMinute <= 59 ? offsetMinute : 0;\n  //         // Universal time relation 'Z' means that the local time is equal to the\n  //         // universal time, whereas the relations '+'/'-' indicate that the local\n  //         // time is later respectively earlier than the universal time. Every date\n  //         // is normalized to universal time.\n  //         if (universalTimeRelation === \"-\") {\n  //             hour += offsetHour;\n  //             minute += offsetMinute;\n  //         } else if (universalTimeRelation === \"+\") {\n  //             hour -= offsetHour;\n  //             minute -= offsetMinute;\n  //         }\n  //         return new Date(Date.UTC(year, month, day, hour, minute, second));\n  //     }\n  // }\n  // /**\n  //  * NOTE: This is (mostly) intended to support printing of XFA forms.\n  //  */\n  // function getXfaPageViewport(xfaPage, { scale = 1, rotation = 0 }) {\n  //     const { width, height } = xfaPage.attributes.style;\n  //     const viewBox = [0, 0, parseInt(width), parseInt(height)];\n  //     return new PageViewport({\n  //         viewBox,\n  //         scale,\n  //         rotation,\n  //     });\n  // }\n  function getRGB(color) {\n      if (color.startsWith(\"#\")) {\n          const colorRGB = parseInt(color.slice(1), 16);\n          return [\n              (colorRGB & 0xff0000) >> 16,\n              (colorRGB & 0x00ff00) >> 8,\n              colorRGB & 0x0000ff\n          ];\n      }\n      if (color.startsWith(\"rgb(\")) {\n          // getComputedStyle(...).color returns a `rgb(R, G, B)` color.\n          return color\n              .slice(/* \"rgb(\".length */ 4, -1) // Strip out \"rgb(\" and \")\".\n              .split(\",\")\n              .map(x => parseInt(x, 10));\n      }\n      if (color.startsWith(\"rgba(\")) {\n          return color\n              .slice(/* \"rgba(\".length */ 5, -1) // Strip out \"rgba(\" and \")\".\n              .split(\",\")\n              .map(x => parseInt(x, 10))\n              .slice(0, 3);\n      }\n      // warn(`Not a valid color format: \"${color}\"`);\n      return [0, 0, 0];\n  }\n  function getColorValues(colors) {\n      const span = document.createElement(\"span\");\n      span.style.visibility = \"hidden\";\n      document.body.append(span);\n      for (const name of colors.keys()) {\n          span.style.color = name;\n          const computedColor = window.getComputedStyle(span).color;\n          colors.set(name, getRGB(computedColor));\n      }\n      span.remove();\n  }\n  // function getCurrentTransform(ctx) {\n  //     const { a, b, c, d, e, f } = ctx.getTransform();\n  //     return [a, b, c, d, e, f];\n  // }\n  // function getCurrentTransformInverse(ctx) {\n  //     const { a, b, c, d, e, f } = ctx.getTransform().invertSelf();\n  //     return [a, b, c, d, e, f];\n  // }\n  // /**\n  //  * @param {HTMLDivElement} div\n  //  * @param {PageViewport} viewport\n  //  * @param {boolean} mustFlip\n  //  * @param {boolean} mustRotate\n  //  */\n  // function setLayerDimensions(\n  //     div,\n  //     viewport,\n  //     mustFlip = false,\n  //     mustRotate = true\n  // ) {\n  //     if (viewport instanceof PageViewport) {\n  //         const { pageWidth, pageHeight } = viewport.rawDims;\n  //         const { style } = div;\n  //         const useRound = FeatureTest.isCSSRoundSupported;\n  //         const w = `var(--scale-factor) * ${pageWidth}px`,\n  //             h = `var(--scale-factor) * ${pageHeight}px`;\n  //         const widthStr = useRound ? `round(${w}, 1px)` : `calc(${w})`,\n  //             heightStr = useRound ? `round(${h}, 1px)` : `calc(${h})`;\n  //         if (!mustFlip || viewport.rotation % 180 === 0) {\n  //             style.width = widthStr;\n  //             style.height = heightStr;\n  //         } else {\n  //             style.width = heightStr;\n  //             style.height = widthStr;\n  //         }\n  //     }\n  //     if (mustRotate) {\n  //         div.setAttribute(\"data-main-rotation\", viewport.rotation);\n  //     }\n  // }\n  // export {\n  //     // deprecated,\n  //     // DOMCanvasFactory,\n  //     // DOMCMapReaderFactory,\n  //     // DOMFilterFactory,\n  //     // DOMStandardFontDataFactory,\n  //     // DOMSVGFactory,\n  //     // fetchData,\n  //     // getColorValues,\n  //     // getCurrentTransform,\n  //     // getCurrentTransformInverse,\n  //     // getFilenameFromUrl,\n  //     // getPdfFilenameFromUrl,\n  //     // getRGB,\n  //     // getXfaPageViewport,\n  //     // isDataScheme,\n  //     // isPdfFile,\n  //     // isValidFetchUrl,\n  //     // noContextMenu,\n  //     // PageViewport,\n  //     // PDFDateString,\n  //     // PixelsPerInch,\n  //     // RenderingCancelledException,\n  //     setLayerDimensions,\n  //     // StatTimer,\n  // };\n\n  /* Copyright 2022 Mozilla Foundation\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *     http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   * See the License for the specific language governing permissions and\n   * limitations under the License.\n   */\n  class ColorManager {\n      get _colors() {\n          if (\n          // typeof PDFJSDev !== \"undefined\" &&\n          // PDFJSDev.test(\"LIB\") &&\n          typeof document === \"undefined\") {\n              return shadow(this, \"_colors\", ColorManager._colorsMapping);\n          }\n          const colors = new Map([\n              [\"CanvasText\", null],\n              [\"Canvas\", null]\n          ]);\n          getColorValues(colors);\n          return shadow(this, \"_colors\", colors);\n      }\n      /*\n       * In High Contrast Mode, the color on the screen is not always the\n       * real color used in the pdf.\n       * For example in some cases white can appear to be black but when saving\n       * we want to have white.\n       * @param {string} color\n       * @returns {Array<number>}\n       */\n      convert(color) {\n          const rgb = getRGB(color);\n          if (!window.matchMedia(\"(forced-colors: active)\").matches) {\n              return rgb;\n          }\n          for (const [name, RGB] of this._colors) {\n              if (RGB.every((x, i) => x === rgb[i])) {\n                  return ColorManager._colorsMapping.get(name);\n              }\n          }\n          return rgb;\n      }\n      /*\n       * An input element must have its color value as a hex string\n       * and not as color name.\n       * So this function converts a name into an hex string.\n       * @param {string} name\n       * @returns {string}\n       */\n      getHexCode(name) {\n          const rgb = this._colors.get(name);\n          if (!rgb) {\n              return name;\n          }\n          // @ts-expect-error TS(2556):\n          return Util.makeHexColor(...rgb);\n      }\n  }\n  ColorManager._colorsMapping = new Map([\n      [\"CanvasText\", [0, 0, 0]],\n      [\"Canvas\", [255, 255, 255]]\n  ]);\n\n  /* Copyright 2022 Mozilla Foundation\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *     http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   * See the License for the specific language governing permissions and\n   * limitations under the License.\n   */\n  function bindEvents(obj, element, names) {\n      for (const name of names) {\n          element.addEventListener(name, obj[name].bind(obj));\n      }\n  }\n\n  /* Copyright 2022 Mozilla Foundation\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *     http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   * See the License for the specific language governing permissions and\n   * limitations under the License.\n   */\n  var _AnnotationEditor_instances, _a$6, _AnnotationEditor_x, _AnnotationEditor_y, _AnnotationEditor_disabled, _AnnotationEditor_keepAspectRatio, _AnnotationEditor_focusAC, _AnnotationEditor_hasBeenClicked, _AnnotationEditor_initialPosition, _AnnotationEditor_isEditing, _AnnotationEditor_isInEditMode, _AnnotationEditor_moveInDOMTimeout, _AnnotationEditor_prevDragX, _AnnotationEditor_prevDragY, _AnnotationEditor_isDraggable, _AnnotationEditor_zIndex, _AnnotationEditor_translate, _AnnotationEditor_rotatePoint, _AnnotationEditor_selectOnPointerEvent, _AnnotationEditor_setUpDragSession, _AnnotationEditor_addFocusListeners, _AnnotationEditor_stopResizing;\n  class AnnotationEditor {\n      constructor(parameters) {\n          // if (this.constructor === AnnotationEditor) {\n          //     unreachable(\"Cannot initialize AnnotationEditor.\");\n          // }\n          _AnnotationEditor_instances.add(this);\n          // todo: properties\n          this.parent = null;\n          this.id = null;\n          this.width = null;\n          this.height = null;\n          this.pageIndex = 0;\n          this.name = \"\";\n          this.div = null;\n          this.annotationElementId = null;\n          this._willKeepAspectRatio = false;\n          // _initialOptions = {};\n          this._structTreeParentId = null;\n          this.rotation = 0;\n          this.pageRotation = 0;\n          this.pageDimensions = [];\n          this.pageTranslation = [];\n          // x = 0;\n          // y = 0;\n          _AnnotationEditor_x.set(this, 0);\n          _AnnotationEditor_y.set(this, 0);\n          this.isAttachedToDOM = false;\n          this.deleted = false;\n          // todo: end\n          // #accessibilityData = null;\n          // #allResizerDivs = null;\n          // #altText = null;\n          _AnnotationEditor_disabled.set(this, false);\n          _AnnotationEditor_keepAspectRatio.set(this, false);\n          // #resizersDiv = null;\n          // #savedDimensions = null;\n          _AnnotationEditor_focusAC.set(this, null);\n          // #focusedResizerName = \"\";\n          _AnnotationEditor_hasBeenClicked.set(this, false);\n          _AnnotationEditor_initialPosition.set(this, null);\n          _AnnotationEditor_isEditing.set(this, false);\n          _AnnotationEditor_isInEditMode.set(this, false);\n          // #isResizerEnabledForKeyboard = false;\n          _AnnotationEditor_moveInDOMTimeout.set(this, null);\n          _AnnotationEditor_prevDragX.set(this, 0);\n          _AnnotationEditor_prevDragY.set(this, 0);\n          // #telemetryTimeouts = null;\n          this._editToolbar = null;\n          this._initialOptions = Object.create(null);\n          this._isVisible = true;\n          this._uiManager = null;\n          this._focusEventsAllowed = true;\n          this._l10nPromise = null;\n          _AnnotationEditor_isDraggable.set(this, false);\n          _AnnotationEditor_zIndex.set(this, _a$6._zIndex++);\n          this.parent = parameters.parent;\n          this.id = parameters.id || _a$6.idManager.id;\n          this.width = this.height = null;\n          this.pageIndex = parameters.parent.pageIndex;\n          this.name = parameters.name;\n          this.div = null;\n          this._uiManager = parameters.uiManager;\n          this.annotationElementId = null;\n          this._willKeepAspectRatio = false;\n          this._initialOptions.isCentered = parameters.isCentered;\n          this._structTreeParentId = null;\n          const { rotation, rawDims: { pageWidth, pageHeight, pageX, pageY } } = this.parent.viewport;\n          this.rotation = rotation;\n          this.pageRotation =\n              (360 + rotation - this._uiManager.viewParameters.rotation) % 360;\n          this.pageDimensions = [pageWidth, pageHeight];\n          this.pageTranslation = [pageX, pageY];\n          const [width, height] = this.parentDimensions;\n          this.x = parameters.x / width;\n          this.y = parameters.y / height;\n          this.isAttachedToDOM = false;\n          this.deleted = false;\n      }\n      get x() {\n          return __classPrivateFieldGet(this, _AnnotationEditor_x, \"f\");\n      }\n      set x(value) {\n          __classPrivateFieldSet(this, _AnnotationEditor_x, value, \"f\");\n      }\n      get y() {\n          return __classPrivateFieldGet(this, _AnnotationEditor_y, \"f\");\n      }\n      set y(value) {\n          __classPrivateFieldSet(this, _AnnotationEditor_y, value, \"f\");\n      }\n      get editorType() {\n          return Object.getPrototypeOf(this).constructor._type;\n      }\n      static get _defaultLineColor() {\n          return kendo_pdfjs_loader_js.shadow(this, \"_defaultLineColor\", this._colorManager.getHexCode(\"CanvasText\"));\n      }\n      static deleteAnnotationElement(editor) {\n          const fakeEditor = new FakeEditor({\n              id: editor.parent.getNextId(),\n              parent: editor.parent,\n              uiManager: editor._uiManager\n          });\n          fakeEditor.annotationElementId = editor.annotationElementId;\n          fakeEditor.deleted = true;\n          fakeEditor._uiManager.addToAnnotationStorage(fakeEditor);\n      }\n      static initialize(l10n, uiManager, options) {\n          if (!l10n || !uiManager || !options) {\n              /* no-empty */\n          }\n          // static initialize() {\n          // AnnotationEditor._l10nPromise ||= new Map(\n          //     [\n          //         \"pdfjs-editor-alt-text-button-label\",\n          //         \"pdfjs-editor-alt-text-edit-button-label\",\n          //         \"pdfjs-editor-alt-text-decorative-tooltip\",\n          //         \"pdfjs-editor-new-alt-text-added-button-label\",\n          //         \"pdfjs-editor-new-alt-text-missing-button-label\",\n          //         \"pdfjs-editor-new-alt-text-to-review-button-label\",\n          //         \"pdfjs-editor-resizer-label-topLeft\",\n          //         \"pdfjs-editor-resizer-label-topMiddle\",\n          //         \"pdfjs-editor-resizer-label-topRight\",\n          //         \"pdfjs-editor-resizer-label-middleRight\",\n          //         \"pdfjs-editor-resizer-label-bottomRight\",\n          //         \"pdfjs-editor-resizer-label-bottomMiddle\",\n          //         \"pdfjs-editor-resizer-label-bottomLeft\",\n          //         \"pdfjs-editor-resizer-label-middleLeft\",\n          //     ].map(str => [\n          //         str,\n          //         l10n.get(str.replaceAll(/([A-Z])/g, c => `-${c.toLowerCase()}`)),\n          //     ])\n          // );\n          // // The string isn't in the above list because the string has a parameter\n          // // (i.e. the guessed text) and we must pass it to the l10n function to get\n          // // the correct translation.\n          // AnnotationEditor._l10nPromise.set(\n          //     \"pdfjs-editor-new-alt-text-generated-alt-text-with-disclaimer\",\n          //     l10n.get.bind(\n          //         l10n,\n          //         \"pdfjs-editor-new-alt-text-generated-alt-text-with-disclaimer\"\n          //     )\n          // );\n          // if (options?.strings) {\n          //     for (const str of options.strings) {\n          //         AnnotationEditor._l10nPromise.set(str, l10n.get(str));\n          //     }\n          // }\n          // if (AnnotationEditor._borderLineWidth !== -1) {\n          //     return;\n          // }\n          // const style = getComputedStyle(document.documentElement);\n          // AnnotationEditor._borderLineWidth =\n          //     parseFloat(style.getPropertyValue(\"--outline-width\")) || 0;\n      }\n      /**\n       * Update the default parameters for this type of editor.\n       * @param {number} _type\n       * @param {*} _value\n       */\n      static updateDefaultParams(_type, _value) {\n          // if (!_type || !_value) {\n          // }\n      }\n      /**\n       * Get the default properties to set in the UI for this type of editor.\n       * @returns {Array}\n       */\n      static get defaultPropertiesToUpdate() {\n          return [];\n      }\n      /**\n       * Check if this kind of editor is able to handle the given mime type for\n       * pasting.\n       * @param {string} mime\n       * @returns {boolean}\n       */\n      static isHandlingMimeForPasting(mime) {\n          if (!mime) {\n              return;\n          }\n          return false;\n      }\n      /**\n       * Extract the data from the clipboard item and delegate the creation of the\n       * editor to the parent.\n       * @param {DataTransferItem} item\n       * @param {AnnotationEditorLayer} parent\n       */\n      static paste(item, parent) {\n          if (!item || !parent) {\n              /* no-empty */\n          }\n          // unreachable(\"Not implemented\");\n      }\n      /**\n       * Get the properties to update in the UI for this editor.\n       * @returns {Array}\n       */\n      get propertiesToUpdate() {\n          return [];\n      }\n      get _isDraggable() {\n          return __classPrivateFieldGet(this, _AnnotationEditor_isDraggable, \"f\");\n      }\n      set _isDraggable(value) {\n          var _b;\n          __classPrivateFieldSet(this, _AnnotationEditor_isDraggable, value, \"f\");\n          // this.div?.classList.toggle(\"draggable\", value);\n          (_b = this.div) === null || _b === void 0 ? void 0 : _b.classList.toggle(\"k-draggable\", value);\n      }\n      /**\n       * @returns {boolean} true if the editor handles the Enter key itself.\n       */\n      get isEnterHandled() {\n          return true;\n      }\n      center() {\n          const [pageWidth, pageHeight] = this.pageDimensions;\n          switch (this.parentRotation) {\n              case 90:\n                  this.x -= (this.height * pageHeight) / (pageWidth * 2);\n                  this.y += (this.width * pageWidth) / (pageHeight * 2);\n                  break;\n              case 180:\n                  this.x += this.width / 2;\n                  this.y += this.height / 2;\n                  break;\n              case 270:\n                  this.x += (this.height * pageHeight) / (pageWidth * 2);\n                  this.y -= (this.width * pageWidth) / (pageHeight * 2);\n                  break;\n              default:\n                  this.x -= this.width / 2;\n                  this.y -= this.height / 2;\n                  break;\n          }\n          this.fixAndSetPosition();\n      }\n      /**\n       * Add some commands into the CommandManager (undo/redo stuff).\n       * @param {Object} params\n       */\n      addCommands(params) {\n          this._uiManager.addCommands(params);\n      }\n      get currentLayer() {\n          return this._uiManager.currentLayer;\n      }\n      /**\n       * This editor will be behind the others.\n       */\n      setInBackground() {\n          this.div.style.zIndex = 0;\n      }\n      /**\n       * This editor will be in the foreground.\n       */\n      setInForeground() {\n          this.div.style.zIndex = __classPrivateFieldGet(this, _AnnotationEditor_zIndex, \"f\");\n      }\n      setParent(parent) {\n          if (parent !== null) {\n              this.pageIndex = parent.pageIndex;\n              this.pageDimensions = parent.pageDimensions;\n          }\n          else {\n              // The editor is being removed from the DOM, so we need to stop resizing.\n              __classPrivateFieldGet(this, _AnnotationEditor_instances, \"m\", _AnnotationEditor_stopResizing).call(this);\n          }\n          this.parent = parent;\n      }\n      /**\n       * onfocus callback.\n       */\n      focusin(event) {\n          if (!event) {\n              return;\n          }\n          if (!this._focusEventsAllowed) {\n              return;\n          }\n          if (!__classPrivateFieldGet(this, _AnnotationEditor_hasBeenClicked, \"f\")) {\n              this.parent.setSelected(this);\n          }\n          else {\n              __classPrivateFieldSet(this, _AnnotationEditor_hasBeenClicked, false, \"f\");\n          }\n      }\n      /**\n       * onblur callback.\n       * @param {FocusEvent} event\n       */\n      focusout(event) {\n          var _b;\n          if (!this._focusEventsAllowed) {\n              return;\n          }\n          if (!this.isAttachedToDOM) {\n              return;\n          }\n          // In case of focusout, the relatedTarget is the element which\n          // is grabbing the focus.\n          // So if the related target is an element under the div for this\n          // editor, then the editor isn't unactive.\n          const target = event.relatedTarget;\n          if (target === null || target === void 0 ? void 0 : target.closest(`#${this.id}`)) {\n              return;\n          }\n          event.preventDefault();\n          if (!((_b = this.parent) === null || _b === void 0 ? void 0 : _b.isMultipleSelection)) {\n              this.commitOrRemove();\n          }\n      }\n      commitOrRemove() {\n          if (this.isEmpty()) {\n              this.remove();\n          }\n          else {\n              this.commit();\n          }\n      }\n      /**\n       * Commit the data contained in this editor.\n       */\n      commit() {\n          this.addToAnnotationStorage();\n      }\n      addToAnnotationStorage() {\n          this._uiManager.addToAnnotationStorage(this);\n      }\n      /**\n       * Set the editor position within its parent.\n       * @param {number} x\n       * @param {number} y\n       * @param {number} tx - x-translation in screen coordinates.\n       * @param {number} ty - y-translation in screen coordinates.\n       */\n      setAt(x, y, tx, ty) {\n          const [width, height] = this.parentDimensions;\n          [tx, ty] = this.screenToPageTranslation(tx, ty);\n          this.x = (x + tx) / width;\n          this.y = (y + ty) / height;\n          this.fixAndSetPosition();\n      }\n      /**\n       * Translate the editor position within its parent.\n       * @param {number} x - x-translation in screen coordinates.\n       * @param {number} y - y-translation in screen coordinates.\n       */\n      translate(x, y) {\n          // We don't change the initial position because the move here hasn't been\n          // done by the user.\n          __classPrivateFieldGet(this, _AnnotationEditor_instances, \"m\", _AnnotationEditor_translate).call(this, this.parentDimensions, x, y);\n      }\n      /**\n       * Translate the editor position within its page and adjust the scroll\n       * in order to have the editor in the view.\n       * @param {number} x - x-translation in page coordinates.\n       * @param {number} y - y-translation in page coordinates.\n       */\n      translateInPage(x, y) {\n          __classPrivateFieldSet(this, _AnnotationEditor_initialPosition, __classPrivateFieldGet(this, _AnnotationEditor_initialPosition, \"f\") || [this.x, this.y], \"f\");\n          __classPrivateFieldGet(this, _AnnotationEditor_instances, \"m\", _AnnotationEditor_translate).call(this, this.pageDimensions, x, y);\n          this.div.scrollIntoView({ block: \"nearest\" });\n      }\n      drag(tx, ty) {\n          __classPrivateFieldSet(this, _AnnotationEditor_initialPosition, __classPrivateFieldGet(this, _AnnotationEditor_initialPosition, \"f\") || [this.x, this.y], \"f\");\n          const [parentWidth, parentHeight] = this.parentDimensions;\n          this.x += tx / parentWidth;\n          this.y += ty / parentHeight;\n          if (this.parent && (this.x < 0 || this.x > 1 || this.y < 0 || this.y > 1)) {\n              // It's possible to not have a parent: for example, when the user is\n              // dragging all the selected editors but this one on a page which has been\n              // destroyed.\n              // It's why we need to check for it. In such a situation, it isn't really\n              // a problem to not find a new parent: it's something which is related to\n              // what the user is seeing, hence it depends on how pages are layed out.\n              // The element will be outside of its parent so change the parent.\n              const { x: xValue, y: yValue } = this.div.getBoundingClientRect();\n              if (this.parent.findNewParent(this, xValue, yValue)) {\n                  this.x -= Math.floor(this.x);\n                  this.y -= Math.floor(this.y);\n              }\n          }\n          // The editor can be moved wherever the user wants, so we don't need to fix\n          // the position: it'll be done when the user will release the mouse button.\n          let { x, y } = this;\n          const [bx, by] = this.getBaseTranslation();\n          x += bx;\n          y += by;\n          this.div.style.left = `${(100 * x).toFixed(2)}%`;\n          this.div.style.top = `${(100 * y).toFixed(2)}%`;\n          this.div.scrollIntoView({ block: \"nearest\" });\n      }\n      get _hasBeenMoved() {\n          return (!!__classPrivateFieldGet(this, _AnnotationEditor_initialPosition, \"f\") &&\n              (__classPrivateFieldGet(this, _AnnotationEditor_initialPosition, \"f\")[0] !== this.x ||\n                  __classPrivateFieldGet(this, _AnnotationEditor_initialPosition, \"f\")[1] !== this.y));\n      }\n      /**\n       * Get the translation to take into account the editor border.\n       * The CSS engine positions the element by taking the border into account so\n       * we must apply the opposite translation to have the editor in the right\n       * position.\n       * @returns {Array<number>}\n       */\n      getBaseTranslation() {\n          const [parentWidth, parentHeight] = this.parentDimensions;\n          const { _borderLineWidth } = _a$6;\n          const x = _borderLineWidth / parentWidth;\n          const y = _borderLineWidth / parentHeight;\n          switch (this.rotation) {\n              case 90:\n                  return [-x, y];\n              case 180:\n                  return [x, y];\n              case 270:\n                  return [x, -y];\n              default:\n                  return [-x, -y];\n          }\n      }\n      /**\n       * @returns {boolean} true if position must be fixed (i.e. make the x and y\n       * living in the page).\n       */\n      get _mustFixPosition() {\n          return true;\n      }\n      /**\n       * Fix the position of the editor in order to keep it inside its parent page.\n       * @param {number} [rotation] - the rotation of the page.\n       */\n      fixAndSetPosition(rotation = this.rotation) {\n          if (rotation === undefined) {\n              return;\n          }\n          const [pageWidth, pageHeight] = this.pageDimensions;\n          let { x, y, width, height } = this;\n          width *= pageWidth;\n          height *= pageHeight;\n          x *= pageWidth;\n          y *= pageHeight;\n          if (this._mustFixPosition) {\n              switch (rotation) {\n                  case 0:\n                      x = Math.max(0, Math.min(pageWidth - width, x));\n                      y = Math.max(0, Math.min(pageHeight - height, y));\n                      break;\n                  case 90:\n                      x = Math.max(0, Math.min(pageWidth - height, x));\n                      y = Math.min(pageHeight, Math.max(width, y));\n                      break;\n                  case 180:\n                      x = Math.min(pageWidth, Math.max(width, x));\n                      y = Math.min(pageHeight, Math.max(height, y));\n                      break;\n                  case 270:\n                      x = Math.min(pageWidth, Math.max(height, x));\n                      y = Math.max(0, Math.min(pageHeight - width, y));\n                      break;\n                  default: break;\n              }\n          }\n          this.x = x /= pageWidth;\n          this.y = y /= pageHeight;\n          const [bx, by] = this.getBaseTranslation();\n          x += bx;\n          y += by;\n          const { style } = this.div;\n          style.left = `${(100 * x).toFixed(2)}%`;\n          style.top = `${(100 * y).toFixed(2)}%`;\n          this.moveInDOM();\n      }\n      /**\n       * Convert a screen translation into a page one.\n       * @param {number} x\n       * @param {number} y\n       */\n      screenToPageTranslation(x, y) {\n          return __classPrivateFieldGet(_a$6, _a$6, \"m\", _AnnotationEditor_rotatePoint).call(_a$6, x, y, this.parentRotation);\n      }\n      /**\n       * Convert a page translation into a screen one.\n       * @param {number} x\n       * @param {number} y\n       */\n      pageTranslationToScreen(x, y) {\n          return __classPrivateFieldGet(_a$6, _a$6, \"m\", _AnnotationEditor_rotatePoint).call(_a$6, x, y, 360 - this.parentRotation);\n      }\n      // #getRotationMatrix(rotation) {\n      //     switch (rotation) {\n      //         case 90: {\n      //             const [pageWidth, pageHeight] = this.pageDimensions;\n      //             return [0, -pageWidth / pageHeight, pageHeight / pageWidth, 0];\n      //         }\n      //         case 180:\n      //             return [-1, 0, 0, -1];\n      //         case 270: {\n      //             const [pageWidth, pageHeight] = this.pageDimensions;\n      //             return [0, pageWidth / pageHeight, -pageHeight / pageWidth, 0];\n      //         }\n      //         default:\n      //             return [1, 0, 0, 1];\n      //     }\n      // }\n      get parentScale() {\n          return this._uiManager.viewParameters.realScale;\n      }\n      get parentRotation() {\n          return (this._uiManager.viewParameters.rotation + this.pageRotation) % 360;\n      }\n      get parentDimensions() {\n          const { parentScale, pageDimensions: [pageWidth, pageHeight] } = this;\n          const scaledWidth = pageWidth * parentScale;\n          const scaledHeight = pageHeight * parentScale;\n          return kendo_pdfjs_loader_js.FeatureTest.isCSSRoundSupported\n              ? [Math.round(scaledWidth), Math.round(scaledHeight)]\n              : [scaledWidth, scaledHeight];\n      }\n      /**\n       * Set the dimensions of this editor.\n       * @param {number} width\n       * @param {number} height\n       */\n      setDims(width, height) {\n          const [parentWidth, parentHeight] = this.parentDimensions;\n          this.div.style.width = `${((100 * width) / parentWidth).toFixed(2)}%`;\n          if (!__classPrivateFieldGet(this, _AnnotationEditor_keepAspectRatio, \"f\")) {\n              this.div.style.height = `${((100 * height) / parentHeight).toFixed(2)}%`;\n          }\n      }\n      fixDims() {\n          //     const { style } = this.div;\n          //     const { height, width } = style;\n          //     const widthPercent = width.endsWith(\"%\");\n          //     const heightPercent = !this.#keepAspectRatio && height.endsWith(\"%\");\n          //     if (widthPercent && heightPercent) {\n          //         return;\n          //     }\n          //     const [parentWidth, parentHeight] = this.parentDimensions;\n          //     if (!widthPercent) {\n          //         style.width = `${((100 * parseFloat(width)) / parentWidth).toFixed(2)}%`;\n          //     }\n          //     if (!this.#keepAspectRatio && !heightPercent) {\n          //         style.height = `${((100 * parseFloat(height)) / parentHeight).toFixed(\n          //             2\n          //         )}%`;\n          //     }\n      }\n      /**\n       * Get the translation used to position this editor when it's created.\n       * @returns {Array<number>}\n       */\n      getInitialTranslation() {\n          return [0, 0];\n      }\n      // #createResizers() {\n      //     if (this.#resizersDiv) {\n      //         return;\n      //     }\n      //     this.#resizersDiv = document.createElement(\"div\");\n      //     this.#resizersDiv.classList.add(\"resizers\");\n      //     // When the resizers are used with the keyboard, they're focusable, hence\n      //     // we want to have them in this order (top left, top middle, top right, ...)\n      //     // in the DOM to have the focus order correct.\n      //     const classes = this._willKeepAspectRatio\n      //         ? [\"topLeft\", \"topRight\", \"bottomRight\", \"bottomLeft\"]\n      //         : [\n      //             \"topLeft\",\n      //             \"topMiddle\",\n      //             \"topRight\",\n      //             \"middleRight\",\n      //             \"bottomRight\",\n      //             \"bottomMiddle\",\n      //             \"bottomLeft\",\n      //             \"middleLeft\",\n      //         ];\n      //     const signal = this._uiManager._signal;\n      //     for (const name of classes) {\n      //         const div = document.createElement(\"div\");\n      //         this.#resizersDiv.append(div);\n      //         div.classList.add(\"resizer\", name);\n      //         div.setAttribute(\"data-resizer-name\", name);\n      //         div.addEventListener(\n      //             \"pointerdown\",\n      //             this.#resizerPointerdown.bind(this, name),\n      //             { signal }\n      //         );\n      //         div.addEventListener(\"contextmenu\", noContextMenu, { signal });\n      //         div.tabIndex = -1;\n      //     }\n      //     this.div.prepend(this.#resizersDiv);\n      // }\n      // #resizerPointerdown(name, event) {\n      //     event.preventDefault();\n      //     const { isMac } = FeatureTest.platform;\n      //     if (event.button !== 0 || (event.ctrlKey && isMac)) {\n      //         return;\n      //     }\n      //     this.#altText?.toggle(false);\n      //     const savedDraggable = this._isDraggable;\n      //     this._isDraggable = false;\n      //     const ac = new AbortController();\n      //     const signal = this._uiManager.combinedSignal(ac);\n      //     this.parent.togglePointerEvents(false);\n      //     window.addEventListener(\n      //         \"pointermove\",\n      //         this.#resizerPointermove.bind(this, name),\n      //         { passive: true, capture: true, signal }\n      //     );\n      //     window.addEventListener(\"contextmenu\", noContextMenu, { signal });\n      //     const savedX = this.x;\n      //     const savedY = this.y;\n      //     const savedWidth = this.width;\n      //     const savedHeight = this.height;\n      //     const savedParentCursor = this.parent.div.style.cursor;\n      //     const savedCursor = this.div.style.cursor;\n      //     this.div.style.cursor = this.parent.div.style.cursor =\n      //         window.getComputedStyle(event.target).cursor;\n      //     const pointerUpCallback = () => {\n      //         ac.abort();\n      //         this.parent.togglePointerEvents(true);\n      //         this.#altText?.toggle(true);\n      //         this._isDraggable = savedDraggable;\n      //         this.parent.div.style.cursor = savedParentCursor;\n      //         this.div.style.cursor = savedCursor;\n      //         this.#addResizeToUndoStack(savedX, savedY, savedWidth, savedHeight);\n      //     };\n      //     window.addEventListener(\"pointerup\", pointerUpCallback, { signal });\n      //     // If the user switches to another window (with alt+tab), then we end the\n      //     // resize session.\n      //     window.addEventListener(\"blur\", pointerUpCallback, { signal });\n      // }\n      // #addResizeToUndoStack(savedX, savedY, savedWidth, savedHeight) {\n      //     const newX = this.x;\n      //     const newY = this.y;\n      //     const newWidth = this.width;\n      //     const newHeight = this.height;\n      //     if (\n      //         newX === savedX &&\n      //         newY === savedY &&\n      //         newWidth === savedWidth &&\n      //         newHeight === savedHeight\n      //     ) {\n      //         return;\n      //     }\n      //     this.addCommands({\n      //         cmd: () => {\n      //             this.width = newWidth;\n      //             this.height = newHeight;\n      //             this.x = newX;\n      //             this.y = newY;\n      //             const [parentWidth, parentHeight] = this.parentDimensions;\n      //             this.setDims(parentWidth * newWidth, parentHeight * newHeight);\n      //             this.fixAndSetPosition();\n      //         },\n      //         undo: () => {\n      //             this.width = savedWidth;\n      //             this.height = savedHeight;\n      //             this.x = savedX;\n      //             this.y = savedY;\n      //             const [parentWidth, parentHeight] = this.parentDimensions;\n      //             this.setDims(parentWidth * savedWidth, parentHeight * savedHeight);\n      //             this.fixAndSetPosition();\n      //         },\n      //         mustExec: true,\n      //     });\n      // }\n      // #resizerPointermove(name, event) {\n      //     const [parentWidth, parentHeight] = this.parentDimensions;\n      //     const savedX = this.x;\n      //     const savedY = this.y;\n      //     const savedWidth = this.width;\n      //     const savedHeight = this.height;\n      //     const minWidth = AnnotationEditor.MIN_SIZE / parentWidth;\n      //     const minHeight = AnnotationEditor.MIN_SIZE / parentHeight;\n      //     // 10000 because we multiply by 100 and use toFixed(2) in fixAndSetPosition.\n      //     // Without rounding, the positions of the corners other than the top left\n      //     // one can be slightly wrong.\n      //     const round = x => Math.round(x * 10000) / 10000;\n      //     const rotationMatrix = this.#getRotationMatrix(this.rotation);\n      //     const transf = (x, y) => [\n      //         rotationMatrix[0] * x + rotationMatrix[2] * y,\n      //         rotationMatrix[1] * x + rotationMatrix[3] * y,\n      //     ];\n      //     const invRotationMatrix = this.#getRotationMatrix(360 - this.rotation);\n      //     const invTransf = (x, y) => [\n      //         invRotationMatrix[0] * x + invRotationMatrix[2] * y,\n      //         invRotationMatrix[1] * x + invRotationMatrix[3] * y,\n      //     ];\n      //     let getPoint;\n      //     let getOpposite;\n      //     let isDiagonal = false;\n      //     let isHorizontal = false;\n      //     switch (name) {\n      //         case \"topLeft\":\n      //             isDiagonal = true;\n      //             getPoint = (w, h) => [0, 0];\n      //             getOpposite = (w, h) => [w, h];\n      //             break;\n      //         case \"topMiddle\":\n      //             getPoint = (w, h) => [w / 2, 0];\n      //             getOpposite = (w, h) => [w / 2, h];\n      //             break;\n      //         case \"topRight\":\n      //             isDiagonal = true;\n      //             getPoint = (w, h) => [w, 0];\n      //             getOpposite = (w, h) => [0, h];\n      //             break;\n      //         case \"middleRight\":\n      //             isHorizontal = true;\n      //             getPoint = (w, h) => [w, h / 2];\n      //             getOpposite = (w, h) => [0, h / 2];\n      //             break;\n      //         case \"bottomRight\":\n      //             isDiagonal = true;\n      //             getPoint = (w, h) => [w, h];\n      //             getOpposite = (w, h) => [0, 0];\n      //             break;\n      //         case \"bottomMiddle\":\n      //             getPoint = (w, h) => [w / 2, h];\n      //             getOpposite = (w, h) => [w / 2, 0];\n      //             break;\n      //         case \"bottomLeft\":\n      //             isDiagonal = true;\n      //             getPoint = (w, h) => [0, h];\n      //             getOpposite = (w, h) => [w, 0];\n      //             break;\n      //         case \"middleLeft\":\n      //             isHorizontal = true;\n      //             getPoint = (w, h) => [0, h / 2];\n      //             getOpposite = (w, h) => [w, h / 2];\n      //             break;\n      //     }\n      //     const point = getPoint(savedWidth, savedHeight);\n      //     const oppositePoint = getOpposite(savedWidth, savedHeight);\n      //     let transfOppositePoint = transf(...oppositePoint);\n      //     const oppositeX = round(savedX + transfOppositePoint[0]);\n      //     const oppositeY = round(savedY + transfOppositePoint[1]);\n      //     let ratioX = 1;\n      //     let ratioY = 1;\n      //     let [deltaX, deltaY] = this.screenToPageTranslation(\n      //         event.movementX,\n      //         event.movementY\n      //     );\n      //     [deltaX, deltaY] = invTransf(deltaX / parentWidth, deltaY / parentHeight);\n      //     if (isDiagonal) {\n      //         const oldDiag = Math.hypot(savedWidth, savedHeight);\n      //         ratioX = ratioY = Math.max(\n      //             Math.min(\n      //                 Math.hypot(\n      //                     oppositePoint[0] - point[0] - deltaX,\n      //                     oppositePoint[1] - point[1] - deltaY\n      //                 ) / oldDiag,\n      //                 // Avoid the editor to be larger than the page.\n      //                 1 / savedWidth,\n      //                 1 / savedHeight\n      //             ),\n      //             // Avoid the editor to be smaller than the minimum size.\n      //             minWidth / savedWidth,\n      //             minHeight / savedHeight\n      //         );\n      //     } else if (isHorizontal) {\n      //         ratioX =\n      //             Math.max(\n      //                 minWidth,\n      //                 Math.min(1, Math.abs(oppositePoint[0] - point[0] - deltaX))\n      //             ) / savedWidth;\n      //     } else {\n      //         ratioY =\n      //             Math.max(\n      //                 minHeight,\n      //                 Math.min(1, Math.abs(oppositePoint[1] - point[1] - deltaY))\n      //             ) / savedHeight;\n      //     }\n      //     const newWidth = round(savedWidth * ratioX);\n      //     const newHeight = round(savedHeight * ratioY);\n      //     transfOppositePoint = transf(...getOpposite(newWidth, newHeight));\n      //     const newX = oppositeX - transfOppositePoint[0];\n      //     const newY = oppositeY - transfOppositePoint[1];\n      //     this.width = newWidth;\n      //     this.height = newHeight;\n      //     this.x = newX;\n      //     this.y = newY;\n      //     this.setDims(parentWidth * newWidth, parentHeight * newHeight);\n      //     this.fixAndSetPosition();\n      // }\n      // /**\n      //  * Called when the alt text dialog is closed.\n      //  */\n      // altTextFinish() {\n      //     this.#altText?.finish();\n      // }\n      // /**\n      //  * Add a toolbar for this editor.\n      //  * @returns {Promise<EditorToolbar|null>}\n      //  */\n      // async addEditToolbar() {\n      addEditToolbar() {\n          var _b;\n          (_b = this._uiManager) === null || _b === void 0 ? void 0 : _b.showEditorToolBar(this.div);\n          // if (this._editToolbar || this.#isInEditMode) {\n          //     return this._editToolbar;\n          // }\n          // this._editToolbar = new EditorToolbar(this);\n          // this.div.append(this._editToolbar.render());\n          // if (this.#altText) {\n          //     this._editToolbar.addAltTextButton(await this.#altText.render());\n          // }\n          // return this._editToolbar;\n      }\n      removeEditToolbar() {\n          this._uiManager.hideEditorToolBar();\n          // if (!this._editToolbar) {\n          //     return;\n          // }\n          // this._editToolbar.remove();\n          // this._editToolbar = null;\n          // // We destroy the alt text but we don't null it because we want to be able\n          // // to restore it in case the user undoes the deletion.\n          // this.#altText?.destroy();\n      }\n      getClientDimensions() {\n          return this.div.getBoundingClientRect();\n      }\n      // async addAltTextButton() {\n      //     if (this.#altText) {\n      //         return;\n      //     }\n      //     AltText.initialize(AnnotationEditor._l10nPromise);\n      //     this.#altText = new AltText(this);\n      //     if (this.#accessibilityData) {\n      //         this.#altText.data = this.#accessibilityData;\n      //         this.#accessibilityData = null;\n      //     }\n      //     await this.addEditToolbar();\n      // }\n      // get altTextData() {\n      //     return this.#altText?.data;\n      // }\n      // /**\n      //  * Set the alt text data.\n      //  */\n      // set altTextData(data) {\n      //     if (!this.#altText) {\n      //         return;\n      //     }\n      //     this.#altText.data = data;\n      // }\n      // get guessedAltText() {\n      //     return this.#altText?.guessedText;\n      // }\n      // async setGuessedAltText(text) {\n      //     await this.#altText?.setGuessedText(text);\n      // }\n      // serializeAltText(isForCopying) {\n      //     return this.#altText?.serialize(isForCopying);\n      // }\n      // hasAltText() {\n      //     return !!this.#altText && !this.#altText.isEmpty();\n      // }\n      // hasAltTextData() {\n      //     return this.#altText?.hasData() ?? false;\n      // }\n      /**\n       * Render this editor in a div.\n       * @returns {HTMLDivElement | null}\n       */\n      render() {\n          this.div = document.createElement(\"div\");\n          this.div.setAttribute(\"data-editor-rotation\", (360 - this.rotation) % 360);\n          this.div.className = this.name;\n          this.div.setAttribute(\"id\", this.id);\n          this.div.tabIndex = __classPrivateFieldGet(this, _AnnotationEditor_disabled, \"f\") ? -1 : 0;\n          if (!this._isVisible) {\n              // this.div.classList.add(\"hidden\");\n              this.div.classList.add(\"k-hidden\");\n          }\n          this.setInForeground();\n          __classPrivateFieldGet(this, _AnnotationEditor_instances, \"m\", _AnnotationEditor_addFocusListeners).call(this);\n          const [parentWidth, parentHeight] = this.parentDimensions;\n          if (this.parentRotation % 180 !== 0) {\n              this.div.style.maxWidth = `${((100 * parentHeight) / parentWidth).toFixed(2)}%`;\n              this.div.style.maxHeight = `${((100 * parentWidth) /\n                parentHeight).toFixed(2)}%`;\n          }\n          const [tx, ty] = this.getInitialTranslation();\n          this.translate(tx, ty);\n          bindEvents(this, this.div, [\"pointerdown\"]);\n          return this.div;\n      }\n      /**\n       * Onpointerdown callback.\n       * @param {PointerEvent} event\n       */\n      pointerdown(event) {\n          var _b;\n          const { isMac } = kendo_pdfjs_loader_js.FeatureTest.platform;\n          if (event.button !== 0 || (event.ctrlKey && isMac)) {\n              // Avoid to focus this editor because of a non-left click.\n              event.preventDefault();\n              return;\n          }\n          __classPrivateFieldSet(this, _AnnotationEditor_hasBeenClicked, true, \"f\");\n          if (this._isDraggable) {\n              (_b = this._uiManager) === null || _b === void 0 ? void 0 : _b.hideEditorToolBar();\n              __classPrivateFieldGet(this, _AnnotationEditor_instances, \"m\", _AnnotationEditor_setUpDragSession).call(this, event);\n              return;\n          }\n          __classPrivateFieldGet(this, _AnnotationEditor_instances, \"m\", _AnnotationEditor_selectOnPointerEvent).call(this, event);\n      }\n      moveInDOM() {\n          // Moving the editor in the DOM can be expensive, so we wait a bit before.\n          // It's important to not block the UI (for example when changing the font\n          // size in a FreeText).\n          if (__classPrivateFieldGet(this, _AnnotationEditor_moveInDOMTimeout, \"f\")) {\n              clearTimeout(__classPrivateFieldGet(this, _AnnotationEditor_moveInDOMTimeout, \"f\"));\n          }\n          __classPrivateFieldSet(this, _AnnotationEditor_moveInDOMTimeout, setTimeout(() => {\n              var _b;\n              __classPrivateFieldSet(this, _AnnotationEditor_moveInDOMTimeout, null, \"f\");\n              (_b = this.parent) === null || _b === void 0 ? void 0 : _b.moveEditorInDOM(this);\n          }, 0), \"f\");\n      }\n      _setParentAndPosition(parent, x, y) {\n          parent.changeParent(this);\n          this.x = x;\n          this.y = y;\n          this.fixAndSetPosition();\n      }\n      /*\n       * Convert the current rect into a page one.\n       * @param {number} tx - x-translation in screen coordinates.\n       * @param {number} ty - y-translation in screen coordinates.\n       * @param {number} [rotation] - the rotation of the page.\n       */\n      getRect(tx, ty, rotation = this.rotation) {\n          const scale = this.parentScale;\n          const [pageWidth, pageHeight] = this.pageDimensions;\n          const [pageX, pageY] = this.pageTranslation;\n          const shiftX = tx / scale;\n          const shiftY = ty / scale;\n          const x = this.x * pageWidth;\n          const y = this.y * pageHeight;\n          const width = this.width * pageWidth;\n          const height = this.height * pageHeight;\n          switch (rotation) {\n              case 0:\n                  return [\n                      x + shiftX + pageX,\n                      pageHeight - y - shiftY - height + pageY,\n                      x + shiftX + width + pageX,\n                      pageHeight - y - shiftY + pageY\n                  ];\n              case 90:\n                  return [\n                      x + shiftY + pageX,\n                      pageHeight - y + shiftX + pageY,\n                      x + shiftY + height + pageX,\n                      pageHeight - y + shiftX + width + pageY\n                  ];\n              case 180:\n                  return [\n                      x - shiftX - width + pageX,\n                      pageHeight - y + shiftY + pageY,\n                      x - shiftX + pageX,\n                      pageHeight - y + shiftY + height + pageY\n                  ];\n              case 270:\n                  return [\n                      x - shiftY - height + pageX,\n                      pageHeight - y - shiftX - width + pageY,\n                      x - shiftY + pageX,\n                      pageHeight - y - shiftX + pageY\n                  ];\n              default:\n                  throw new Error(\"Invalid rotation\");\n          }\n      }\n      getRectInCurrentCoords(rect, pageHeight) {\n          const [x1, y1, x2, y2] = rect;\n          const width = x2 - x1;\n          const height = y2 - y1;\n          switch (this.rotation) {\n              case 0:\n                  return [x1, pageHeight - y2, width, height];\n              case 90:\n                  return [x1, pageHeight - y1, height, width];\n              case 180:\n                  return [x2, pageHeight - y1, width, height];\n              case 270:\n                  return [x2, pageHeight - y2, height, width];\n              default:\n                  // throw new Error(\"Invalid rotation\");\n                  break;\n          }\n      }\n      // /**\n      //  * Executed once this editor has been rendered.\n      //  */\n      onceAdded() { }\n      // /**\n      //  * Check if the editor contains something.\n      //  * @returns {boolean}\n      //  */\n      isEmpty() {\n          return false;\n      }\n      /**\n       * Enable edit mode.\n       */\n      enableEditMode() {\n          __classPrivateFieldSet(this, _AnnotationEditor_isInEditMode, true, \"f\");\n      }\n      /**\n       * Disable edit mode.\n       */\n      disableEditMode() {\n          __classPrivateFieldSet(this, _AnnotationEditor_isInEditMode, false, \"f\");\n      }\n      /**\n       * Check if the editor is edited.\n       * @returns {boolean}\n       */\n      isInEditMode() {\n          return __classPrivateFieldGet(this, _AnnotationEditor_isInEditMode, \"f\");\n      }\n      // /**\n      //  * If it returns true, then this editor handles the keyboard\n      //  * events itself.\n      //  * @returns {boolean}\n      //  */\n      // shouldGetKeyboardEvents() {\n      //     return this.#isResizerEnabledForKeyboard;\n      // }\n      /**\n       * Check if this editor needs to be rebuilt or not.\n       * @returns {boolean}\n       */\n      needsToBeRebuilt() {\n          return this.div && !this.isAttachedToDOM;\n      }\n      /**\n       * Rebuild the editor in case it has been removed on undo.\n       *\n       * To implement in subclasses.\n       */\n      rebuild() {\n          __classPrivateFieldGet(this, _AnnotationEditor_instances, \"m\", _AnnotationEditor_addFocusListeners).call(this);\n      }\n      /**\n       * Rotate the editor.\n       * @param {number} angle\n       */\n      rotate(angle) {\n          if (angle === undefined || angle === null) {\n              /* no-empty */\n          }\n      }\n      /**\n       * Serialize the editor.\n       * The result of the serialization will be used to construct a\n       * new annotation to add to the pdf document.\n       *\n       * To implement in subclasses.\n       * @param {boolean} [_isForCopying]\n       * @param {Object | null} [_context]\n       * @returns {Object | null}\n       */\n      serialize(_isForCopying = false, _context = null) {\n          // serialize() {\n      }\n      /**\n       * Deserialize the editor.\n       * The result of the deserialization is a new editor.\n       *\n       * @param {Object} data\n       * @param {AnnotationEditorLayer} parent\n       * @param {AnnotationEditorUIManager} uiManager\n       * @returns {AnnotationEditor | null}\n       */\n      static deserialize(data, parent, uiManager) {\n          // @ts-expect-error TS(2556):\n          const editor = new this.prototype.constructor({\n              parent,\n              id: parent.getNextId(),\n              uiManager\n          });\n          editor.rotation = data.rotation;\n          // editor.#accessibilityData = data.accessibilityData;\n          const [pageWidth, pageHeight] = editor.pageDimensions;\n          const [x, y, width, height] = editor.getRectInCurrentCoords(data.rect, pageHeight);\n          editor.x = x / pageWidth;\n          editor.y = y / pageHeight;\n          editor.width = width / pageWidth;\n          editor.height = height / pageHeight;\n          return editor;\n      }\n      /**\n       * Check if an existing annotation associated with this editor has been\n       * modified.\n       * @returns {boolean}\n       */\n      get hasBeenModified() {\n          return (!!this.annotationElementId && (this.deleted || this.serialize() !== null));\n      }\n      /**\n       * Remove this editor.\n       * It's used on ctrl+backspace action.\n       */\n      remove() {\n          var _b;\n          (_b = __classPrivateFieldGet(this, _AnnotationEditor_focusAC, \"f\")) === null || _b === void 0 ? void 0 : _b.abort();\n          __classPrivateFieldSet(this, _AnnotationEditor_focusAC, null, \"f\");\n          if (!this.isEmpty()) {\n              // The editor is removed but it can be back at some point thanks to\n              // undo/redo so we must commit it before.\n              this.commit();\n          }\n          if (this.parent) {\n              this.parent.remove(this);\n          }\n          else {\n              this._uiManager.removeEditor(this);\n          }\n          if (__classPrivateFieldGet(this, _AnnotationEditor_moveInDOMTimeout, \"f\")) {\n              clearTimeout(__classPrivateFieldGet(this, _AnnotationEditor_moveInDOMTimeout, \"f\"));\n              __classPrivateFieldSet(this, _AnnotationEditor_moveInDOMTimeout, null, \"f\");\n          }\n          __classPrivateFieldGet(this, _AnnotationEditor_instances, \"m\", _AnnotationEditor_stopResizing).call(this);\n          this.removeEditToolbar();\n          // if (this.#telemetryTimeouts) {\n          //     for (const timeout of this.#telemetryTimeouts.values()) {\n          //         clearTimeout(timeout);\n          //     }\n          //     this.#telemetryTimeouts = null;\n          // }\n          this.parent = null;\n      }\n      /**\n       * @returns {boolean} true if this editor can be resized.\n       */\n      get isResizable() {\n          return false;\n      }\n      /**\n       * Add the resizers to this editor.\n       */\n      makeResizable() {\n          //     if (this.isResizable) {\n          //         this.#createResizers();\n          //         this.#resizersDiv.classList.remove(\"hidden\");\n          //         this.#resizersDiv.classList.remove(\"k-hidden\");\n          //         bindEvents(this, this.div, [\"keydown\"]);\n          //     }\n      }\n      get toolbarPosition() {\n          return null;\n      }\n      _stopResizingWithKeyboard() {\n          //     this.#stopResizing();\n          //     this.div.focus();\n      }\n      /**\n       * Select this editor.\n       */\n      select() {\n          var _b;\n          // this.makeResizable();\n          // this.div?.classList.add(\"selectedEditor\");\n          (_b = this.div) === null || _b === void 0 ? void 0 : _b.classList.add(\"k-selected\");\n          // todo: manually show annotation toolbar\n          this.addEditToolbar();\n          // if (!this._editToolbar) {\n          //     this.addEditToolbar().then(() => {\n          //         if (this.div?.classList.contains(\"k-selected selectedEditor\")) {\n          //             // The editor can have been unselected while we were waiting for the\n          //             // edit toolbar to be created, hence we want to be sure that this\n          //             // editor is still selected.\n          //             this._editToolbar?.show();\n          //         }\n          //     });\n          //     return;\n          // }\n          // this._editToolbar?.show();\n          // this.#altText?.toggleAltTextBadge(false);\n      }\n      /**\n       * Unselect this editor.\n       */\n      unselect() {\n          var _b, _c;\n          // this.#resizersDiv?.classList.add(\"hidden\");\n          // this.div?.classList.remove(\"selectedEditor\");\n          (_b = this.div) === null || _b === void 0 ? void 0 : _b.classList.remove(\"k-selected\");\n          if ((_c = this.div) === null || _c === void 0 ? void 0 : _c.contains(document.activeElement)) {\n              // Don't use this.div.blur() because we don't know where the focus will\n              // go.\n              this._uiManager.currentLayer.div.focus({\n                  preventScroll: true\n              });\n          }\n          // this._editToolbar?.hide();\n          // this.#altText?.toggleAltTextBadge(true);\n      }\n      /**\n       * Update some parameters which have been changed through the UI.\n       * @param {number} type\n       * @param {*} value\n       */\n      updateParams(type, value) {\n          if (type === undefined || !value) {\n              /* no-empty */\n          }\n      }\n      /**\n       * When the user disables the editing mode some editors can change some of\n       * their properties.\n       */\n      disableEditing() { }\n      /**\n       * When the user enables the editing mode some editors can change some of\n       * their properties.\n       */\n      enableEditing() { }\n      /**\n       * The editor is about to be edited.\n       */\n      enterInEditMode() { }\n      /**\n       * @returns {HTMLElement | null} the element requiring an alt text.\n       */\n      getImageForAltText() {\n          return null;\n      }\n      /**\n       * Get the div which really contains the displayed content.\n       * @returns {HTMLDivElement | undefined}\n       */\n      get contentDiv() {\n          return this.div;\n      }\n      /**\n       * If true then the editor is currently edited.\n       * @type {boolean}\n       */\n      get isEditing() {\n          return __classPrivateFieldGet(this, _AnnotationEditor_isEditing, \"f\");\n      }\n      /**\n       * When set to true, it means that this editor is currently edited.\n       * @param {boolean} value\n       */\n      set isEditing(value) {\n          __classPrivateFieldSet(this, _AnnotationEditor_isEditing, value, \"f\");\n          if (!this.parent) {\n              return;\n          }\n          if (value) {\n              this.parent.setSelected(this);\n              this.parent.setActiveEditor(this);\n          }\n          else {\n              this.parent.setActiveEditor(null);\n          }\n      }\n      /**\n       * Set the aspect ratio to use when resizing.\n       * @param {number} width\n       * @param {number} height\n       */\n      setAspectRatio(width, height) {\n          __classPrivateFieldSet(this, _AnnotationEditor_keepAspectRatio, true, \"f\");\n          const aspectRatio = width / height;\n          const { style } = this.div;\n          style.aspectRatio = aspectRatio;\n          style.height = \"auto\";\n      }\n      static get MIN_SIZE() {\n          return 16;\n      }\n      static canCreateNewEmptyEditor() {\n          return true;\n      }\n      /**\n       * Get the data to report to the telemetry when the editor is added.\n       * @returns {Object}\n       */\n      get telemetryInitialData() {\n          return { action: \"added\" };\n      }\n      /**\n       * The telemetry data to use when saving/printing.\n       * @returns {Object|null}\n       */\n      get telemetryFinalData() {\n          return null;\n      }\n      _reportTelemetry() { }\n      // _reportTelemetry(data, mustWait = false) {\n      //     if (mustWait) {\n      //         this.#telemetryTimeouts ||= new Map();\n      //         const { action } = data;\n      //         let timeout = this.#telemetryTimeouts.get(action);\n      //         if (timeout) {\n      //             clearTimeout(timeout);\n      //         }\n      //         timeout = setTimeout(() => {\n      //             this._reportTelemetry(data);\n      //             this.#telemetryTimeouts.delete(action);\n      //             if (this.#telemetryTimeouts.size === 0) {\n      //                 this.#telemetryTimeouts = null;\n      //             }\n      //         }, AnnotationEditor._telemetryTimeout);\n      //         this.#telemetryTimeouts.set(action, timeout);\n      //         return;\n      //     }\n      //     data.type ||= this.editorType;\n      //     this._uiManager._eventBus.dispatch(\"reporttelemetry\", {\n      //         source: this,\n      //         details: {\n      //             type: \"editing\",\n      //             data,\n      //         },\n      //     });\n      // }\n      /**\n       * Show or hide this editor.\n       * @param {boolean|undefined} visible\n       */\n      show(visible = this._isVisible) {\n          // this.div.classList.toggle(\"hidden\", !visible);\n          this.div.classList.toggle(\"k-hidden\", !visible);\n          this._isVisible = visible;\n      }\n      enable() {\n          if (this.div) {\n              this.div.tabIndex = 0;\n          }\n          __classPrivateFieldSet(this, _AnnotationEditor_disabled, false, \"f\");\n      }\n      disable() {\n          if (this.div) {\n              this.div.tabIndex = -1;\n          }\n          __classPrivateFieldSet(this, _AnnotationEditor_disabled, true, \"f\");\n      }\n      /**\n       * Render an annotation in the annotation layer.\n       * @param {Object} annotation\n       * @returns {HTMLElement}\n       */\n      renderAnnotationElement(annotation) {\n          let content = annotation.container.querySelector(\".annotationContent\") ||\n              annotation.container.querySelector(\".k-annotation-content\");\n          if (!content) {\n              content = document.createElement(\"div\");\n              // content.classList.add(\"annotationContent\", this.editorType);\n              content.classList.add(\"k-annotation-content\", this.editorType);\n              annotation.container.prepend(content);\n          }\n          else if (content.nodeName === \"CANVAS\") {\n              const canvas = content;\n              content = document.createElement(\"div\");\n              // content.classList.add(\"annotationContent\", this.editorType);\n              content.classList.add(\"k-annotation-content\", this.editorType);\n              canvas.before(content);\n          }\n          return content;\n      }\n      resetAnnotationElement(annotation) {\n          const { firstChild } = annotation.container;\n          if (firstChild.nodeName === \"DIV\" &&\n              (firstChild.classList.contains(\"annotationContent\") ||\n                  firstChild.classList.contains(\"k-annotation-content\"))) {\n              firstChild.remove();\n          }\n      }\n  }\n  _a$6 = AnnotationEditor, _AnnotationEditor_x = new WeakMap(), _AnnotationEditor_y = new WeakMap(), _AnnotationEditor_disabled = new WeakMap(), _AnnotationEditor_keepAspectRatio = new WeakMap(), _AnnotationEditor_focusAC = new WeakMap(), _AnnotationEditor_hasBeenClicked = new WeakMap(), _AnnotationEditor_initialPosition = new WeakMap(), _AnnotationEditor_isEditing = new WeakMap(), _AnnotationEditor_isInEditMode = new WeakMap(), _AnnotationEditor_moveInDOMTimeout = new WeakMap(), _AnnotationEditor_prevDragX = new WeakMap(), _AnnotationEditor_prevDragY = new WeakMap(), _AnnotationEditor_isDraggable = new WeakMap(), _AnnotationEditor_zIndex = new WeakMap(), _AnnotationEditor_instances = new WeakSet(), _AnnotationEditor_translate = function _AnnotationEditor_translate([width, height], x, y) {\n      [x, y] = this.screenToPageTranslation(x, y);\n      this.x += x / width;\n      this.y += y / height;\n      this.fixAndSetPosition();\n  }, _AnnotationEditor_rotatePoint = function _AnnotationEditor_rotatePoint(x, y, angle) {\n      switch (angle) {\n          case 90:\n              return [y, -x];\n          case 180:\n              return [-x, -y];\n          case 270:\n              return [-y, x];\n          default:\n              return [x, y];\n      }\n  }, _AnnotationEditor_selectOnPointerEvent = function _AnnotationEditor_selectOnPointerEvent(event) {\n      const { isMac } = kendo_pdfjs_loader_js.FeatureTest.platform;\n      const highlightEditor = event.target.closest(\".k-highlight-editor\");\n      const freeTextEditor = event.target.closest(\".k-free-text-editor\");\n      const annotationEditorMode = this._uiManager.getMode();\n      // todo: manually prevent selecting a highlight annotation in freetext mode\n      if ((annotationEditorMode === AnnotationEditorType.HIGHLIGHT && !highlightEditor) ||\n          (annotationEditorMode === AnnotationEditorType.FREETEXT && !freeTextEditor)) {\n          return;\n      }\n      if ((event.ctrlKey && !isMac) ||\n          event.shiftKey ||\n          (event.metaKey && isMac)) {\n          this.parent.toggleSelected(this);\n      }\n      else {\n          this.parent.setSelected(this);\n      }\n  }, _AnnotationEditor_setUpDragSession = function _AnnotationEditor_setUpDragSession(event) {\n      const isSelected = this._uiManager.isSelected(this);\n      this._uiManager.setUpDragSession();\n      const ac = new AbortController();\n      const signal = this._uiManager.combinedSignal(ac);\n      if (isSelected) {\n          // this.div.classList.add(\"moving\");\n          __classPrivateFieldSet(this, _AnnotationEditor_prevDragX, event.clientX, \"f\");\n          __classPrivateFieldSet(this, _AnnotationEditor_prevDragY, event.clientY, \"f\");\n          const pointerMoveCallback = e => {\n              const { clientX: x, clientY: y } = e;\n              const [tx, ty] = this.screenToPageTranslation(x - __classPrivateFieldGet(this, _AnnotationEditor_prevDragX, \"f\"), y - __classPrivateFieldGet(this, _AnnotationEditor_prevDragY, \"f\"));\n              __classPrivateFieldSet(this, _AnnotationEditor_prevDragX, x, \"f\");\n              __classPrivateFieldSet(this, _AnnotationEditor_prevDragY, y, \"f\");\n              this._uiManager.dragSelectedEditors(tx, ty);\n          };\n          window.addEventListener(\"pointermove\", pointerMoveCallback, {\n              passive: true,\n              capture: true,\n              signal\n          });\n      }\n      const pointerUpCallback = () => {\n          ac.abort();\n          if (isSelected) {\n              this.div.classList.remove(\"moving\");\n          }\n          __classPrivateFieldSet(this, _AnnotationEditor_hasBeenClicked, false, \"f\");\n          if (!this._uiManager.endDragSession()) {\n              __classPrivateFieldGet(this, _AnnotationEditor_instances, \"m\", _AnnotationEditor_selectOnPointerEvent).call(this, event);\n          }\n      };\n      window.addEventListener(\"pointerup\", pointerUpCallback, { signal });\n      // If the user is using alt+tab during the dragging session, the pointerup\n      // event could be not fired, but a blur event is fired so we can use it in\n      // order to interrupt the dragging session.\n      window.addEventListener(\"blur\", pointerUpCallback, { signal });\n  }, _AnnotationEditor_addFocusListeners = function _AnnotationEditor_addFocusListeners() {\n      if (__classPrivateFieldGet(this, _AnnotationEditor_focusAC, \"f\") || !this.div) {\n          return;\n      }\n      __classPrivateFieldSet(this, _AnnotationEditor_focusAC, new AbortController(), \"f\");\n      const signal = this._uiManager.combinedSignal(__classPrivateFieldGet(this, _AnnotationEditor_focusAC, \"f\"));\n      this.div.addEventListener(\"focusin\", this.focusin.bind(this), { signal });\n      this.div.addEventListener(\"focusout\", this.focusout.bind(this), { signal });\n  }, _AnnotationEditor_stopResizing = function _AnnotationEditor_stopResizing() {\n      // this.#isResizerEnabledForKeyboard = false;\n      // this.#setResizerTabIndex(-1);\n      // if (this.#savedDimensions) {\n      //     const { savedX, savedY, savedWidth, savedHeight } = this.#savedDimensions;\n      //     this.#addResizeToUndoStack(savedX, savedY, savedWidth, savedHeight);\n      //     this.#savedDimensions = null;\n      // }\n  };\n  AnnotationEditor.idManager = new IdManager(\"annotation_editor_id_\");\n  AnnotationEditor._borderLineWidth = -1;\n  AnnotationEditor._colorManager = new ColorManager();\n  AnnotationEditor._zIndex = 1;\n  // Time to wait (in ms) before sending the telemetry data.\n  // We wait a bit to avoid sending too many requests when changing something\n  // like the thickness of a line.\n  AnnotationEditor._telemetryTimeout = 1000;\n  // This class is used to fake an editor which has been deleted.\n  class FakeEditor extends AnnotationEditor {\n      constructor(params) {\n          super(params);\n          this.annotationElementId = params.annotationElementId;\n          this.deleted = true;\n      }\n      serialize() {\n          return {\n              id: this.annotationElementId,\n              deleted: true,\n              pageIndex: this.pageIndex\n          };\n      }\n  }\n\n  /* Copyright 2014 Opera Software ASA\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *     http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   * See the License for the specific language governing permissions and\n   * limitations under the License.\n   *\n   *\n   * Based on https://code.google.com/p/smhasher/wiki/MurmurHash3.\n   * Hashes roughly 100 KB per millisecond on i7 3.4 GHz.\n   */\n  const SEED = 0xc3d2e1f0;\n  // Workaround for missing math precision in JS.\n  const MASK_HIGH = 0xffff0000;\n  const MASK_LOW = 0xffff;\n  class MurmurHash3_64 {\n      // todo: props\n      constructor(seed) {\n          // todo: props\n          this.h1 = null;\n          this.h2 = null;\n          this.h1 = seed ? seed & 0xffffffff : SEED;\n          this.h2 = seed ? seed & 0xffffffff : SEED;\n      }\n      update(input) {\n          let data, length;\n          if (typeof input === \"string\") {\n              data = new Uint8Array(input.length * 2);\n              length = 0;\n              for (let i = 0, ii = input.length; i < ii; i++) {\n                  const code = input.charCodeAt(i);\n                  if (code <= 0xff) {\n                      data[length++] = code;\n                  }\n                  else {\n                      data[length++] = code >>> 8;\n                      data[length++] = code & 0xff;\n                  }\n              }\n          }\n          else if (ArrayBuffer.isView(input)) {\n              data = input.slice();\n              length = data.byteLength;\n          }\n          else {\n              throw new Error(\"Invalid data format, must be a string or TypedArray.\");\n          }\n          const blockCounts = length >> 2;\n          const tailLength = length - blockCounts * 4;\n          // We don't care about endianness here.\n          const dataUint32 = new Uint32Array(data.buffer, 0, blockCounts);\n          let k1 = 0, k2 = 0;\n          let h1 = this.h1, h2 = this.h2;\n          const C1 = 0xcc9e2d51, C2 = 0x1b873593;\n          const C1_LOW = C1 & MASK_LOW, C2_LOW = C2 & MASK_LOW;\n          for (let i = 0; i < blockCounts; i++) {\n              if (i & 1) {\n                  k1 = dataUint32[i];\n                  k1 = ((k1 * C1) & MASK_HIGH) | ((k1 * C1_LOW) & MASK_LOW);\n                  k1 = (k1 << 15) | (k1 >>> 17);\n                  k1 = ((k1 * C2) & MASK_HIGH) | ((k1 * C2_LOW) & MASK_LOW);\n                  h1 ^= k1;\n                  h1 = (h1 << 13) | (h1 >>> 19);\n                  h1 = h1 * 5 + 0xe6546b64;\n              }\n              else {\n                  k2 = dataUint32[i];\n                  k2 = ((k2 * C1) & MASK_HIGH) | ((k2 * C1_LOW) & MASK_LOW);\n                  k2 = (k2 << 15) | (k2 >>> 17);\n                  k2 = ((k2 * C2) & MASK_HIGH) | ((k2 * C2_LOW) & MASK_LOW);\n                  h2 ^= k2;\n                  h2 = (h2 << 13) | (h2 >>> 19);\n                  h2 = h2 * 5 + 0xe6546b64;\n              }\n          }\n          k1 = 0;\n          switch (tailLength) {\n              case 3:\n                  k1 ^= data[blockCounts * 4 + 2] << 16;\n              /* falls through */\n              case 2:\n                  k1 ^= data[blockCounts * 4 + 1] << 8;\n              /* falls through */\n              case 1:\n                  k1 ^= data[blockCounts * 4];\n                  /* falls through */\n                  k1 = ((k1 * C1) & MASK_HIGH) | ((k1 * C1_LOW) & MASK_LOW);\n                  k1 = (k1 << 15) | (k1 >>> 17);\n                  k1 = ((k1 * C2) & MASK_HIGH) | ((k1 * C2_LOW) & MASK_LOW);\n                  if (blockCounts & 1) {\n                      h1 ^= k1;\n                  }\n                  else {\n                      h2 ^= k1;\n                  }\n                  break;\n              default: break;\n          }\n          this.h1 = h1;\n          this.h2 = h2;\n      }\n      hexdigest() {\n          let h1 = this.h1, h2 = this.h2;\n          h1 ^= h2 >>> 1;\n          h1 = ((h1 * 0xed558ccd) & MASK_HIGH) | ((h1 * 0x8ccd) & MASK_LOW);\n          h2 =\n              ((h2 * 0xff51afd7) & MASK_HIGH) |\n                  (((((h2 << 16) | (h1 >>> 16)) * 0xafd7ed55) & MASK_HIGH) >>> 16);\n          h1 ^= h2 >>> 1;\n          h1 = ((h1 * 0x1a85ec53) & MASK_HIGH) | ((h1 * 0xec53) & MASK_LOW);\n          h2 =\n              ((h2 * 0xc4ceb9fe) & MASK_HIGH) |\n                  (((((h2 << 16) | (h1 >>> 16)) * 0xb9fe1a85) & MASK_HIGH) >>> 16);\n          h1 ^= h2 >>> 1;\n          return ((h1 >>> 0).toString(16).padStart(8, \"0\") +\n              (h2 >>> 0).toString(16).padStart(8, \"0\"));\n      }\n  }\n\n  /* Copyright 2020 Mozilla Foundation\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *     http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   * See the License for the specific language governing permissions and\n   * limitations under the License.\n   */\n  var _AnnotationStorage_instances, _AnnotationStorage_modified, _AnnotationStorage_modifiedIds, _AnnotationStorage_storage, _AnnotationStorage_setModified, _PrintAnnotationStorage_serializable;\n  const SerializableEmpty = Object.freeze({\n      map: null,\n      hash: \"\",\n      transfer: undefined\n  });\n  /**\n   * Key/value storage for annotation data in forms.\n   */\n  class AnnotationStorage {\n      constructor() {\n          _AnnotationStorage_instances.add(this);\n          // todo: props\n          this.onSetModified = null;\n          this.onResetModified = null;\n          this.onAnnotationEditor = null;\n          // todo: props\n          _AnnotationStorage_modified.set(this, false);\n          _AnnotationStorage_modifiedIds.set(this, null);\n          _AnnotationStorage_storage.set(this, new Map());\n          // Callbacks to signal when the modification state is set or reset.\n          // This is used by the viewer to only bind on `beforeunload` if forms\n          // are actually edited to prevent doing so unconditionally since that\n          // can have undesirable effects.\n          this.onSetModified = null;\n          this.onResetModified = null;\n          this.onAnnotationEditor = null;\n      }\n      /**\n      * Get the value for the storage - used purely for debugging purposes.\n      * @returns {Object}\n      */\n      getStorage() {\n          return __classPrivateFieldGet(this, _AnnotationStorage_storage, \"f\");\n      }\n      /**\n       * Get the modified flag for the storage - used purely for debugging purposes.\n       * @returns {Object}\n       */\n      getModified() {\n          return __classPrivateFieldGet(this, _AnnotationStorage_modified, \"f\");\n      }\n      /**\n       * Get the value for a given key if it exists, or return the default value.\n       * @param {string} key\n       * @param {Object} defaultValue\n       * @returns {Object}\n       */\n      getValue(key, defaultValue) {\n          const value = __classPrivateFieldGet(this, _AnnotationStorage_storage, \"f\").get(key);\n          if (value === undefined) {\n              return defaultValue;\n          }\n          return Object.assign(defaultValue, value);\n      }\n      /**\n       * Get the value for a given key.\n       * @param {string} key\n       * @returns {Object}\n       */\n      getRawValue(key) {\n          return __classPrivateFieldGet(this, _AnnotationStorage_storage, \"f\").get(key);\n      }\n      /**\n       * Remove a value from the storage.\n       * @param {string} key\n       */\n      remove(key) {\n          __classPrivateFieldGet(this, _AnnotationStorage_storage, \"f\").delete(key);\n          if (__classPrivateFieldGet(this, _AnnotationStorage_storage, \"f\").size === 0) {\n              this.resetModified();\n          }\n          if (typeof this.onAnnotationEditor === \"function\") {\n              for (const value of __classPrivateFieldGet(this, _AnnotationStorage_storage, \"f\").values()) {\n                  if (value instanceof AnnotationEditor) {\n                      return;\n                  }\n              }\n              this.onAnnotationEditor(null);\n          }\n      }\n      /**\n       * Set the value for a given key\n       * @param {string} key\n       * @param {Object} value\n       */\n      setValue(key, value) {\n          const obj = __classPrivateFieldGet(this, _AnnotationStorage_storage, \"f\").get(key);\n          let modified = false;\n          if (obj !== undefined) {\n              for (const [entry, val] of Object.entries(value)) {\n                  if (obj[entry] !== val) {\n                      modified = true;\n                      obj[entry] = val;\n                  }\n              }\n          }\n          else {\n              modified = true;\n              __classPrivateFieldGet(this, _AnnotationStorage_storage, \"f\").set(key, value);\n          }\n          if (modified) {\n              __classPrivateFieldGet(this, _AnnotationStorage_instances, \"m\", _AnnotationStorage_setModified).call(this);\n          }\n          if (value instanceof AnnotationEditor &&\n              typeof this.onAnnotationEditor === \"function\") {\n              this.onAnnotationEditor(value.constructor._type);\n          }\n      }\n      /**\n       * Check if the storage contains the given key.\n       * @param {string} key\n       * @returns {boolean}\n       */\n      has(key) {\n          return __classPrivateFieldGet(this, _AnnotationStorage_storage, \"f\").has(key);\n      }\n      /**\n       * @returns {Object | null}\n       */\n      getAll() {\n          return __classPrivateFieldGet(this, _AnnotationStorage_storage, \"f\").size > 0 ? objectFromMap(__classPrivateFieldGet(this, _AnnotationStorage_storage, \"f\")) : null;\n      }\n      /**\n       * @param {Object} obj\n       */\n      setAll(obj) {\n          for (const [key, val] of Object.entries(obj)) {\n              this.setValue(key, val);\n          }\n      }\n      get size() {\n          return __classPrivateFieldGet(this, _AnnotationStorage_storage, \"f\").size;\n      }\n      resetModified() {\n          if (__classPrivateFieldGet(this, _AnnotationStorage_modified, \"f\")) {\n              __classPrivateFieldSet(this, _AnnotationStorage_modified, false, \"f\");\n              if (typeof this.onResetModified === \"function\") {\n                  this.onResetModified();\n              }\n          }\n      }\n      /**\n       * @returns {PrintAnnotationStorage}\n       */\n      get print() {\n          return new PrintAnnotationStorage(this);\n      }\n      /**\n       * PLEASE NOTE: Only intended for usage within the API itself.\n       * @ignore\n       */\n      get serializable() {\n          if (__classPrivateFieldGet(this, _AnnotationStorage_storage, \"f\").size === 0) {\n              return SerializableEmpty;\n          }\n          const map = new Map(), hash = new MurmurHash3_64(null), transfer = [];\n          const context = Object.create(null);\n          let hasBitmap = false;\n          for (const [key, val] of __classPrivateFieldGet(this, _AnnotationStorage_storage, \"f\")) {\n              const serialized = val instanceof AnnotationEditor\n                  ? val.serialize(/* isForCopying = */ false, context)\n                  : val;\n              if (serialized) {\n                  map.set(key, serialized);\n                  hash.update(`${key}:${JSON.stringify(serialized)}`);\n                  hasBitmap || (hasBitmap = !!serialized.bitmap);\n              }\n          }\n          if (hasBitmap) {\n              // We must transfer the bitmap data separately, since it can be changed\n              // during serialization with SVG images.\n              for (const value of map.values()) {\n                  if (value.bitmap) {\n                      transfer.push(value.bitmap);\n                  }\n              }\n          }\n          return map.size > 0\n              ? { map, hash: hash.hexdigest(), transfer }\n              : SerializableEmpty;\n      }\n      get editorStats() {\n          var _a;\n          let stats = null;\n          const typeToEditor = new Map();\n          for (const value of __classPrivateFieldGet(this, _AnnotationStorage_storage, \"f\").values()) {\n              if (!(value instanceof AnnotationEditor)) {\n                  continue;\n              }\n              const editorStats = value.telemetryFinalData;\n              if (!editorStats) {\n                  continue;\n              }\n              const { type } = editorStats;\n              if (!typeToEditor.has(type)) {\n                  typeToEditor.set(type, Object.getPrototypeOf(value).constructor);\n              }\n              stats || (stats = Object.create(null));\n              const map = (stats[type] || (stats[type] = new Map()));\n              for (const [key, val] of Object.entries(editorStats)) {\n                  if (key === \"type\") {\n                      continue;\n                  }\n                  let counters = map.get(key);\n                  if (!counters) {\n                      counters = new Map();\n                      map.set(key, counters);\n                  }\n                  const count = (_a = counters.get(val)) !== null && _a !== void 0 ? _a : 0;\n                  counters.set(val, count + 1);\n              }\n          }\n          for (const [type, editor] of typeToEditor) {\n              stats[type] = editor.computeTelemetryFinalData(stats[type]);\n          }\n          return stats;\n      }\n      resetModifiedIds() {\n          __classPrivateFieldSet(this, _AnnotationStorage_modifiedIds, null, \"f\");\n      }\n      /**\n       * @returns {{ids: Set<string>, hash: string}}\n       */\n      get modifiedIds() {\n          if (__classPrivateFieldGet(this, _AnnotationStorage_modifiedIds, \"f\")) {\n              return __classPrivateFieldGet(this, _AnnotationStorage_modifiedIds, \"f\");\n          }\n          const ids = [];\n          for (const value of __classPrivateFieldGet(this, _AnnotationStorage_storage, \"f\").values()) {\n              if (!(value instanceof AnnotationEditor) ||\n                  !value.annotationElementId ||\n                  !(value.serialize())) {\n                  continue;\n              }\n              ids.push(value.annotationElementId);\n          }\n          return (__classPrivateFieldSet(this, _AnnotationStorage_modifiedIds, {\n              ids: new Set(ids),\n              hash: ids.join(\",\")\n          }, \"f\"));\n      }\n  }\n  _AnnotationStorage_modified = new WeakMap(), _AnnotationStorage_modifiedIds = new WeakMap(), _AnnotationStorage_storage = new WeakMap(), _AnnotationStorage_instances = new WeakSet(), _AnnotationStorage_setModified = function _AnnotationStorage_setModified() {\n      if (!__classPrivateFieldGet(this, _AnnotationStorage_modified, \"f\")) {\n          __classPrivateFieldSet(this, _AnnotationStorage_modified, true, \"f\");\n          if (typeof this.onSetModified === \"function\") {\n              this.onSetModified();\n          }\n      }\n  };\n  /**\n   * A special `AnnotationStorage` for use during printing, where the serializable\n   * data is *frozen* upon initialization, to prevent scripting from modifying its\n   * contents. (Necessary since printing is triggered synchronously in browsers.)\n   */\n  class PrintAnnotationStorage extends AnnotationStorage {\n      constructor(parent) {\n          super();\n          _PrintAnnotationStorage_serializable.set(this, void 0);\n          const { map, hash, transfer } = parent.serializable;\n          // Create a *copy* of the data, since Objects are passed by reference in JS.\n          const clone = structuredClone(map, transfer ? { transfer } : null);\n          __classPrivateFieldSet(this, _PrintAnnotationStorage_serializable, { map: clone, hash, transfer }, \"f\");\n      }\n      /**\n       * @returns {PrintAnnotationStorage}\n       */\n      get print() {\n          // unreachable(\"Should not call PrintAnnotationStorage.print\");\n          return null;\n      }\n      /**\n       * PLEASE NOTE: Only intended for usage within the API itself.\n       * @ignore\n       */\n      get serializable() {\n          return __classPrivateFieldGet(this, _PrintAnnotationStorage_serializable, \"f\");\n      }\n      get modifiedIds() {\n          return kendo_pdfjs_loader_js.shadow(this, \"modifiedIds\", {\n              ids: new Set(),\n              hash: \"\"\n          });\n      }\n  }\n  _PrintAnnotationStorage_serializable = new WeakMap();\n\n  /* Copyright 2014 Mozilla Foundation\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *     http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   * See the License for the specific language governing permissions and\n   * limitations under the License.\n   */\n  var _AnnotationElement_instances, _AnnotationElement_updates, _AnnotationElement_hasBorder, _AnnotationElement_popupElement, _AnnotationElement_setRectEdited, _LinkAnnotationElement_instances, _LinkAnnotationElement_setInternalLink, _LinkAnnotationElement_bindAttachment, _LinkAnnotationElement_bindSetOCGState, _PopupElement_instances, _PopupElement_boundKeyDown, _PopupElement_boundHide, _PopupElement_boundShow, _PopupElement_boundToggle, _PopupElement_color, _PopupElement_container, _PopupElement_contentsObj, _PopupElement_dateObj, _PopupElement_elements, _PopupElement_parent, _PopupElement_parentRect, _PopupElement_pinned, _PopupElement_popup, _PopupElement_position, _PopupElement_rect, _PopupElement_richText, _PopupElement_titleObj, _PopupElement_updates, _PopupElement_wasVisible, _PopupElement_html_get, _PopupElement_fontSize_get, _PopupElement_fontColor_get, _PopupElement_makePopupContent, _PopupElement_keyDown, _PopupElement_setPosition, _PopupElement_toggle, _PopupElement_show, _PopupElement_hide, _AnnotationLayer_instances, _AnnotationLayer_accessibilityManager, _AnnotationLayer_annotationCanvasMap, _AnnotationLayer_editableAnnotations, _AnnotationLayer_appendElement, _AnnotationLayer_setAnnotationCanvasMap;\n  // const DEFAULT_TAB_INDEX = 1000;\n  // it is unclear why the value 1000 is chosen by pdf.js\n  // kendo a11y tests fail if this is not 0\n  const DEFAULT_TAB_INDEX = 0;\n  const DEFAULT_FONT_SIZE = 9;\n  const GetElementsByNameSet = new WeakSet();\n  function getRectDims(rect) {\n      return {\n          width: rect[2] - rect[0],\n          height: rect[3] - rect[1]\n      };\n  }\n  class AnnotationElementFactory {\n      /**\n       * @param {AnnotationElementParameters} parameters\n       * @returns {AnnotationElement}\n       */\n      static create(parameters) {\n          const subtype = parameters.data.annotationType;\n          switch (subtype) {\n              case AnnotationType.LINK:\n                  return new LinkAnnotationElement(parameters);\n              // case AnnotationType.TEXT:\n              //     return new TextAnnotationElement(parameters);\n              case AnnotationType.WIDGET:\n                  const fieldType = parameters.data.fieldType;\n                  switch (fieldType) {\n                      case \"Tx\":\n                          return new TextWidgetAnnotationElement(parameters);\n                      case \"Btn\":\n                          if (parameters.data.radioButton) {\n                              return new RadioButtonWidgetAnnotationElement(parameters);\n                          }\n                          else if (parameters.data.checkBox) {\n                              return new CheckboxWidgetAnnotationElement(parameters);\n                          }\n                          return new PushButtonWidgetAnnotationElement(parameters);\n                      case \"Ch\":\n                          return new ChoiceWidgetAnnotationElement(parameters);\n                      // case \"Sig\":\n                      //     return new SignatureWidgetAnnotationElement(parameters);\n                      default:\n                          break;\n                  }\n              // return new WidgetAnnotationElement(parameters);\n              // case AnnotationType.POPUP:\n              //     return new PopupAnnotationElement(parameters);\n              case AnnotationType.FREETEXT:\n                  return new FreeTextAnnotationElement(parameters);\n              // case AnnotationType.LINE:\n              //     return new LineAnnotationElement(parameters);\n              // case AnnotationType.SQUARE:\n              //     return new SquareAnnotationElement(parameters);\n              // case AnnotationType.CIRCLE:\n              //     return new CircleAnnotationElement(parameters);\n              // case AnnotationType.POLYLINE:\n              //     return new PolylineAnnotationElement(parameters);\n              // case AnnotationType.CARET:\n              //     return new CaretAnnotationElement(parameters);\n              // case AnnotationType.INK:\n              //     return new InkAnnotationElement(parameters);\n              // case AnnotationType.POLYGON:\n              //     return new PolygonAnnotationElement(parameters);\n              case AnnotationType.HIGHLIGHT:\n                  return new HighlightAnnotationElement(parameters);\n              // case AnnotationType.UNDERLINE:\n              //     return new UnderlineAnnotationElement(parameters);\n              // case AnnotationType.SQUIGGLY:\n              //     return new SquigglyAnnotationElement(parameters);\n              // case AnnotationType.STRIKEOUT:\n              //     return new StrikeOutAnnotationElement(parameters);\n              // case AnnotationType.STAMP:\n              //     return new StampAnnotationElement(parameters);\n              // case AnnotationType.FILEATTACHMENT:\n              //     return new FileAttachmentAnnotationElement(parameters);\n              default:\n                  return new AnnotationElement(parameters);\n          }\n      }\n  }\n  class AnnotationElement {\n      constructor(parameters, { isRenderable = false, ignoreBorder = false, createQuadrilaterals = false } = {}) {\n          _AnnotationElement_instances.add(this);\n          // todo: props\n          this.isRenderable = null;\n          this.data = null;\n          this.layer = null;\n          this.linkService = null;\n          this.downloadManager = null;\n          this.imageResourcesPath = null;\n          this.renderForms = null;\n          this.svgFactory = null;\n          this.annotationStorage = null;\n          this.enableScripting = null;\n          this.hasJSActions = null;\n          this._fieldObjects = null;\n          this.parent = null;\n          this.container = null;\n          this.popup = null;\n          this.annotationEditorType = null;\n          // todo: props\n          _AnnotationElement_updates.set(this, null);\n          _AnnotationElement_hasBorder.set(this, false);\n          _AnnotationElement_popupElement.set(this, null);\n          this.isRenderable = isRenderable;\n          this.data = parameters.data;\n          this.layer = parameters.layer;\n          this.linkService = parameters.linkService;\n          this.downloadManager = parameters.downloadManager;\n          this.imageResourcesPath = parameters.imageResourcesPath;\n          this.renderForms = parameters.renderForms;\n          this.svgFactory = parameters.svgFactory;\n          this.annotationStorage = parameters.annotationStorage;\n          this.enableScripting = parameters.enableScripting;\n          this.hasJSActions = parameters.hasJSActions;\n          this._fieldObjects = parameters.fieldObjects;\n          this.parent = parameters.parent;\n          if (isRenderable) {\n              this.container = this._createContainer(ignoreBorder);\n          }\n          if (createQuadrilaterals) {\n              this._createQuadrilaterals();\n          }\n      }\n      static _hasPopupData({ titleObj, contentsObj, richText }) {\n          return !!((titleObj === null || titleObj === void 0 ? void 0 : titleObj.str) || (contentsObj === null || contentsObj === void 0 ? void 0 : contentsObj.str) || (richText === null || richText === void 0 ? void 0 : richText.str));\n      }\n      get _isEditable() {\n          return this.data.isEditable;\n      }\n      get hasPopupData() {\n          return AnnotationElement._hasPopupData(this.data);\n      }\n      updateEdited(params) {\n          var _a;\n          if (!this.container) {\n              return;\n          }\n          __classPrivateFieldSet(this, _AnnotationElement_updates, __classPrivateFieldGet(this, _AnnotationElement_updates, \"f\") || {\n              rect: this.data.rect.slice(0)\n          }, \"f\");\n          const { rect } = params;\n          if (rect) {\n              __classPrivateFieldGet(this, _AnnotationElement_instances, \"m\", _AnnotationElement_setRectEdited).call(this, rect);\n          }\n          (_a = __classPrivateFieldGet(this, _AnnotationElement_popupElement, \"f\")) === null || _a === void 0 ? void 0 : _a.popup.updateEdited(params);\n      }\n      resetEdited() {\n          var _a;\n          if (!__classPrivateFieldGet(this, _AnnotationElement_updates, \"f\")) {\n              return;\n          }\n          __classPrivateFieldGet(this, _AnnotationElement_instances, \"m\", _AnnotationElement_setRectEdited).call(this, __classPrivateFieldGet(this, _AnnotationElement_updates, \"f\").rect);\n          (_a = __classPrivateFieldGet(this, _AnnotationElement_popupElement, \"f\")) === null || _a === void 0 ? void 0 : _a.popup.resetEdited();\n          __classPrivateFieldSet(this, _AnnotationElement_updates, null, \"f\");\n      }\n      /**\n       * Create an empty container for the annotation's HTML element.\n       *\n       * @private\n       * @param {boolean} ignoreBorder\n       * @memberof AnnotationElement\n       * @returns {HTMLElement} A section element.\n       */\n      _createContainer(ignoreBorder) {\n          const { data, parent: { page, viewport } } = this;\n          const container = document.createElement(\"section\");\n          container.setAttribute(\"data-annotation-id\", data.id);\n          if (!(this instanceof WidgetAnnotationElement)) {\n              container.tabIndex = DEFAULT_TAB_INDEX;\n          }\n          const { style } = container;\n          // The accessibility manager will move the annotation in the DOM in\n          // order to match the visual ordering.\n          // But if an annotation is above an other one, then we must draw it\n          // after the other one whatever the order is in the DOM, hence the\n          // use of the z-index.\n          style.zIndex = (this.parent.zIndex++).toString();\n          if (data.popupRef) {\n              container.setAttribute(\"aria-haspopup\", \"dialog\");\n          }\n          if (data.alternativeText) {\n              container.title = data.alternativeText;\n          }\n          if (data.noRotate) {\n              // container.classList.add(\"norotate\");\n          }\n          if (!data.rect || this instanceof PopupAnnotationElement) {\n              const { rotation: rotationValue } = data;\n              if (!data.hasOwnCanvas && rotationValue !== 0) {\n                  this.setRotation(rotationValue, container);\n              }\n              return container;\n          }\n          const { width, height } = getRectDims(data.rect);\n          if (!ignoreBorder && data.borderStyle.width > 0) {\n              style.borderWidth = `${data.borderStyle.width}px`;\n              const horizontalRadius = data.borderStyle.horizontalCornerRadius;\n              const verticalRadius = data.borderStyle.verticalCornerRadius;\n              if (horizontalRadius > 0 || verticalRadius > 0) {\n                  const radius = `calc(${horizontalRadius}px * var(--scale-factor)) / calc(${verticalRadius}px * var(--scale-factor))`;\n                  style.borderRadius = radius;\n              }\n              else if (this instanceof RadioButtonWidgetAnnotationElement) {\n                  const radius = `calc(${width}px * var(--scale-factor)) / calc(${height}px * var(--scale-factor))`;\n                  style.borderRadius = radius;\n              }\n              switch (data.borderStyle.style) {\n                  case AnnotationBorderStyleType.SOLID:\n                      style.borderStyle = \"solid\";\n                      break;\n                  case AnnotationBorderStyleType.DASHED:\n                      style.borderStyle = \"dashed\";\n                      break;\n                  case AnnotationBorderStyleType.BEVELED:\n                      // warn(\"Unimplemented border style: beveled\");\n                      break;\n                  case AnnotationBorderStyleType.INSET:\n                      // warn(\"Unimplemented border style: inset\");\n                      break;\n                  case AnnotationBorderStyleType.UNDERLINE:\n                      style.borderBottomStyle = \"solid\";\n                      break;\n                  default:\n                      break;\n              }\n              const borderColor = data.borderColor || null;\n              if (borderColor) {\n                  __classPrivateFieldSet(this, _AnnotationElement_hasBorder, true, \"f\");\n                  style.borderColor = kendo_pdfjs_loader_js.Util.makeHexColor(borderColor[0] | 0, borderColor[1] | 0, borderColor[2] | 0);\n              }\n              else {\n                  // Transparent (invisible) border, so do not draw it at all.\n                  style.borderWidth = (0).toString();\n              }\n          }\n          // Do *not* modify `data.rect`, since that will corrupt the annotation\n          // position on subsequent calls to `_createContainer` (see issue 6804).\n          const rect = kendo_pdfjs_loader_js.Util.normalizeRect([\n              data.rect[0],\n              page.view[3] - data.rect[1] + page.view[1],\n              data.rect[2],\n              page.view[3] - data.rect[3] + page.view[1]\n          ]);\n          const { pageWidth, pageHeight, pageX, pageY } = viewport.rawDims;\n          style.left = `${(100 * (rect[0] - pageX)) / pageWidth}%`;\n          style.top = `${(100 * (rect[1] - pageY)) / pageHeight}%`;\n          const { rotation } = data;\n          if (data.hasOwnCanvas || rotation === 0) {\n              style.width = `${(100 * width) / pageWidth}%`;\n              style.height = `${(100 * height) / pageHeight}%`;\n          }\n          else {\n              this.setRotation(rotation, container);\n          }\n          return container;\n      }\n      setRotation(angle, container = this.container) {\n          if (!this.data.rect) {\n              return;\n          }\n          const { pageWidth, pageHeight } = this.parent.viewport.rawDims;\n          const { width, height } = getRectDims(this.data.rect);\n          let elementWidth, elementHeight;\n          if (angle % 180 === 0) {\n              elementWidth = (100 * width) / pageWidth;\n              elementHeight = (100 * height) / pageHeight;\n          }\n          else {\n              elementWidth = (100 * height) / pageWidth;\n              elementHeight = (100 * width) / pageHeight;\n          }\n          container.style.width = `${elementWidth}%`;\n          container.style.height = `${elementHeight}%`;\n          container.setAttribute(\"data-main-rotation\", (360 - angle) % 360);\n      }\n      get _commonActions() {\n          const setColor = (jsName, styleName, event) => {\n              const color = event.detail[jsName];\n              const colorType = color[0];\n              const colorArray = color.slice(1);\n              event.target.style[styleName] =\n                  ColorConverters[`${colorType}_HTML`](colorArray);\n              this.annotationStorage.setValue(this.data.id, {\n                  [styleName]: ColorConverters[`${colorType}_rgb`](colorArray)\n              });\n          };\n          return kendo_pdfjs_loader_js.shadow(this, \"_commonActions\", {\n              display: event => {\n                  const { display } = event.detail;\n                  // See scripting/constants.js for the values of `Display`.\n                  // 0 = visible, 1 = hidden, 2 = noPrint and 3 = noView.\n                  const hidden = display % 2 === 1;\n                  this.container.style.visibility = hidden ? \"hidden\" : \"visible\";\n                  this.annotationStorage.setValue(this.data.id, {\n                      noView: hidden,\n                      noPrint: display === 1 || display === 2\n                  });\n              },\n              print: event => {\n                  this.annotationStorage.setValue(this.data.id, {\n                      noPrint: !event.detail.print\n                  });\n              },\n              hidden: event => {\n                  const { hidden } = event.detail;\n                  this.container.style.visibility = hidden ? \"hidden\" : \"visible\";\n                  this.annotationStorage.setValue(this.data.id, {\n                      noPrint: hidden,\n                      noView: hidden\n                  });\n              },\n              focus: event => {\n                  setTimeout(() => event.target.focus({ preventScroll: false }), 0);\n              },\n              userName: event => {\n                  // tooltip\n                  event.target.title = event.detail.userName;\n              },\n              readonly: event => {\n                  event.target.disabled = event.detail.readonly;\n              },\n              required: event => {\n                  this._setRequired(event.target, event.detail.required);\n              },\n              bgColor: event => {\n                  setColor(\"bgColor\", \"backgroundColor\", event);\n              },\n              fillColor: event => {\n                  setColor(\"fillColor\", \"backgroundColor\", event);\n              },\n              fgColor: event => {\n                  setColor(\"fgColor\", \"color\", event);\n              },\n              textColor: event => {\n                  setColor(\"textColor\", \"color\", event);\n              },\n              borderColor: event => {\n                  setColor(\"borderColor\", \"borderColor\", event);\n              },\n              strokeColor: event => {\n                  setColor(\"strokeColor\", \"borderColor\", event);\n              },\n              rotation: event => {\n                  const angle = event.detail.rotation;\n                  this.setRotation(angle);\n                  this.annotationStorage.setValue(this.data.id, {\n                      rotation: angle\n                  });\n              }\n          });\n      }\n      _dispatchEventFromSandbox(actions, jsEvent) {\n          const commonActions = this._commonActions;\n          for (const name of Object.keys(jsEvent.detail)) {\n              const action = actions[name] || commonActions[name];\n              action === null || action === void 0 ? void 0 : action(jsEvent);\n          }\n      }\n      _setDefaultPropertiesFromJS(element) {\n          if (!this.enableScripting) {\n              return;\n          }\n          // Some properties may have been updated thanks to JS.\n          const storedData = this.annotationStorage.getRawValue(this.data.id);\n          if (!storedData) {\n              return;\n          }\n          const commonActions = this._commonActions;\n          for (const [actionName, detail] of Object.entries(storedData)) {\n              const action = commonActions[actionName];\n              if (action) {\n                  const eventProxy = {\n                      detail: {\n                          [actionName]: detail\n                      },\n                      target: element\n                  };\n                  action(eventProxy);\n                  // The action has been consumed: no need to keep it.\n                  delete storedData[actionName];\n              }\n          }\n      }\n      /**\n       * Create quadrilaterals from the annotation's quadpoints.\n       *\n       * @private\n       * @memberof AnnotationElement\n       */\n      _createQuadrilaterals() {\n          if (!this.container) {\n              return;\n          }\n          const { quadPoints } = this.data;\n          if (!quadPoints) {\n              return;\n          }\n          const [rectBlX, rectBlY, rectTrX, rectTrY] = this.data.rect.map(x => Math.fround(x));\n          if (quadPoints.length === 8) {\n              const [trX, trY, blX, blY] = quadPoints.subarray(2, 6);\n              if (rectTrX === trX &&\n                  rectTrY === trY &&\n                  rectBlX === blX &&\n                  rectBlY === blY) {\n                  // The quadpoints cover the whole annotation rectangle, so no need to\n                  // create a quadrilateral.\n                  return;\n              }\n          }\n          const { style } = this.container;\n          let svgBuffer;\n          if (__classPrivateFieldGet(this, _AnnotationElement_hasBorder, \"f\")) {\n              const { borderColor, borderWidth } = style;\n              style.borderWidth = 0;\n              svgBuffer = [\n                  \"url('data:image/svg+xml;utf8,\",\n                  `<svg xmlns=\"http://www.w3.org/2000/svg\"`,\n                  ` preserveAspectRatio=\"none\" viewBox=\"0 0 1 1\">`,\n                  `<g fill=\"transparent\" stroke=\"${borderColor}\" stroke-width=\"${borderWidth}\">`\n              ];\n              // this.container.classList.add(\"hasBorder\");\n          }\n          // todo: debug\n          // if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"TESTING\")) {\n          // this.container.classList.add(\"hasClipPath\");\n          // }\n          const width = rectTrX - rectBlX;\n          const height = rectTrY - rectBlY;\n          const { svgFactory } = this;\n          const svg = svgFactory.createElement(\"svg\");\n          // svg.classList.add(\"quadrilateralsContainer\");\n          svg.setAttribute(\"width\", 0);\n          svg.setAttribute(\"height\", 0);\n          const defs = svgFactory.createElement(\"defs\");\n          svg.append(defs);\n          const clipPath = svgFactory.createElement(\"clipPath\");\n          const id = `clippath_${this.data.id}`;\n          clipPath.setAttribute(\"id\", id);\n          clipPath.setAttribute(\"clipPathUnits\", \"objectBoundingBox\");\n          defs.append(clipPath);\n          for (let i = 2, ii = quadPoints.length; i < ii; i += 8) {\n              const trX = quadPoints[i];\n              const trY = quadPoints[i + 1];\n              const blX = quadPoints[i + 2];\n              const blY = quadPoints[i + 3];\n              const rect = svgFactory.createElement(\"rect\");\n              const x = (blX - rectBlX) / width;\n              const y = (rectTrY - trY) / height;\n              const rectWidth = (trX - blX) / width;\n              const rectHeight = (trY - blY) / height;\n              rect.setAttribute(\"x\", x);\n              rect.setAttribute(\"y\", y);\n              rect.setAttribute(\"width\", rectWidth);\n              rect.setAttribute(\"height\", rectHeight);\n              clipPath.append(rect);\n              svgBuffer === null || svgBuffer === void 0 ? void 0 : svgBuffer.push(`<rect vector-effect=\"non-scaling-stroke\" x=\"${x}\" y=\"${y}\" width=\"${rectWidth}\" height=\"${rectHeight}\"/>`);\n          }\n          if (__classPrivateFieldGet(this, _AnnotationElement_hasBorder, \"f\")) {\n              svgBuffer.push(`</g></svg>')`);\n              style.backgroundImage = svgBuffer.join(\"\");\n          }\n          this.container.append(svg);\n          this.container.style.clipPath = `url(#${id})`;\n      }\n      /**\n       * Create a popup for the annotation's HTML element. This is used for\n       * annotations that do not have a Popup entry in the dictionary, but\n       * are of a type that works with popups (such as Highlight annotations).\n       *\n       * @private\n       * @memberof AnnotationElement\n       */\n      _createPopup() {\n          // const { container, data } = this;\n          // container.setAttribute(\"aria-haspopup\", \"dialog\");\n          // const popup = (this.#popupElement = new PopupAnnotationElement({\n          //     data: {\n          //         color: data.color,\n          //         titleObj: data.titleObj,\n          //         modificationDate: data.modificationDate,\n          //         contentsObj: data.contentsObj,\n          //         richText: data.richText,\n          //         parentRect: data.rect,\n          //         borderStyle: 0,\n          //         id: `popup_${data.id}`,\n          //         rotation: data.rotation,\n          //     },\n          //     parent: this.parent,\n          //     elements: [this],\n          // }));\n          // this.parent.div.append(popup.render());\n      }\n      /**\n       * Render the annotation's HTML element(s).\n       *\n       * @public\n       * @memberof AnnotationElement\n       */\n      render() {\n          // unreachable(\"Abstract method `AnnotationElement.render` called\");\n      }\n      /**\n       * @private\n       * @returns {Array}\n       */\n      _getElementsByName(name, skipId = null) {\n          const fields = [];\n          if (this._fieldObjects) {\n              const fieldObj = this._fieldObjects[name];\n              if (fieldObj) {\n                  for (const { page, id, exportValues } of fieldObj) {\n                      if (page === -1) {\n                          continue;\n                      }\n                      if (id === skipId) {\n                          continue;\n                      }\n                      const exportValue = typeof exportValues === \"string\" ? exportValues : null;\n                      const domElement = document.querySelector(`[data-element-id=\"${id}\"]`);\n                      if (domElement && !GetElementsByNameSet.has(domElement)) {\n                          // warn(`_getElementsByName - element not allowed: ${id}`);\n                          continue;\n                      }\n                      fields.push({ id, exportValue, domElement });\n                  }\n              }\n              return fields;\n          }\n          // Fallback to a regular DOM lookup, to ensure that the standalone\n          // viewer components won't break.\n          for (const domElement of document.getElementsByName(name)) {\n              const { exportValue } = domElement;\n              const id = domElement.getAttribute(\"data-element-id\");\n              if (id === skipId) {\n                  continue;\n              }\n              if (!GetElementsByNameSet.has(domElement)) {\n                  continue;\n              }\n              fields.push({ id, exportValue, domElement });\n          }\n          return fields;\n      }\n      show() {\n          var _a;\n          if (this.container) {\n              this.container.hidden = false;\n          }\n          (_a = this.popup) === null || _a === void 0 ? void 0 : _a.maybeShow();\n      }\n      hide() {\n          var _a;\n          if (this.container) {\n              this.container.hidden = true;\n          }\n          (_a = this.popup) === null || _a === void 0 ? void 0 : _a.forceHide();\n      }\n      /**\n       * Get the HTML element(s) which can trigger a popup when clicked or hovered.\n       *\n       * @public\n       * @memberof AnnotationElement\n       * @returns {Array<HTMLElement>|HTMLElement} An array of elements or an\n       *          element.\n       */\n      getElementsToTriggerPopup() {\n          return this.container;\n      }\n      addHighlightArea() {\n          const triggers = this.getElementsToTriggerPopup();\n          if (Array.isArray(triggers)) {\n              // for (const element of triggers) {\n              // element.classList.add(\"highlightArea\");\n              // }\n          }\n          else {\n              // triggers.classList.add(\"highlightArea\");\n          }\n      }\n      _editOnDoubleClick() {\n          if (!this._isEditable) {\n              return;\n          }\n          const { annotationEditorType: mode, data: { id: editId } } = this;\n          this.container.addEventListener(\"dblclick\", () => {\n              var _a, _b;\n              (_b = (_a = this.linkService) === null || _a === void 0 ? void 0 : _a.eventBus) === null || _b === void 0 ? void 0 : _b.dispatch(\"switchannotationeditormode\", {\n                  source: this,\n                  mode,\n                  editId\n              });\n          });\n      }\n      _setRequired(element, isRequired) {\n          if (isRequired) {\n              element.setAttribute(\"required\", true);\n          }\n          else {\n              element.removeAttribute(\"required\");\n          }\n          element.setAttribute(\"aria-required\", isRequired);\n      }\n  }\n  _AnnotationElement_updates = new WeakMap(), _AnnotationElement_hasBorder = new WeakMap(), _AnnotationElement_popupElement = new WeakMap(), _AnnotationElement_instances = new WeakSet(), _AnnotationElement_setRectEdited = function _AnnotationElement_setRectEdited(rect) {\n      const { container: { style }, data: { rect: currentRect, rotation }, parent: { viewport: { rawDims: { pageWidth, pageHeight, pageX, pageY } } } } = this;\n      currentRect === null || currentRect === void 0 ? void 0 : currentRect.splice(0, 4, ...rect);\n      const { width, height } = getRectDims(rect);\n      style.left = `${(100 * (rect[0] - pageX)) / pageWidth}%`;\n      style.top = `${(100 * (pageHeight - rect[3] + pageY)) / pageHeight}%`;\n      if (rotation === 0) {\n          style.width = `${(100 * width) / pageWidth}%`;\n          style.height = `${(100 * height) / pageHeight}%`;\n      }\n      else {\n          this.setRotation(rotation);\n      }\n  };\n  class LinkAnnotationElement extends AnnotationElement {\n      constructor(parameters, options = null) {\n          super(parameters, {\n              isRenderable: true,\n              ignoreBorder: !!(options === null || options === void 0 ? void 0 : options.ignoreBorder),\n              createQuadrilaterals: true\n          });\n          _LinkAnnotationElement_instances.add(this);\n          this.isTooltipOnly = false;\n          this.isTooltipOnly = parameters.data.isTooltipOnly;\n      }\n      render() {\n          const { data, linkService } = this;\n          const link = document.createElement(\"a\");\n          link.setAttribute(\"data-element-id\", data.id);\n          let isBound = false;\n          if (data.url) {\n              linkService.addLinkAttributes(link, data.url, data.newWindow);\n              isBound = true;\n          }\n          else if (data.action) {\n              this._bindNamedAction(link, data.action);\n              isBound = true;\n          }\n          else if (data.attachment) {\n              __classPrivateFieldGet(this, _LinkAnnotationElement_instances, \"m\", _LinkAnnotationElement_bindAttachment).call(this, link, data.attachment, data.attachmentDest);\n              isBound = true;\n          }\n          else if (data.setOCGState) {\n              __classPrivateFieldGet(this, _LinkAnnotationElement_instances, \"m\", _LinkAnnotationElement_bindSetOCGState).call(this, link, data.setOCGState);\n              isBound = true;\n          }\n          else if (data.dest) {\n              this._bindLink(link, data.dest);\n              isBound = true;\n          }\n          else {\n              if (data.actions &&\n                  (data.actions.Action ||\n                      data.actions[\"Mouse Up\"] ||\n                      data.actions[\"Mouse Down\"]) &&\n                  this.enableScripting &&\n                  this.hasJSActions) {\n                  this._bindJSAction(link, data);\n                  isBound = true;\n              }\n              if (data.resetForm) {\n                  this._bindResetFormAction(link, data.resetForm);\n                  isBound = true;\n              }\n              else if (this.isTooltipOnly && !isBound) {\n                  this._bindLink(link, \"\");\n                  isBound = true;\n              }\n          }\n          // todo: do not render the class as the rendering is yet to be determined\n          // this.container.classList.add(\"linkAnnotation\");\n          this.container.classList.add(\"k-link-annotation\");\n          if (isBound) {\n              this.container.append(link);\n          }\n          return this.container;\n      }\n      /**\n       * Bind internal links to the link element.\n       *\n       * @private\n       * @param {Object} link\n       * @param {Object} destination\n       * @memberof LinkAnnotationElement\n       */\n      _bindLink(link, destination) {\n          link.href = this.linkService.getDestinationHash(destination);\n          link.onclick = () => {\n              if (destination) {\n                  this.linkService.goToDestination(destination);\n              }\n              return false;\n          };\n          if (destination || destination === /* isTooltipOnly = */ \"\") {\n              __classPrivateFieldGet(this, _LinkAnnotationElement_instances, \"m\", _LinkAnnotationElement_setInternalLink).call(this);\n          }\n      }\n      /**\n       * Bind named actions to the link element.\n       *\n       * @private\n       * @param {Object} link\n       * @param {Object} action\n       * @memberof LinkAnnotationElement\n       */\n      _bindNamedAction(link, action) {\n          link.href = this.linkService.getAnchorUrl(\"\");\n          link.onclick = () => {\n              this.linkService.executeNamedAction(action);\n              return false;\n          };\n          __classPrivateFieldGet(this, _LinkAnnotationElement_instances, \"m\", _LinkAnnotationElement_setInternalLink).call(this);\n      }\n      /**\n       * Bind JS actions to the link element.\n       *\n       * @private\n       * @param {Object} link\n       * @param {Object} data\n       * @memberof LinkAnnotationElement\n       */\n      _bindJSAction(link, data) {\n          link.href = this.linkService.getAnchorUrl(\"\");\n          const map = new Map([\n              [\"Action\", \"onclick\"],\n              [\"Mouse Up\", \"onmouseup\"],\n              [\"Mouse Down\", \"onmousedown\"]\n          ]);\n          for (const name of Object.keys(data.actions)) {\n              const jsName = map.get(name);\n              if (!jsName) {\n                  continue;\n              }\n              link[jsName] = () => {\n                  var _a;\n                  (_a = this.linkService.eventBus) === null || _a === void 0 ? void 0 : _a.dispatch(\"dispatcheventinsandbox\", {\n                      source: this,\n                      detail: {\n                          id: data.id,\n                          name\n                      }\n                  });\n                  return false;\n              };\n          }\n          if (!link.onclick) {\n              link.onclick = () => false;\n          }\n          __classPrivateFieldGet(this, _LinkAnnotationElement_instances, \"m\", _LinkAnnotationElement_setInternalLink).call(this);\n      }\n      _bindResetFormAction(link, resetForm) {\n          const otherClickAction = link.onclick;\n          if (!otherClickAction) {\n              link.href = this.linkService.getAnchorUrl(\"\");\n          }\n          __classPrivateFieldGet(this, _LinkAnnotationElement_instances, \"m\", _LinkAnnotationElement_setInternalLink).call(this);\n          if (!this._fieldObjects) {\n              // warn(\n              //     `_bindResetFormAction - \"resetForm\" action not supported, ` +\n              //     \"ensure that the `fieldObjects` parameter is provided.\"\n              // );\n              if (!otherClickAction) {\n                  link.onclick = () => false;\n              }\n              return;\n          }\n          link.onclick = () => {\n              var _a;\n              otherClickAction === null || otherClickAction === void 0 ? void 0 : otherClickAction();\n              const { fields: resetFormFields, refs: resetFormRefs, include } = resetForm;\n              const allFields = [];\n              if (resetFormFields.length !== 0 || resetFormRefs.length !== 0) {\n                  const fieldIds = new Set(resetFormRefs);\n                  for (const fieldName of resetFormFields) {\n                      const fields = this._fieldObjects[fieldName] || [];\n                      for (const { id } of fields) {\n                          fieldIds.add(id);\n                      }\n                  }\n                  for (const fields of Object.values(this._fieldObjects)) {\n                      for (const field of fields) {\n                          if (fieldIds.has(field.id) === include) {\n                              allFields.push(field);\n                          }\n                      }\n                  }\n              }\n              else {\n                  for (const fields of Object.values(this._fieldObjects)) {\n                      allFields.push(...fields);\n                  }\n              }\n              const storage = this.annotationStorage;\n              const allIds = [];\n              for (const field of allFields) {\n                  const { id } = field;\n                  allIds.push(id);\n                  switch (field.type) {\n                      case \"text\": {\n                          const value = field.defaultValue || \"\";\n                          storage.setValue(id, { value });\n                          break;\n                      }\n                      case \"checkbox\":\n                      case \"radiobutton\": {\n                          const value = field.defaultValue === field.exportValues;\n                          storage.setValue(id, { value });\n                          break;\n                      }\n                      case \"combobox\":\n                      case \"listbox\": {\n                          const value = field.defaultValue || \"\";\n                          storage.setValue(id, { value });\n                          break;\n                      }\n                      default:\n                          continue;\n                  }\n                  const domElement = document.querySelector(`[data-element-id=\"${id}\"]`);\n                  if (!domElement) {\n                      continue;\n                  }\n                  else if (!GetElementsByNameSet.has(domElement)) {\n                      // warn(`_bindResetFormAction - element not allowed: ${id}`);\n                      continue;\n                  }\n                  domElement.dispatchEvent(new Event(\"resetform\"));\n              }\n              if (this.enableScripting) {\n                  // Update the values in the sandbox.\n                  (_a = this.linkService.eventBus) === null || _a === void 0 ? void 0 : _a.dispatch(\"dispatcheventinsandbox\", {\n                      source: this,\n                      detail: {\n                          id: \"app\",\n                          ids: allIds,\n                          name: \"ResetForm\"\n                      }\n                  });\n              }\n              return false;\n          };\n      }\n  }\n  _LinkAnnotationElement_instances = new WeakSet(), _LinkAnnotationElement_setInternalLink = function _LinkAnnotationElement_setInternalLink() {\n      this.container.setAttribute(\"data-internal-link\", \"\");\n  }, _LinkAnnotationElement_bindAttachment = function _LinkAnnotationElement_bindAttachment(link, attachment, dest = null) {\n      link.href = this.linkService.getAnchorUrl(\"\");\n      if (attachment.description) {\n          link.title = attachment.description;\n      }\n      link.onclick = () => {\n          var _a;\n          (_a = this.downloadManager) === null || _a === void 0 ? void 0 : _a.openOrDownloadData(attachment.content, attachment.filename, dest);\n          return false;\n      };\n      __classPrivateFieldGet(this, _LinkAnnotationElement_instances, \"m\", _LinkAnnotationElement_setInternalLink).call(this);\n  }, _LinkAnnotationElement_bindSetOCGState = function _LinkAnnotationElement_bindSetOCGState(link, action) {\n      link.href = this.linkService.getAnchorUrl(\"\");\n      link.onclick = () => {\n          this.linkService.executeSetOCGState(action);\n          return false;\n      };\n      __classPrivateFieldGet(this, _LinkAnnotationElement_instances, \"m\", _LinkAnnotationElement_setInternalLink).call(this);\n  };\n  // class TextAnnotationElement extends AnnotationElement {\n  //     constructor(parameters) {\n  //         super(parameters, { isRenderable: true });\n  //     }\n  //     render() {\n  //         this.container.classList.add(\"textAnnotation\");\n  //         const image = document.createElement(\"img\");\n  //         image.src =\n  //             this.imageResourcesPath +\n  //             \"annotation-\" +\n  //             this.data.name.toLowerCase() +\n  //             \".svg\";\n  //         image.setAttribute(\"data-l10n-id\", \"pdfjs-text-annotation-type\");\n  //         image.setAttribute(\n  //             \"data-l10n-args\",\n  //             JSON.stringify({ type: this.data.name })\n  //         );\n  //         if (!this.data.popupRef && this.hasPopupData) {\n  //             this._createPopup();\n  //         }\n  //         this.container.append(image);\n  //         return this.container;\n  //     }\n  // }\n  class WidgetAnnotationElement extends AnnotationElement {\n      render() {\n          // Show only the container for unsupported field types.\n          return this.container;\n      }\n      showElementAndHideCanvas(element) {\n          var _a;\n          if (this.data.hasOwnCanvas) {\n              if (((_a = element.previousSibling) === null || _a === void 0 ? void 0 : _a.nodeName) === \"CANVAS\") {\n                  element.previousSibling.hidden = true;\n              }\n              element.hidden = false;\n          }\n      }\n      _getKeyModifier(event) {\n          return kendo_pdfjs_loader_js.FeatureTest.platform.isMac ? event.metaKey : event.ctrlKey;\n      }\n      _setEventListener(element, elementData, baseName, eventName, valueGetter) {\n          if (baseName.includes(\"mouse\")) {\n              // Mouse events\n              element.addEventListener(baseName, event => {\n                  var _a;\n                  (_a = this.linkService.eventBus) === null || _a === void 0 ? void 0 : _a.dispatch(\"dispatcheventinsandbox\", {\n                      source: this,\n                      detail: {\n                          id: this.data.id,\n                          name: eventName,\n                          value: valueGetter(event),\n                          shift: event.shiftKey,\n                          modifier: this._getKeyModifier(event)\n                      }\n                  });\n              });\n          }\n          else {\n              // Non-mouse events\n              element.addEventListener(baseName, event => {\n                  var _a;\n                  if (baseName === \"blur\") {\n                      if (!elementData.focused || !event.relatedTarget) {\n                          return;\n                      }\n                      elementData.focused = false;\n                  }\n                  else if (baseName === \"focus\") {\n                      if (elementData.focused) {\n                          return;\n                      }\n                      elementData.focused = true;\n                  }\n                  if (!valueGetter) {\n                      return;\n                  }\n                  (_a = this.linkService.eventBus) === null || _a === void 0 ? void 0 : _a.dispatch(\"dispatcheventinsandbox\", {\n                      source: this,\n                      detail: {\n                          id: this.data.id,\n                          name: eventName,\n                          value: valueGetter(event)\n                      }\n                  });\n              });\n          }\n      }\n      _setEventListeners(element, elementData, names, getter) {\n          var _a, _b, _c;\n          for (const [baseName, eventName] of names) {\n              if (eventName === \"Action\" || ((_a = this.data.actions) === null || _a === void 0 ? void 0 : _a[eventName])) {\n                  if (eventName === \"Focus\" || eventName === \"Blur\") {\n                      elementData || (elementData = { focused: false });\n                  }\n                  this._setEventListener(element, elementData, baseName, eventName, getter);\n                  if (eventName === \"Focus\" && !((_b = this.data.actions) === null || _b === void 0 ? void 0 : _b.Blur)) {\n                      // Ensure that elementData will have the correct value.\n                      this._setEventListener(element, elementData, \"blur\", \"Blur\", null);\n                  }\n                  else if (eventName === \"Blur\" && !((_c = this.data.actions) === null || _c === void 0 ? void 0 : _c.Focus)) {\n                      this._setEventListener(element, elementData, \"focus\", \"Focus\", null);\n                  }\n              }\n          }\n      }\n      _setBackgroundColor(element) {\n          const color = this.data.backgroundColor || null;\n          element.style.backgroundColor =\n              color === null\n                  ? \"transparent\"\n                  : kendo_pdfjs_loader_js.Util.makeHexColor(color[0], color[1], color[2]);\n      }\n      /**\n       * Apply text styles to the text in the element.\n       *\n       * @private\n       * @param {HTMLDivElement} element\n       * @memberof TextWidgetAnnotationElement\n       */\n      _setTextStyle(element) {\n          const TEXT_ALIGNMENT = [\"left\", \"center\", \"right\"];\n          const { fontColor } = this.data.defaultAppearanceData;\n          const fontSize = this.data.defaultAppearanceData.fontSize || DEFAULT_FONT_SIZE;\n          const style = element.style;\n          // TODO: If the font-size is zero, calculate it based on the height and\n          //       width of the element.\n          // Not setting `style.fontSize` will use the default font-size for now.\n          // We don't use the font, as specified in the PDF document, for the <input>\n          // element. Hence using the original `fontSize` could look bad, which is why\n          // it's instead based on the field height.\n          // If the height is \"big\" then it could lead to a too big font size\n          // so in this case use the one we've in the pdf (hence the min).\n          let computedFontSize;\n          const BORDER_SIZE = 2;\n          const roundToOneDecimal = x => Math.round(10 * x) / 10;\n          if (this.data.multiLine) {\n              const height = Math.abs(this.data.rect[3] - this.data.rect[1] - BORDER_SIZE);\n              const numberOfLines = Math.round(height / (LINE_FACTOR * fontSize)) || 1;\n              const lineHeight = height / numberOfLines;\n              computedFontSize = Math.min(fontSize, roundToOneDecimal(lineHeight / LINE_FACTOR));\n          }\n          else {\n              const height = Math.abs(this.data.rect[3] - this.data.rect[1] - BORDER_SIZE);\n              computedFontSize = Math.min(fontSize, roundToOneDecimal(height / LINE_FACTOR));\n          }\n          style.fontSize = `calc(${computedFontSize}px * var(--scale-factor))`;\n          style.color = kendo_pdfjs_loader_js.Util.makeHexColor(fontColor[0], fontColor[1], fontColor[2]);\n          if (this.data.textAlignment !== null) {\n              style.textAlign = TEXT_ALIGNMENT[this.data.textAlignment];\n          }\n      }\n      _setRequired(element, isRequired) {\n          if (isRequired) {\n              element.setAttribute(\"required\", true);\n          }\n          else {\n              element.removeAttribute(\"required\");\n          }\n          element.setAttribute(\"aria-required\", isRequired);\n      }\n  }\n  class TextWidgetAnnotationElement extends WidgetAnnotationElement {\n      constructor(parameters) {\n          const isRenderable = parameters.renderForms ||\n              parameters.data.hasOwnCanvas ||\n              (!parameters.data.hasAppearance && !!parameters.data.fieldValue);\n          super(parameters, { isRenderable });\n      }\n      setPropertyOnSiblings(base, key, value, keyInStorage) {\n          const storage = this.annotationStorage;\n          for (const element of this._getElementsByName(base.name, \n          /* skipId = */ base.id)) {\n              if (element.domElement) {\n                  element.domElement[key] = value;\n              }\n              storage.setValue(element.id, { [keyInStorage]: value });\n          }\n      }\n      render() {\n          var _a, _b;\n          const storage = this.annotationStorage;\n          const id = this.data.id;\n          // this.container.classList.add(\"textWidgetAnnotation\");\n          this.container.classList.add(\"k-text-widget-annotation\");\n          let element = null;\n          if (this.renderForms) {\n              // NOTE: We cannot set the values using `element.value` below, since it\n              //       prevents the AnnotationLayer rasterizer in `test/driver.js`\n              //       from parsing the elements correctly for the reference tests.\n              const storedData = storage.getValue(id, {\n                  value: this.data.fieldValue\n              });\n              let textContent = storedData.value || \"\";\n              const maxLen = storage.getValue(id, {\n                  charLimit: this.data.maxLen\n              }).charLimit;\n              if (maxLen && textContent.length > maxLen) {\n                  textContent = textContent.slice(0, maxLen);\n              }\n              let fieldFormattedValues = storedData.formattedValue || ((_a = this.data.textContent) === null || _a === void 0 ? void 0 : _a.join(\"\\n\")) || null;\n              if (fieldFormattedValues && this.data.comb) {\n                  fieldFormattedValues = fieldFormattedValues.replaceAll(/\\s+/g, \"\");\n              }\n              const elementData = {\n                  userValue: textContent,\n                  formattedValue: fieldFormattedValues,\n                  lastCommittedValue: null,\n                  commitKey: 1,\n                  focused: false\n              };\n              if (this.data.multiLine) {\n                  element = document.createElement(\"textarea\");\n                  element.textContent = fieldFormattedValues !== null && fieldFormattedValues !== void 0 ? fieldFormattedValues : textContent;\n                  if (this.data.doNotScroll) {\n                      element.style.overflowY = \"hidden\";\n                  }\n              }\n              else {\n                  element = document.createElement(\"input\");\n                  element.type = \"text\";\n                  element.setAttribute(\"value\", fieldFormattedValues !== null && fieldFormattedValues !== void 0 ? fieldFormattedValues : textContent);\n                  if (this.data.doNotScroll) {\n                      element.style.overflowX = \"hidden\";\n                  }\n              }\n              if (this.data.hasOwnCanvas) {\n                  element.hidden = true;\n              }\n              GetElementsByNameSet.add(element);\n              element.setAttribute(\"data-element-id\", id);\n              element.disabled = this.data.readOnly;\n              element.name = this.data.fieldName;\n              element.tabIndex = DEFAULT_TAB_INDEX;\n              this._setRequired(element, this.data.required);\n              if (maxLen) {\n                  element.maxLength = maxLen;\n              }\n              element.addEventListener(\"input\", event => {\n                  storage.setValue(id, { value: event.target.value });\n                  this.setPropertyOnSiblings(element, \"value\", event.target.value, \"value\");\n                  elementData.formattedValue = null;\n              });\n              element.addEventListener(\"resetform\", () => {\n                  var _a;\n                  const defaultValue = (_a = this.data.defaultFieldValue) !== null && _a !== void 0 ? _a : \"\";\n                  element.value = elementData.userValue = defaultValue;\n                  elementData.formattedValue = null;\n              });\n              let blurListener = event => {\n                  const { formattedValue } = elementData;\n                  if (formattedValue !== null && formattedValue !== undefined) {\n                      event.target.value = formattedValue;\n                  }\n                  // Reset the cursor position to the start of the field (issue 12359).\n                  event.target.scrollLeft = 0;\n              };\n              if (this.enableScripting && this.hasJSActions) {\n                  element.addEventListener(\"focus\", event => {\n                      var _a;\n                      if (elementData.focused) {\n                          return;\n                      }\n                      const { target } = event;\n                      if (elementData.userValue) {\n                          target.value = elementData.userValue;\n                      }\n                      elementData.lastCommittedValue = target.value;\n                      elementData.commitKey = 1;\n                      if (!((_a = this.data.actions) === null || _a === void 0 ? void 0 : _a.Focus)) {\n                          elementData.focused = true;\n                      }\n                  });\n                  element.addEventListener(\"updatefromsandbox\", jsEvent => {\n                      this.showElementAndHideCanvas(jsEvent.target);\n                      const actions = {\n                          value(event) {\n                              var _a;\n                              elementData.userValue = (_a = event.detail.value) !== null && _a !== void 0 ? _a : \"\";\n                              storage.setValue(id, { value: elementData.userValue.toString() });\n                              event.target.value = elementData.userValue;\n                          },\n                          formattedValue(event) {\n                              const { formattedValue } = event.detail;\n                              elementData.formattedValue = formattedValue;\n                              if (formattedValue !== null &&\n                                  formattedValue !== undefined &&\n                                  event.target !== document.activeElement) {\n                                  // Input hasn't the focus so display formatted string\n                                  event.target.value = formattedValue;\n                              }\n                              storage.setValue(id, {\n                                  formattedValue\n                              });\n                          },\n                          selRange(event) {\n                              event.target.setSelectionRange(...event.detail.selRange);\n                          },\n                          charLimit: event => {\n                              var _a;\n                              const { charLimit } = event.detail;\n                              const { target } = event;\n                              if (charLimit === 0) {\n                                  target.removeAttribute(\"maxLength\");\n                                  return;\n                              }\n                              target.setAttribute(\"maxLength\", charLimit);\n                              let value = elementData.userValue;\n                              if (!value || value.length <= charLimit) {\n                                  return;\n                              }\n                              value = value.slice(0, charLimit);\n                              target.value = elementData.userValue = value;\n                              storage.setValue(id, { value });\n                              (_a = this.linkService.eventBus) === null || _a === void 0 ? void 0 : _a.dispatch(\"dispatcheventinsandbox\", {\n                                  source: this,\n                                  detail: {\n                                      id,\n                                      name: \"Keystroke\",\n                                      value,\n                                      willCommit: true,\n                                      commitKey: 1,\n                                      selStart: target.selectionStart,\n                                      selEnd: target.selectionEnd\n                                  }\n                              });\n                          }\n                      };\n                      this._dispatchEventFromSandbox(actions, jsEvent);\n                  });\n                  // Even if the field hasn't any actions\n                  // leaving it can still trigger some actions with Calculate\n                  element.addEventListener(\"keydown\", event => {\n                      var _a;\n                      elementData.commitKey = 1;\n                      // If the key is one of Escape, Enter then the data are committed.\n                      // If we've a Tab then data will be committed on blur.\n                      let commitKey = -1;\n                      if (event.key === \"Escape\") {\n                          commitKey = 0;\n                      }\n                      else if (event.key === \"Enter\" && !this.data.multiLine) {\n                          // When we've a multiline field, \"Enter\" key is a key as the other\n                          // hence we don't commit the data (Acrobat behaves the same way)\n                          // (see issue #15627).\n                          commitKey = 2;\n                      }\n                      else if (event.key === \"Tab\") {\n                          elementData.commitKey = 3;\n                      }\n                      if (commitKey === -1) {\n                          return;\n                      }\n                      const { value } = event.target;\n                      if (elementData.lastCommittedValue === value) {\n                          return;\n                      }\n                      elementData.lastCommittedValue = value;\n                      // Save the entered value\n                      elementData.userValue = value;\n                      (_a = this.linkService.eventBus) === null || _a === void 0 ? void 0 : _a.dispatch(\"dispatcheventinsandbox\", {\n                          source: this,\n                          detail: {\n                              id,\n                              name: \"Keystroke\",\n                              value,\n                              willCommit: true,\n                              commitKey,\n                              selStart: event.target.selectionStart,\n                              selEnd: event.target.selectionEnd\n                          }\n                      });\n                  });\n                  const _blurListener = blurListener;\n                  blurListener = null;\n                  element.addEventListener(\"blur\", event => {\n                      var _a, _b;\n                      if (!elementData.focused || !event.relatedTarget) {\n                          return;\n                      }\n                      if (!((_a = this.data.actions) === null || _a === void 0 ? void 0 : _a.Blur)) {\n                          elementData.focused = false;\n                      }\n                      const { value } = event.target;\n                      elementData.userValue = value;\n                      if (elementData.lastCommittedValue !== value) {\n                          (_b = this.linkService.eventBus) === null || _b === void 0 ? void 0 : _b.dispatch(\"dispatcheventinsandbox\", {\n                              source: this,\n                              detail: {\n                                  id,\n                                  name: \"Keystroke\",\n                                  value,\n                                  willCommit: true,\n                                  commitKey: elementData.commitKey,\n                                  selStart: event.target.selectionStart,\n                                  selEnd: event.target.selectionEnd\n                              }\n                          });\n                      }\n                      _blurListener(event);\n                  });\n                  if ((_b = this.data.actions) === null || _b === void 0 ? void 0 : _b.Keystroke) {\n                      element.addEventListener(\"beforeinput\", event => {\n                          var _a;\n                          elementData.lastCommittedValue = null;\n                          const { data, target } = event;\n                          const { value, selectionStart, selectionEnd } = target;\n                          let selStart = selectionStart, selEnd = selectionEnd;\n                          switch (event.inputType) {\n                              // https://rawgit.com/w3c/input-events/v1/index.html#interface-InputEvent-Attributes\n                              case \"deleteWordBackward\": {\n                                  const match = value\n                                      .substring(0, selectionStart)\n                                      .match(/\\w*[^\\w]*$/);\n                                  if (match) {\n                                      selStart -= match[0].length;\n                                  }\n                                  break;\n                              }\n                              case \"deleteWordForward\": {\n                                  const match = value\n                                      .substring(selectionStart)\n                                      .match(/^[^\\w]*\\w*/);\n                                  if (match) {\n                                      selEnd += match[0].length;\n                                  }\n                                  break;\n                              }\n                              case \"deleteContentBackward\":\n                                  if (selectionStart === selectionEnd) {\n                                      selStart -= 1;\n                                  }\n                                  break;\n                              case \"deleteContentForward\":\n                                  if (selectionStart === selectionEnd) {\n                                      selEnd += 1;\n                                  }\n                                  break;\n                              default: break;\n                          }\n                          // We handle the event ourselves.\n                          event.preventDefault();\n                          (_a = this.linkService.eventBus) === null || _a === void 0 ? void 0 : _a.dispatch(\"dispatcheventinsandbox\", {\n                              source: this,\n                              detail: {\n                                  id,\n                                  name: \"Keystroke\",\n                                  value,\n                                  change: data || \"\",\n                                  willCommit: false,\n                                  selStart,\n                                  selEnd\n                              }\n                          });\n                      });\n                  }\n                  this._setEventListeners(element, elementData, [\n                      [\"focus\", \"Focus\"],\n                      [\"blur\", \"Blur\"],\n                      [\"mousedown\", \"Mouse Down\"],\n                      [\"mouseenter\", \"Mouse Enter\"],\n                      [\"mouseleave\", \"Mouse Exit\"],\n                      [\"mouseup\", \"Mouse Up\"]\n                  ], event => event.target.value);\n              }\n              if (blurListener) {\n                  element.addEventListener(\"blur\", blurListener);\n              }\n              if (this.data.comb) {\n                  const fieldWidth = this.data.rect[2] - this.data.rect[0];\n                  const combWidth = fieldWidth / maxLen;\n                  element.classList.add(\"comb\");\n                  element.style.letterSpacing = `calc(${combWidth}px * var(--scale-factor) - 1ch)`;\n              }\n          }\n          else {\n              element = document.createElement(\"div\");\n              element.textContent = this.data.fieldValue;\n              element.style.verticalAlign = \"middle\";\n              element.style.display = \"table-cell\";\n              if (this.data.hasOwnCanvas) {\n                  element.hidden = true;\n              }\n          }\n          this._setTextStyle(element);\n          this._setBackgroundColor(element);\n          this._setDefaultPropertiesFromJS(element);\n          this.container.append(element);\n          return this.container;\n      }\n  }\n  // class SignatureWidgetAnnotationElement extends WidgetAnnotationElement {\n  //     constructor(parameters) {\n  //         super(parameters, { isRenderable: !!parameters.data.hasOwnCanvas });\n  //     }\n  // }\n  class CheckboxWidgetAnnotationElement extends WidgetAnnotationElement {\n      constructor(parameters) {\n          super(parameters, { isRenderable: parameters.renderForms });\n      }\n      render() {\n          const storage = this.annotationStorage;\n          const data = this.data;\n          const id = data.id;\n          let value = storage.getValue(id, {\n              value: data.exportValue === data.fieldValue\n          }).value;\n          if (typeof value === \"string\") {\n              // The value has been changed through js and set in annotationStorage.\n              value = value !== \"Off\";\n              storage.setValue(id, { value });\n          }\n          // this.container.classList.add(\"buttonWidgetAnnotation\", \"checkBox\");\n          this.container.classList.add(\"k-button-widget-annotation\", \"k-checkbox-widget-annotation\");\n          const element = document.createElement(\"input\");\n          GetElementsByNameSet.add(element);\n          element.setAttribute(\"data-element-id\", id);\n          element.disabled = data.readOnly;\n          this._setRequired(element, this.data.required);\n          element.type = \"checkbox\";\n          element.name = data.fieldName;\n          if (value) {\n              element.setAttribute(\"checked\", (true).toString());\n          }\n          element.setAttribute(\"exportValue\", data.exportValue);\n          element.tabIndex = DEFAULT_TAB_INDEX;\n          element.addEventListener(\"change\", event => {\n              const { name, checked } = event.target;\n              for (const checkbox of this._getElementsByName(name, /* skipId = */ id)) {\n                  const curChecked = checked && checkbox.exportValue === data.exportValue;\n                  if (checkbox.domElement) {\n                      checkbox.domElement.checked = curChecked;\n                  }\n                  storage.setValue(checkbox.id, { value: curChecked });\n              }\n              storage.setValue(id, { value: checked });\n          });\n          element.addEventListener(\"resetform\", event => {\n              const defaultValue = data.defaultFieldValue || \"Off\";\n              // @ts-expect-error(TS)\n              event.target.checked = defaultValue === data.exportValue;\n          });\n          if (this.enableScripting && this.hasJSActions) {\n              element.addEventListener(\"updatefromsandbox\", jsEvent => {\n                  const actions = {\n                      value(event) {\n                          event.target.checked = event.detail.value !== \"Off\";\n                          storage.setValue(id, { value: event.target.checked });\n                      }\n                  };\n                  this._dispatchEventFromSandbox(actions, jsEvent);\n              });\n              this._setEventListeners(element, null, [\n                  [\"change\", \"Validate\"],\n                  [\"change\", \"Action\"],\n                  [\"focus\", \"Focus\"],\n                  [\"blur\", \"Blur\"],\n                  [\"mousedown\", \"Mouse Down\"],\n                  [\"mouseenter\", \"Mouse Enter\"],\n                  [\"mouseleave\", \"Mouse Exit\"],\n                  [\"mouseup\", \"Mouse Up\"]\n              ], event => event.target.checked);\n          }\n          if (this.enableScripting && this.hasJSActions) {\n              element.addEventListener(\"updatefromsandbox\", jsEvent => {\n                  const actions = {\n                      value(event) {\n                          event.target.checked = event.detail.value !== \"Off\";\n                          storage.setValue(id, { value: event.target.checked });\n                      }\n                  };\n                  this._dispatchEventFromSandbox(actions, jsEvent);\n              });\n              this._setEventListeners(element, null, [\n                  [\"change\", \"Validate\"],\n                  [\"change\", \"Action\"],\n                  [\"focus\", \"Focus\"],\n                  [\"blur\", \"Blur\"],\n                  [\"mousedown\", \"Mouse Down\"],\n                  [\"mouseenter\", \"Mouse Enter\"],\n                  [\"mouseleave\", \"Mouse Exit\"],\n                  [\"mouseup\", \"Mouse Up\"]\n              ], event => event.target.checked);\n          }\n          this._setBackgroundColor(element);\n          this._setDefaultPropertiesFromJS(element);\n          this.container.append(element);\n          return this.container;\n      }\n  }\n  class RadioButtonWidgetAnnotationElement extends WidgetAnnotationElement {\n      constructor(parameters) {\n          super(parameters, { isRenderable: parameters.renderForms });\n      }\n      render() {\n          //this.container.classList.add(\"buttonWidgetAnnotation\", \"radioButton\");\n          this.container.classList.add(\"k-button-widget-annotation\", \"k-radio-button-widget-annotation\");\n          const storage = this.annotationStorage;\n          const data = this.data;\n          const id = data.id;\n          let value = storage.getValue(id, {\n              value: data.fieldValue === data.buttonValue\n          }).value;\n          if (typeof value === \"string\") {\n              // The value has been changed through js and set in annotationStorage.\n              value = value !== data.buttonValue;\n              storage.setValue(id, { value });\n          }\n          if (value) {\n              // It's possible that multiple radio buttons are checked.\n              // So if this one is checked we just reset the other ones.\n              // (see bug 1864136). Then when the other ones will be rendered they will\n              // unchecked (because of their value in the storage).\n              // Consequently, the first checked radio button will be the only checked\n              // one.\n              for (const radio of this._getElementsByName(data.fieldName, \n              /* skipId = */ id)) {\n                  storage.setValue(radio.id, { value: false });\n              }\n          }\n          const element = document.createElement(\"input\");\n          GetElementsByNameSet.add(element);\n          element.setAttribute(\"data-element-id\", id);\n          element.disabled = data.readOnly;\n          this._setRequired(element, this.data.required);\n          element.type = \"radio\";\n          element.name = data.fieldName;\n          if (value) {\n              element.setAttribute(\"checked\", (true).toString());\n          }\n          element.tabIndex = DEFAULT_TAB_INDEX;\n          element.addEventListener(\"change\", event => {\n              const { name, checked } = event.target;\n              for (const radio of this._getElementsByName(name, /* skipId = */ id)) {\n                  storage.setValue(radio.id, { value: false });\n              }\n              storage.setValue(id, { value: checked });\n          });\n          element.addEventListener(\"resetform\", event => {\n              const defaultValue = data.defaultFieldValue;\n              // @ts-expect-error(TS)\n              event.target.checked =\n                  defaultValue !== null &&\n                      defaultValue !== undefined &&\n                      defaultValue === data.buttonValue;\n          });\n          if (this.enableScripting && this.hasJSActions) {\n              const pdfButtonValue = data.buttonValue;\n              element.addEventListener(\"updatefromsandbox\", jsEvent => {\n                  const actions = {\n                      value: event => {\n                          const checked = pdfButtonValue === event.detail.value;\n                          for (const radio of this._getElementsByName(event.target.name)) {\n                              const curChecked = checked && radio.id === id;\n                              if (radio.domElement) {\n                                  radio.domElement.checked = curChecked;\n                              }\n                              storage.setValue(radio.id, { value: curChecked });\n                          }\n                      }\n                  };\n                  this._dispatchEventFromSandbox(actions, jsEvent);\n              });\n              this._setEventListeners(element, null, [\n                  [\"change\", \"Validate\"],\n                  [\"change\", \"Action\"],\n                  [\"focus\", \"Focus\"],\n                  [\"blur\", \"Blur\"],\n                  [\"mousedown\", \"Mouse Down\"],\n                  [\"mouseenter\", \"Mouse Enter\"],\n                  [\"mouseleave\", \"Mouse Exit\"],\n                  [\"mouseup\", \"Mouse Up\"]\n              ], event => event.target.checked);\n          }\n          this._setBackgroundColor(element);\n          this._setDefaultPropertiesFromJS(element);\n          this.container.append(element);\n          return this.container;\n      }\n  }\n  class PushButtonWidgetAnnotationElement extends LinkAnnotationElement {\n      constructor(parameters) {\n          super(parameters, { ignoreBorder: parameters.data.hasAppearance });\n      }\n      render() {\n          // The rendering and functionality of a push button widget annotation is\n          // equal to that of a link annotation, but may have more functionality, such\n          // as performing actions on form fields (resetting, submitting, et cetera).\n          const container = super.render();\n          //container.classList.add(\"buttonWidgetAnnotation\", \"pushButton\");\n          this.container.classList.add(\"k-button-widget-annotation\", \"k-push-button-widget-annotation\");\n          const linkElement = container.lastChild;\n          if (this.enableScripting && this.hasJSActions && linkElement) {\n              this._setDefaultPropertiesFromJS(linkElement);\n              linkElement.addEventListener(\"updatefromsandbox\", jsEvent => {\n                  this._dispatchEventFromSandbox({}, jsEvent);\n              });\n          }\n          return container;\n      }\n  }\n  class ChoiceWidgetAnnotationElement extends WidgetAnnotationElement {\n      constructor(parameters) {\n          super(parameters, { isRenderable: parameters.renderForms });\n      }\n      render() {\n          this.container.classList.add(\"choiceWidgetAnnotation\");\n          const storage = this.annotationStorage;\n          const id = this.data.id;\n          const storedData = storage.getValue(id, {\n              value: this.data.fieldValue\n          });\n          const selectElement = document.createElement(\"select\");\n          GetElementsByNameSet.add(selectElement);\n          selectElement.setAttribute(\"data-element-id\", id);\n          selectElement.disabled = this.data.readOnly;\n          this._setRequired(selectElement, this.data.required);\n          selectElement.name = this.data.fieldName;\n          selectElement.tabIndex = DEFAULT_TAB_INDEX;\n          let addAnEmptyEntry = this.data.combo && this.data.options.length > 0;\n          if (!this.data.combo) {\n              // List boxes have a size and (optionally) multiple selection.\n              selectElement.size = this.data.options.length;\n              if (this.data.multiSelect) {\n                  selectElement.multiple = true;\n              }\n          }\n          selectElement.addEventListener(\"resetform\", () => {\n              const defaultValue = this.data.defaultFieldValue;\n              for (const option of selectElement.options) {\n                  option.selected = option.value === defaultValue;\n              }\n          });\n          // Insert the options into the choice field.\n          for (const option of this.data.options) {\n              const optionElement = document.createElement(\"option\");\n              optionElement.textContent = option.displayValue;\n              optionElement.value = option.exportValue;\n              if (storedData.value.includes(option.exportValue)) {\n                  optionElement.setAttribute(\"selected\", (true).toString());\n                  addAnEmptyEntry = false;\n              }\n              selectElement.append(optionElement);\n          }\n          let removeEmptyEntry = null;\n          if (addAnEmptyEntry) {\n              const noneOptionElement = document.createElement(\"option\");\n              noneOptionElement.value = \" \";\n              noneOptionElement.setAttribute(\"hidden\", (true).toString());\n              noneOptionElement.setAttribute(\"selected\", (true).toString());\n              selectElement.prepend(noneOptionElement);\n              removeEmptyEntry = () => {\n                  noneOptionElement.remove();\n                  selectElement.removeEventListener(\"input\", removeEmptyEntry);\n                  removeEmptyEntry = null;\n              };\n              selectElement.addEventListener(\"input\", removeEmptyEntry);\n          }\n          const getValue = isExport => {\n              const name = isExport ? \"value\" : \"textContent\";\n              const { options, multiple } = selectElement;\n              if (!multiple) {\n                  return options.selectedIndex === -1\n                      ? null\n                      : options[options.selectedIndex][name];\n              }\n              return Array.prototype.filter\n                  .call(options, option => option.selected)\n                  .map(option => option[name]);\n          };\n          let selectedValues = getValue(/* isExport */ false);\n          const getItems = event => {\n              const options = event.target.options;\n              return Array.prototype.map.call(options, option => ({\n                  displayValue: option.textContent,\n                  exportValue: option.value\n              }));\n          };\n          if (this.enableScripting && this.hasJSActions) {\n              selectElement.addEventListener(\"updatefromsandbox\", jsEvent => {\n                  const actions = {\n                      value(event) {\n                          removeEmptyEntry === null || removeEmptyEntry === void 0 ? void 0 : removeEmptyEntry();\n                          const value = event.detail.value;\n                          const values = new Set(Array.isArray(value) ? value : [value]);\n                          for (const option of selectElement.options) {\n                              option.selected = values.has(option.value);\n                          }\n                          storage.setValue(id, {\n                              value: getValue(/* isExport */ true)\n                          });\n                          selectedValues = getValue(/* isExport */ false);\n                      },\n                      multipleSelection() {\n                          selectElement.multiple = true;\n                      },\n                      remove(event) {\n                          const options = selectElement.options;\n                          const index = event.detail.remove;\n                          options[index].selected = false;\n                          selectElement.remove(index);\n                          if (options.length > 0) {\n                              const i = Array.prototype.findIndex.call(options, option => option.selected);\n                              if (i === -1) {\n                                  options[0].selected = true;\n                              }\n                          }\n                          storage.setValue(id, {\n                              value: getValue(/* isExport */ true),\n                              items: getItems(event)\n                          });\n                          selectedValues = getValue(/* isExport */ false);\n                      },\n                      clear() {\n                          while (selectElement.length !== 0) {\n                              selectElement.remove(0);\n                          }\n                          storage.setValue(id, { value: null, items: [] });\n                          selectedValues = getValue(/* isExport */ false);\n                      },\n                      insert(event) {\n                          const { index, displayValue, exportValue } = event.detail.insert;\n                          const selectChild = selectElement.children[index];\n                          const optionElement = document.createElement(\"option\");\n                          optionElement.textContent = displayValue;\n                          optionElement.value = exportValue;\n                          if (selectChild) {\n                              selectChild.before(optionElement);\n                          }\n                          else {\n                              selectElement.append(optionElement);\n                          }\n                          storage.setValue(id, {\n                              value: getValue(/* isExport */ true),\n                              items: getItems(event)\n                          });\n                          selectedValues = getValue(/* isExport */ false);\n                      },\n                      items(event) {\n                          const { items } = event.detail;\n                          while (selectElement.length !== 0) {\n                              selectElement.remove(0);\n                          }\n                          for (const item of items) {\n                              const { displayValue, exportValue } = item;\n                              const optionElement = document.createElement(\"option\");\n                              optionElement.textContent = displayValue;\n                              optionElement.value = exportValue;\n                              selectElement.append(optionElement);\n                          }\n                          if (selectElement.options.length > 0) {\n                              selectElement.options[0].selected = true;\n                          }\n                          storage.setValue(id, {\n                              value: getValue(/* isExport */ true),\n                              items: getItems(event)\n                          });\n                          selectedValues = getValue(/* isExport */ false);\n                      },\n                      indices(event) {\n                          const indices = new Set(event.detail.indices);\n                          for (const option of event.target.options) {\n                              option.selected = indices.has(option.index);\n                          }\n                          storage.setValue(id, {\n                              value: getValue(/* isExport */ true)\n                          });\n                          selectedValues = getValue(/* isExport */ false);\n                      },\n                      editable(event) {\n                          event.target.disabled = !event.detail.editable;\n                      }\n                  };\n                  this._dispatchEventFromSandbox(actions, jsEvent);\n              });\n              selectElement.addEventListener(\"input\", event => {\n                  var _a;\n                  const exportValue = getValue(/* isExport */ true);\n                  const change = getValue(/* isExport */ false);\n                  storage.setValue(id, { value: exportValue });\n                  event.preventDefault();\n                  (_a = this.linkService.eventBus) === null || _a === void 0 ? void 0 : _a.dispatch(\"dispatcheventinsandbox\", {\n                      source: this,\n                      detail: {\n                          id,\n                          name: \"Keystroke\",\n                          value: selectedValues,\n                          change,\n                          changeEx: exportValue,\n                          willCommit: false,\n                          commitKey: 1,\n                          keyDown: false\n                      }\n                  });\n              });\n              this._setEventListeners(selectElement, null, [\n                  [\"focus\", \"Focus\"],\n                  [\"blur\", \"Blur\"],\n                  [\"mousedown\", \"Mouse Down\"],\n                  [\"mouseenter\", \"Mouse Enter\"],\n                  [\"mouseleave\", \"Mouse Exit\"],\n                  [\"mouseup\", \"Mouse Up\"],\n                  [\"input\", \"Action\"],\n                  [\"input\", \"Validate\"]\n              ], event => event.target.value);\n          }\n          else {\n              selectElement.addEventListener(\"input\", function () {\n                  storage.setValue(id, { value: getValue(/* isExport */ true) });\n              });\n          }\n          if (this.data.combo) {\n              this._setTextStyle(selectElement);\n          }\n          else {\n              // Just use the default font size...\n              // it's a bit hard to guess what is a good size.\n          }\n          this._setBackgroundColor(selectElement);\n          this._setDefaultPropertiesFromJS(selectElement);\n          this.container.append(selectElement);\n          return this.container;\n      }\n  }\n  class PopupAnnotationElement extends AnnotationElement {\n      // todo: props\n      constructor(parameters) {\n          const { data, elements } = parameters;\n          super(parameters, { isRenderable: AnnotationElement._hasPopupData(data) });\n          // todo: props\n          this.elements = [];\n          this.elements = elements;\n          this.popup = null;\n      }\n      render() {\n          this.container.classList.add(\"popupAnnotation\");\n          const popup = (this.popup = new PopupElement({\n              container: this.container,\n              color: this.data.color,\n              titleObj: this.data.titleObj,\n              modificationDate: this.data.modificationDate,\n              contentsObj: this.data.contentsObj,\n              richText: this.data.richText,\n              rect: this.data.rect,\n              parentRect: this.data.parentRect || null,\n              parent: this.parent,\n              elements: this.elements,\n              open: this.data.open\n          }));\n          const elementIds = [];\n          for (const element of this.elements) {\n              element.popup = popup;\n              elementIds.push(element.data.id);\n              element.addHighlightArea();\n          }\n          this.container.setAttribute(\"aria-controls\", elementIds.map(id => `${AnnotationPrefix}${id}`).join(\",\"));\n          return this.container;\n      }\n  }\n  class PopupElement {\n      constructor({ container, color, elements, titleObj, modificationDate, contentsObj, richText, parent, rect, parentRect, open }) {\n          var _a;\n          _PopupElement_instances.add(this);\n          // todo: props\n          this.trigger = null;\n          // todo: props\n          _PopupElement_boundKeyDown.set(this, __classPrivateFieldGet(this, _PopupElement_instances, \"m\", _PopupElement_keyDown).bind(this));\n          _PopupElement_boundHide.set(this, __classPrivateFieldGet(this, _PopupElement_instances, \"m\", _PopupElement_hide).bind(this));\n          _PopupElement_boundShow.set(this, __classPrivateFieldGet(this, _PopupElement_instances, \"m\", _PopupElement_show).bind(this));\n          _PopupElement_boundToggle.set(this, __classPrivateFieldGet(this, _PopupElement_instances, \"m\", _PopupElement_toggle).bind(this));\n          _PopupElement_color.set(this, null);\n          _PopupElement_container.set(this, null);\n          _PopupElement_contentsObj.set(this, null);\n          _PopupElement_dateObj.set(this, null);\n          _PopupElement_elements.set(this, null);\n          _PopupElement_parent.set(this, null);\n          _PopupElement_parentRect.set(this, null);\n          _PopupElement_pinned.set(this, false);\n          _PopupElement_popup.set(this, null);\n          _PopupElement_position.set(this, null);\n          _PopupElement_rect.set(this, null);\n          _PopupElement_richText.set(this, null);\n          _PopupElement_titleObj.set(this, null);\n          _PopupElement_updates.set(this, null);\n          _PopupElement_wasVisible.set(this, false);\n          __classPrivateFieldSet(this, _PopupElement_container, container, \"f\");\n          __classPrivateFieldSet(this, _PopupElement_titleObj, titleObj, \"f\");\n          __classPrivateFieldSet(this, _PopupElement_contentsObj, contentsObj, \"f\");\n          __classPrivateFieldSet(this, _PopupElement_richText, richText, \"f\");\n          __classPrivateFieldSet(this, _PopupElement_parent, parent, \"f\");\n          __classPrivateFieldSet(this, _PopupElement_color, color, \"f\");\n          __classPrivateFieldSet(this, _PopupElement_rect, rect, \"f\");\n          __classPrivateFieldSet(this, _PopupElement_parentRect, parentRect, \"f\");\n          __classPrivateFieldSet(this, _PopupElement_elements, elements, \"f\");\n          // The modification date is shown in the popup instead of the creation\n          // date if it is available and can be parsed correctly, which is\n          // consistent with other viewers such as Adobe Acrobat.\n          __classPrivateFieldSet(this, _PopupElement_dateObj, kendo_pdfjs_loader_js.PDFDateString.toDateObject(modificationDate), \"f\");\n          this.trigger = elements.flatMap(e => e.getElementsToTriggerPopup());\n          // Attach the event listeners to the trigger element.\n          for (const element of this.trigger) {\n              element.addEventListener(\"click\", __classPrivateFieldGet(this, _PopupElement_boundToggle, \"f\"));\n              element.addEventListener(\"mouseenter\", __classPrivateFieldGet(this, _PopupElement_boundShow, \"f\"));\n              element.addEventListener(\"mouseleave\", __classPrivateFieldGet(this, _PopupElement_boundHide, \"f\"));\n              element.classList.add(\"popupTriggerArea\");\n          }\n          // Attach the event listener to toggle the popup with the keyboard.\n          for (const element of elements) {\n              (_a = element.container) === null || _a === void 0 ? void 0 : _a.addEventListener(\"keydown\", __classPrivateFieldGet(this, _PopupElement_boundKeyDown, \"f\"));\n          }\n          __classPrivateFieldGet(this, _PopupElement_container, \"f\").hidden = true;\n          if (open) {\n              __classPrivateFieldGet(this, _PopupElement_instances, \"m\", _PopupElement_toggle).call(this);\n          }\n          // if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"TESTING\")) {\n          // Since the popup is lazily created, we need to ensure that it'll be\n          // created and displayed during reference tests.\n          __classPrivateFieldGet(this, _PopupElement_parent, \"f\").popupShow.push(() => __awaiter(this, void 0, void 0, function* () {\n              if (__classPrivateFieldGet(this, _PopupElement_container, \"f\").hidden) {\n                  __classPrivateFieldGet(this, _PopupElement_instances, \"m\", _PopupElement_show).call(this);\n              }\n          }));\n          // }\n      }\n      render() {\n          if (__classPrivateFieldGet(this, _PopupElement_popup, \"f\")) {\n              return;\n          }\n          const popup = (__classPrivateFieldSet(this, _PopupElement_popup, document.createElement(\"div\"), \"f\"));\n          popup.className = \"popup\";\n          if (__classPrivateFieldGet(this, _PopupElement_color, \"f\")) {\n              const baseColor = (popup.style.outlineColor = kendo_pdfjs_loader_js.Util.makeHexColor(\n              // @ts-expect-error TS(2556):\n              ...__classPrivateFieldGet(this, _PopupElement_color, \"f\")));\n              if (\n              // (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) ||\n              CSS.supports(\"background-color\", \"color-mix(in srgb, red 30%, white)\")) {\n                  popup.style.backgroundColor = `color-mix(in srgb, ${baseColor} 30%, white)`;\n              }\n              else {\n                  // color-mix isn't supported in some browsers hence this version.\n                  // See https://developer.mozilla.org/en-US/docs/Web/CSS/color_value/color-mix#browser_compatibility\n                  // TODO: Use color-mix when it's supported everywhere.\n                  // Enlighten the color.\n                  const BACKGROUND_ENLIGHT = 0.7;\n                  popup.style.backgroundColor = kendo_pdfjs_loader_js.Util.makeHexColor(\n                  // @ts-expect-error TS(2556):\n                  ...__classPrivateFieldGet(this, _PopupElement_color, \"f\").map(c => Math.floor(BACKGROUND_ENLIGHT * (255 - c) + c)));\n              }\n          }\n          const header = document.createElement(\"span\");\n          header.className = \"header\";\n          const title = document.createElement(\"h1\");\n          header.append(title);\n          ({ dir: title.dir, str: title.textContent } = __classPrivateFieldGet(this, _PopupElement_titleObj, \"f\"));\n          popup.append(header);\n          if (__classPrivateFieldGet(this, _PopupElement_dateObj, \"f\")) {\n              const modificationDate = document.createElement(\"span\");\n              modificationDate.classList.add(\"popupDate\");\n              modificationDate.setAttribute(\"data-l10n-id\", \"pdfjs-annotation-date-string\");\n              modificationDate.setAttribute(\"data-l10n-args\", JSON.stringify({\n                  date: __classPrivateFieldGet(this, _PopupElement_dateObj, \"f\").toLocaleDateString(),\n                  time: __classPrivateFieldGet(this, _PopupElement_dateObj, \"f\").toLocaleTimeString()\n              }));\n              header.append(modificationDate);\n          }\n          const html = __classPrivateFieldGet(this, _PopupElement_instances, \"a\", _PopupElement_html_get);\n          if (html) {\n              // @ts-expect-error TS(2556):\n              kendo_pdfjs_loader_js.XfaLayer.render({\n                  xfaHtml: html,\n                  intent: \"richText\",\n                  div: popup\n              });\n              // @ts-expect-error TS(2556):\n              popup.lastChild.classList.add(\"richText\", \"popupContent\");\n          }\n          else {\n              const contents = this._formatContents(__classPrivateFieldGet(this, _PopupElement_contentsObj, \"f\"));\n              popup.append(contents);\n          }\n          __classPrivateFieldGet(this, _PopupElement_container, \"f\").append(popup);\n      }\n      /**\n       * Format the contents of the popup by adding newlines where necessary.\n       *\n       * @private\n       * @param {Object<string, string>} contentsObj\n       * @memberof PopupElement\n       * @returns {HTMLParagraphElement}\n       */\n      _formatContents({ str, dir }) {\n          const p = document.createElement(\"p\");\n          p.classList.add(\"popupContent\");\n          p.dir = dir;\n          const lines = str.split(/(?:\\r\\n?|\\n)/);\n          for (let i = 0, ii = lines.length; i < ii; ++i) {\n              const line = lines[i];\n              p.append(document.createTextNode(line));\n              if (i < ii - 1) {\n                  p.append(document.createElement(\"br\"));\n              }\n          }\n          return p;\n      }\n      updateEdited({ rect, popupContent }) {\n          var _a;\n          __classPrivateFieldSet(this, _PopupElement_updates, __classPrivateFieldGet(this, _PopupElement_updates, \"f\") || {\n              contentsObj: __classPrivateFieldGet(this, _PopupElement_contentsObj, \"f\"),\n              richText: __classPrivateFieldGet(this, _PopupElement_richText, \"f\")\n          }, \"f\");\n          if (rect) {\n              __classPrivateFieldSet(this, _PopupElement_position, null, \"f\");\n          }\n          if (popupContent) {\n              __classPrivateFieldSet(this, _PopupElement_richText, __classPrivateFieldGet(this, _PopupElement_instances, \"m\", _PopupElement_makePopupContent).call(this, popupContent), \"f\");\n              __classPrivateFieldSet(this, _PopupElement_contentsObj, null, \"f\");\n          }\n          (_a = __classPrivateFieldGet(this, _PopupElement_popup, \"f\")) === null || _a === void 0 ? void 0 : _a.remove();\n          __classPrivateFieldSet(this, _PopupElement_popup, null, \"f\");\n      }\n      resetEdited() {\n          var _a;\n          var _b, _c;\n          if (!__classPrivateFieldGet(this, _PopupElement_updates, \"f\")) {\n              return;\n          }\n          (_b = this, _c = this, { contentsObj: ({ set value(_a) { __classPrivateFieldSet(_b, _PopupElement_contentsObj, _a, \"f\"); } }).value, richText: ({ set value(_a) { __classPrivateFieldSet(_c, _PopupElement_richText, _a, \"f\"); } }).value } =\n              __classPrivateFieldGet(this, _PopupElement_updates, \"f\"));\n          __classPrivateFieldSet(this, _PopupElement_updates, null, \"f\");\n          (_a = __classPrivateFieldGet(this, _PopupElement_popup, \"f\")) === null || _a === void 0 ? void 0 : _a.remove();\n          __classPrivateFieldSet(this, _PopupElement_popup, null, \"f\");\n          __classPrivateFieldSet(this, _PopupElement_position, null, \"f\");\n      }\n      forceHide() {\n          __classPrivateFieldSet(this, _PopupElement_wasVisible, this.isVisible, \"f\");\n          if (!__classPrivateFieldGet(this, _PopupElement_wasVisible, \"f\")) {\n              return;\n          }\n          __classPrivateFieldGet(this, _PopupElement_container, \"f\").hidden = true;\n      }\n      maybeShow() {\n          if (!__classPrivateFieldGet(this, _PopupElement_wasVisible, \"f\")) {\n              return;\n          }\n          if (!__classPrivateFieldGet(this, _PopupElement_popup, \"f\")) {\n              __classPrivateFieldGet(this, _PopupElement_instances, \"m\", _PopupElement_show).call(this);\n          }\n          __classPrivateFieldSet(this, _PopupElement_wasVisible, false, \"f\");\n          __classPrivateFieldGet(this, _PopupElement_container, \"f\").hidden = false;\n      }\n      get isVisible() {\n          return __classPrivateFieldGet(this, _PopupElement_container, \"f\").hidden === false;\n      }\n  }\n  _PopupElement_boundKeyDown = new WeakMap(), _PopupElement_boundHide = new WeakMap(), _PopupElement_boundShow = new WeakMap(), _PopupElement_boundToggle = new WeakMap(), _PopupElement_color = new WeakMap(), _PopupElement_container = new WeakMap(), _PopupElement_contentsObj = new WeakMap(), _PopupElement_dateObj = new WeakMap(), _PopupElement_elements = new WeakMap(), _PopupElement_parent = new WeakMap(), _PopupElement_parentRect = new WeakMap(), _PopupElement_pinned = new WeakMap(), _PopupElement_popup = new WeakMap(), _PopupElement_position = new WeakMap(), _PopupElement_rect = new WeakMap(), _PopupElement_richText = new WeakMap(), _PopupElement_titleObj = new WeakMap(), _PopupElement_updates = new WeakMap(), _PopupElement_wasVisible = new WeakMap(), _PopupElement_instances = new WeakSet(), _PopupElement_html_get = function _PopupElement_html_get() {\n      const richText = __classPrivateFieldGet(this, _PopupElement_richText, \"f\");\n      const contentsObj = __classPrivateFieldGet(this, _PopupElement_contentsObj, \"f\");\n      if ((richText === null || richText === void 0 ? void 0 : richText.str) &&\n          (!(contentsObj === null || contentsObj === void 0 ? void 0 : contentsObj.str) || contentsObj.str === richText.str)) {\n          return __classPrivateFieldGet(this, _PopupElement_richText, \"f\").html || null;\n      }\n      return null;\n  }, _PopupElement_fontSize_get = function _PopupElement_fontSize_get() {\n      var _a, _b, _c;\n      return ((_c = (_b = (_a = __classPrivateFieldGet(this, _PopupElement_instances, \"a\", _PopupElement_html_get)) === null || _a === void 0 ? void 0 : _a.attributes) === null || _b === void 0 ? void 0 : _b.style) === null || _c === void 0 ? void 0 : _c.fontSize) || 0;\n  }, _PopupElement_fontColor_get = function _PopupElement_fontColor_get() {\n      var _a, _b, _c;\n      return ((_c = (_b = (_a = __classPrivateFieldGet(this, _PopupElement_instances, \"a\", _PopupElement_html_get)) === null || _a === void 0 ? void 0 : _a.attributes) === null || _b === void 0 ? void 0 : _b.style) === null || _c === void 0 ? void 0 : _c.color) || null;\n  }, _PopupElement_makePopupContent = function _PopupElement_makePopupContent(text) {\n      const popupLines = [];\n      const popupContent = {\n          str: text,\n          html: {\n              name: \"div\",\n              attributes: {\n                  dir: \"auto\"\n              },\n              children: [\n                  {\n                      name: \"p\",\n                      children: popupLines\n                  }\n              ]\n          }\n      };\n      const lineAttributes = {\n          style: {\n              color: __classPrivateFieldGet(this, _PopupElement_instances, \"a\", _PopupElement_fontColor_get),\n              fontSize: __classPrivateFieldGet(this, _PopupElement_instances, \"a\", _PopupElement_fontSize_get)\n                  ? `calc(${__classPrivateFieldGet(this, _PopupElement_instances, \"a\", _PopupElement_fontSize_get)}px * var(--scale-factor))`\n                  : \"\"\n          }\n      };\n      for (const line of text.split(\"\\n\")) {\n          popupLines.push({\n              name: \"span\",\n              value: line,\n              attributes: lineAttributes\n          });\n      }\n      return popupContent;\n  }, _PopupElement_keyDown = function _PopupElement_keyDown(event) {\n      if (event.altKey || event.shiftKey || event.ctrlKey || event.metaKey) {\n          return;\n      }\n      if (event.key === \"Enter\" || (event.key === \"Escape\" && __classPrivateFieldGet(this, _PopupElement_pinned, \"f\"))) {\n          __classPrivateFieldGet(this, _PopupElement_instances, \"m\", _PopupElement_toggle).call(this);\n      }\n  }, _PopupElement_setPosition = function _PopupElement_setPosition() {\n      if (__classPrivateFieldGet(this, _PopupElement_position, \"f\") !== null) {\n          return;\n      }\n      const { page: { view }, viewport: { rawDims: { pageWidth, pageHeight, pageX, pageY } } } = __classPrivateFieldGet(this, _PopupElement_parent, \"f\");\n      let useParentRect = !!__classPrivateFieldGet(this, _PopupElement_parentRect, \"f\");\n      let rect = useParentRect ? __classPrivateFieldGet(this, _PopupElement_parentRect, \"f\") : __classPrivateFieldGet(this, _PopupElement_rect, \"f\");\n      for (const element of __classPrivateFieldGet(this, _PopupElement_elements, \"f\")) {\n          if (!rect || kendo_pdfjs_loader_js.Util.intersect(element.data.rect, rect) !== null) {\n              rect = element.data.rect;\n              useParentRect = true;\n              break;\n          }\n      }\n      const normalizedRect = kendo_pdfjs_loader_js.Util.normalizeRect([\n          rect[0],\n          view[3] - rect[1] + view[1],\n          rect[2],\n          view[3] - rect[3] + view[1]\n      ]);\n      const HORIZONTAL_SPACE_AFTER_ANNOTATION = 5;\n      const parentWidth = useParentRect\n          ? rect[2] - rect[0] + HORIZONTAL_SPACE_AFTER_ANNOTATION\n          : 0;\n      const popupLeft = normalizedRect[0] + parentWidth;\n      const popupTop = normalizedRect[1];\n      __classPrivateFieldSet(this, _PopupElement_position, [\n          (100 * (popupLeft - pageX)) / pageWidth,\n          (100 * (popupTop - pageY)) / pageHeight\n      ], \"f\");\n      const { style } = __classPrivateFieldGet(this, _PopupElement_container, \"f\");\n      style.left = `${__classPrivateFieldGet(this, _PopupElement_position, \"f\")[0]}%`;\n      style.top = `${__classPrivateFieldGet(this, _PopupElement_position, \"f\")[1]}%`;\n  }, _PopupElement_toggle = function _PopupElement_toggle() {\n      __classPrivateFieldSet(this, _PopupElement_pinned, !__classPrivateFieldGet(this, _PopupElement_pinned, \"f\"), \"f\");\n      if (__classPrivateFieldGet(this, _PopupElement_pinned, \"f\")) {\n          __classPrivateFieldGet(this, _PopupElement_instances, \"m\", _PopupElement_show).call(this);\n          __classPrivateFieldGet(this, _PopupElement_container, \"f\").addEventListener(\"click\", __classPrivateFieldGet(this, _PopupElement_boundToggle, \"f\"));\n          __classPrivateFieldGet(this, _PopupElement_container, \"f\").addEventListener(\"keydown\", __classPrivateFieldGet(this, _PopupElement_boundKeyDown, \"f\"));\n      }\n      else {\n          __classPrivateFieldGet(this, _PopupElement_instances, \"m\", _PopupElement_hide).call(this);\n          __classPrivateFieldGet(this, _PopupElement_container, \"f\").removeEventListener(\"click\", __classPrivateFieldGet(this, _PopupElement_boundToggle, \"f\"));\n          __classPrivateFieldGet(this, _PopupElement_container, \"f\").removeEventListener(\"keydown\", __classPrivateFieldGet(this, _PopupElement_boundKeyDown, \"f\"));\n      }\n  }, _PopupElement_show = function _PopupElement_show() {\n      if (!__classPrivateFieldGet(this, _PopupElement_popup, \"f\")) {\n          this.render();\n      }\n      if (!this.isVisible) {\n          __classPrivateFieldGet(this, _PopupElement_instances, \"m\", _PopupElement_setPosition).call(this);\n          __classPrivateFieldGet(this, _PopupElement_container, \"f\").hidden = false;\n          __classPrivateFieldGet(this, _PopupElement_container, \"f\").style.zIndex = (parseInt(__classPrivateFieldGet(this, _PopupElement_container, \"f\").style.zIndex, 10) + 1000).toString();\n      }\n      else if (__classPrivateFieldGet(this, _PopupElement_pinned, \"f\")) {\n          __classPrivateFieldGet(this, _PopupElement_container, \"f\").classList.add(\"focused\");\n      }\n  }, _PopupElement_hide = function _PopupElement_hide() {\n      __classPrivateFieldGet(this, _PopupElement_container, \"f\").classList.remove(\"focused\");\n      if (__classPrivateFieldGet(this, _PopupElement_pinned, \"f\") || !this.isVisible) {\n          return;\n      }\n      __classPrivateFieldGet(this, _PopupElement_container, \"f\").hidden = true;\n      __classPrivateFieldGet(this, _PopupElement_container, \"f\").style.zIndex = (parseInt(__classPrivateFieldGet(this, _PopupElement_container, \"f\").style.zIndex, 10) - 1000).toString();\n  };\n  class FreeTextAnnotationElement extends AnnotationElement {\n      // todo: props\n      constructor(parameters) {\n          super(parameters, { isRenderable: true, ignoreBorder: true });\n          // todo: props\n          this.textContent = null;\n          this.textPosition = null;\n          this.textContent = parameters.data.textContent;\n          this.textPosition = parameters.data.textPosition;\n          this.annotationEditorType = kendo_pdfjs_loader_js.AnnotationEditorType.FREETEXT;\n      }\n      render() {\n          // this.container.classList.add(\"freeTextAnnotation\");\n          // this.container.classList.add(\"freeTextAnnotation\");\n          this.container.classList.add(\"k-free-text-annotation\");\n          if (this.textContent) {\n              const content = document.createElement(\"div\");\n              // content.classList.add(\"annotationTextContent\");\n              content.classList.add(\"k-annotation-text-content\");\n              content.setAttribute(\"role\", \"comment\");\n              for (const line of this.textContent) {\n                  const lineSpan = document.createElement(\"span\");\n                  lineSpan.textContent = line;\n                  content.append(lineSpan);\n              }\n              this.container.append(content);\n          }\n          // if (!this.data.popupRef && this.hasPopupData) {\n          //     this._createPopup();\n          // }\n          this._editOnDoubleClick();\n          return this.container;\n      }\n  }\n  // class LineAnnotationElement extends AnnotationElement {\n  //     #line = null;\n  //     constructor(parameters) {\n  //         super(parameters, { isRenderable: true, ignoreBorder: true });\n  //     }\n  //     render() {\n  //         this.container.classList.add(\"lineAnnotation\");\n  //         // Create an invisible line with the same starting and ending coordinates\n  //         // that acts as the trigger for the popup. Only the line itself should\n  //         // trigger the popup, not the entire container.\n  //         const data = this.data;\n  //         const { width, height } = getRectDims(data.rect);\n  //         const svg = this.svgFactory.create(\n  //             width,\n  //             height,\n  //             /* skipDimensions = */ true\n  //         );\n  //         // PDF coordinates are calculated from a bottom left origin, so transform\n  //         // the line coordinates to a top left origin for the SVG element.\n  //         const line = (this.#line = this.svgFactory.createElement(\"svg:line\"));\n  //         line.setAttribute(\"x1\", data.rect[2] - data.lineCoordinates[0]);\n  //         line.setAttribute(\"y1\", data.rect[3] - data.lineCoordinates[1]);\n  //         line.setAttribute(\"x2\", data.rect[2] - data.lineCoordinates[2]);\n  //         line.setAttribute(\"y2\", data.rect[3] - data.lineCoordinates[3]);\n  //         // Ensure that the 'stroke-width' is always non-zero, since otherwise it\n  //         // won't be possible to open/close the popup (note e.g. issue 11122).\n  //         line.setAttribute(\"stroke-width\", data.borderStyle.width || 1);\n  //         line.setAttribute(\"stroke\", \"transparent\");\n  //         line.setAttribute(\"fill\", \"transparent\");\n  //         svg.append(line);\n  //         this.container.append(svg);\n  //         // Create the popup ourselves so that we can bind it to the line instead\n  //         // of to the entire container (which is the default).\n  //         if (!data.popupRef && this.hasPopupData) {\n  //             this._createPopup();\n  //         }\n  //         return this.container;\n  //     }\n  //     getElementsToTriggerPopup() {\n  //         return this.#line;\n  //     }\n  //     addHighlightArea() {\n  //         this.container.classList.add(\"highlightArea\");\n  //     }\n  // }\n  // class SquareAnnotationElement extends AnnotationElement {\n  //     #square = null;\n  //     constructor(parameters) {\n  //         super(parameters, { isRenderable: true, ignoreBorder: true });\n  //     }\n  //     render() {\n  //         this.container.classList.add(\"squareAnnotation\");\n  //         // Create an invisible square with the same rectangle that acts as the\n  //         // trigger for the popup. Only the square itself should trigger the\n  //         // popup, not the entire container.\n  //         const data = this.data;\n  //         const { width, height } = getRectDims(data.rect);\n  //         const svg = this.svgFactory.create(\n  //             width,\n  //             height,\n  //             /* skipDimensions = */ true\n  //         );\n  //         // The browser draws half of the borders inside the square and half of\n  //         // the borders outside the square by default. This behavior cannot be\n  //         // changed programmatically, so correct for that here.\n  //         const borderWidth = data.borderStyle.width;\n  //         const square = (this.#square = this.svgFactory.createElement(\"svg:rect\"));\n  //         square.setAttribute(\"x\", borderWidth / 2);\n  //         square.setAttribute(\"y\", borderWidth / 2);\n  //         square.setAttribute(\"width\", width - borderWidth);\n  //         square.setAttribute(\"height\", height - borderWidth);\n  //         // Ensure that the 'stroke-width' is always non-zero, since otherwise it\n  //         // won't be possible to open/close the popup (note e.g. issue 11122).\n  //         square.setAttribute(\"stroke-width\", borderWidth || 1);\n  //         square.setAttribute(\"stroke\", \"transparent\");\n  //         square.setAttribute(\"fill\", \"transparent\");\n  //         svg.append(square);\n  //         this.container.append(svg);\n  //         // Create the popup ourselves so that we can bind it to the square instead\n  //         // of to the entire container (which is the default).\n  //         if (!data.popupRef && this.hasPopupData) {\n  //             this._createPopup();\n  //         }\n  //         return this.container;\n  //     }\n  //     getElementsToTriggerPopup() {\n  //         return this.#square;\n  //     }\n  //     addHighlightArea() {\n  //         this.container.classList.add(\"highlightArea\");\n  //     }\n  // }\n  // class CircleAnnotationElement extends AnnotationElement {\n  //     #circle = null;\n  //     constructor(parameters) {\n  //         super(parameters, { isRenderable: true, ignoreBorder: true });\n  //     }\n  //     render() {\n  //         this.container.classList.add(\"circleAnnotation\");\n  //         // Create an invisible circle with the same ellipse that acts as the\n  //         // trigger for the popup. Only the circle itself should trigger the\n  //         // popup, not the entire container.\n  //         const data = this.data;\n  //         const { width, height } = getRectDims(data.rect);\n  //         const svg = this.svgFactory.create(\n  //             width,\n  //             height,\n  //             /* skipDimensions = */ true\n  //         );\n  //         // The browser draws half of the borders inside the circle and half of\n  //         // the borders outside the circle by default. This behavior cannot be\n  //         // changed programmatically, so correct for that here.\n  //         const borderWidth = data.borderStyle.width;\n  //         const circle = (this.#circle =\n  //             this.svgFactory.createElement(\"svg:ellipse\"));\n  //         circle.setAttribute(\"cx\", width / 2);\n  //         circle.setAttribute(\"cy\", height / 2);\n  //         circle.setAttribute(\"rx\", width / 2 - borderWidth / 2);\n  //         circle.setAttribute(\"ry\", height / 2 - borderWidth / 2);\n  //         // Ensure that the 'stroke-width' is always non-zero, since otherwise it\n  //         // won't be possible to open/close the popup (note e.g. issue 11122).\n  //         circle.setAttribute(\"stroke-width\", borderWidth || 1);\n  //         circle.setAttribute(\"stroke\", \"transparent\");\n  //         circle.setAttribute(\"fill\", \"transparent\");\n  //         svg.append(circle);\n  //         this.container.append(svg);\n  //         // Create the popup ourselves so that we can bind it to the circle instead\n  //         // of to the entire container (which is the default).\n  //         if (!data.popupRef && this.hasPopupData) {\n  //             this._createPopup();\n  //         }\n  //         return this.container;\n  //     }\n  //     getElementsToTriggerPopup() {\n  //         return this.#circle;\n  //     }\n  //     addHighlightArea() {\n  //         this.container.classList.add(\"highlightArea\");\n  //     }\n  // }\n  // class PolylineAnnotationElement extends AnnotationElement {\n  //     // todo: props\n  //     containerClassName: any = null;\n  //     svgElementName: any = null;\n  //     // todo: props\n  //     #polyline = null;\n  //     constructor(parameters) {\n  //         super(parameters, { isRenderable: true, ignoreBorder: true });\n  //         this.containerClassName = \"polylineAnnotation\";\n  //         this.svgElementName = \"svg:polyline\";\n  //     }\n  //     render() {\n  //         this.container.classList.add(this.containerClassName);\n  //         // Create an invisible polyline with the same points that acts as the\n  //         // trigger for the popup. Only the polyline itself should trigger the\n  //         // popup, not the entire container.\n  //         const {\n  //             data: { rect, vertices, borderStyle, popupRef },\n  //         } = this;\n  //         if (!vertices) {\n  //             return this.container;\n  //         }\n  //         const { width, height } = getRectDims(rect);\n  //         const svg = this.svgFactory.create(\n  //             width,\n  //             height,\n  //             /* skipDimensions = */ true\n  //         );\n  //         // Convert the vertices array to a single points string that the SVG\n  //         // polyline element expects (\"x1,y1 x2,y2 ...\"). PDF coordinates are\n  //         // calculated from a bottom left origin, so transform the polyline\n  //         // coordinates to a top left origin for the SVG element.\n  //         const pointsArray = [];\n  //         for (let i = 0, ii = vertices.length; i < ii; i += 2) {\n  //             const x = vertices[i] - rect[0];\n  //             const y = rect[3] - vertices[i + 1];\n  //             pointsArray.push(`${x},${y}`);\n  //         }\n  //         const points = pointsArray.join(\" \");\n  //         const polyline = (this.#polyline = this.svgFactory.createElement(\n  //             this.svgElementName\n  //         ));\n  //         polyline.setAttribute(\"points\", points);\n  //         // Ensure that the 'stroke-width' is always non-zero, since otherwise it\n  //         // won't be possible to open/close the popup (note e.g. issue 11122).\n  //         polyline.setAttribute(\"stroke-width\", borderStyle.width || 1);\n  //         polyline.setAttribute(\"stroke\", \"transparent\");\n  //         polyline.setAttribute(\"fill\", \"transparent\");\n  //         svg.append(polyline);\n  //         this.container.append(svg);\n  //         // Create the popup ourselves so that we can bind it to the polyline\n  //         // instead of to the entire container (which is the default).\n  //         if (!popupRef && this.hasPopupData) {\n  //             this._createPopup();\n  //         }\n  //         return this.container;\n  //     }\n  //     getElementsToTriggerPopup() {\n  //         return this.#polyline;\n  //     }\n  //     addHighlightArea() {\n  //         this.container.classList.add(\"highlightArea\");\n  //     }\n  // }\n  // class PolygonAnnotationElement extends PolylineAnnotationElement {\n  //     constructor(parameters) {\n  //         // Polygons are specific forms of polylines, so reuse their logic.\n  //         super(parameters);\n  //         this.containerClassName = \"polygonAnnotation\";\n  //         this.svgElementName = \"svg:polygon\";\n  //     }\n  // }\n  // class CaretAnnotationElement extends AnnotationElement {\n  //     constructor(parameters) {\n  //         super(parameters, { isRenderable: true, ignoreBorder: true });\n  //     }\n  //     render() {\n  //         this.container.classList.add(\"caretAnnotation\");\n  //         if (!this.data.popupRef && this.hasPopupData) {\n  //             this._createPopup();\n  //         }\n  //         return this.container;\n  //     }\n  // }\n  // class InkAnnotationElement extends AnnotationElement {\n  //     // todo: props\n  //     containerClassName: any = null;\n  //     svgElementName: any = null;\n  //     // todo: props\n  //     #polylines = [];\n  //     constructor(parameters) {\n  //         super(parameters, { isRenderable: true, ignoreBorder: true });\n  //         this.containerClassName = \"inkAnnotation\";\n  //         // Use the polyline SVG element since it allows us to use coordinates\n  //         // directly and to draw both straight lines and curves.\n  //         this.svgElementName = \"svg:polyline\";\n  //         this.annotationEditorType = AnnotationEditorType.INK;\n  //     }\n  //     render() {\n  //         this.container.classList.add(this.containerClassName);\n  //         // Create an invisible polyline with the same points that acts as the\n  //         // trigger for the popup.\n  //         const {\n  //             data: { rect, inkLists, borderStyle, popupRef },\n  //         } = this;\n  //         const { width, height } = getRectDims(rect);\n  //         const svg = this.svgFactory.create(\n  //             width,\n  //             height,\n  //             /* skipDimensions = */ true\n  //         );\n  //         for (const inkList of inkLists) {\n  //             // Convert the ink list to a single points string that the SVG\n  //             // polyline element expects (\"x1,y1 x2,y2 ...\"). PDF coordinates are\n  //             // calculated from a bottom left origin, so transform the polyline\n  //             // coordinates to a top left origin for the SVG element.\n  //             const pointsArray = [];\n  //             for (let i = 0, ii = inkList.length; i < ii; i += 2) {\n  //                 const x = inkList[i] - rect[0];\n  //                 const y = rect[3] - inkList[i + 1];\n  //                 pointsArray.push(`${x},${y}`);\n  //             }\n  //             const points = pointsArray.join(\" \");\n  //             const polyline = this.svgFactory.createElement(this.svgElementName);\n  //             this.#polylines.push(polyline);\n  //             polyline.setAttribute(\"points\", points);\n  //             // Ensure that the 'stroke-width' is always non-zero, since otherwise it\n  //             // won't be possible to open/close the popup (note e.g. issue 11122).\n  //             polyline.setAttribute(\"stroke-width\", borderStyle.width || 1);\n  //             polyline.setAttribute(\"stroke\", \"transparent\");\n  //             polyline.setAttribute(\"fill\", \"transparent\");\n  //             // Create the popup ourselves so that we can bind it to the polyline\n  //             // instead of to the entire container (which is the default).\n  //             if (!popupRef && this.hasPopupData) {\n  //                 this._createPopup();\n  //             }\n  //             svg.append(polyline);\n  //         }\n  //         this.container.append(svg);\n  //         return this.container;\n  //     }\n  //     getElementsToTriggerPopup() {\n  //         return this.#polylines;\n  //     }\n  //     addHighlightArea() {\n  //         this.container.classList.add(\"highlightArea\");\n  //     }\n  // }\n  class HighlightAnnotationElement extends AnnotationElement {\n      constructor(parameters) {\n          super(parameters, {\n              isRenderable: true,\n              ignoreBorder: true,\n              createQuadrilaterals: true\n          });\n      }\n      render() {\n          // if (!this.data.popupRef && this.hasPopupData) {\n          //     this._createPopup();\n          // }\n          // this.container.classList.add(\"highlightAnnotation\");\n          this.container.classList.add(\"k-highlight-annotation\");\n          return this.container;\n      }\n  }\n  // class UnderlineAnnotationElement extends AnnotationElement {\n  //     constructor(parameters) {\n  //         super(parameters, {\n  //             isRenderable: true,\n  //             ignoreBorder: true,\n  //             createQuadrilaterals: true,\n  //         });\n  //     }\n  //     render() {\n  //         if (!this.data.popupRef && this.hasPopupData) {\n  //             this._createPopup();\n  //         }\n  //         this.container.classList.add(\"underlineAnnotation\");\n  //         return this.container;\n  //     }\n  // }\n  // class SquigglyAnnotationElement extends AnnotationElement {\n  //     constructor(parameters) {\n  //         super(parameters, {\n  //             isRenderable: true,\n  //             ignoreBorder: true,\n  //             createQuadrilaterals: true,\n  //         });\n  //     }\n  //     render() {\n  //         if (!this.data.popupRef && this.hasPopupData) {\n  //             this._createPopup();\n  //         }\n  //         this.container.classList.add(\"squigglyAnnotation\");\n  //         return this.container;\n  //     }\n  // }\n  // class StrikeOutAnnotationElement extends AnnotationElement {\n  //     constructor(parameters) {\n  //         super(parameters, {\n  //             isRenderable: true,\n  //             ignoreBorder: true,\n  //             createQuadrilaterals: true,\n  //         });\n  //     }\n  //     render() {\n  //         if (!this.data.popupRef && this.hasPopupData) {\n  //             this._createPopup();\n  //         }\n  //         this.container.classList.add(\"strikeoutAnnotation\");\n  //         return this.container;\n  //     }\n  // }\n  // class StampAnnotationElement extends AnnotationElement {\n  //     constructor(parameters) {\n  //         super(parameters, { isRenderable: true, ignoreBorder: true });\n  //     }\n  //     render() {\n  //         this.container.classList.add(\"stampAnnotation\");\n  //         if (!this.data.popupRef && this.hasPopupData) {\n  //             this._createPopup();\n  //         }\n  //         return this.container;\n  //     }\n  // }\n  // class FileAttachmentAnnotationElement extends AnnotationElement {\n  //     // todo: props\n  //     filename: any = null;\n  //     content: any = null;\n  //     // todo: props\n  //     #trigger = null;\n  //     constructor(parameters) {\n  //         super(parameters, { isRenderable: true });\n  //         const { file } = this.data;\n  //         this.filename = file.filename;\n  //         this.content = file.content;\n  //         this.linkService.eventBus?.dispatch(\"fileattachmentannotation\", {\n  //             source: this,\n  //             ...file,\n  //         });\n  //     }\n  //     render() {\n  //         this.container.classList.add(\"fileAttachmentAnnotation\");\n  //         const { container, data } = this;\n  //         let trigger;\n  //         if (data.hasAppearance || data.fillAlpha === 0) {\n  //             trigger = document.createElement(\"div\");\n  //         } else {\n  //             // Unfortunately it seems that it's not clearly specified exactly what\n  //             // names are actually valid, since Table 184 contains:\n  //             //   Conforming readers shall provide predefined icon appearances for at\n  //             //   least the following standard names: GraphPushPin, PaperclipTag.\n  //             //   Additional names may be supported as well. Default value: PushPin.\n  //             trigger = document.createElement(\"img\");\n  //             trigger.src = `${this.imageResourcesPath}annotation-${/paperclip/i.test(data.name) ?\n  //                 \"paperclip\" : \"pushpin\"}.svg`;\n  //             if (data.fillAlpha && data.fillAlpha < 1) {\n  //                 trigger.style = `filter: opacity(${Math.round(\n  //                     data.fillAlpha * 100\n  //                 )}%);`;\n  //                 // todo: debug\n  //                 // if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"TESTING\")) {\n  //                 //     this.container.classList.add(\"hasFillAlpha\");\n  //                 // }\n  //             }\n  //         }\n  //         trigger.addEventListener(\"dblclick\", this.#download.bind(this));\n  //         this.#trigger = trigger;\n  //         const { isMac } = FeatureTest.platform;\n  //         container.addEventListener(\"keydown\", evt => {\n  //             if (evt.key === \"Enter\" && (isMac ? evt.metaKey : evt.ctrlKey)) {\n  //                 this.#download();\n  //             }\n  //         });\n  //         if (!data.popupRef && this.hasPopupData) {\n  //             this._createPopup();\n  //         } else {\n  //             trigger.classList.add(\"popupTriggerArea\");\n  //         }\n  //         container.append(trigger);\n  //         return container;\n  //     }\n  //     getElementsToTriggerPopup() {\n  //         return this.#trigger;\n  //     }\n  //     addHighlightArea() {\n  //         this.container.classList.add(\"highlightArea\");\n  //     }\n  //     /**\n  //      * Download the file attachment associated with this annotation.\n  //      */\n  //     #download() {\n  //         this.downloadManager?.openOrDownloadData(this.content, this.filename);\n  //     }\n  // }\n  /**\n   * Manage the layer containing all the annotations.\n   */\n  class AnnotationLayer {\n      constructor({ div, accessibilityManager, annotationCanvasMap, annotationEditorUIManager, page, viewport }) {\n          _AnnotationLayer_instances.add(this);\n          this.div = null;\n          this.page = null;\n          this.viewport = null;\n          this.zIndex = null;\n          this._annotationEditorUIManager = null;\n          _AnnotationLayer_accessibilityManager.set(this, null);\n          _AnnotationLayer_annotationCanvasMap.set(this, null);\n          _AnnotationLayer_editableAnnotations.set(this, new Map());\n          this.div = div;\n          __classPrivateFieldSet(this, _AnnotationLayer_accessibilityManager, accessibilityManager, \"f\");\n          __classPrivateFieldSet(this, _AnnotationLayer_annotationCanvasMap, annotationCanvasMap, \"f\");\n          this.page = page;\n          this.viewport = viewport;\n          this.zIndex = 0;\n          this._annotationEditorUIManager = annotationEditorUIManager;\n          // if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"TESTING\")) {\n          //     // For testing purposes.\n          //     Object.defineProperty(this, \"showPopups\", {\n          //         value: async () => {\n          //             for (const show of this.popupShow) {\n          //                 await show();\n          //             }\n          //         },\n          //     });\n          //     this.popupShow = [];\n          // }\n      }\n      // todo: ported from AnnotationLayerBuilder\n      hide() {\n          if (!this.div) {\n              return;\n          }\n          this.div.hidden = true;\n      }\n      // todo: ported from AnnotationLayerBuilder\n      hasEditableAnnotations() {\n          return __classPrivateFieldGet(this, _AnnotationLayer_editableAnnotations, \"f\").size > 0;\n      }\n      /**\n       * Render a new annotation layer with all annotation elements.\n       *\n       * @param {AnnotationLayerParameters} params\n       * @memberof AnnotationLayer\n       */\n      // async render(params) {\n      render(params) {\n          var _a;\n          const { annotations } = params;\n          const layer = this.div;\n          kendo_pdfjs_loader_js.setLayerDimensions(layer, this.viewport);\n          const popupToElements = new Map();\n          const elementParams = {\n              data: null,\n              layer,\n              linkService: params.linkService,\n              downloadManager: params.downloadManager,\n              imageResourcesPath: params.imageResourcesPath || \"\",\n              renderForms: params.renderForms !== false,\n              svgFactory: new kendo_pdfjs_loader_js.DOMSVGFactory(),\n              annotationStorage: params.annotationStorage || new AnnotationStorage(),\n              enableScripting: params.enableScripting === true,\n              hasJSActions: params.hasJSActions,\n              fieldObjects: params.fieldObjects,\n              parent: this,\n              elements: null\n          };\n          for (const data of annotations) {\n              if (data.noHTML) {\n                  continue;\n              }\n              const isPopupAnnotation = data.annotationType === AnnotationType.POPUP;\n              if (!isPopupAnnotation) {\n                  const { width, height } = getRectDims(data.rect);\n                  if (width <= 0 || height <= 0) {\n                      continue; // Ignore empty annotations.\n                  }\n              }\n              else {\n                  const elements = popupToElements.get(data.id);\n                  if (!elements) {\n                      // Ignore popup annotations without a corresponding annotation.\n                      continue;\n                  }\n                  elementParams.elements = elements;\n              }\n              elementParams.data = data;\n              const element = AnnotationElementFactory.create(elementParams);\n              if (!element.isRenderable) {\n                  continue;\n              }\n              if (!isPopupAnnotation && data.popupRef) {\n                  const elements = popupToElements.get(data.popupRef);\n                  if (!elements) {\n                      popupToElements.set(data.popupRef, [element]);\n                  }\n                  else {\n                      elements.push(element);\n                  }\n              }\n              const rendered = element.render();\n              if (data.hidden) {\n                  rendered.style.visibility = \"hidden\";\n              }\n              __classPrivateFieldGet(this, _AnnotationLayer_instances, \"m\", _AnnotationLayer_appendElement).call(this, rendered, data.id);\n              if (element._isEditable) {\n                  __classPrivateFieldGet(this, _AnnotationLayer_editableAnnotations, \"f\").set(element.data.id, element);\n                  (_a = this._annotationEditorUIManager) === null || _a === void 0 ? void 0 : _a.renderAnnotationElement(element);\n              }\n          }\n          __classPrivateFieldGet(this, _AnnotationLayer_instances, \"m\", _AnnotationLayer_setAnnotationCanvasMap).call(this);\n      }\n      /**\n       * Update the annotation elements on existing annotation layer.\n       *\n       * @param {AnnotationLayerParameters} viewport\n       * @memberof AnnotationLayer\n       */\n      update({ viewport }) {\n          const layer = this.div;\n          this.viewport = viewport;\n          // setLayerDimensions(layer, { rotation: viewport.rotation });\n          kendo_pdfjs_loader_js.setLayerDimensions(layer, viewport);\n          __classPrivateFieldGet(this, _AnnotationLayer_instances, \"m\", _AnnotationLayer_setAnnotationCanvasMap).call(this);\n          layer.hidden = false;\n      }\n      getEditableAnnotations() {\n          return Array.from(__classPrivateFieldGet(this, _AnnotationLayer_editableAnnotations, \"f\").values());\n      }\n      getEditableAnnotation(id) {\n          return __classPrivateFieldGet(this, _AnnotationLayer_editableAnnotations, \"f\").get(id);\n      }\n      destroy() {\n          var _a, _b;\n          (_a = __classPrivateFieldGet(this, _AnnotationLayer_annotationCanvasMap, \"f\")) === null || _a === void 0 ? void 0 : _a.clear();\n          (_b = this.div) === null || _b === void 0 ? void 0 : _b.remove();\n          this.div = null;\n      }\n  }\n  _AnnotationLayer_accessibilityManager = new WeakMap(), _AnnotationLayer_annotationCanvasMap = new WeakMap(), _AnnotationLayer_editableAnnotations = new WeakMap(), _AnnotationLayer_instances = new WeakSet(), _AnnotationLayer_appendElement = function _AnnotationLayer_appendElement(element, id) {\n      var _a;\n      const contentElement = element.firstChild || element;\n      contentElement.id = `${AnnotationPrefix}${id}`;\n      this.div.append(element);\n      (_a = __classPrivateFieldGet(this, _AnnotationLayer_accessibilityManager, \"f\")) === null || _a === void 0 ? void 0 : _a.moveElementInDOM(this.div, element, contentElement, \n      /* isRemovable = */ false);\n  }, _AnnotationLayer_setAnnotationCanvasMap = function _AnnotationLayer_setAnnotationCanvasMap() {\n      if (!__classPrivateFieldGet(this, _AnnotationLayer_annotationCanvasMap, \"f\")) {\n          return;\n      }\n      const layer = this.div;\n      for (const [id, canvas] of __classPrivateFieldGet(this, _AnnotationLayer_annotationCanvasMap, \"f\")) {\n          const element = layer.querySelector(`[data-annotation-id=\"${id}\"]`);\n          if (!element) {\n              continue;\n          }\n          canvas.className = \"annotationContent k-annotation-content\";\n          const { firstChild } = element;\n          if (!firstChild) {\n              element.append(canvas);\n          }\n          else if (firstChild.nodeName === \"CANVAS\") {\n              firstChild.replaceWith(canvas);\n          }\n          else if (!firstChild.classList.contains(\"annotationContent\") ||\n              !firstChild.classList.contains(\"k-annotation-content\")) {\n              firstChild.before(canvas);\n          }\n          else {\n              firstChild.after(canvas);\n          }\n      }\n      __classPrivateFieldGet(this, _AnnotationLayer_annotationCanvasMap, \"f\").clear();\n  };\n\n  /* Copyright 2014 Mozilla Foundation\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *     http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   * See the License for the specific language governing permissions and\n   * limitations under the License.\n   */\n  var _AnnotationLayerBuilder_instances, _AnnotationLayerBuilder_onAppend, _AnnotationLayerBuilder_eventAbortController, _AnnotationLayerBuilder_updatePresentationModeState;\n  // import { PresentationModeState } from \"./shared/ui_utils\";\n  /**\n   * @typedef {Object} AnnotationLayerBuilderOptions\n   * @property {PDFPageProxy} pdfPage\n   * @property {AnnotationStorage} [annotationStorage]\n   * @property {string} [imageResourcesPath] - Path for image resources, mainly\n   *   for annotation icons. Include trailing slash.\n   * @property {boolean} renderForms\n   * @property {IPDFLinkService} linkService\n   * @property {IDownloadManager} [downloadManager]\n   * @property {boolean} [enableScripting]\n   * @property {Promise<boolean>} [hasJSActionsPromise]\n   * @property {Promise<Object<string, Array<Object>> | null>}\n   *   [fieldObjectsPromise]\n   * @property {Map<string, HTMLCanvasElement>} [annotationCanvasMap]\n   * @property {TextAccessibilityManager} [accessibilityManager]\n   * @property {AnnotationEditorUIManager} [annotationEditorUIManager]\n   * @property {function} [onAppend]\n   */\n  class AnnotationLayerBuilder {\n      /**\n       * @param {AnnotationLayerBuilderOptions} options\n       */\n      constructor({ pdfPage, eventBus, linkService = null, \n      // downloadManager,\n      annotationStorage = null, \n      // imageResourcesPath = \"\",\n      renderForms = true, \n      // enableScripting = false,\n      // hasJSActionsPromise = null,\n      // fieldObjectsPromise = null,\n      annotationCanvasMap = null, accessibilityManager = null, annotationEditorUIManager = null, onAppend = null }) {\n          _AnnotationLayerBuilder_instances.add(this);\n          // todo: props ported from pdf.js\n          this.annotationLayer = null;\n          this.pdfPage = null;\n          this.linkService = null;\n          this.annotationStorage = null;\n          this._annotationCanvasMap = null;\n          this._annotationEditorUIManager = null;\n          this.div = null;\n          this._cancelled = null;\n          this._eventBus = null;\n          this._accessibilityManager = null;\n          // todo: props ported from pdf.js\n          _AnnotationLayerBuilder_onAppend.set(this, null);\n          _AnnotationLayerBuilder_eventAbortController.set(this, null);\n          this.renderForms = null;\n          this.pdfPage = pdfPage;\n          this.linkService = linkService;\n          // this.downloadManager = downloadManager;\n          // this.imageResourcesPath = imageResourcesPath;\n          this.renderForms = renderForms;\n          this.annotationStorage = annotationStorage;\n          // this.enableScripting = enableScripting;\n          // this._hasJSActionsPromise = hasJSActionsPromise || Promise.resolve(false);\n          // this._fieldObjectsPromise = fieldObjectsPromise || Promise.resolve(null);\n          this._annotationCanvasMap = annotationCanvasMap;\n          this._accessibilityManager = accessibilityManager;\n          this._annotationEditorUIManager = annotationEditorUIManager;\n          __classPrivateFieldSet(this, _AnnotationLayerBuilder_onAppend, onAppend, \"f\");\n          this.annotationLayer = null;\n          this.div = null;\n          this._cancelled = false;\n          this._eventBus = (linkService === null || linkService === void 0 ? void 0 : linkService.eventBus) || eventBus;\n      }\n      /**\n       * @param {PageViewport} viewport\n       * @param {string} intent (default value is 'display')\n       * @returns {Promise<void>} A promise that is resolved when rendering of the\n       *   annotations is complete.\n       */\n      render(viewport_1) {\n          return __awaiter(this, arguments, void 0, function* (viewport, intent = \"display\") {\n              var _a, _b, _c;\n              if (this.div) {\n                  if (this._cancelled || !this.annotationLayer) {\n                      return;\n                  }\n                  // If an annotationLayer already exists, refresh its children's\n                  // transformation matrices.\n                  this.annotationLayer.update({\n                      viewport: viewport.clone({ dontFlip: true })\n                  });\n                  return;\n              }\n              // const [annotations, hasJSActions, fieldObjects] = await Promise.all([\n              const [annotations] = yield Promise.all([\n                  this.pdfPage.getAnnotations({ intent })\n                  // this._hasJSActionsPromise,\n                  // this._fieldObjectsPromise,\n              ]);\n              if (this._cancelled) {\n                  return;\n              }\n              // Create an annotation layer div and render the annotations\n              // if there is at least one annotation.\n              // const div = (this.div = document.createElement(\"div\"));\n              // div.className = \"annotationLayer\";\n              // this.#onAppend?.(div);\n              if (annotations.length === 0) {\n                  this.hide();\n                  return;\n              }\n              const page = this.pdfPage;\n              const pageView = (_a = page._pageInfo) === null || _a === void 0 ? void 0 : _a.view;\n              const pageWidthAnnotationLayer = (pageView[2] || 0) + \"px\";\n              const pageHeightAnnotationLayer = (pageView[3] || 0) + \"px\";\n              const div = convertToHtml(`\n            <div class=\"k-annotation-layer\"\n                 data-main-rotation=\"0\"\n                 style=\"width: round(var(--scale-factor) * ${pageWidthAnnotationLayer}, 1px);\n                        height: round(var(--scale-factor) * ${pageHeightAnnotationLayer}, 1px);\">\n            </div>\n        `);\n              this.div = div;\n              (_b = __classPrivateFieldGet(this, _AnnotationLayerBuilder_onAppend, \"f\")) === null || _b === void 0 ? void 0 : _b.call(this, div);\n              this.annotationLayer = new AnnotationLayer({\n                  div,\n                  accessibilityManager: this._accessibilityManager,\n                  // accessibilityManager: null,\n                  annotationCanvasMap: this._annotationCanvasMap,\n                  annotationEditorUIManager: this._annotationEditorUIManager,\n                  page: this.pdfPage,\n                  viewport: viewport.clone({ dontFlip: true })\n              });\n              yield this.annotationLayer.render({\n                  annotations,\n                  // imageResourcesPath: this.imageResourcesPath,\n                  renderForms: this.renderForms,\n                  linkService: this.linkService,\n                  // downloadManager: this.downloadManager,\n                  annotationStorage: this.annotationStorage\n                  // enableScripting: this.enableScripting,\n                  // hasJSActions,\n                  // fieldObjects,\n              });\n              // Ensure that interactive form elements in the annotationLayer are\n              // disabled while PresentationMode is active (see issue 12232).\n              if (this.linkService.isInPresentationMode) {\n                  __classPrivateFieldGet(this, _AnnotationLayerBuilder_instances, \"m\", _AnnotationLayerBuilder_updatePresentationModeState).call(this, PresentationModeState.FULLSCREEN);\n              }\n              if (!__classPrivateFieldGet(this, _AnnotationLayerBuilder_eventAbortController, \"f\")) {\n                  __classPrivateFieldSet(this, _AnnotationLayerBuilder_eventAbortController, new AbortController(), \"f\");\n                  (_c = this._eventBus) === null || _c === void 0 ? void 0 : _c._on(\"presentationmodechanged\", evt => {\n                      __classPrivateFieldGet(this, _AnnotationLayerBuilder_instances, \"m\", _AnnotationLayerBuilder_updatePresentationModeState).call(this, evt.state);\n                  }, { signal: __classPrivateFieldGet(this, _AnnotationLayerBuilder_eventAbortController, \"f\").signal });\n              }\n          });\n      }\n      cancel() {\n          var _a;\n          this._cancelled = true;\n          (_a = __classPrivateFieldGet(this, _AnnotationLayerBuilder_eventAbortController, \"f\")) === null || _a === void 0 ? void 0 : _a.abort();\n          __classPrivateFieldSet(this, _AnnotationLayerBuilder_eventAbortController, null, \"f\");\n      }\n      hide() {\n          if (!this.div) {\n              return;\n          }\n          this.div.hidden = true;\n      }\n      hasEditableAnnotations() {\n          var _a;\n          return !!((_a = this.annotationLayer) === null || _a === void 0 ? void 0 : _a.hasEditableAnnotations());\n      }\n      destroy() {\n          var _a, _b, _c;\n          this.cancel();\n          (_a = this.annotationLayer) === null || _a === void 0 ? void 0 : _a.destroy();\n          this.annotationLayer = null;\n          (_b = __classPrivateFieldGet(this, _AnnotationLayerBuilder_eventAbortController, \"f\")) === null || _b === void 0 ? void 0 : _b.abort();\n          __classPrivateFieldSet(this, _AnnotationLayerBuilder_eventAbortController, null, \"f\");\n          (_c = this.div) === null || _c === void 0 ? void 0 : _c.remove();\n          this.div = null;\n      }\n  }\n  _AnnotationLayerBuilder_onAppend = new WeakMap(), _AnnotationLayerBuilder_eventAbortController = new WeakMap(), _AnnotationLayerBuilder_instances = new WeakSet(), _AnnotationLayerBuilder_updatePresentationModeState = function _AnnotationLayerBuilder_updatePresentationModeState(state) {\n      if (!this.div) {\n          return;\n      }\n      let disableFormElements = false;\n      switch (state) {\n          case PresentationModeState.FULLSCREEN:\n              disableFormElements = true;\n              break;\n          case PresentationModeState.NORMAL:\n              break;\n          default:\n              return;\n      }\n      for (const section of this.div.childNodes) {\n          if (section.hasAttribute(\"data-internal-link\")) {\n              continue;\n          }\n          section.inert = disableFormElements;\n      }\n  };\n\n  /* Copyright 2023 Mozilla Foundation\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *     http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   * See the License for the specific language governing permissions and\n   * limitations under the License.\n   */\n  var _DrawLayer_instances, _a$5, _DrawLayer_parent, _DrawLayer_id, _DrawLayer_mapping, _DrawLayer_toUpdate, _DrawLayer_setBox, _DrawLayer_createSVG, _DrawLayer_createClipPath;\n  /**\n   * Manage the SVGs drawn on top of the page canvas.\n   * It's important to have them directly on top of the canvas because we want to\n   * be able to use mix-blend-mode for some of them.\n   */\n  class DrawLayer {\n      constructor({ pageIndex }) {\n          _DrawLayer_instances.add(this);\n          // todo: props\n          this.pageIndex = 0;\n          // todo: props\n          _DrawLayer_parent.set(this, null);\n          _DrawLayer_id.set(this, 0);\n          _DrawLayer_mapping.set(this, new Map());\n          _DrawLayer_toUpdate.set(this, new Map());\n          this.pageIndex = pageIndex;\n      }\n      setParent(parent) {\n          if (!__classPrivateFieldGet(this, _DrawLayer_parent, \"f\")) {\n              __classPrivateFieldSet(this, _DrawLayer_parent, parent, \"f\");\n              return;\n          }\n          if (__classPrivateFieldGet(this, _DrawLayer_parent, \"f\") !== parent) {\n              if (__classPrivateFieldGet(this, _DrawLayer_mapping, \"f\").size > 0) {\n                  for (const root of __classPrivateFieldGet(this, _DrawLayer_mapping, \"f\").values()) {\n                      root.remove();\n                      parent.append(root);\n                  }\n              }\n              __classPrivateFieldSet(this, _DrawLayer_parent, parent, \"f\");\n          }\n      }\n      static get _svgFactory() {\n          return kendo_pdfjs_loader_js.shadow(this, \"_svgFactory\", new kendo_pdfjs_loader_js.DOMSVGFactory());\n      }\n      highlight(outlines, color, opacity, isPathUpdatable = false) {\n          var _b, _c;\n          const id = (__classPrivateFieldSet(this, _DrawLayer_id, (_c = __classPrivateFieldGet(this, _DrawLayer_id, \"f\"), _b = _c++, _c), \"f\"), _b);\n          const root = __classPrivateFieldGet(this, _DrawLayer_instances, \"m\", _DrawLayer_createSVG).call(this, outlines.box);\n          // root.classList.add(\"highlight\");\n          root.classList.add(\"k-highlight\");\n          if (outlines.free) {\n              // root.classList.add(\"free\");\n          }\n          const defs = _a$5._svgFactory.createElement(\"defs\");\n          root.append(defs);\n          const path = _a$5._svgFactory.createElement(\"path\");\n          defs.append(path);\n          const pathId = `path_p${this.pageIndex}_${id}`;\n          path.setAttribute(\"id\", pathId);\n          path.setAttribute(\"d\", outlines.toSVGPath());\n          if (isPathUpdatable) {\n              __classPrivateFieldGet(this, _DrawLayer_toUpdate, \"f\").set(id, path);\n          }\n          // Create the clipping path for the editor div.\n          const clipPathId = __classPrivateFieldGet(this, _DrawLayer_instances, \"m\", _DrawLayer_createClipPath).call(this, defs, pathId);\n          const use = _a$5._svgFactory.createElement(\"use\");\n          root.append(use);\n          root.setAttribute(\"fill\", color);\n          root.setAttribute(\"fill-opacity\", opacity);\n          use.setAttribute(\"href\", `#${pathId}`);\n          __classPrivateFieldGet(this, _DrawLayer_mapping, \"f\").set(id, root);\n          return { id, clipPathId: `url(#${clipPathId})` };\n      }\n      highlightOutline(outlines) {\n          var _b, _c;\n          // We cannot draw the outline directly in the SVG for highlights because\n          // it composes with its parent with mix-blend-mode: multiply.\n          // But the outline has a different mix-blend-mode, so we need to draw it in\n          // its own SVG.\n          const id = (__classPrivateFieldSet(this, _DrawLayer_id, (_c = __classPrivateFieldGet(this, _DrawLayer_id, \"f\"), _b = _c++, _c), \"f\"), _b);\n          const root = __classPrivateFieldGet(this, _DrawLayer_instances, \"m\", _DrawLayer_createSVG).call(this, outlines.box);\n          // root.classList.add(\"highlightOutline\");\n          root.classList.add(\"k-highlight-outline\");\n          const defs = _a$5._svgFactory.createElement(\"defs\");\n          root.append(defs);\n          const path = _a$5._svgFactory.createElement(\"path\");\n          defs.append(path);\n          const pathId = `path_p${this.pageIndex}_${id}`;\n          path.setAttribute(\"id\", pathId);\n          path.setAttribute(\"d\", outlines.toSVGPath());\n          path.setAttribute(\"vector-effect\", \"non-scaling-stroke\");\n          let maskId;\n          if (outlines.free) {\n              // root.classList.add(\"free\");\n              const mask = _a$5._svgFactory.createElement(\"mask\");\n              defs.append(mask);\n              maskId = `mask_p${this.pageIndex}_${id}`;\n              mask.setAttribute(\"id\", maskId);\n              mask.setAttribute(\"maskUnits\", \"objectBoundingBox\");\n              const rect = _a$5._svgFactory.createElement(\"rect\");\n              mask.append(rect);\n              rect.setAttribute(\"width\", \"1\");\n              rect.setAttribute(\"height\", \"1\");\n              rect.setAttribute(\"fill\", \"white\");\n              const use = _a$5._svgFactory.createElement(\"use\");\n              mask.append(use);\n              use.setAttribute(\"href\", `#${pathId}`);\n              use.setAttribute(\"stroke\", \"none\");\n              use.setAttribute(\"fill\", \"black\");\n              use.setAttribute(\"fill-rule\", \"nonzero\");\n              // use.classList.add(\"mask\");\n          }\n          const use1 = _a$5._svgFactory.createElement(\"use\");\n          root.append(use1);\n          use1.setAttribute(\"href\", `#${pathId}`);\n          if (maskId) {\n              use1.setAttribute(\"mask\", `url(#${maskId})`);\n          }\n          const use2 = use1.cloneNode();\n          root.append(use2);\n          // use1.classList.add(\"mainOutline\");\n          // use2.classList.add(\"secondaryOutline\");\n          __classPrivateFieldGet(this, _DrawLayer_mapping, \"f\").set(id, root);\n          return id;\n      }\n      finalizeLine(id, line) {\n          const path = __classPrivateFieldGet(this, _DrawLayer_toUpdate, \"f\").get(id);\n          __classPrivateFieldGet(this, _DrawLayer_toUpdate, \"f\").delete(id);\n          this.updateBox(id, line.box);\n          path.setAttribute(\"d\", line.toSVGPath());\n      }\n      updateLine(id, line) {\n          const root = __classPrivateFieldGet(this, _DrawLayer_mapping, \"f\").get(id);\n          const defs = root.firstChild;\n          const path = defs.firstChild;\n          path.setAttribute(\"d\", line.toSVGPath());\n      }\n      removeFreeHighlight(id) {\n          this.remove(id);\n          __classPrivateFieldGet(this, _DrawLayer_toUpdate, \"f\").delete(id);\n      }\n      updatePath(id, line) {\n          __classPrivateFieldGet(this, _DrawLayer_toUpdate, \"f\").get(id).setAttribute(\"d\", line.toSVGPath());\n      }\n      updateBox(id, box) {\n          __classPrivateFieldGet(_a$5, _a$5, \"m\", _DrawLayer_setBox).call(_a$5, __classPrivateFieldGet(this, _DrawLayer_mapping, \"f\").get(id), box);\n      }\n      show(id, visible) {\n          // this.#mapping.get(id).classList.toggle(\"hidden\", !visible);\n          __classPrivateFieldGet(this, _DrawLayer_mapping, \"f\").get(id).classList.toggle(\"k-hidden\", !visible);\n      }\n      rotate(id, angle) {\n          __classPrivateFieldGet(this, _DrawLayer_mapping, \"f\").get(id).setAttribute(\"data-main-rotation\", angle);\n      }\n      changeColor(id, color) {\n          __classPrivateFieldGet(this, _DrawLayer_mapping, \"f\").get(id).setAttribute(\"fill\", color);\n      }\n      changeOpacity(id, opacity) {\n          __classPrivateFieldGet(this, _DrawLayer_mapping, \"f\").get(id).setAttribute(\"fill-opacity\", opacity);\n      }\n      addClass(id, className) {\n          __classPrivateFieldGet(this, _DrawLayer_mapping, \"f\").get(id).classList.add(className);\n      }\n      removeClass(id, className) {\n          __classPrivateFieldGet(this, _DrawLayer_mapping, \"f\").get(id).classList.remove(className);\n      }\n      remove(id) {\n          if (__classPrivateFieldGet(this, _DrawLayer_parent, \"f\") === null) {\n              return;\n          }\n          __classPrivateFieldGet(this, _DrawLayer_mapping, \"f\").get(id).remove();\n          __classPrivateFieldGet(this, _DrawLayer_mapping, \"f\").delete(id);\n      }\n      destroy() {\n          __classPrivateFieldSet(this, _DrawLayer_parent, null, \"f\");\n          for (const root of __classPrivateFieldGet(this, _DrawLayer_mapping, \"f\").values()) {\n              root.remove();\n          }\n          __classPrivateFieldGet(this, _DrawLayer_mapping, \"f\").clear();\n      }\n  }\n  _a$5 = DrawLayer, _DrawLayer_parent = new WeakMap(), _DrawLayer_id = new WeakMap(), _DrawLayer_mapping = new WeakMap(), _DrawLayer_toUpdate = new WeakMap(), _DrawLayer_instances = new WeakSet(), _DrawLayer_setBox = function _DrawLayer_setBox(element, { x = 0, y = 0, width = 1, height = 1 } = {}) {\n      const { style } = element;\n      style.top = `${100 * y}%`;\n      style.left = `${100 * x}%`;\n      // style.width = `${100 * width}%`;\n      // style.height = `${100 * height}%`;\n      // todo: reduce the dimensions, so that the annotation editor toolbar\n      // does not overlap the outline\n      style.width = `${100 * width - 0.2}%`;\n      style.height = `${100 * height - 0.2}%`;\n  }, _DrawLayer_createSVG = function _DrawLayer_createSVG(box) {\n      const svg = _a$5._svgFactory.create(1, 1, /* skipDimensions = */ true);\n      __classPrivateFieldGet(this, _DrawLayer_parent, \"f\").append(svg);\n      svg.setAttribute(\"aria-hidden\", true);\n      __classPrivateFieldGet(_a$5, _a$5, \"m\", _DrawLayer_setBox).call(_a$5, svg, box);\n      return svg;\n  }, _DrawLayer_createClipPath = function _DrawLayer_createClipPath(defs, pathId) {\n      const clipPath = _a$5._svgFactory.createElement(\"clipPath\");\n      defs.append(clipPath);\n      const clipPathId = `clip_${pathId}`;\n      clipPath.setAttribute(\"id\", clipPathId);\n      clipPath.setAttribute(\"clipPathUnits\", \"objectBoundingBox\");\n      const clipPathUse = _a$5._svgFactory.createElement(\"use\");\n      clipPath.append(clipPathUse);\n      clipPathUse.setAttribute(\"href\", `#${pathId}`);\n      // clipPathUse.classList.add(\"clip\");\n      return clipPathId;\n  };\n\n  /* Copyright 2022 Mozilla Foundation\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *     http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   * See the License for the specific language governing permissions and\n   * limitations under the License.\n   */\n  var _DrawLayerBuilder_drawLayer;\n  /**\n   * @typedef {Object} DrawLayerBuilderOptions\n   * @property {number} pageIndex\n   */\n  class DrawLayerBuilder {\n      /**\n       * @param {DrawLayerBuilderOptions} options\n       */\n      constructor(options) {\n          // todo: props\n          this.pageIndex = null;\n          this._cancelled = null;\n          // todo: props\n          _DrawLayerBuilder_drawLayer.set(this, null);\n          this.pageIndex = options.pageIndex;\n      }\n      /**\n       * @param {string} intent (default value is 'display')\n       */\n      render() {\n          return __awaiter(this, arguments, void 0, function* (intent = \"display\") {\n              // if (intent !== \"display\" || this.#drawLayer || this._cancelled) {\n              if (intent !== \"display\" || __classPrivateFieldGet(this, _DrawLayerBuilder_drawLayer, \"f\")) {\n                  return;\n              }\n              __classPrivateFieldSet(this, _DrawLayerBuilder_drawLayer, new DrawLayer({\n                  pageIndex: this.pageIndex\n              }), \"f\");\n          });\n      }\n      cancel() {\n          // this._cancelled = true;\n          var _a;\n          if (!__classPrivateFieldGet(this, _DrawLayerBuilder_drawLayer, \"f\")) {\n              return;\n          }\n          (_a = __classPrivateFieldGet(this, _DrawLayerBuilder_drawLayer, \"f\")) === null || _a === void 0 ? void 0 : _a.destroy();\n          __classPrivateFieldSet(this, _DrawLayerBuilder_drawLayer, null, \"f\");\n      }\n      setParent(parent) {\n          var _a;\n          (_a = __classPrivateFieldGet(this, _DrawLayerBuilder_drawLayer, \"f\")) === null || _a === void 0 ? void 0 : _a.setParent(parent);\n      }\n      getDrawLayer() {\n          return __classPrivateFieldGet(this, _DrawLayerBuilder_drawLayer, \"f\");\n      }\n      destroy() {\n          this.cancel();\n      }\n  }\n  _DrawLayerBuilder_drawLayer = new WeakMap();\n\n  /* Copyright 2022 Mozilla Foundation\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *     http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   * See the License for the specific language governing permissions and\n   * limitations under the License.\n   */\n  var _FreeTextEditor_instances, _a$4, _FreeTextEditor_color, _FreeTextEditor_content, _FreeTextEditor_editorDivId, _FreeTextEditor_editModeAC, _FreeTextEditor_fontSize, _FreeTextEditor_initialData, _FreeTextEditor_updateFontSize, _FreeTextEditor_updateColor, _FreeTextEditor_extractText, _FreeTextEditor_setEditorDimensions, _FreeTextEditor_getNodeContent, _FreeTextEditor_setContent, _FreeTextEditor_serializeContent, _FreeTextEditor_deserializeContent, _FreeTextEditor_hasElementChanged;\n  // import { FreeTextAnnotationElement } from \"../annotation-layer\";\n  const EOL_PATTERN = /\\r\\n?|\\n/g;\n  class FreeTextEditor extends AnnotationEditor {\n      constructor(params) {\n          super(Object.assign(Object.assign({}, params), { name: \"k-free-text-editor freeTextEditor\" }));\n          _FreeTextEditor_instances.add(this);\n          // todo: props\n          this.editorDiv = null;\n          this.overlayDiv = null;\n          // todo: props\n          _FreeTextEditor_color.set(this, void 0);\n          _FreeTextEditor_content.set(this, \"\");\n          _FreeTextEditor_editorDivId.set(this, `${this.id}-editor`);\n          _FreeTextEditor_editModeAC.set(this, null);\n          _FreeTextEditor_fontSize.set(this, void 0);\n          _FreeTextEditor_initialData.set(this, null);\n          __classPrivateFieldSet(this, _FreeTextEditor_color, params.color ||\n              _a$4._defaultColor ||\n              AnnotationEditor._defaultLineColor, \"f\");\n          __classPrivateFieldSet(this, _FreeTextEditor_fontSize, params.fontSize || _a$4._defaultFontSize, \"f\");\n      }\n      /** @inheritdoc */\n      static initialize(l10n, uiManager) {\n          AnnotationEditor.initialize(l10n, uiManager, {\n              strings: [\"pdfjs-free-text-default-content\"]\n          });\n          const style = getComputedStyle(document.documentElement);\n          // if (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"TESTING\")) {\n          //     const lineHeight = parseFloat(\n          //         style.getPropertyValue(\"--freetext-line-height\")\n          //     );\n          //     assert(\n          //         lineHeight === LINE_FACTOR,\n          //         \"Update the CSS variable to agree with the constant.\"\n          //     );\n          // }\n          // todo: read the variable\n          this._internalPadding = parseFloat(style.getPropertyValue(\"--freetext-padding\")) || 2;\n      }\n      /** @inheritdoc */\n      static updateDefaultParams(type, value) {\n          switch (type) {\n              case kendo_pdfjs_loader_js.AnnotationEditorParamsType.FREETEXT_SIZE:\n                  _a$4._defaultFontSize = value;\n                  break;\n              case kendo_pdfjs_loader_js.AnnotationEditorParamsType.FREETEXT_COLOR:\n                  _a$4._defaultColor = value;\n                  break;\n              default: break;\n          }\n      }\n      /** @inheritdoc */\n      updateParams(type, value) {\n          switch (type) {\n              case kendo_pdfjs_loader_js.AnnotationEditorParamsType.FREETEXT_SIZE:\n                  __classPrivateFieldGet(this, _FreeTextEditor_instances, \"m\", _FreeTextEditor_updateFontSize).call(this, value);\n                  break;\n              case kendo_pdfjs_loader_js.AnnotationEditorParamsType.FREETEXT_COLOR:\n                  __classPrivateFieldGet(this, _FreeTextEditor_instances, \"m\", _FreeTextEditor_updateColor).call(this, value);\n                  break;\n              default: break;\n          }\n      }\n      /** @inheritdoc */\n      static get defaultPropertiesToUpdate() {\n          return [\n              [\n                  kendo_pdfjs_loader_js.AnnotationEditorParamsType.FREETEXT_SIZE,\n                  _a$4._defaultFontSize\n              ],\n              [\n                  kendo_pdfjs_loader_js.AnnotationEditorParamsType.FREETEXT_COLOR,\n                  _a$4._defaultColor || AnnotationEditor._defaultLineColor\n              ]\n          ];\n      }\n      /** @inheritdoc */\n      get propertiesToUpdate() {\n          return [\n              [kendo_pdfjs_loader_js.AnnotationEditorParamsType.FREETEXT_SIZE, __classPrivateFieldGet(this, _FreeTextEditor_fontSize, \"f\")],\n              [kendo_pdfjs_loader_js.AnnotationEditorParamsType.FREETEXT_COLOR, __classPrivateFieldGet(this, _FreeTextEditor_color, \"f\")]\n          ];\n      }\n      /**\n       * Helper to translate the editor with the keyboard when it's empty.\n       * @param {number} x in page units.\n       * @param {number} y in page units.\n       */\n      _translateEmpty(x, y) {\n          this._uiManager.translateSelectedEditors(x, y, /* noCommit = */ true);\n      }\n      getInitialTranslation() {\n          // The start of the base line is where the user clicked.\n          const scale = this.parentScale;\n          return [\n              -_a$4._internalPadding * scale,\n              -(_a$4._internalPadding + __classPrivateFieldGet(this, _FreeTextEditor_fontSize, \"f\")) * scale\n          ];\n      }\n      /** @inheritdoc */\n      rebuild() {\n          if (!this.parent) {\n              return;\n          }\n          super.rebuild();\n          if (this.div === null) {\n              return;\n          }\n          if (!this.isAttachedToDOM) {\n              // At some point this editor was removed and we're rebuilting it,\n              // hence we must add it to its parent.\n              this.parent.add(this);\n          }\n      }\n      enableEditMode() {\n          if (this.isInEditMode()) {\n              return;\n          }\n          this.parent.setEditingState(false);\n          this.parent.updateToolbar(kendo_pdfjs_loader_js.AnnotationEditorType.FREETEXT);\n          super.enableEditMode();\n          this.overlayDiv.classList.remove(\"enabled\");\n          this.editorDiv.contentEditable = true;\n          this._isDraggable = false;\n          this.div.removeAttribute(\"aria-activedescendant\");\n          // if (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"TESTING\")) {\n          //     assert(\n          //         !this.#editModeAC,\n          //         \"No `this.#editModeAC` AbortController should exist.\"\n          //     );\n          // }\n          __classPrivateFieldSet(this, _FreeTextEditor_editModeAC, new AbortController(), \"f\");\n          const signal = this._uiManager.combinedSignal(__classPrivateFieldGet(this, _FreeTextEditor_editModeAC, \"f\"));\n          this.editorDiv.addEventListener(\"keydown\", this.editorDivKeydown.bind(this), { signal });\n          this.editorDiv.addEventListener(\"focus\", this.editorDivFocus.bind(this), {\n              signal\n          });\n          this.editorDiv.addEventListener(\"blur\", this.editorDivBlur.bind(this), {\n              signal\n          });\n          this.editorDiv.addEventListener(\"input\", this.editorDivInput.bind(this), {\n              signal\n          });\n          this.editorDiv.addEventListener(\"paste\", this.editorDivPaste.bind(this), {\n              signal\n          });\n      }\n      disableEditMode() {\n          var _b;\n          if (!this.isInEditMode()) {\n              return;\n          }\n          this.parent.setEditingState(true);\n          super.disableEditMode();\n          // this.overlayDiv.classList.add(\"enabled\");\n          this.editorDiv.contentEditable = false;\n          this.div.setAttribute(\"aria-activedescendant\", __classPrivateFieldGet(this, _FreeTextEditor_editorDivId, \"f\"));\n          this._isDraggable = true;\n          (_b = __classPrivateFieldGet(this, _FreeTextEditor_editModeAC, \"f\")) === null || _b === void 0 ? void 0 : _b.abort();\n          __classPrivateFieldSet(this, _FreeTextEditor_editModeAC, null, \"f\");\n          // On Chrome, the focus is given to <body> when contentEditable is set to\n          // false, hence we focus the div.\n          this.div.focus({\n              preventScroll: true /* See issue #15744 */\n          });\n          // In case the blur callback hasn't been called.\n          this.isEditing = false;\n          // this.parent.div.classList.add(\"freetextEditing\");\n      }\n      focusin(event) {\n          var _b;\n          if (!this._focusEventsAllowed) {\n              return;\n          }\n          if (((_b = this._uiManager) === null || _b === void 0 ? void 0 : _b.getMode()) !== kendo_pdfjs_loader_js.AnnotationEditorType.FREETEXT) {\n              // prevent focusing the freetext editor while in highlight mode\n              // in pdf.js this situation does free highlight annotation isntead\n              // which is not currently implemented\n              return;\n          }\n          super.focusin(event);\n          if (event.target !== this.editorDiv) {\n              this.editorDiv.focus();\n          }\n      }\n      /** @inheritdoc */\n      onceAdded() {\n          var _b;\n          if (this.width) {\n              // The editor was created in using ctrl+c.\n              return;\n          }\n          this.enableEditMode();\n          this.editorDiv.focus();\n          if ((_b = this._initialOptions) === null || _b === void 0 ? void 0 : _b.isCentered) {\n              this.center();\n          }\n          this._initialOptions = null;\n      }\n      /** @inheritdoc */\n      isEmpty() {\n          var _b, _c;\n          return !this.editorDiv || ((_c = (_b = this.editorDiv) === null || _b === void 0 ? void 0 : _b.innerText) === null || _c === void 0 ? void 0 : _c.trim()) === \"\";\n      }\n      /** @inheritdoc */\n      remove() {\n          this.isEditing = false;\n          if (this.parent) {\n              this.parent.setEditingState(true);\n              // this.parent.div.classList.add(\"freetextEditing\");\n          }\n          super.remove();\n      }\n      /**\n       * Commit the content we have in this editor.\n       * @returns {undefined}\n       */\n      commit() {\n          if (!this.isInEditMode()) {\n              return;\n          }\n          super.commit();\n          this.disableEditMode();\n          const savedText = __classPrivateFieldGet(this, _FreeTextEditor_content, \"f\");\n          const newText = (__classPrivateFieldSet(this, _FreeTextEditor_content, __classPrivateFieldGet(this, _FreeTextEditor_instances, \"m\", _FreeTextEditor_extractText).call(this).trimEnd(), \"f\"));\n          if (savedText === newText) {\n              return;\n          }\n          const setText = text => {\n              __classPrivateFieldSet(this, _FreeTextEditor_content, text, \"f\");\n              if (!text) {\n                  this.remove();\n                  return;\n              }\n              __classPrivateFieldGet(this, _FreeTextEditor_instances, \"m\", _FreeTextEditor_setContent).call(this);\n              this._uiManager.rebuild(this);\n              __classPrivateFieldGet(this, _FreeTextEditor_instances, \"m\", _FreeTextEditor_setEditorDimensions).call(this);\n          };\n          this.addCommands({\n              cmd: () => {\n                  setText(newText);\n              },\n              undo: () => {\n                  setText(savedText);\n              },\n              mustExec: false\n          });\n          __classPrivateFieldGet(this, _FreeTextEditor_instances, \"m\", _FreeTextEditor_setEditorDimensions).call(this);\n      }\n      /** @inheritdoc */\n      shouldGetKeyboardEvents() {\n          return this.isInEditMode();\n      }\n      /** @inheritdoc */\n      enterInEditMode() {\n          this.enableEditMode();\n          this.editorDiv.focus();\n      }\n      /**\n       * ondblclick callback.\n       * @param {MouseEvent} event\n       */\n      dblclick(event) {\n          if (!event) {\n              return;\n          }\n          this.enterInEditMode();\n      }\n      /**\n       * onkeydown callback.\n       * @param {KeyboardEvent} event\n       */\n      keydown(event) {\n          if (event.target === this.div && event.key === \"Enter\") {\n              this.enterInEditMode();\n              // Avoid to add an unwanted new line.\n              event.preventDefault();\n          }\n      }\n      editorDivKeydown() {\n          // FreeTextEditor._keyboardManager.exec(this, event);\n      }\n      editorDivFocus() {\n          this.isEditing = true;\n      }\n      editorDivBlur() {\n          this.isEditing = false;\n      }\n      editorDivInput() {\n          // this.parent.div.classList.toggle(\"freetextEditing\", this.isEmpty());\n      }\n      /** @inheritdoc */\n      disableEditing() {\n          this.editorDiv.setAttribute(\"role\", \"comment\");\n          this.editorDiv.removeAttribute(\"aria-multiline\");\n      }\n      /** @inheritdoc */\n      enableEditing() {\n          this.editorDiv.setAttribute(\"role\", \"textbox\");\n          this.editorDiv.setAttribute(\"aria-multiline\", true);\n      }\n      /** @inheritdoc */\n      render() {\n          var _b;\n          if (this.div) {\n              return this.div;\n          }\n          let baseX, baseY;\n          if (this.width) {\n              baseX = this.x;\n              baseY = this.y;\n          }\n          super.render();\n          this.editorDiv = document.createElement(\"div\");\n          this.editorDiv.className = \"k-internal internal\";\n          // todo: move to CSS\n          // this.editorDiv.style.position = \"absolute\";\n          // this.div.style.position = \"absolute\";\n          this.editorDiv.setAttribute(\"id\", __classPrivateFieldGet(this, _FreeTextEditor_editorDivId, \"f\"));\n          this.editorDiv.setAttribute(\"data-l10n-id\", \"pdfjs-free-text\");\n          this.enableEditing();\n          // AnnotationEditor._l10nPromise\n          //     .get(\"pdfjs-free-text-default-content\")\n          //     .then(msg => this.editorDiv?.setAttribute(\"default-content\", msg));\n          // todo: fix localization\n          (_b = this.editorDiv) === null || _b === void 0 ? void 0 : _b.setAttribute(\"default-content\", this._uiManager.pdfViewer.options.messages.freeTextEditorPlaceholder);\n          this.editorDiv.contentEditable = true;\n          const { style } = this.editorDiv;\n          style.fontSize = `calc(${__classPrivateFieldGet(this, _FreeTextEditor_fontSize, \"f\")}px * var(--scale-factor))`;\n          style.color = __classPrivateFieldGet(this, _FreeTextEditor_color, \"f\");\n          this.div.append(this.editorDiv);\n          this.overlayDiv = document.createElement(\"div\");\n          // this.overlayDiv.classList.add(\"overlay\", \"enabled\");\n          this.div.append(this.overlayDiv);\n          bindEvents(this, this.div, [\"dblclick\", \"keydown\"]);\n          if (this.width) {\n              // This editor was created in using copy (ctrl+c).\n              const [parentWidth, parentHeight] = this.parentDimensions;\n              if (this.annotationElementId) {\n                  // This stuff is hard to test: if something is changed here, please\n                  // test with the following PDF file:\n                  //  - freetexts.pdf\n                  //  - rotated_freetexts.pdf\n                  // Only small variations between the original annotation and its editor\n                  // are allowed.\n                  // position is the position of the first glyph in the annotation\n                  // and it's relative to its container.\n                  const { position } = __classPrivateFieldGet(this, _FreeTextEditor_initialData, \"f\");\n                  let [tx, ty] = this.getInitialTranslation();\n                  [tx, ty] = this.pageTranslationToScreen(tx, ty);\n                  const [pageWidth, pageHeight] = this.pageDimensions;\n                  const [pageX, pageY] = this.pageTranslation;\n                  let posX, posY;\n                  switch (this.rotation) {\n                      case 0:\n                          posX = baseX + (position[0] - pageX) / pageWidth;\n                          posY = baseY + this.height - (position[1] - pageY) / pageHeight;\n                          break;\n                      case 90:\n                          posX = baseX + (position[0] - pageX) / pageWidth;\n                          posY = baseY - (position[1] - pageY) / pageHeight;\n                          [tx, ty] = [ty, -tx];\n                          break;\n                      case 180:\n                          posX = baseX - this.width + (position[0] - pageX) / pageWidth;\n                          posY = baseY - (position[1] - pageY) / pageHeight;\n                          [tx, ty] = [-tx, -ty];\n                          break;\n                      case 270:\n                          posX =\n                              baseX +\n                                  (position[0] - pageX - this.height * pageHeight) / pageWidth;\n                          posY =\n                              baseY +\n                                  (position[1] - pageY - this.width * pageWidth) / pageHeight;\n                          [tx, ty] = [-ty, tx];\n                          break;\n                      default: break;\n                  }\n                  this.setAt(posX * parentWidth, posY * parentHeight, tx, ty);\n              }\n              else {\n                  this.setAt(baseX * parentWidth, baseY * parentHeight, this.width * parentWidth, this.height * parentHeight);\n              }\n              __classPrivateFieldGet(this, _FreeTextEditor_instances, \"m\", _FreeTextEditor_setContent).call(this);\n              this._isDraggable = true;\n              this.editorDiv.contentEditable = false;\n          }\n          else {\n              this._isDraggable = false;\n              this.editorDiv.contentEditable = true;\n          }\n          // if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"TESTING\")) {\n          //     this.div.setAttribute(\"annotation-id\", this.annotationElementId);\n          // }\n          return this.div;\n      }\n      editorDivPaste(event) {\n          // @ts-expect-error TS(2551):\n          const clipboardData = event.clipboardData || window.clipboardData;\n          const { types } = clipboardData;\n          if (types.length === 1 && types[0] === \"text/plain\") {\n              return;\n          }\n          event.preventDefault();\n          const paste = __classPrivateFieldGet(_a$4, _a$4, \"m\", _FreeTextEditor_deserializeContent).call(_a$4, clipboardData.getData(\"text\") || \"\").replaceAll(EOL_PATTERN, \"\\n\");\n          if (!paste) {\n              return;\n          }\n          const selection = window.getSelection();\n          if (!selection.rangeCount) {\n              return;\n          }\n          this.editorDiv.normalize();\n          selection.deleteFromDocument();\n          const range = selection.getRangeAt(0);\n          if (!paste.includes(\"\\n\")) {\n              range.insertNode(document.createTextNode(paste));\n              this.editorDiv.normalize();\n              selection.collapseToStart();\n              return;\n          }\n          // Collect the text before and after the caret.\n          const { startContainer, startOffset } = range;\n          const bufferBefore = [];\n          const bufferAfter = [];\n          if (startContainer.nodeType === Node.TEXT_NODE) {\n              const parent = startContainer.parentElement;\n              bufferAfter.push(\n              // @ts-expect-error TS(2556):\n              startContainer.nodeValue.slice(startOffset).replaceAll(EOL_PATTERN, \"\"));\n              if (parent !== this.editorDiv) {\n                  let buffer = bufferBefore;\n                  for (const child of this.editorDiv.childNodes) {\n                      if (child === parent) {\n                          buffer = bufferAfter;\n                          continue;\n                      }\n                      buffer.push(__classPrivateFieldGet(_a$4, _a$4, \"m\", _FreeTextEditor_getNodeContent).call(_a$4, child));\n                  }\n              }\n              bufferBefore.push(startContainer.nodeValue\n                  .slice(0, startOffset)\n                  // @ts-expect-error TS(2556):\n                  .replaceAll(EOL_PATTERN, \"\"));\n          }\n          else if (startContainer === this.editorDiv) {\n              let buffer = bufferBefore;\n              let i = 0;\n              for (const child of this.editorDiv.childNodes) {\n                  if (i++ === startOffset) {\n                      buffer = bufferAfter;\n                  }\n                  buffer.push(__classPrivateFieldGet(_a$4, _a$4, \"m\", _FreeTextEditor_getNodeContent).call(_a$4, child));\n              }\n          }\n          __classPrivateFieldSet(this, _FreeTextEditor_content, `${bufferBefore.join(\"\\n\")}${paste}${bufferAfter.join(\"\\n\")}`, \"f\");\n          __classPrivateFieldGet(this, _FreeTextEditor_instances, \"m\", _FreeTextEditor_setContent).call(this);\n          // Set the caret at the right position.\n          const newRange = new Range();\n          let beforeLength = bufferBefore.reduce((acc, line) => acc + line.length, 0);\n          for (const { firstChild } of this.editorDiv.childNodes) {\n              // Each child is either a div with a text node or a br element.\n              if (firstChild.nodeType === Node.TEXT_NODE) {\n                  const length = firstChild.nodeValue.length;\n                  if (beforeLength <= length) {\n                      newRange.setStart(firstChild, beforeLength);\n                      newRange.setEnd(firstChild, beforeLength);\n                      break;\n                  }\n                  beforeLength -= length;\n              }\n          }\n          selection.removeAllRanges();\n          selection.addRange(newRange);\n      }\n      /** @inheritdoc */\n      get contentDiv() {\n          return this.editorDiv;\n      }\n      /** @inheritdoc */\n      static deserialize(data, parent, uiManager) {\n          let initialData = null;\n          if (data instanceof FreeTextAnnotationElement) {\n              const { data: { defaultAppearanceData: { fontSize, fontColor }, rect, rotation, id }, textContent, textPosition, parent: { page: { pageNumber } } } = data;\n              // textContent is supposed to be an array of strings containing each line\n              // of text. However, it can be null or empty.\n              if (!textContent || textContent.length === 0) {\n                  // Empty annotation.\n                  return null;\n              }\n              initialData = data = {\n                  annotationType: kendo_pdfjs_loader_js.AnnotationEditorType.FREETEXT,\n                  color: Array.from(fontColor),\n                  fontSize,\n                  value: textContent.join(\"\\n\"),\n                  position: textPosition,\n                  pageIndex: pageNumber - 1,\n                  rect: rect.slice(0),\n                  rotation,\n                  id,\n                  deleted: false\n              };\n          }\n          const editor = super.deserialize(data, parent, uiManager);\n          __classPrivateFieldSet(editor, _FreeTextEditor_fontSize, data.fontSize, \"f\");\n          // @ts-expect-error TS(2556):\n          __classPrivateFieldSet(editor, _FreeTextEditor_color, kendo_pdfjs_loader_js.Util.makeHexColor(...data.color), \"f\");\n          __classPrivateFieldSet(editor, _FreeTextEditor_content, __classPrivateFieldGet(_a$4, _a$4, \"m\", _FreeTextEditor_deserializeContent).call(_a$4, data.value), \"f\");\n          editor.annotationElementId = data.id || null;\n          __classPrivateFieldSet(editor, _FreeTextEditor_initialData, initialData, \"f\");\n          return editor;\n      }\n      /** @inheritdoc */\n      serialize(isForCopying = false) {\n          if (this.isEmpty()) {\n              return null;\n          }\n          if (this.deleted) {\n              return {\n                  pageIndex: this.pageIndex,\n                  id: this.annotationElementId,\n                  deleted: true\n              };\n          }\n          const padding = _a$4._internalPadding * this.parentScale;\n          const rect = this.getRect(padding, padding);\n          const color = AnnotationEditor._colorManager.convert(this.isAttachedToDOM\n              ? getComputedStyle(this.editorDiv).color\n              : __classPrivateFieldGet(this, _FreeTextEditor_color, \"f\"));\n          const serialized = {\n              annotationType: kendo_pdfjs_loader_js.AnnotationEditorType.FREETEXT,\n              color,\n              fontSize: __classPrivateFieldGet(this, _FreeTextEditor_fontSize, \"f\"),\n              value: __classPrivateFieldGet(this, _FreeTextEditor_instances, \"m\", _FreeTextEditor_serializeContent).call(this),\n              pageIndex: this.pageIndex,\n              rect,\n              rotation: this.rotation,\n              structTreeParentId: this._structTreeParentId\n          };\n          if (isForCopying) {\n              // Don't add the id when copying because the pasted editor mustn't be\n              // linked to an existing annotation.\n              return serialized;\n          }\n          if (this.annotationElementId && !__classPrivateFieldGet(this, _FreeTextEditor_instances, \"m\", _FreeTextEditor_hasElementChanged).call(this, serialized)) {\n              return null;\n          }\n          // @ts-expect-error TS(2556):\n          serialized.id = this.annotationElementId;\n          return serialized;\n      }\n      /** @inheritdoc */\n      renderAnnotationElement(annotation) {\n          const content = super.renderAnnotationElement(annotation);\n          if (this.deleted) {\n              return content;\n          }\n          const { style } = content;\n          style.fontSize = `calc(${__classPrivateFieldGet(this, _FreeTextEditor_fontSize, \"f\")}px * var(--scale-factor))`;\n          style.color = __classPrivateFieldGet(this, _FreeTextEditor_color, \"f\");\n          content.replaceChildren();\n          for (const line of __classPrivateFieldGet(this, _FreeTextEditor_content, \"f\").split(\"\\n\")) {\n              const div = document.createElement(\"div\");\n              div.append(line ? document.createTextNode(line) : document.createElement(\"br\"));\n              content.append(div);\n          }\n          const padding = _a$4._internalPadding * this.parentScale;\n          annotation.updateEdited({\n              rect: this.getRect(padding, padding),\n              popupContent: __classPrivateFieldGet(this, _FreeTextEditor_content, \"f\")\n          });\n          return content;\n      }\n      resetAnnotationElement(annotation) {\n          super.resetAnnotationElement(annotation);\n          annotation.resetEdited();\n      }\n      // todo: this is necessary\n      // saveDocument() has checks that test \"editor instanceof AnnotationEditor\", but they fail\n      // because AnnotationEditor from \"pdfjs-dist/legacy/build/pdf.mjs\" is not exported\n      // thus replace instances of editors with their serialized version\n      toJSON() {\n          const data = this.serialize();\n          return data;\n      }\n  }\n  _a$4 = FreeTextEditor, _FreeTextEditor_color = new WeakMap(), _FreeTextEditor_content = new WeakMap(), _FreeTextEditor_editorDivId = new WeakMap(), _FreeTextEditor_editModeAC = new WeakMap(), _FreeTextEditor_fontSize = new WeakMap(), _FreeTextEditor_initialData = new WeakMap(), _FreeTextEditor_instances = new WeakSet(), _FreeTextEditor_updateFontSize = function _FreeTextEditor_updateFontSize(fontSize) {\n      const setFontsize = size => {\n          this.editorDiv.style.fontSize = `calc(${size}px * var(--scale-factor))`;\n          this.translate(0, -(size - __classPrivateFieldGet(this, _FreeTextEditor_fontSize, \"f\")) * this.parentScale);\n          __classPrivateFieldSet(this, _FreeTextEditor_fontSize, size, \"f\");\n          __classPrivateFieldGet(this, _FreeTextEditor_instances, \"m\", _FreeTextEditor_setEditorDimensions).call(this);\n      };\n      const savedFontsize = __classPrivateFieldGet(this, _FreeTextEditor_fontSize, \"f\");\n      this.addCommands({\n          cmd: setFontsize.bind(this, fontSize),\n          undo: setFontsize.bind(this, savedFontsize),\n          post: this._uiManager.updateUI.bind(this._uiManager, this),\n          mustExec: true,\n          type: kendo_pdfjs_loader_js.AnnotationEditorParamsType.FREETEXT_SIZE,\n          overwriteIfSameType: true,\n          keepUndo: true\n      });\n  }, _FreeTextEditor_updateColor = function _FreeTextEditor_updateColor(color) {\n      const setColor = col => {\n          __classPrivateFieldSet(this, _FreeTextEditor_color, this.editorDiv.style.color = col, \"f\");\n      };\n      const savedColor = __classPrivateFieldGet(this, _FreeTextEditor_color, \"f\");\n      this.addCommands({\n          cmd: setColor.bind(this, color),\n          undo: setColor.bind(this, savedColor),\n          post: this._uiManager.updateUI.bind(this._uiManager, this),\n          mustExec: true,\n          type: kendo_pdfjs_loader_js.AnnotationEditorParamsType.FREETEXT_COLOR,\n          overwriteIfSameType: true,\n          keepUndo: true\n      });\n  }, _FreeTextEditor_extractText = function _FreeTextEditor_extractText() {\n      // We don't use innerText because there are some bugs with line breaks.\n      const buffer = [];\n      this.editorDiv.normalize();\n      for (const child of this.editorDiv.childNodes) {\n          buffer.push(__classPrivateFieldGet(_a$4, _a$4, \"m\", _FreeTextEditor_getNodeContent).call(_a$4, child));\n      }\n      return buffer.join(\"\\n\");\n  }, _FreeTextEditor_setEditorDimensions = function _FreeTextEditor_setEditorDimensions() {\n      const [parentWidth, parentHeight] = this.parentDimensions;\n      let rect;\n      if (this.isAttachedToDOM) {\n          rect = this.div.getBoundingClientRect();\n      }\n      else {\n          // This editor isn't on screen but we need to get its dimensions, so\n          // we just insert it in the DOM, get its bounding box and then remove it.\n          const { currentLayer, div } = this;\n          const savedDisplay = div.style.display;\n          const savedVisibility = div.classList.contains(\"hidden\") || div.classList.contains(\"k-hidden\");\n          div.classList.remove(\"hidden\");\n          div.classList.remove(\"k-hidden\");\n          div.style.display = \"hidden\";\n          currentLayer.div.append(this.div);\n          rect = div.getBoundingClientRect();\n          div.remove();\n          div.style.display = savedDisplay;\n          // div.classList.toggle(\"hidden\", savedVisibility);\n          div.classList.toggle(\"k-hidden\", savedVisibility);\n      }\n      // The dimensions are relative to the rotation of the page, hence we need to\n      // take that into account (see issue #16636).\n      if (this.rotation % 180 === this.parentRotation % 180) {\n          this.width = rect.width / parentWidth;\n          this.height = rect.height / parentHeight;\n      }\n      else {\n          this.width = rect.height / parentWidth;\n          this.height = rect.width / parentHeight;\n      }\n      this.fixAndSetPosition();\n  }, _FreeTextEditor_getNodeContent = function _FreeTextEditor_getNodeContent(node) {\n      return (node.nodeType === Node.TEXT_NODE ? node.nodeValue : node.innerText).replaceAll(EOL_PATTERN, \"\");\n  }, _FreeTextEditor_setContent = function _FreeTextEditor_setContent() {\n      this.editorDiv.replaceChildren();\n      if (!__classPrivateFieldGet(this, _FreeTextEditor_content, \"f\")) {\n          return;\n      }\n      for (const line of __classPrivateFieldGet(this, _FreeTextEditor_content, \"f\").split(\"\\n\")) {\n          const div = document.createElement(\"div\");\n          div.append(line ? document.createTextNode(line) : document.createElement(\"br\"));\n          this.editorDiv.append(div);\n      }\n  }, _FreeTextEditor_serializeContent = function _FreeTextEditor_serializeContent() {\n      // @ts-expect-error TS(2556):\n      return __classPrivateFieldGet(this, _FreeTextEditor_content, \"f\").replaceAll(\"\\xa0\", \" \");\n  }, _FreeTextEditor_deserializeContent = function _FreeTextEditor_deserializeContent(content) {\n      return content.replaceAll(\" \", \"\\xa0\");\n  }, _FreeTextEditor_hasElementChanged = function _FreeTextEditor_hasElementChanged(serialized) {\n      const { value, fontSize, color, pageIndex } = __classPrivateFieldGet(this, _FreeTextEditor_initialData, \"f\");\n      return (this._hasBeenMoved ||\n          serialized.value !== value ||\n          serialized.fontSize !== fontSize ||\n          serialized.color.some((c, i) => c !== color[i]) ||\n          serialized.pageIndex !== pageIndex);\n  };\n  FreeTextEditor._freeTextDefaultContent = \"\";\n  FreeTextEditor._internalPadding = 0;\n  // static _defaultColor = null;\n  FreeTextEditor._defaultColor = \"#000000\";\n  FreeTextEditor._defaultFontSize = 10;\n  // static get _keyboardManager() {\n  //     const proto = FreeTextEditor.prototype;\n  //     const arrowChecker = self => self.isEmpty();\n  //     const small = AnnotationEditorUIManager.TRANSLATE_SMALL;\n  //     const big = AnnotationEditorUIManager.TRANSLATE_BIG;\n  //     return shadow(\n  //         this,\n  //         \"_keyboardManager\",\n  //         new KeyboardManager([\n  //             [\n  //                 // Commit the text in case the user use ctrl+s to save the document.\n  //                 // The event must bubble in order to be caught by the viewer.\n  //                 // See bug 1831574.\n  //                 [\"ctrl+s\", \"mac+meta+s\", \"ctrl+p\", \"mac+meta+p\"],\n  //                 proto.commitOrRemove,\n  //                 { bubbles: true },\n  //             ],\n  //             [\n  //                 [\"ctrl+Enter\", \"mac+meta+Enter\", \"Escape\", \"mac+Escape\"],\n  //                 proto.commitOrRemove,\n  //             ],\n  //             [\n  //                 [\"ArrowLeft\", \"mac+ArrowLeft\"],\n  //                 proto._translateEmpty,\n  //                 { args: [-small, 0], checker: arrowChecker },\n  //             ],\n  //             [\n  //                 [\"ctrl+ArrowLeft\", \"mac+shift+ArrowLeft\"],\n  //                 proto._translateEmpty,\n  //                 { args: [-big, 0], checker: arrowChecker },\n  //             ],\n  //             [\n  //                 [\"ArrowRight\", \"mac+ArrowRight\"],\n  //                 proto._translateEmpty,\n  //                 { args: [small, 0], checker: arrowChecker },\n  //             ],\n  //             [\n  //                 [\"ctrl+ArrowRight\", \"mac+shift+ArrowRight\"],\n  //                 proto._translateEmpty,\n  //                 { args: [big, 0], checker: arrowChecker },\n  //             ],\n  //             [\n  //                 [\"ArrowUp\", \"mac+ArrowUp\"],\n  //                 proto._translateEmpty,\n  //                 { args: [0, -small], checker: arrowChecker },\n  //             ],\n  //             [\n  //                 [\"ctrl+ArrowUp\", \"mac+shift+ArrowUp\"],\n  //                 proto._translateEmpty,\n  //                 { args: [0, -big], checker: arrowChecker },\n  //             ],\n  //             [\n  //                 [\"ArrowDown\", \"mac+ArrowDown\"],\n  //                 proto._translateEmpty,\n  //                 { args: [0, small], checker: arrowChecker },\n  //             ],\n  //             [\n  //                 [\"ctrl+ArrowDown\", \"mac+shift+ArrowDown\"],\n  //                 proto._translateEmpty,\n  //                 { args: [0, big], checker: arrowChecker },\n  //             ],\n  //         ])\n  //     );\n  // }\n  FreeTextEditor._type = \"freetext\";\n  FreeTextEditor._editorType = kendo_pdfjs_loader_js.AnnotationEditorType.FREETEXT;\n\n  /* Copyright 2023 Mozilla Foundation\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *     http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   * See the License for the specific language governing permissions and\n   * limitations under the License.\n   */\n  var _Outliner_instances, _Outliner_box, _Outliner_verticalEdges, _Outliner_intervals, _Outliner_getOutlines, _Outliner_binarySearch, _Outliner_insert, _Outliner_remove, _Outliner_breakEdge, _HighlightOutline_box, _HighlightOutline_outlines, _FreeOutliner_instances, _a$3, _FreeOutliner_box, _FreeOutliner_bottom, _FreeOutliner_innerMargin, _FreeOutliner_isLTR, _FreeOutliner_top, _FreeOutliner_last, _FreeOutliner_lastX, _FreeOutliner_lastY, _FreeOutliner_min, _FreeOutliner_min_dist, _FreeOutliner_scaleFactor, _FreeOutliner_thickness, _FreeOutliner_points, _FreeOutliner_MIN_DIST, _FreeOutliner_MIN_DIFF, _FreeOutliner_MIN, _FreeOutliner_getLastCoords, _FreeHighlightOutline_instances, _FreeHighlightOutline_box, _FreeHighlightOutline_bbox, _FreeHighlightOutline_innerMargin, _FreeHighlightOutline_isLTR, _FreeHighlightOutline_points, _FreeHighlightOutline_scaleFactor, _FreeHighlightOutline_outline, _FreeHighlightOutline_rescale, _FreeHighlightOutline_rescaleAndSwap, _FreeHighlightOutline_computeMinMax;\n  // import { Util } from \"../../shared/utils\";\n  class Outliner {\n      /*\n       * Construct an outliner.\n       * @param {Array<Object>} boxes - An array of axis-aligned rectangles.\n       * @param {number} borderWidth - The width of the border of the boxes, it\n       *   allows to make the boxes bigger (or smaller).\n       * @param {number} innerMargin - The margin between the boxes and the\n       *   outlines. It's important to not have a null innerMargin when we want to\n       *   draw the outline else the stroked outline could be clipped because of its\n       *   width.\n       * @param {boolean} isLTR - true if we're in LTR mode. It's used to determine\n       *   the last point of the boxes.\n       */\n      constructor(boxes, borderWidth = 0, innerMargin = 0, isLTR = true) {\n          _Outliner_instances.add(this);\n          _Outliner_box.set(this, void 0);\n          _Outliner_verticalEdges.set(this, []);\n          _Outliner_intervals.set(this, []);\n          let minX = Infinity;\n          let maxX = -Infinity;\n          let minY = Infinity;\n          let maxY = -Infinity;\n          // We round the coordinates to slightly reduce the number of edges in the\n          // final outlines.\n          const NUMBER_OF_DIGITS = 4;\n          const EPSILON = Math.pow(10, -NUMBER_OF_DIGITS);\n          // The coordinates of the boxes are in the page coordinate system.\n          for (const { x, y, width, height } of boxes) {\n              const x1 = Math.floor((x - borderWidth) / EPSILON) * EPSILON;\n              const x2 = Math.ceil((x + width + borderWidth) / EPSILON) * EPSILON;\n              const y1 = Math.floor((y - borderWidth) / EPSILON) * EPSILON;\n              const y2 = Math.ceil((y + height + borderWidth) / EPSILON) * EPSILON;\n              const left = [x1, y1, y2, true];\n              const right = [x2, y1, y2, false];\n              __classPrivateFieldGet(this, _Outliner_verticalEdges, \"f\").push(left, right);\n              minX = Math.min(minX, x1);\n              maxX = Math.max(maxX, x2);\n              minY = Math.min(minY, y1);\n              maxY = Math.max(maxY, y2);\n          }\n          const bboxWidth = maxX - minX + 2 * innerMargin;\n          const bboxHeight = maxY - minY + 2 * innerMargin;\n          const shiftedMinX = minX - innerMargin;\n          const shiftedMinY = minY - innerMargin;\n          const lastEdge = __classPrivateFieldGet(this, _Outliner_verticalEdges, \"f\").at(isLTR ? -1 : -2);\n          const lastPoint = [lastEdge[0], lastEdge[2]];\n          // Convert the coordinates of the edges into box coordinates.\n          for (const edge of __classPrivateFieldGet(this, _Outliner_verticalEdges, \"f\")) {\n              const [x, y1, y2] = edge;\n              edge[0] = (x - shiftedMinX) / bboxWidth;\n              edge[1] = (y1 - shiftedMinY) / bboxHeight;\n              edge[2] = (y2 - shiftedMinY) / bboxHeight;\n          }\n          __classPrivateFieldSet(this, _Outliner_box, {\n              x: shiftedMinX,\n              y: shiftedMinY,\n              width: bboxWidth,\n              height: bboxHeight,\n              lastPoint\n          }, \"f\");\n      }\n      getOutlines() {\n          // We begin to sort lexicographically the vertical edges by their abscissa,\n          // and then by their ordinate.\n          __classPrivateFieldGet(this, _Outliner_verticalEdges, \"f\").sort((a, b) => a[0] - b[0] || a[1] - b[1] || a[2] - b[2]);\n          // We're now using a sweep line algorithm to find the outlines.\n          // We start with the leftmost vertical edge, and we're going to iterate\n          // over all the vertical edges from left to right.\n          // Each time we encounter a left edge, we're going to insert the interval\n          // [y1, y2] in the set of intervals.\n          // This set of intervals is used to break the vertical edges into chunks:\n          // we only take the part of the vertical edge that isn't in the union of\n          // the intervals.\n          const outlineVerticalEdges = [];\n          for (const edge of __classPrivateFieldGet(this, _Outliner_verticalEdges, \"f\")) {\n              if (edge[3]) {\n                  // Left edge.\n                  outlineVerticalEdges.push(...__classPrivateFieldGet(this, _Outliner_instances, \"m\", _Outliner_breakEdge).call(this, edge));\n                  __classPrivateFieldGet(this, _Outliner_instances, \"m\", _Outliner_insert).call(this, edge);\n              }\n              else {\n                  // Right edge.\n                  __classPrivateFieldGet(this, _Outliner_instances, \"m\", _Outliner_remove).call(this, edge);\n                  outlineVerticalEdges.push(...__classPrivateFieldGet(this, _Outliner_instances, \"m\", _Outliner_breakEdge).call(this, edge));\n              }\n          }\n          return __classPrivateFieldGet(this, _Outliner_instances, \"m\", _Outliner_getOutlines).call(this, outlineVerticalEdges);\n      }\n  }\n  _Outliner_box = new WeakMap(), _Outliner_verticalEdges = new WeakMap(), _Outliner_intervals = new WeakMap(), _Outliner_instances = new WeakSet(), _Outliner_getOutlines = function _Outliner_getOutlines(outlineVerticalEdges) {\n      const edges = [];\n      const allEdges = new Set();\n      for (const edge of outlineVerticalEdges) {\n          const [x, y1, y2] = edge;\n          edges.push([x, y1, edge], [x, y2, edge]);\n      }\n      // We sort lexicographically the vertices of each edge by their ordinate and\n      // by their abscissa.\n      // Every pair (v_2i, v_{2i + 1}) of vertices defines a horizontal edge.\n      // So for every vertical edge, we're going to add the two vertical edges\n      // which are connected to it through a horizontal edge.\n      edges.sort((a, b) => a[1] - b[1] || a[0] - b[0]);\n      for (let i = 0, ii = edges.length; i < ii; i += 2) {\n          const edge1 = edges[i][2];\n          const edge2 = edges[i + 1][2];\n          edge1.push(edge2);\n          edge2.push(edge1);\n          allEdges.add(edge1);\n          allEdges.add(edge2);\n      }\n      const outlines = [];\n      let outline;\n      while (allEdges.size > 0) {\n          const edge = allEdges.values().next().value;\n          let [x, y1, y2, edge1, edge2] = edge;\n          allEdges.delete(edge);\n          let lastPointX = x;\n          let lastPointY = y1;\n          outline = [x, y2];\n          outlines.push(outline);\n          while (true) {\n              let e;\n              if (allEdges.has(edge1)) {\n                  e = edge1;\n              }\n              else if (allEdges.has(edge2)) {\n                  e = edge2;\n              }\n              else {\n                  break;\n              }\n              allEdges.delete(e);\n              [x, y1, y2, edge1, edge2] = e;\n              if (lastPointX !== x) {\n                  outline.push(lastPointX, lastPointY, x, lastPointY === y1 ? y1 : y2);\n                  lastPointX = x;\n              }\n              lastPointY = lastPointY === y1 ? y2 : y1;\n          }\n          outline.push(lastPointX, lastPointY);\n      }\n      return new HighlightOutline(outlines, __classPrivateFieldGet(this, _Outliner_box, \"f\"));\n  }, _Outliner_binarySearch = function _Outliner_binarySearch(y) {\n      const array = __classPrivateFieldGet(this, _Outliner_intervals, \"f\");\n      let start = 0;\n      let end = array.length - 1;\n      while (start <= end) {\n          const middle = (start + end) >> 1;\n          const y1 = array[middle][0];\n          if (y1 === y) {\n              return middle;\n          }\n          if (y1 < y) {\n              start = middle + 1;\n          }\n          else {\n              end = middle - 1;\n          }\n      }\n      return end + 1;\n  }, _Outliner_insert = function _Outliner_insert([, y1, y2]) {\n      const index = __classPrivateFieldGet(this, _Outliner_instances, \"m\", _Outliner_binarySearch).call(this, y1);\n      __classPrivateFieldGet(this, _Outliner_intervals, \"f\").splice(index, 0, [y1, y2]);\n  }, _Outliner_remove = function _Outliner_remove([, y1, y2]) {\n      const index = __classPrivateFieldGet(this, _Outliner_instances, \"m\", _Outliner_binarySearch).call(this, y1);\n      for (let i = index; i < __classPrivateFieldGet(this, _Outliner_intervals, \"f\").length; i++) {\n          const [start, end] = __classPrivateFieldGet(this, _Outliner_intervals, \"f\")[i];\n          if (start !== y1) {\n              break;\n          }\n          if (start === y1 && end === y2) {\n              __classPrivateFieldGet(this, _Outliner_intervals, \"f\").splice(i, 1);\n              return;\n          }\n      }\n      for (let i = index - 1; i >= 0; i--) {\n          const [start, end] = __classPrivateFieldGet(this, _Outliner_intervals, \"f\")[i];\n          if (start !== y1) {\n              break;\n          }\n          if (start === y1 && end === y2) {\n              __classPrivateFieldGet(this, _Outliner_intervals, \"f\").splice(i, 1);\n              return;\n          }\n      }\n  }, _Outliner_breakEdge = function _Outliner_breakEdge(edge) {\n      const [x, y1, y2] = edge;\n      const results = [[x, y1, y2]];\n      const index = __classPrivateFieldGet(this, _Outliner_instances, \"m\", _Outliner_binarySearch).call(this, y2);\n      for (let i = 0; i < index; i++) {\n          const [start, end] = __classPrivateFieldGet(this, _Outliner_intervals, \"f\")[i];\n          for (let j = 0, jj = results.length; j < jj; j++) {\n              const [, y3, y4] = results[j];\n              if (end <= y3 || y4 <= start) {\n                  // There is no intersection between the interval and the edge, hence\n                  // we keep it as is.\n                  continue;\n              }\n              if (y3 >= start) {\n                  if (y4 > end) {\n                      results[j][1] = end;\n                  }\n                  else {\n                      if (jj === 1) {\n                          return [];\n                      }\n                      // The edge is included in the interval, hence we remove it.\n                      results.splice(j, 1);\n                      j--;\n                      jj--;\n                  }\n                  continue;\n              }\n              results[j][2] = start;\n              if (y4 > end) {\n                  results.push([x, end, y4]);\n              }\n          }\n      }\n      return results;\n  };\n  class Outline {\n      /**\n       * @returns {string} The SVG path of the outline.\n       */\n      toSVGPath() {\n          throw new Error(\"Abstract method `toSVGPath` must be implemented.\");\n      }\n      /**\n       * @type {Object|null} The bounding box of the outline.\n       */\n      get box() {\n          throw new Error(\"Abstract getter `box` must be implemented.\");\n      }\n      // serialize() {\n      // serialize(_bbox, _rotation) {\n      serialize([blX, blY, trX, trY]) {\n          // throw new Error(\"Abstract method `serialize` must be implemented.\");\n          if (!blX || !blY || !trX || !trY) {\n              /* no-empty */\n          }\n      }\n      get free() {\n          return this instanceof FreeHighlightOutline;\n          // return false;\n      }\n  }\n  class HighlightOutline extends Outline {\n      constructor(outlines, box) {\n          super();\n          _HighlightOutline_box.set(this, void 0);\n          _HighlightOutline_outlines.set(this, void 0);\n          __classPrivateFieldSet(this, _HighlightOutline_outlines, outlines, \"f\");\n          __classPrivateFieldSet(this, _HighlightOutline_box, box, \"f\");\n      }\n      toSVGPath() {\n          const buffer = [];\n          for (const polygon of __classPrivateFieldGet(this, _HighlightOutline_outlines, \"f\")) {\n              let [prevX, prevY] = polygon;\n              buffer.push(`M${prevX} ${prevY}`);\n              for (let i = 2; i < polygon.length; i += 2) {\n                  const x = polygon[i];\n                  const y = polygon[i + 1];\n                  if (x === prevX) {\n                      buffer.push(`V${y}`);\n                      prevY = y;\n                  }\n                  else if (y === prevY) {\n                      buffer.push(`H${x}`);\n                      prevX = x;\n                  }\n              }\n              buffer.push(\"Z\");\n          }\n          return buffer.join(\" \");\n      }\n      /*\n       * Serialize the outlines into the PDF page coordinate system.\n       * @param {Array<number>} _bbox - the bounding box of the annotation.\n       * @param {number} _rotation - the rotation of the annotation.\n       * @returns {Array<Array<number>>}\n       */\n      // serialize([blX, blY, trX, trY], _rotation) {\n      serialize([blX, blY, trX, trY]) {\n          const outlines = [];\n          const width = trX - blX;\n          const height = trY - blY;\n          for (const outline of __classPrivateFieldGet(this, _HighlightOutline_outlines, \"f\")) {\n              const points = new Array(outline.length);\n              for (let i = 0; i < outline.length; i += 2) {\n                  points[i] = blX + outline[i] * width;\n                  points[i + 1] = trY - outline[i + 1] * height;\n              }\n              outlines.push(points);\n          }\n          return outlines;\n      }\n      get box() {\n          return __classPrivateFieldGet(this, _HighlightOutline_box, \"f\");\n      }\n  }\n  _HighlightOutline_box = new WeakMap(), _HighlightOutline_outlines = new WeakMap();\n  class FreeOutliner {\n      constructor({ x, y }, box, scaleFactor, thickness, isLTR, innerMargin = 0) {\n          _FreeOutliner_instances.add(this);\n          _FreeOutliner_box.set(this, void 0);\n          _FreeOutliner_bottom.set(this, []);\n          _FreeOutliner_innerMargin.set(this, void 0);\n          _FreeOutliner_isLTR.set(this, void 0);\n          _FreeOutliner_top.set(this, []);\n          // The first 6 elements are the last 3 points of the top part of the outline.\n          // The next 6 elements are the last 3 points of the line.\n          // The next 6 elements are the last 3 points of the bottom part of the\n          // outline.\n          // We track the last 3 points in order to be able to:\n          //  - compute the normal of the line,\n          //  - compute the control points of the quadratic Bézier curve.\n          _FreeOutliner_last.set(this, new Float64Array(18));\n          _FreeOutliner_lastX.set(this, void 0);\n          _FreeOutliner_lastY.set(this, void 0);\n          _FreeOutliner_min.set(this, void 0);\n          _FreeOutliner_min_dist.set(this, void 0);\n          _FreeOutliner_scaleFactor.set(this, void 0);\n          _FreeOutliner_thickness.set(this, void 0);\n          _FreeOutliner_points.set(this, []);\n          __classPrivateFieldSet(this, _FreeOutliner_box, box, \"f\");\n          __classPrivateFieldSet(this, _FreeOutliner_thickness, thickness * scaleFactor, \"f\");\n          __classPrivateFieldSet(this, _FreeOutliner_isLTR, isLTR, \"f\");\n          __classPrivateFieldGet(this, _FreeOutliner_last, \"f\").set([NaN, NaN, NaN, NaN, x, y], 6);\n          __classPrivateFieldSet(this, _FreeOutliner_innerMargin, innerMargin, \"f\");\n          __classPrivateFieldSet(this, _FreeOutliner_min_dist, __classPrivateFieldGet(_a$3, _a$3, \"f\", _FreeOutliner_MIN_DIST) * scaleFactor, \"f\");\n          __classPrivateFieldSet(this, _FreeOutliner_min, __classPrivateFieldGet(_a$3, _a$3, \"f\", _FreeOutliner_MIN) * scaleFactor, \"f\");\n          __classPrivateFieldSet(this, _FreeOutliner_scaleFactor, scaleFactor, \"f\");\n          __classPrivateFieldGet(this, _FreeOutliner_points, \"f\").push(x, y);\n      }\n      get free() {\n          return true;\n      }\n      isEmpty() {\n          // When we add a second point then this.#last.slice(6) will be something\n          // like [NaN, NaN, firstX, firstY, secondX, secondY,...] so having a NaN\n          // at index 8 means that we've only one point.\n          return isNaN(__classPrivateFieldGet(this, _FreeOutliner_last, \"f\")[8]);\n      }\n      add({ x, y }) {\n          var _b;\n          __classPrivateFieldSet(this, _FreeOutliner_lastX, x, \"f\");\n          __classPrivateFieldSet(this, _FreeOutliner_lastY, y, \"f\");\n          const [layerX, layerY, layerWidth, layerHeight] = __classPrivateFieldGet(this, _FreeOutliner_box, \"f\");\n          let [x1, y1, x2, y2] = __classPrivateFieldGet(this, _FreeOutliner_last, \"f\").subarray(8, 12);\n          const diffX = x - x2;\n          const diffY = y - y2;\n          const d = Math.hypot(diffX, diffY);\n          if (d < __classPrivateFieldGet(this, _FreeOutliner_min, \"f\")) {\n              // The idea is to avoid garbage points around the last point.\n              // When the points are too close, it just leads to bad normal vectors and\n              // control points.\n              return false;\n          }\n          const diffD = d - __classPrivateFieldGet(this, _FreeOutliner_min_dist, \"f\");\n          const K = diffD / d;\n          const shiftX = K * diffX;\n          const shiftY = K * diffY;\n          // We update the last 3 points of the line.\n          let x0 = x1;\n          let y0 = y1;\n          x1 = x2;\n          y1 = y2;\n          x2 += shiftX;\n          y2 += shiftY;\n          // We keep track of the points in order to be able to compute the focus\n          // outline.\n          (_b = __classPrivateFieldGet(this, _FreeOutliner_points, \"f\")) === null || _b === void 0 ? void 0 : _b.push(x, y);\n          // Create the normal unit vector.\n          // |(shiftX, shiftY)| = |K| * |(diffX, diffY)| = |K| * d = diffD.\n          const nX = -shiftY / diffD;\n          const nY = shiftX / diffD;\n          const thX = nX * __classPrivateFieldGet(this, _FreeOutliner_thickness, \"f\");\n          const thY = nY * __classPrivateFieldGet(this, _FreeOutliner_thickness, \"f\");\n          __classPrivateFieldGet(this, _FreeOutliner_last, \"f\").set(__classPrivateFieldGet(this, _FreeOutliner_last, \"f\").subarray(2, 8), 0);\n          __classPrivateFieldGet(this, _FreeOutliner_last, \"f\").set([x2 + thX, y2 + thY], 4);\n          __classPrivateFieldGet(this, _FreeOutliner_last, \"f\").set(__classPrivateFieldGet(this, _FreeOutliner_last, \"f\").subarray(14, 18), 12);\n          __classPrivateFieldGet(this, _FreeOutliner_last, \"f\").set([x2 - thX, y2 - thY], 16);\n          if (isNaN(__classPrivateFieldGet(this, _FreeOutliner_last, \"f\")[6])) {\n              if (__classPrivateFieldGet(this, _FreeOutliner_top, \"f\").length === 0) {\n                  __classPrivateFieldGet(this, _FreeOutliner_last, \"f\").set([x1 + thX, y1 + thY], 2);\n                  __classPrivateFieldGet(this, _FreeOutliner_top, \"f\").push(NaN, NaN, NaN, NaN, (x1 + thX - layerX) / layerWidth, (y1 + thY - layerY) / layerHeight);\n                  __classPrivateFieldGet(this, _FreeOutliner_last, \"f\").set([x1 - thX, y1 - thY], 14);\n                  __classPrivateFieldGet(this, _FreeOutliner_bottom, \"f\").push(NaN, NaN, NaN, NaN, (x1 - thX - layerX) / layerWidth, (y1 - thY - layerY) / layerHeight);\n              }\n              __classPrivateFieldGet(this, _FreeOutliner_last, \"f\").set([x0, y0, x1, y1, x2, y2], 6);\n              return !this.isEmpty();\n          }\n          __classPrivateFieldGet(this, _FreeOutliner_last, \"f\").set([x0, y0, x1, y1, x2, y2], 6);\n          const angle = Math.abs(Math.atan2(y0 - y1, x0 - x1) - Math.atan2(shiftY, shiftX));\n          if (angle < Math.PI / 2) {\n              // In order to avoid some possible artifacts, we're going to use the a\n              // straight line instead of a quadratic Bézier curve.\n              [x1, y1, x2, y2] = __classPrivateFieldGet(this, _FreeOutliner_last, \"f\").subarray(2, 6);\n              __classPrivateFieldGet(this, _FreeOutliner_top, \"f\").push(NaN, NaN, NaN, NaN, ((x1 + x2) / 2 - layerX) / layerWidth, ((y1 + y2) / 2 - layerY) / layerHeight);\n              [x1, y1, x0, y0] = __classPrivateFieldGet(this, _FreeOutliner_last, \"f\").subarray(14, 18);\n              __classPrivateFieldGet(this, _FreeOutliner_bottom, \"f\").push(NaN, NaN, NaN, NaN, ((x0 + x1) / 2 - layerX) / layerWidth, ((y0 + y1) / 2 - layerY) / layerHeight);\n              return true;\n          }\n          // Control points and the final point for the quadratic Bézier curve.\n          [x0, y0, x1, y1, x2, y2] = __classPrivateFieldGet(this, _FreeOutliner_last, \"f\").subarray(0, 6);\n          __classPrivateFieldGet(this, _FreeOutliner_top, \"f\").push(((x0 + 5 * x1) / 6 - layerX) / layerWidth, ((y0 + 5 * y1) / 6 - layerY) / layerHeight, ((5 * x1 + x2) / 6 - layerX) / layerWidth, ((5 * y1 + y2) / 6 - layerY) / layerHeight, ((x1 + x2) / 2 - layerX) / layerWidth, ((y1 + y2) / 2 - layerY) / layerHeight);\n          [x2, y2, x1, y1, x0, y0] = __classPrivateFieldGet(this, _FreeOutliner_last, \"f\").subarray(12, 18);\n          __classPrivateFieldGet(this, _FreeOutliner_bottom, \"f\").push(((x0 + 5 * x1) / 6 - layerX) / layerWidth, ((y0 + 5 * y1) / 6 - layerY) / layerHeight, ((5 * x1 + x2) / 6 - layerX) / layerWidth, ((5 * y1 + y2) / 6 - layerY) / layerHeight, ((x1 + x2) / 2 - layerX) / layerWidth, ((y1 + y2) / 2 - layerY) / layerHeight);\n          return true;\n      }\n      toSVGPath() {\n          if (this.isEmpty()) {\n              // We've only one point.\n              return \"\";\n          }\n          const top = __classPrivateFieldGet(this, _FreeOutliner_top, \"f\");\n          const bottom = __classPrivateFieldGet(this, _FreeOutliner_bottom, \"f\");\n          const lastTop = __classPrivateFieldGet(this, _FreeOutliner_last, \"f\").subarray(4, 6);\n          const lastBottom = __classPrivateFieldGet(this, _FreeOutliner_last, \"f\").subarray(16, 18);\n          const [x, y, width, height] = __classPrivateFieldGet(this, _FreeOutliner_box, \"f\");\n          const [lastTopX, lastTopY, lastBottomX, lastBottomY] = __classPrivateFieldGet(this, _FreeOutliner_instances, \"m\", _FreeOutliner_getLastCoords).call(this);\n          if (isNaN(__classPrivateFieldGet(this, _FreeOutliner_last, \"f\")[6]) && !this.isEmpty()) {\n              // We've only two points.\n              return `M${(__classPrivateFieldGet(this, _FreeOutliner_last, \"f\")[2] - x) / width} ${(__classPrivateFieldGet(this, _FreeOutliner_last, \"f\")[3] - y) / height} L${(__classPrivateFieldGet(this, _FreeOutliner_last, \"f\")[4] - x) / width} ${(__classPrivateFieldGet(this, _FreeOutliner_last, \"f\")[5] - y) / height} L${lastTopX} ${lastTopY} L${lastBottomX} ${lastBottomY} L${(__classPrivateFieldGet(this, _FreeOutliner_last, \"f\")[16] - x) / width} ${(__classPrivateFieldGet(this, _FreeOutliner_last, \"f\")[17] - y) / height} L${(__classPrivateFieldGet(this, _FreeOutliner_last, \"f\")[14] - x) / width} ${(__classPrivateFieldGet(this, _FreeOutliner_last, \"f\")[15] - y) / height} Z`;\n          }\n          const buffer = [];\n          buffer.push(`M${top[4]} ${top[5]}`);\n          for (let i = 6; i < top.length; i += 6) {\n              if (isNaN(top[i])) {\n                  buffer.push(`L${top[i + 4]} ${top[i + 5]}`);\n              }\n              else {\n                  buffer.push(`C${top[i]} ${top[i + 1]} ${top[i + 2]} ${top[i + 3]} ${top[i + 4]} ${top[i + 5]}`);\n              }\n          }\n          buffer.push(`L${(lastTop[0] - x) / width} ${(lastTop[1] - y) / height} L${lastTopX} ${lastTopY} L${lastBottomX} ${lastBottomY} L${(lastBottom[0] - x) / width} ${(lastBottom[1] - y) / height}`);\n          for (let i = bottom.length - 6; i >= 6; i -= 6) {\n              if (isNaN(bottom[i])) {\n                  buffer.push(`L${bottom[i + 4]} ${bottom[i + 5]}`);\n              }\n              else {\n                  buffer.push(`C${bottom[i]} ${bottom[i + 1]} ${bottom[i + 2]} ${bottom[i + 3]} ${bottom[i + 4]} ${bottom[i + 5]}`);\n              }\n          }\n          buffer.push(`L${bottom[4]} ${bottom[5]} Z`);\n          return buffer.join(\" \");\n      }\n      getOutlines() {\n          var _b, _c;\n          const top = __classPrivateFieldGet(this, _FreeOutliner_top, \"f\");\n          const bottom = __classPrivateFieldGet(this, _FreeOutliner_bottom, \"f\");\n          const last = __classPrivateFieldGet(this, _FreeOutliner_last, \"f\");\n          const lastTop = last.subarray(4, 6);\n          const lastBottom = last.subarray(16, 18);\n          const [layerX, layerY, layerWidth, layerHeight] = __classPrivateFieldGet(this, _FreeOutliner_box, \"f\");\n          const points = new Float64Array(((_c = (_b = __classPrivateFieldGet(this, _FreeOutliner_points, \"f\")) === null || _b === void 0 ? void 0 : _b.length) !== null && _c !== void 0 ? _c : 0) + 2);\n          for (let i = 0, ii = points.length - 2; i < ii; i += 2) {\n              points[i] = (__classPrivateFieldGet(this, _FreeOutliner_points, \"f\")[i] - layerX) / layerWidth;\n              points[i + 1] = (__classPrivateFieldGet(this, _FreeOutliner_points, \"f\")[i + 1] - layerY) / layerHeight;\n          }\n          points[points.length - 2] = (__classPrivateFieldGet(this, _FreeOutliner_lastX, \"f\") - layerX) / layerWidth;\n          points[points.length - 1] = (__classPrivateFieldGet(this, _FreeOutliner_lastY, \"f\") - layerY) / layerHeight;\n          const [lastTopX, lastTopY, lastBottomX, lastBottomY] = __classPrivateFieldGet(this, _FreeOutliner_instances, \"m\", _FreeOutliner_getLastCoords).call(this);\n          if (isNaN(last[6]) && !this.isEmpty()) {\n              // We've only two points.\n              const outlineObj = new Float64Array(36);\n              outlineObj.set([\n                  NaN,\n                  NaN,\n                  NaN,\n                  NaN,\n                  (last[2] - layerX) / layerWidth,\n                  (last[3] - layerY) / layerHeight,\n                  NaN,\n                  NaN,\n                  NaN,\n                  NaN,\n                  (last[4] - layerX) / layerWidth,\n                  (last[5] - layerY) / layerHeight,\n                  NaN,\n                  NaN,\n                  NaN,\n                  NaN,\n                  lastTopX,\n                  lastTopY,\n                  NaN,\n                  NaN,\n                  NaN,\n                  NaN,\n                  lastBottomX,\n                  lastBottomY,\n                  NaN,\n                  NaN,\n                  NaN,\n                  NaN,\n                  (last[16] - layerX) / layerWidth,\n                  (last[17] - layerY) / layerHeight,\n                  NaN,\n                  NaN,\n                  NaN,\n                  NaN,\n                  (last[14] - layerX) / layerWidth,\n                  (last[15] - layerY) / layerHeight\n              ], 0);\n              return new FreeHighlightOutline(outlineObj, points, __classPrivateFieldGet(this, _FreeOutliner_box, \"f\"), __classPrivateFieldGet(this, _FreeOutliner_scaleFactor, \"f\"), __classPrivateFieldGet(this, _FreeOutliner_innerMargin, \"f\"), __classPrivateFieldGet(this, _FreeOutliner_isLTR, \"f\"));\n          }\n          const outline = new Float64Array(__classPrivateFieldGet(this, _FreeOutliner_top, \"f\").length + 24 + __classPrivateFieldGet(this, _FreeOutliner_bottom, \"f\").length);\n          let N = top.length;\n          for (let i = 0; i < N; i += 2) {\n              if (isNaN(top[i])) {\n                  outline[i] = outline[i + 1] = NaN;\n                  continue;\n              }\n              outline[i] = top[i];\n              outline[i + 1] = top[i + 1];\n          }\n          outline.set([\n              NaN,\n              NaN,\n              NaN,\n              NaN,\n              (lastTop[0] - layerX) / layerWidth,\n              (lastTop[1] - layerY) / layerHeight,\n              NaN,\n              NaN,\n              NaN,\n              NaN,\n              lastTopX,\n              lastTopY,\n              NaN,\n              NaN,\n              NaN,\n              NaN,\n              lastBottomX,\n              lastBottomY,\n              NaN,\n              NaN,\n              NaN,\n              NaN,\n              (lastBottom[0] - layerX) / layerWidth,\n              (lastBottom[1] - layerY) / layerHeight\n          ], N);\n          N += 24;\n          for (let i = bottom.length - 6; i >= 6; i -= 6) {\n              for (let j = 0; j < 6; j += 2) {\n                  if (isNaN(bottom[i + j])) {\n                      outline[N] = outline[N + 1] = NaN;\n                      N += 2;\n                      continue;\n                  }\n                  outline[N] = bottom[i + j];\n                  outline[N + 1] = bottom[i + j + 1];\n                  N += 2;\n              }\n          }\n          outline.set([NaN, NaN, NaN, NaN, bottom[4], bottom[5]], N);\n          return new FreeHighlightOutline(outline, points, __classPrivateFieldGet(this, _FreeOutliner_box, \"f\"), __classPrivateFieldGet(this, _FreeOutliner_scaleFactor, \"f\"), __classPrivateFieldGet(this, _FreeOutliner_innerMargin, \"f\"), __classPrivateFieldGet(this, _FreeOutliner_isLTR, \"f\"));\n      }\n  }\n  _a$3 = FreeOutliner, _FreeOutliner_box = new WeakMap(), _FreeOutliner_bottom = new WeakMap(), _FreeOutliner_innerMargin = new WeakMap(), _FreeOutliner_isLTR = new WeakMap(), _FreeOutliner_top = new WeakMap(), _FreeOutliner_last = new WeakMap(), _FreeOutliner_lastX = new WeakMap(), _FreeOutliner_lastY = new WeakMap(), _FreeOutliner_min = new WeakMap(), _FreeOutliner_min_dist = new WeakMap(), _FreeOutliner_scaleFactor = new WeakMap(), _FreeOutliner_thickness = new WeakMap(), _FreeOutliner_points = new WeakMap(), _FreeOutliner_instances = new WeakSet(), _FreeOutliner_getLastCoords = function _FreeOutliner_getLastCoords() {\n      const lastTop = __classPrivateFieldGet(this, _FreeOutliner_last, \"f\").subarray(4, 6);\n      const lastBottom = __classPrivateFieldGet(this, _FreeOutliner_last, \"f\").subarray(16, 18);\n      const [x, y, width, height] = __classPrivateFieldGet(this, _FreeOutliner_box, \"f\");\n      return [\n          (__classPrivateFieldGet(this, _FreeOutliner_lastX, \"f\") + (lastTop[0] - lastBottom[0]) / 2 - x) / width,\n          (__classPrivateFieldGet(this, _FreeOutliner_lastY, \"f\") + (lastTop[1] - lastBottom[1]) / 2 - y) / height,\n          (__classPrivateFieldGet(this, _FreeOutliner_lastX, \"f\") + (lastBottom[0] - lastTop[0]) / 2 - x) / width,\n          (__classPrivateFieldGet(this, _FreeOutliner_lastY, \"f\") + (lastBottom[1] - lastTop[1]) / 2 - y) / height\n      ];\n  };\n  _FreeOutliner_MIN_DIST = { value: 8 };\n  _FreeOutliner_MIN_DIFF = { value: 2 };\n  _FreeOutliner_MIN = { value: __classPrivateFieldGet(_a$3, _a$3, \"f\", _FreeOutliner_MIN_DIST) + __classPrivateFieldGet(_a$3, _a$3, \"f\", _FreeOutliner_MIN_DIFF) };\n  class FreeHighlightOutline extends Outline {\n      constructor(outline, points, box, scaleFactor, innerMargin, isLTR) {\n          super();\n          _FreeHighlightOutline_instances.add(this);\n          _FreeHighlightOutline_box.set(this, void 0);\n          _FreeHighlightOutline_bbox.set(this, null);\n          _FreeHighlightOutline_innerMargin.set(this, void 0);\n          _FreeHighlightOutline_isLTR.set(this, void 0);\n          _FreeHighlightOutline_points.set(this, void 0);\n          _FreeHighlightOutline_scaleFactor.set(this, void 0);\n          _FreeHighlightOutline_outline.set(this, void 0);\n          __classPrivateFieldSet(this, _FreeHighlightOutline_outline, outline, \"f\");\n          __classPrivateFieldSet(this, _FreeHighlightOutline_points, points, \"f\");\n          __classPrivateFieldSet(this, _FreeHighlightOutline_box, box, \"f\");\n          __classPrivateFieldSet(this, _FreeHighlightOutline_scaleFactor, scaleFactor, \"f\");\n          __classPrivateFieldSet(this, _FreeHighlightOutline_innerMargin, innerMargin, \"f\");\n          __classPrivateFieldSet(this, _FreeHighlightOutline_isLTR, isLTR, \"f\");\n          __classPrivateFieldGet(this, _FreeHighlightOutline_instances, \"m\", _FreeHighlightOutline_computeMinMax).call(this, isLTR);\n          const { x, y, width, height } = __classPrivateFieldGet(this, _FreeHighlightOutline_bbox, \"f\");\n          for (let i = 0, ii = outline.length; i < ii; i += 2) {\n              outline[i] = (outline[i] - x) / width;\n              outline[i + 1] = (outline[i + 1] - y) / height;\n          }\n          for (let i = 0, ii = points.length; i < ii; i += 2) {\n              points[i] = (points[i] - x) / width;\n              points[i + 1] = (points[i + 1] - y) / height;\n          }\n      }\n      toSVGPath() {\n          const buffer = [`M${__classPrivateFieldGet(this, _FreeHighlightOutline_outline, \"f\")[4]} ${__classPrivateFieldGet(this, _FreeHighlightOutline_outline, \"f\")[5]}`];\n          for (let i = 6, ii = __classPrivateFieldGet(this, _FreeHighlightOutline_outline, \"f\").length; i < ii; i += 6) {\n              if (isNaN(__classPrivateFieldGet(this, _FreeHighlightOutline_outline, \"f\")[i])) {\n                  buffer.push(`L${__classPrivateFieldGet(this, _FreeHighlightOutline_outline, \"f\")[i + 4]} ${__classPrivateFieldGet(this, _FreeHighlightOutline_outline, \"f\")[i + 5]}`);\n                  continue;\n              }\n              buffer.push(`C${__classPrivateFieldGet(this, _FreeHighlightOutline_outline, \"f\")[i]} ${__classPrivateFieldGet(this, _FreeHighlightOutline_outline, \"f\")[i + 1]} ${__classPrivateFieldGet(this, _FreeHighlightOutline_outline, \"f\")[i + 2]} ${__classPrivateFieldGet(this, _FreeHighlightOutline_outline, \"f\")[i + 3]} ${__classPrivateFieldGet(this, _FreeHighlightOutline_outline, \"f\")[i + 4]} ${__classPrivateFieldGet(this, _FreeHighlightOutline_outline, \"f\")[i + 5]}`);\n          }\n          buffer.push(\"Z\");\n          return buffer.join(\" \");\n      }\n      // @ts-expect-error(TS:2556)\n      serialize([blX, blY, trX, trY], rotation) {\n          const width = trX - blX;\n          const height = trY - blY;\n          let outline;\n          let points;\n          switch (rotation) {\n              case 0:\n                  outline = __classPrivateFieldGet(this, _FreeHighlightOutline_instances, \"m\", _FreeHighlightOutline_rescale).call(this, __classPrivateFieldGet(this, _FreeHighlightOutline_outline, \"f\"), blX, trY, width, -height);\n                  points = __classPrivateFieldGet(this, _FreeHighlightOutline_instances, \"m\", _FreeHighlightOutline_rescale).call(this, __classPrivateFieldGet(this, _FreeHighlightOutline_points, \"f\"), blX, trY, width, -height);\n                  break;\n              case 90:\n                  outline = __classPrivateFieldGet(this, _FreeHighlightOutline_instances, \"m\", _FreeHighlightOutline_rescaleAndSwap).call(this, __classPrivateFieldGet(this, _FreeHighlightOutline_outline, \"f\"), blX, blY, width, height);\n                  points = __classPrivateFieldGet(this, _FreeHighlightOutline_instances, \"m\", _FreeHighlightOutline_rescaleAndSwap).call(this, __classPrivateFieldGet(this, _FreeHighlightOutline_points, \"f\"), blX, blY, width, height);\n                  break;\n              case 180:\n                  outline = __classPrivateFieldGet(this, _FreeHighlightOutline_instances, \"m\", _FreeHighlightOutline_rescale).call(this, __classPrivateFieldGet(this, _FreeHighlightOutline_outline, \"f\"), trX, blY, -width, height);\n                  points = __classPrivateFieldGet(this, _FreeHighlightOutline_instances, \"m\", _FreeHighlightOutline_rescale).call(this, __classPrivateFieldGet(this, _FreeHighlightOutline_points, \"f\"), trX, blY, -width, height);\n                  break;\n              case 270:\n                  outline = __classPrivateFieldGet(this, _FreeHighlightOutline_instances, \"m\", _FreeHighlightOutline_rescaleAndSwap).call(this, __classPrivateFieldGet(this, _FreeHighlightOutline_outline, \"f\"), trX, trY, -width, -height);\n                  points = __classPrivateFieldGet(this, _FreeHighlightOutline_instances, \"m\", _FreeHighlightOutline_rescaleAndSwap).call(this, __classPrivateFieldGet(this, _FreeHighlightOutline_points, \"f\"), trX, trY, -width, -height);\n                  break;\n              default: break;\n          }\n          return { outline: Array.from(outline), points: [Array.from(points)] };\n      }\n      get box() {\n          return __classPrivateFieldGet(this, _FreeHighlightOutline_bbox, \"f\");\n      }\n      getNewOutline(thickness, innerMargin) {\n          // Build the outline of the highlight to use as the focus outline.\n          const { x, y, width, height } = __classPrivateFieldGet(this, _FreeHighlightOutline_bbox, \"f\");\n          const [layerX, layerY, layerWidth, layerHeight] = __classPrivateFieldGet(this, _FreeHighlightOutline_box, \"f\");\n          const sx = width * layerWidth;\n          const sy = height * layerHeight;\n          const tx = x * layerWidth + layerX;\n          const ty = y * layerHeight + layerY;\n          const outliner = new FreeOutliner({\n              x: __classPrivateFieldGet(this, _FreeHighlightOutline_points, \"f\")[0] * sx + tx,\n              y: __classPrivateFieldGet(this, _FreeHighlightOutline_points, \"f\")[1] * sy + ty\n          }, __classPrivateFieldGet(this, _FreeHighlightOutline_box, \"f\"), __classPrivateFieldGet(this, _FreeHighlightOutline_scaleFactor, \"f\"), thickness, __classPrivateFieldGet(this, _FreeHighlightOutline_isLTR, \"f\"), innerMargin !== null && innerMargin !== void 0 ? innerMargin : __classPrivateFieldGet(this, _FreeHighlightOutline_innerMargin, \"f\"));\n          for (let i = 2; i < __classPrivateFieldGet(this, _FreeHighlightOutline_points, \"f\").length; i += 2) {\n              outliner.add({\n                  x: __classPrivateFieldGet(this, _FreeHighlightOutline_points, \"f\")[i] * sx + tx,\n                  y: __classPrivateFieldGet(this, _FreeHighlightOutline_points, \"f\")[i + 1] * sy + ty\n              });\n          }\n          return outliner.getOutlines();\n      }\n  }\n  _FreeHighlightOutline_box = new WeakMap(), _FreeHighlightOutline_bbox = new WeakMap(), _FreeHighlightOutline_innerMargin = new WeakMap(), _FreeHighlightOutline_isLTR = new WeakMap(), _FreeHighlightOutline_points = new WeakMap(), _FreeHighlightOutline_scaleFactor = new WeakMap(), _FreeHighlightOutline_outline = new WeakMap(), _FreeHighlightOutline_instances = new WeakSet(), _FreeHighlightOutline_rescale = function _FreeHighlightOutline_rescale(src, tx, ty, sx, sy) {\n      const dest = new Float64Array(src.length);\n      for (let i = 0, ii = src.length; i < ii; i += 2) {\n          dest[i] = tx + src[i] * sx;\n          dest[i + 1] = ty + src[i + 1] * sy;\n      }\n      return dest;\n  }, _FreeHighlightOutline_rescaleAndSwap = function _FreeHighlightOutline_rescaleAndSwap(src, tx, ty, sx, sy) {\n      const dest = new Float64Array(src.length);\n      for (let i = 0, ii = src.length; i < ii; i += 2) {\n          dest[i] = tx + src[i + 1] * sx;\n          dest[i + 1] = ty + src[i] * sy;\n      }\n      return dest;\n  }, _FreeHighlightOutline_computeMinMax = function _FreeHighlightOutline_computeMinMax(isLTR) {\n      const outline = __classPrivateFieldGet(this, _FreeHighlightOutline_outline, \"f\");\n      let lastX = outline[4];\n      let lastY = outline[5];\n      let minX = lastX;\n      let minY = lastY;\n      let maxX = lastX;\n      let maxY = lastY;\n      let lastPointX = lastX;\n      let lastPointY = lastY;\n      const ltrCallback = isLTR ? Math.max : Math.min;\n      for (let i = 6, ii = outline.length; i < ii; i += 6) {\n          if (isNaN(outline[i])) {\n              minX = Math.min(minX, outline[i + 4]);\n              minY = Math.min(minY, outline[i + 5]);\n              maxX = Math.max(maxX, outline[i + 4]);\n              maxY = Math.max(maxY, outline[i + 5]);\n              if (lastPointY < outline[i + 5]) {\n                  lastPointX = outline[i + 4];\n                  lastPointY = outline[i + 5];\n              }\n              else if (lastPointY === outline[i + 5]) {\n                  lastPointX = ltrCallback(lastPointX, outline[i + 4]);\n              }\n          }\n          else {\n              const bbox = kendo_pdfjs_loader_js.Util.bezierBoundingBox(lastX, lastY, \n              // @ts-expect-error(TS:2556)\n              ...outline.slice(i, i + 6));\n              minX = Math.min(minX, bbox[0]);\n              minY = Math.min(minY, bbox[1]);\n              maxX = Math.max(maxX, bbox[2]);\n              maxY = Math.max(maxY, bbox[3]);\n              if (lastPointY < bbox[3]) {\n                  lastPointX = bbox[2];\n                  lastPointY = bbox[3];\n              }\n              else if (lastPointY === bbox[3]) {\n                  lastPointX = ltrCallback(lastPointX, bbox[2]);\n              }\n          }\n          lastX = outline[i + 4];\n          lastY = outline[i + 5];\n      }\n      const x = minX - __classPrivateFieldGet(this, _FreeHighlightOutline_innerMargin, \"f\"), y = minY - __classPrivateFieldGet(this, _FreeHighlightOutline_innerMargin, \"f\"), width = maxX - minX + 2 * __classPrivateFieldGet(this, _FreeHighlightOutline_innerMargin, \"f\"), height = maxY - minY + 2 * __classPrivateFieldGet(this, _FreeHighlightOutline_innerMargin, \"f\");\n      __classPrivateFieldSet(this, _FreeHighlightOutline_bbox, { x, y, width, height, lastPoint: [lastPointX, lastPointY] }, \"f\");\n  };\n  // export { Outliner };\n\n  /* Copyright 2022 Mozilla Foundation\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *     http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   * See the License for the specific language governing permissions and\n   * limitations under the License.\n   */\n  var _HighlightEditor_instances, _a$2, _HighlightEditor_anchorNode, _HighlightEditor_anchorOffset, _HighlightEditor_boxes, _HighlightEditor_clipPathId, _HighlightEditor_focusOutlines, _HighlightEditor_focusNode, _HighlightEditor_focusOffset, _HighlightEditor_highlightDiv, _HighlightEditor_highlightOutlines, _HighlightEditor_id, _HighlightEditor_isFreeHighlight, _HighlightEditor_lastPoint, _HighlightEditor_opacity, _HighlightEditor_outlineId, _HighlightEditor_text, _HighlightEditor_thickness, _HighlightEditor_methodOfCreation, _HighlightEditor_createOutlines, _HighlightEditor_createFreeOutlines, _HighlightEditor_updateColor, _HighlightEditor_updateThickness, _HighlightEditor_cleanDrawLayer, _HighlightEditor_addToDrawLayer, _HighlightEditor_rotateBbox, _HighlightEditor_keydown, _HighlightEditor_setCaret, _HighlightEditor_getRotation, _HighlightEditor_serializeBoxes, _HighlightEditor_serializeOutlines, _HighlightEditor_highlightMove, _HighlightEditor_endHighlight;\n  // import { ColorPicker } from \"./color_picker.js\";\n  // import { noContextMenu } from \"../../shared/display_utils\";\n  /**\n   * Basic draw editor in order to generate an Highlight annotation.\n   */\n  class HighlightEditor extends AnnotationEditor {\n      // static get _keyboardManager() {\n      //     const proto = HighlightEditor.prototype;\n      //     return shadow(\n      //         this,\n      //         \"_keyboardManager\",\n      //         new KeyboardManager([\n      //             [[\"ArrowLeft\", \"mac+ArrowLeft\"], proto._moveCaret, { args: [0] }],\n      //             [[\"ArrowRight\", \"mac+ArrowRight\"], proto._moveCaret, { args: [1] }],\n      //             [[\"ArrowUp\", \"mac+ArrowUp\"], proto._moveCaret, { args: [2] }],\n      //             [[\"ArrowDown\", \"mac+ArrowDown\"], proto._moveCaret, { args: [3] }],\n      //         ])\n      //     );\n      // }\n      constructor(params) {\n          super(Object.assign(Object.assign({}, params), { name: \"k-highlight-editor\" }));\n          _HighlightEditor_instances.add(this);\n          // todo: props\n          this.color = \"\";\n          // parent = null;\n          // width = null;\n          // height = null;\n          // x = null;\n          // y = null;\n          // todo: props\n          _HighlightEditor_anchorNode.set(this, null);\n          _HighlightEditor_anchorOffset.set(this, 0);\n          _HighlightEditor_boxes.set(this, void 0);\n          _HighlightEditor_clipPathId.set(this, null);\n          // #colorPicker = null;\n          _HighlightEditor_focusOutlines.set(this, null);\n          _HighlightEditor_focusNode.set(this, null);\n          _HighlightEditor_focusOffset.set(this, 0);\n          _HighlightEditor_highlightDiv.set(this, null);\n          _HighlightEditor_highlightOutlines.set(this, null);\n          _HighlightEditor_id.set(this, null);\n          _HighlightEditor_isFreeHighlight.set(this, false);\n          _HighlightEditor_lastPoint.set(this, null);\n          _HighlightEditor_opacity.set(this, void 0);\n          _HighlightEditor_outlineId.set(this, null);\n          _HighlightEditor_text.set(this, \"\");\n          _HighlightEditor_thickness.set(this, void 0);\n          _HighlightEditor_methodOfCreation.set(this, \"\");\n          this.color = params.color || _a$2._defaultColor;\n          __classPrivateFieldSet(this, _HighlightEditor_thickness, params.thickness || _a$2._defaultThickness, \"f\");\n          __classPrivateFieldSet(this, _HighlightEditor_opacity, params.opacity || _a$2._defaultOpacity, \"f\");\n          __classPrivateFieldSet(this, _HighlightEditor_boxes, params.boxes || null, \"f\");\n          __classPrivateFieldSet(this, _HighlightEditor_methodOfCreation, params.methodOfCreation || \"\", \"f\");\n          __classPrivateFieldSet(this, _HighlightEditor_text, params.text || \"\", \"f\");\n          this._isDraggable = false;\n          if (params.highlightId > -1) {\n              __classPrivateFieldSet(this, _HighlightEditor_isFreeHighlight, true, \"f\");\n              __classPrivateFieldGet(this, _HighlightEditor_instances, \"m\", _HighlightEditor_createFreeOutlines).call(this, params);\n              __classPrivateFieldGet(this, _HighlightEditor_instances, \"m\", _HighlightEditor_addToDrawLayer).call(this);\n          }\n          else {\n              __classPrivateFieldSet(this, _HighlightEditor_anchorNode, params.anchorNode, \"f\");\n              __classPrivateFieldSet(this, _HighlightEditor_anchorOffset, params.anchorOffset, \"f\");\n              __classPrivateFieldSet(this, _HighlightEditor_focusNode, params.focusNode, \"f\");\n              __classPrivateFieldSet(this, _HighlightEditor_focusOffset, params.focusOffset, \"f\");\n              __classPrivateFieldGet(this, _HighlightEditor_instances, \"m\", _HighlightEditor_createOutlines).call(this);\n              __classPrivateFieldGet(this, _HighlightEditor_instances, \"m\", _HighlightEditor_addToDrawLayer).call(this);\n              this.rotate(this.rotation);\n          }\n      }\n      /** @inheritdoc */\n      get telemetryInitialData() {\n          return {\n              action: \"added\",\n              type: __classPrivateFieldGet(this, _HighlightEditor_isFreeHighlight, \"f\") ? \"free_highlight\" : \"highlight\",\n              color: this._uiManager.highlightColorNames.get(this.color),\n              thickness: __classPrivateFieldGet(this, _HighlightEditor_thickness, \"f\"),\n              methodOfCreation: __classPrivateFieldGet(this, _HighlightEditor_methodOfCreation, \"f\")\n          };\n      }\n      /** @inheritdoc */\n      get telemetryFinalData() {\n          return {\n              type: \"highlight\",\n              color: this._uiManager.highlightColorNames.get(this.color)\n          };\n      }\n      static computeTelemetryFinalData(data) {\n          // We want to know how many colors have been used.\n          return { numberOfColors: data.get(\"color\").size };\n      }\n      /** @inheritdoc */\n      static initialize(l10n, uiManager) {\n          var _b, _c, _d, _e;\n          AnnotationEditor.initialize(l10n, uiManager, {});\n          _a$2._defaultColor || (_a$2._defaultColor = \n          // uiManager.highlightColors?.values().next().value || \"#fff066\";\n          // uiManager.highlightColors?.values().next().value || \"#ffff00\";\n          ((_e = (_d = (_c = (_b = uiManager.viewer) === null || _b === void 0 ? void 0 : _b.options) === null || _c === void 0 ? void 0 : _c.annotations) === null || _d === void 0 ? void 0 : _d.highlight) === null || _e === void 0 ? void 0 : _e.color) || \"#ffff00\");\n      }\n      /** @inheritdoc */\n      static updateDefaultParams(type, value) {\n          switch (type) {\n              case kendo_pdfjs_loader_js.AnnotationEditorParamsType.HIGHLIGHT_DEFAULT_COLOR:\n                  _a$2._defaultColor = value;\n                  break;\n              case kendo_pdfjs_loader_js.AnnotationEditorParamsType.HIGHLIGHT_THICKNESS:\n                  _a$2._defaultThickness = value;\n                  break;\n              default: break;\n          }\n      }\n      /** @inheritdoc */\n      // translateInPage(x, y) { }\n      translateInPage() { }\n      /** @inheritdoc */\n      get toolbarPosition() {\n          return __classPrivateFieldGet(this, _HighlightEditor_lastPoint, \"f\");\n      }\n      /** @inheritdoc */\n      updateParams(type, value) {\n          switch (type) {\n              case kendo_pdfjs_loader_js.AnnotationEditorParamsType.HIGHLIGHT_COLOR:\n                  __classPrivateFieldGet(this, _HighlightEditor_instances, \"m\", _HighlightEditor_updateColor).call(this, value);\n                  break;\n              case kendo_pdfjs_loader_js.AnnotationEditorParamsType.HIGHLIGHT_THICKNESS:\n                  __classPrivateFieldGet(this, _HighlightEditor_instances, \"m\", _HighlightEditor_updateThickness).call(this, value);\n                  break;\n              default: break;\n          }\n      }\n      static get defaultPropertiesToUpdate() {\n          return [\n              [\n                  kendo_pdfjs_loader_js.AnnotationEditorParamsType.HIGHLIGHT_DEFAULT_COLOR,\n                  _a$2._defaultColor\n              ],\n              [\n                  kendo_pdfjs_loader_js.AnnotationEditorParamsType.HIGHLIGHT_THICKNESS,\n                  _a$2._defaultThickness\n              ]\n          ];\n      }\n      /** @inheritdoc */\n      get propertiesToUpdate() {\n          return [\n              [\n                  kendo_pdfjs_loader_js.AnnotationEditorParamsType.HIGHLIGHT_COLOR,\n                  this.color || _a$2._defaultColor\n              ],\n              [\n                  kendo_pdfjs_loader_js.AnnotationEditorParamsType.HIGHLIGHT_THICKNESS,\n                  __classPrivateFieldGet(this, _HighlightEditor_thickness, \"f\") || _a$2._defaultThickness\n              ],\n              [kendo_pdfjs_loader_js.AnnotationEditorParamsType.HIGHLIGHT_FREE, __classPrivateFieldGet(this, _HighlightEditor_isFreeHighlight, \"f\")]\n          ];\n      }\n      /** @inheritdoc */\n      // async addEditToolbar() {\n      //     // const toolbar = await super.addEditToolbar();\n      //     // if (!toolbar) {\n      //     //     return null;\n      //     // }\n      //     // if (this._uiManager.highlightColors) {\n      //     //     // this.#colorPicker = new ColorPicker({ editor: this });\n      //     //     // toolbar.addColorPicker(this.#colorPicker);\n      //     // }\n      //     // return toolbar;\n      // }\n      /** @inheritdoc */\n      disableEditing() {\n          super.disableEditing();\n          // this.div.classList.toggle(\"disabled\", true);\n          this.div.classList.toggle(\"k-highlight-editor-disabled\", true);\n      }\n      /** @inheritdoc */\n      enableEditing() {\n          super.enableEditing();\n          // this.div.classList.toggle(\"disabled\", false);\n          this.div.classList.toggle(\"k-highlight-editor-disabled\", false);\n      }\n      /** @inheritdoc */\n      fixAndSetPosition() {\n          return super.fixAndSetPosition(__classPrivateFieldGet(this, _HighlightEditor_instances, \"m\", _HighlightEditor_getRotation).call(this));\n      }\n      /** @inheritdoc */\n      getBaseTranslation() {\n          // The editor itself doesn't have any CSS border (we're drawing one\n          // ourselves in using SVG).\n          return [0, 0];\n      }\n      /** @inheritdoc */\n      getRect(tx, ty) {\n          return super.getRect(tx, ty, __classPrivateFieldGet(this, _HighlightEditor_instances, \"m\", _HighlightEditor_getRotation).call(this));\n      }\n      /** @inheritdoc */\n      onceAdded() {\n          this.parent.addUndoableEditor(this);\n          this.div.focus();\n      }\n      /** @inheritdoc */\n      remove() {\n          __classPrivateFieldGet(this, _HighlightEditor_instances, \"m\", _HighlightEditor_cleanDrawLayer).call(this);\n          // this._reportTelemetry({\n          //     action: \"deleted\",\n          // });\n          super.remove();\n      }\n      /** @inheritdoc */\n      rebuild() {\n          if (!this.parent) {\n              return;\n          }\n          super.rebuild();\n          if (this.div === null) {\n              return;\n          }\n          __classPrivateFieldGet(this, _HighlightEditor_instances, \"m\", _HighlightEditor_addToDrawLayer).call(this);\n          if (!this.isAttachedToDOM) {\n              // At some point this editor was removed and we're rebuilding it,\n              // hence we must add it to its parent.\n              this.parent.add(this);\n          }\n      }\n      setParent(parent) {\n          var _b, _c;\n          let mustBeSelected = false;\n          if (this.parent && !parent) {\n              __classPrivateFieldGet(this, _HighlightEditor_instances, \"m\", _HighlightEditor_cleanDrawLayer).call(this);\n          }\n          else if (parent) {\n              __classPrivateFieldGet(this, _HighlightEditor_instances, \"m\", _HighlightEditor_addToDrawLayer).call(this, parent);\n              // If mustBeSelected is true it means that this editor was selected\n              // when its parent has been destroyed, hence we must select it again.\n              mustBeSelected =\n                  !this.parent &&\n                      (((_b = this.div) === null || _b === void 0 ? void 0 : _b.classList.contains(\"selectedEditor\")) ||\n                          ((_c = this.div) === null || _c === void 0 ? void 0 : _c.classList.contains(\"k-selected\")));\n          }\n          super.setParent(parent);\n          this.show(this._isVisible);\n          if (mustBeSelected) {\n              // We select it after the parent has been set.\n              this.select();\n          }\n      }\n      /** @inheritdoc */\n      rotate(angle) {\n          // We need to rotate the svgs because of the coordinates system.\n          const { drawLayer } = this.parent;\n          let box;\n          if (__classPrivateFieldGet(this, _HighlightEditor_isFreeHighlight, \"f\")) {\n              angle = (angle - this.rotation + 360) % 360;\n              box = __classPrivateFieldGet(_a$2, _a$2, \"m\", _HighlightEditor_rotateBbox).call(_a$2, __classPrivateFieldGet(this, _HighlightEditor_highlightOutlines, \"f\").box, angle);\n          }\n          else {\n              // An highlight annotation is always drawn horizontally.\n              box = __classPrivateFieldGet(_a$2, _a$2, \"m\", _HighlightEditor_rotateBbox).call(_a$2, this, angle);\n          }\n          drawLayer.rotate(__classPrivateFieldGet(this, _HighlightEditor_id, \"f\"), angle);\n          drawLayer.rotate(__classPrivateFieldGet(this, _HighlightEditor_outlineId, \"f\"), angle);\n          drawLayer.updateBox(__classPrivateFieldGet(this, _HighlightEditor_id, \"f\"), box);\n          drawLayer.updateBox(__classPrivateFieldGet(this, _HighlightEditor_outlineId, \"f\"), __classPrivateFieldGet(_a$2, _a$2, \"m\", _HighlightEditor_rotateBbox).call(_a$2, __classPrivateFieldGet(this, _HighlightEditor_focusOutlines, \"f\").box, angle));\n      }\n      /** @inheritdoc */\n      render() {\n          if (this.div) {\n              return this.div;\n          }\n          const div = super.render();\n          if (__classPrivateFieldGet(this, _HighlightEditor_text, \"f\")) {\n              div.setAttribute(\"aria-label\", __classPrivateFieldGet(this, _HighlightEditor_text, \"f\"));\n              div.setAttribute(\"role\", \"mark\");\n          }\n          if (__classPrivateFieldGet(this, _HighlightEditor_isFreeHighlight, \"f\")) {\n              div.classList.add(\"free\");\n          }\n          else {\n              this.div.addEventListener(\"keydown\", __classPrivateFieldGet(this, _HighlightEditor_instances, \"m\", _HighlightEditor_keydown).bind(this), {\n                  signal: this._uiManager._signal\n              });\n          }\n          const highlightDiv = (__classPrivateFieldSet(this, _HighlightEditor_highlightDiv, document.createElement(\"div\"), \"f\"));\n          div.append(highlightDiv);\n          highlightDiv.setAttribute(\"aria-hidden\", \"true\");\n          highlightDiv.className = \"k-internal internal\";\n          highlightDiv.style.clipPath = __classPrivateFieldGet(this, _HighlightEditor_clipPathId, \"f\");\n          const [parentWidth, parentHeight] = this.parentDimensions;\n          this.setDims(this.width * parentWidth, this.height * parentHeight);\n          bindEvents(this, __classPrivateFieldGet(this, _HighlightEditor_highlightDiv, \"f\"), [\"pointerover\", \"pointerleave\"]);\n          this.enableEditing();\n          return div;\n      }\n      pointerover() {\n          this.parent.drawLayer.addClass(__classPrivateFieldGet(this, _HighlightEditor_outlineId, \"f\"), \"hovered\");\n      }\n      pointerleave() {\n          this.parent.drawLayer.removeClass(__classPrivateFieldGet(this, _HighlightEditor_outlineId, \"f\"), \"hovered\");\n      }\n      _moveCaret(direction) {\n          this.parent.unselect(this);\n          switch (direction) {\n              case 0 /* left */:\n              case 2 /* up */:\n                  __classPrivateFieldGet(this, _HighlightEditor_instances, \"m\", _HighlightEditor_setCaret).call(this, /* start = */ true);\n                  break;\n              case 1 /* right */:\n              case 3 /* down */:\n                  __classPrivateFieldGet(this, _HighlightEditor_instances, \"m\", _HighlightEditor_setCaret).call(this, /* start = */ false);\n                  break;\n              default: break;\n          }\n      }\n      /** @inheritdoc */\n      select() {\n          var _b, _c, _d;\n          super.select();\n          if (!__classPrivateFieldGet(this, _HighlightEditor_outlineId, \"f\")) {\n              return;\n          }\n          (_b = this.parent) === null || _b === void 0 ? void 0 : _b.drawLayer.removeClass(__classPrivateFieldGet(this, _HighlightEditor_outlineId, \"f\"), \"hovered\");\n          (_c = this.parent) === null || _c === void 0 ? void 0 : _c.drawLayer.addClass(__classPrivateFieldGet(this, _HighlightEditor_outlineId, \"f\"), \"selected\");\n          (_d = this.parent) === null || _d === void 0 ? void 0 : _d.drawLayer.addClass(__classPrivateFieldGet(this, _HighlightEditor_outlineId, \"f\"), \"k-selected\");\n      }\n      /** @inheritdoc */\n      unselect() {\n          var _b, _c;\n          super.unselect();\n          if (!__classPrivateFieldGet(this, _HighlightEditor_outlineId, \"f\")) {\n              return;\n          }\n          (_b = this.parent) === null || _b === void 0 ? void 0 : _b.drawLayer.removeClass(__classPrivateFieldGet(this, _HighlightEditor_outlineId, \"f\"), \"selected\");\n          (_c = this.parent) === null || _c === void 0 ? void 0 : _c.drawLayer.removeClass(__classPrivateFieldGet(this, _HighlightEditor_outlineId, \"f\"), \"k-selected\");\n          if (!__classPrivateFieldGet(this, _HighlightEditor_isFreeHighlight, \"f\")) {\n              __classPrivateFieldGet(this, _HighlightEditor_instances, \"m\", _HighlightEditor_setCaret).call(this, /* start = */ false);\n          }\n      }\n      /** @inheritdoc */\n      get _mustFixPosition() {\n          return !__classPrivateFieldGet(this, _HighlightEditor_isFreeHighlight, \"f\");\n      }\n      /** @inheritdoc */\n      show(visible = this._isVisible) {\n          super.show(visible);\n          if (this.parent) {\n              this.parent.drawLayer.show(__classPrivateFieldGet(this, _HighlightEditor_id, \"f\"), visible);\n              this.parent.drawLayer.show(__classPrivateFieldGet(this, _HighlightEditor_outlineId, \"f\"), visible);\n          }\n      }\n      static startHighlighting(parent, isLTR, { target: textLayer, x, y }) {\n          const { x: layerX, y: layerY, width: parentWidth, height: parentHeight } = textLayer.getBoundingClientRect();\n          const ac = new AbortController();\n          const signal = parent.combinedSignal(ac);\n          const pointerDown = e => {\n              // Avoid to have undesired clicks during the drawing.\n              e.preventDefault();\n              e.stopPropagation();\n          };\n          const pointerUpCallback = e => {\n              ac.abort();\n              __classPrivateFieldGet(this, _a$2, \"m\", _HighlightEditor_endHighlight).call(this, parent, e);\n          };\n          window.addEventListener(\"blur\", pointerUpCallback, { signal });\n          window.addEventListener(\"pointerup\", pointerUpCallback, { signal });\n          window.addEventListener(\"pointerdown\", pointerDown, {\n              capture: true,\n              passive: false,\n              signal\n          });\n          window.addEventListener(\"contextmenu\", kendo_pdfjs_loader_js.noContextMenu, { signal });\n          textLayer.addEventListener(\"pointermove\", __classPrivateFieldGet(this, _a$2, \"m\", _HighlightEditor_highlightMove).bind(this, parent), { signal });\n          this._freeHighlight = new FreeOutliner({ x, y }, [layerX, layerY, parentWidth, parentHeight], parent.scale, this._defaultThickness / 2, isLTR, \n          /* innerMargin = */ 0.001);\n          ({ id: this._freeHighlightId, clipPathId: this._freeHighlightClipId } =\n              parent.drawLayer.highlight(this._freeHighlight, this._defaultColor, this._defaultOpacity, \n              /* isPathUpdatable = */ true));\n      }\n      /** @inheritdoc */\n      static deserialize(data, parent, uiManager) {\n          const editor = super.deserialize(data, parent, uiManager);\n          const { rect: [blX, blY, trX, trY], color, quadPoints } = data;\n          // @ts-expect-error TS()\n          editor.color = kendo_pdfjs_loader_js.Util.makeHexColor(...color);\n          __classPrivateFieldSet(editor, _HighlightEditor_opacity, data.opacity, \"f\");\n          const [pageWidth, pageHeight] = editor.pageDimensions;\n          editor.width = (trX - blX) / pageWidth;\n          editor.height = (trY - blY) / pageHeight;\n          const boxes = (__classPrivateFieldSet(editor, _HighlightEditor_boxes, [], \"f\"));\n          for (let i = 0; i < quadPoints.length; i += 8) {\n              boxes.push({\n                  x: (quadPoints[4] - trX) / pageWidth,\n                  y: (trY - (1 - quadPoints[i + 5])) / pageHeight,\n                  width: (quadPoints[i + 2] - quadPoints[i]) / pageWidth,\n                  height: (quadPoints[i + 5] - quadPoints[i + 1]) / pageHeight\n              });\n          }\n          __classPrivateFieldGet(editor, _HighlightEditor_instances, \"m\", _HighlightEditor_createOutlines).call(editor);\n          return editor;\n      }\n      /** @inheritdoc */\n      serialize(isForCopying = false) {\n          // It doesn't make sense to copy/paste a highlight annotation.\n          if (this.isEmpty() || isForCopying) {\n              return null;\n          }\n          const rect = this.getRect(0, 0);\n          const color = AnnotationEditor._colorManager.convert(this.color);\n          return {\n              annotationType: kendo_pdfjs_loader_js.AnnotationEditorType.HIGHLIGHT,\n              color,\n              opacity: __classPrivateFieldGet(this, _HighlightEditor_opacity, \"f\"),\n              thickness: __classPrivateFieldGet(this, _HighlightEditor_thickness, \"f\"),\n              quadPoints: __classPrivateFieldGet(this, _HighlightEditor_instances, \"m\", _HighlightEditor_serializeBoxes).call(this),\n              outlines: __classPrivateFieldGet(this, _HighlightEditor_instances, \"m\", _HighlightEditor_serializeOutlines).call(this, rect),\n              pageIndex: this.pageIndex,\n              rect,\n              rotation: __classPrivateFieldGet(this, _HighlightEditor_instances, \"m\", _HighlightEditor_getRotation).call(this),\n              structTreeParentId: this._structTreeParentId\n          };\n      }\n      static canCreateNewEmptyEditor() {\n          return false;\n      }\n      // todo: this is necessary\n      // saveDocument() has checks that test \"editor instanceof AnnotationEditor\", but they fail\n      // because AnnotationEditor from \"pdfjs-dist/legacy/build/pdf.mjs\" is not exported\n      // thus replace instances of editors with their serialized version\n      toJSON() {\n          const data = this.serialize();\n          return data;\n      }\n  }\n  _a$2 = HighlightEditor, _HighlightEditor_anchorNode = new WeakMap(), _HighlightEditor_anchorOffset = new WeakMap(), _HighlightEditor_boxes = new WeakMap(), _HighlightEditor_clipPathId = new WeakMap(), _HighlightEditor_focusOutlines = new WeakMap(), _HighlightEditor_focusNode = new WeakMap(), _HighlightEditor_focusOffset = new WeakMap(), _HighlightEditor_highlightDiv = new WeakMap(), _HighlightEditor_highlightOutlines = new WeakMap(), _HighlightEditor_id = new WeakMap(), _HighlightEditor_isFreeHighlight = new WeakMap(), _HighlightEditor_lastPoint = new WeakMap(), _HighlightEditor_opacity = new WeakMap(), _HighlightEditor_outlineId = new WeakMap(), _HighlightEditor_text = new WeakMap(), _HighlightEditor_thickness = new WeakMap(), _HighlightEditor_methodOfCreation = new WeakMap(), _HighlightEditor_instances = new WeakSet(), _HighlightEditor_createOutlines = function _HighlightEditor_createOutlines() {\n      const outliner = new Outliner(__classPrivateFieldGet(this, _HighlightEditor_boxes, \"f\"), /* borderWidth = */ 0.001);\n      __classPrivateFieldSet(this, _HighlightEditor_highlightOutlines, outliner.getOutlines(), \"f\");\n      ({\n          x: this.x,\n          y: this.y,\n          width: this.width,\n          height: this.height\n      } = __classPrivateFieldGet(this, _HighlightEditor_highlightOutlines, \"f\").box);\n      const outlinerForOutline = new Outliner(__classPrivateFieldGet(this, _HighlightEditor_boxes, \"f\"), \n      /* borderWidth = */ 0.0025, \n      /* innerMargin = */ 0.001, this._uiManager.direction === \"ltr\");\n      __classPrivateFieldSet(this, _HighlightEditor_focusOutlines, outlinerForOutline.getOutlines(), \"f\");\n      // The last point is in the pages coordinate system.\n      const { lastPoint } = __classPrivateFieldGet(this, _HighlightEditor_focusOutlines, \"f\").box;\n      __classPrivateFieldSet(this, _HighlightEditor_lastPoint, [\n          (lastPoint[0] - this.x) / this.width,\n          (lastPoint[1] - this.y) / this.height\n      ], \"f\");\n  }, _HighlightEditor_createFreeOutlines = function _HighlightEditor_createFreeOutlines({ highlightOutlines, highlightId, clipPathId }) {\n      __classPrivateFieldSet(this, _HighlightEditor_highlightOutlines, highlightOutlines, \"f\");\n      const extraThickness = 1.5;\n      __classPrivateFieldSet(this, _HighlightEditor_focusOutlines, highlightOutlines.getNewOutline(\n      /* Slightly bigger than the highlight in order to have a little\n         space between the highlight and the outline. */\n      __classPrivateFieldGet(this, _HighlightEditor_thickness, \"f\") / 2 + extraThickness, \n      /* innerMargin = */ 0.0025), \"f\");\n      if (highlightId >= 0) {\n          __classPrivateFieldSet(this, _HighlightEditor_id, highlightId, \"f\");\n          __classPrivateFieldSet(this, _HighlightEditor_clipPathId, clipPathId, \"f\");\n          // We need to redraw the highlight because we change the coordinates to be\n          // in the box coordinate system.\n          this.parent.drawLayer.finalizeLine(highlightId, highlightOutlines);\n          __classPrivateFieldSet(this, _HighlightEditor_outlineId, this.parent.drawLayer.highlightOutline(__classPrivateFieldGet(this, _HighlightEditor_focusOutlines, \"f\")), \"f\");\n      }\n      else if (this.parent) {\n          const angle = this.parent.viewport.rotation;\n          this.parent.drawLayer.updateLine(__classPrivateFieldGet(this, _HighlightEditor_id, \"f\"), highlightOutlines);\n          this.parent.drawLayer.updateBox(__classPrivateFieldGet(this, _HighlightEditor_id, \"f\"), __classPrivateFieldGet(_a$2, _a$2, \"m\", _HighlightEditor_rotateBbox).call(_a$2, __classPrivateFieldGet(this, _HighlightEditor_highlightOutlines, \"f\").box, (angle - this.rotation + 360) % 360));\n          this.parent.drawLayer.updateLine(__classPrivateFieldGet(this, _HighlightEditor_outlineId, \"f\"), __classPrivateFieldGet(this, _HighlightEditor_focusOutlines, \"f\"));\n          this.parent.drawLayer.updateBox(__classPrivateFieldGet(this, _HighlightEditor_outlineId, \"f\"), __classPrivateFieldGet(_a$2, _a$2, \"m\", _HighlightEditor_rotateBbox).call(_a$2, __classPrivateFieldGet(this, _HighlightEditor_focusOutlines, \"f\").box, angle));\n      }\n      const { x, y, width, height } = highlightOutlines.box;\n      switch (this.rotation) {\n          case 0:\n              this.x = x;\n              this.y = y;\n              this.width = width;\n              this.height = height;\n              break;\n          case 90: {\n              const [pageWidth, pageHeight] = this.parentDimensions;\n              this.x = y;\n              this.y = 1 - x;\n              this.width = (width * pageHeight) / pageWidth;\n              this.height = (height * pageWidth) / pageHeight;\n              break;\n          }\n          case 180:\n              this.x = 1 - x;\n              this.y = 1 - y;\n              this.width = width;\n              this.height = height;\n              break;\n          case 270: {\n              const [pageWidth, pageHeight] = this.parentDimensions;\n              this.x = 1 - y;\n              this.y = x;\n              this.width = (width * pageHeight) / pageWidth;\n              this.height = (height * pageWidth) / pageHeight;\n              break;\n          }\n          default: break;\n      }\n      const { lastPoint } = __classPrivateFieldGet(this, _HighlightEditor_focusOutlines, \"f\").box;\n      __classPrivateFieldSet(this, _HighlightEditor_lastPoint, [(lastPoint[0] - x) / width, (lastPoint[1] - y) / height], \"f\");\n  }, _HighlightEditor_updateColor = function _HighlightEditor_updateColor(color) {\n      if (!color) {\n          return;\n      }\n      const setColor = col => {\n          var _b;\n          this.color = col;\n          (_b = this.parent) === null || _b === void 0 ? void 0 : _b.drawLayer.changeColor(__classPrivateFieldGet(this, _HighlightEditor_id, \"f\"), col);\n          // this.#colorPicker?.updateColor(col);\n      };\n      const savedColor = this.color;\n      this.addCommands({\n          cmd: setColor.bind(this, color),\n          undo: setColor.bind(this, savedColor),\n          post: this._uiManager.updateUI.bind(this._uiManager, this),\n          mustExec: true,\n          type: kendo_pdfjs_loader_js.AnnotationEditorParamsType.HIGHLIGHT_COLOR,\n          overwriteIfSameType: true,\n          keepUndo: true\n      });\n      // this._reportTelemetry(\n      //     {\n      //         action: \"color_changed\",\n      //         color: this._uiManager.highlightColorNames.get(color),\n      //     },\n      //     /* mustWait = */ true\n      // );\n  }, _HighlightEditor_updateThickness = function _HighlightEditor_updateThickness(thickness) {\n      if (!thickness) {\n          /* no-empty */\n      }\n      // const savedThickness = this.#thickness;\n      // const setThickness = th => {\n      //     this.#thickness = th;\n      //     this.#changeThickness(th);\n      // };\n      // this.addCommands({\n      //     cmd: setThickness.bind(this, thickness),\n      //     undo: setThickness.bind(this, savedThickness),\n      //     post: this._uiManager.updateUI.bind(this._uiManager, this),\n      //     mustExec: true,\n      //     type: AnnotationEditorParamsType.INK_THICKNESS,\n      //     overwriteIfSameType: true,\n      //     keepUndo: true,\n      // });\n      // this._reportTelemetry(\n      //     { action: \"thickness_changed\", thickness },\n      // /* mustWait = */ true\n      // );\n  }, _HighlightEditor_cleanDrawLayer = function _HighlightEditor_cleanDrawLayer() {\n      if (__classPrivateFieldGet(this, _HighlightEditor_id, \"f\") === null || !this.parent) {\n          return;\n      }\n      this.parent.drawLayer.remove(__classPrivateFieldGet(this, _HighlightEditor_id, \"f\"));\n      __classPrivateFieldSet(this, _HighlightEditor_id, null, \"f\");\n      this.parent.drawLayer.remove(__classPrivateFieldGet(this, _HighlightEditor_outlineId, \"f\"));\n      __classPrivateFieldSet(this, _HighlightEditor_outlineId, null, \"f\");\n  }, _HighlightEditor_addToDrawLayer = function _HighlightEditor_addToDrawLayer(parent = this.parent) {\n      var _b, _c;\n      if (__classPrivateFieldGet(this, _HighlightEditor_id, \"f\") !== null) {\n          return;\n      }\n      (_b = this, _c = this, { id: ({ set value(_d) { __classPrivateFieldSet(_b, _HighlightEditor_id, _d, \"f\"); } }).value, clipPathId: ({ set value(_d) { __classPrivateFieldSet(_c, _HighlightEditor_clipPathId, _d, \"f\"); } }).value } =\n          parent.drawLayer.highlight(__classPrivateFieldGet(this, _HighlightEditor_highlightOutlines, \"f\"), this.color, __classPrivateFieldGet(this, _HighlightEditor_opacity, \"f\")));\n      __classPrivateFieldSet(this, _HighlightEditor_outlineId, parent.drawLayer.highlightOutline(__classPrivateFieldGet(this, _HighlightEditor_focusOutlines, \"f\")), \"f\");\n      // // todo: manually set styles, so that SVG elements are properly displayed\n      // if (parent.drawLayer.parent) {\n      //     Array.from(parent.drawLayer.parent.querySelectorAll(\".highlight\")).forEach(x => {\n      //         const element = x as any;\n      //         element.style[\"--blend-mode\"] = \"multiply\";\n      //         element.style.position = \"absolute\";\n      //         element.style[\"mix-blend-mode\"] = \"var(--blend-mode)\";\n      //         element.style.transform = \"none\";\n      //     });\n      // }\n      if (__classPrivateFieldGet(this, _HighlightEditor_highlightDiv, \"f\")) {\n          __classPrivateFieldGet(this, _HighlightEditor_highlightDiv, \"f\").style.clipPath = __classPrivateFieldGet(this, _HighlightEditor_clipPathId, \"f\");\n      }\n  }, _HighlightEditor_rotateBbox = function _HighlightEditor_rotateBbox({ x, y, width, height }, angle) {\n      switch (angle) {\n          case 90:\n              return {\n                  x: 1 - y - height,\n                  y: x,\n                  width: height,\n                  height: width\n              };\n          case 180:\n              return {\n                  x: 1 - x - width,\n                  y: 1 - y - height,\n                  width,\n                  height\n              };\n          case 270:\n              return {\n                  x: y,\n                  y: 1 - x - width,\n                  width: height,\n                  height: width\n              };\n          default: break;\n      }\n      return {\n          x,\n          y,\n          width,\n          height\n      };\n  }, _HighlightEditor_keydown = function _HighlightEditor_keydown(event) {\n      if (!event) {\n          /* no-empty */\n      }\n      // HighlightEditor._keyboardManager.exec(this, event);\n  }, _HighlightEditor_setCaret = function _HighlightEditor_setCaret(start) {\n      if (!__classPrivateFieldGet(this, _HighlightEditor_anchorNode, \"f\")) {\n          return;\n      }\n      const selection = window.getSelection();\n      if (start) {\n          selection.setPosition(__classPrivateFieldGet(this, _HighlightEditor_anchorNode, \"f\"), __classPrivateFieldGet(this, _HighlightEditor_anchorOffset, \"f\"));\n      }\n      else {\n          selection.setPosition(__classPrivateFieldGet(this, _HighlightEditor_focusNode, \"f\"), __classPrivateFieldGet(this, _HighlightEditor_focusOffset, \"f\"));\n      }\n  }, _HighlightEditor_getRotation = function _HighlightEditor_getRotation() {\n      // Highlight annotations are always drawn horizontally but if\n      // a free highlight annotation can be rotated.\n      return __classPrivateFieldGet(this, _HighlightEditor_isFreeHighlight, \"f\") ? this.rotation : 0;\n  }, _HighlightEditor_serializeBoxes = function _HighlightEditor_serializeBoxes() {\n      if (__classPrivateFieldGet(this, _HighlightEditor_isFreeHighlight, \"f\")) {\n          return null;\n      }\n      const [pageWidth, pageHeight] = this.pageDimensions;\n      const [pageX, pageY] = this.pageTranslation;\n      const boxes = __classPrivateFieldGet(this, _HighlightEditor_boxes, \"f\");\n      const quadPoints = new Float32Array(boxes.length * 8);\n      let i = 0;\n      for (const { x, y, width, height } of boxes) {\n          const sx = x * pageWidth + pageX;\n          const sy = (1 - y - height) * pageHeight + pageY;\n          // The specifications say that the rectangle should start from the bottom\n          // left corner and go counter-clockwise.\n          // But when opening the file in Adobe Acrobat it appears that this isn't\n          // correct hence the 4th and 6th numbers are just swapped.\n          quadPoints[i] = quadPoints[i + 4] = sx;\n          quadPoints[i + 1] = quadPoints[i + 3] = sy;\n          quadPoints[i + 2] = quadPoints[i + 6] = sx + width * pageWidth;\n          quadPoints[i + 5] = quadPoints[i + 7] = sy + height * pageHeight;\n          i += 8;\n      }\n      return quadPoints;\n  }, _HighlightEditor_serializeOutlines = function _HighlightEditor_serializeOutlines(rect) {\n      return __classPrivateFieldGet(this, _HighlightEditor_highlightOutlines, \"f\").serialize(rect, __classPrivateFieldGet(this, _HighlightEditor_instances, \"m\", _HighlightEditor_getRotation).call(this));\n  }, _HighlightEditor_highlightMove = function _HighlightEditor_highlightMove(parent, event) {\n      if (this._freeHighlight.add(event)) {\n          // Redraw only if the point has been added.\n          parent.drawLayer.updatePath(this._freeHighlightId, this._freeHighlight);\n      }\n  }, _HighlightEditor_endHighlight = function _HighlightEditor_endHighlight(parent, event) {\n      if (!this._freeHighlight.isEmpty()) {\n          parent.createAndAddNewEditor(event, false, {\n              highlightId: this._freeHighlightId,\n              highlightOutlines: this._freeHighlight.getOutlines(),\n              clipPathId: this._freeHighlightClipId,\n              methodOfCreation: \"main_toolbar\"\n          });\n      }\n      else {\n          parent.drawLayer.removeFreeHighlight(this._freeHighlightId);\n      }\n      this._freeHighlightId = -1;\n      this._freeHighlight = null;\n      this._freeHighlightClipId = \"\";\n  };\n  HighlightEditor._defaultColor = null;\n  HighlightEditor._defaultOpacity = 1;\n  HighlightEditor._defaultThickness = 12;\n  HighlightEditor._type = \"highlight\";\n  HighlightEditor._editorType = kendo_pdfjs_loader_js.AnnotationEditorType.HIGHLIGHT;\n  HighlightEditor._freeHighlightId = -1;\n  HighlightEditor._freeHighlight = null;\n  HighlightEditor._freeHighlightClipId = \"\";\n\n  /* Copyright 2022 Mozilla Foundation\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *     http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   * See the License for the specific language governing permissions and\n   * limitations under the License.\n   */\n  var _AnnotationEditorLayer_instances, _a$1, _AnnotationEditorLayer_accessibilityManager, _AnnotationEditorLayer_allowClick, _AnnotationEditorLayer_annotationLayer, _AnnotationEditorLayer_clickAC, _AnnotationEditorLayer_editorFocusTimeoutId, _AnnotationEditorLayer_editors, _AnnotationEditorLayer_hadPointerDown, _AnnotationEditorLayer_isCleaningUp, _AnnotationEditorLayer_isDisabling, _AnnotationEditorLayer_textLayer, _AnnotationEditorLayer_textSelectionAC, _AnnotationEditorLayer_uiManager, _AnnotationEditorLayer_editorTypes, _AnnotationEditorLayer_textLayerPointerDown, _AnnotationEditorLayer_currentEditorType_get, _AnnotationEditorLayer_createNewEditor, _AnnotationEditorLayer_getCenterPoint, _AnnotationEditorLayer_cleanup;\n  class AnnotationEditorLayer {\n      /**\n       * @param {AnnotationEditorLayerOptions} options\n       */\n      constructor({ uiManager, pageIndex, div, accessibilityManager, annotationLayer, drawLayer, textLayer, viewport\n      // l10n\n       }) {\n          _AnnotationEditorLayer_instances.add(this);\n          // todo: props\n          this.drawLayer = null;\n          this.pageIndex = 0;\n          this.div = null;\n          this.viewport = null;\n          // todo: props\n          _AnnotationEditorLayer_accessibilityManager.set(this, void 0);\n          _AnnotationEditorLayer_allowClick.set(this, false);\n          _AnnotationEditorLayer_annotationLayer.set(this, null);\n          _AnnotationEditorLayer_clickAC.set(this, null);\n          _AnnotationEditorLayer_editorFocusTimeoutId.set(this, null);\n          _AnnotationEditorLayer_editors.set(this, new Map());\n          _AnnotationEditorLayer_hadPointerDown.set(this, false);\n          _AnnotationEditorLayer_isCleaningUp.set(this, false);\n          _AnnotationEditorLayer_isDisabling.set(this, false);\n          _AnnotationEditorLayer_textLayer.set(this, null);\n          _AnnotationEditorLayer_textSelectionAC.set(this, null);\n          _AnnotationEditorLayer_uiManager.set(this, null);\n          const editorTypes = [...__classPrivateFieldGet(_a$1, _a$1, \"f\", _AnnotationEditorLayer_editorTypes).values()];\n          if (!_a$1._initialized) {\n              _a$1._initialized = true;\n              for (const editorType of editorTypes) {\n                  // editorType.initialize(l10n, uiManager);\n                  editorType.initialize({}, uiManager);\n              }\n          }\n          uiManager.registerEditorTypes(editorTypes);\n          __classPrivateFieldSet(this, _AnnotationEditorLayer_uiManager, uiManager, \"f\");\n          this.pageIndex = pageIndex;\n          this.div = div;\n          __classPrivateFieldSet(this, _AnnotationEditorLayer_accessibilityManager, accessibilityManager, \"f\");\n          __classPrivateFieldSet(this, _AnnotationEditorLayer_annotationLayer, annotationLayer, \"f\");\n          this.viewport = viewport;\n          __classPrivateFieldSet(this, _AnnotationEditorLayer_textLayer, textLayer, \"f\");\n          this.drawLayer = drawLayer;\n          __classPrivateFieldGet(this, _AnnotationEditorLayer_uiManager, \"f\").addLayer(this);\n          // if (!this.#annotationLayer || !this.#textLayer) {\n          // }\n      }\n      // todo: ported from AnnotationEditorLayerBuilder\n      hide() {\n          if (!this.div) {\n              return;\n          }\n          this.div.hidden = true;\n      }\n      show() {\n          if (!this.div || this.isInvisible) {\n              return;\n          }\n          this.div.hidden = false;\n      }\n      // todo: ported from AnnotationEditorLayerBuilder\n      get isEmpty() {\n          return __classPrivateFieldGet(this, _AnnotationEditorLayer_editors, \"f\").size === 0;\n      }\n      get isInvisible() {\n          return (this.isEmpty && __classPrivateFieldGet(this, _AnnotationEditorLayer_uiManager, \"f\").getMode() === kendo_pdfjs_loader_js.AnnotationEditorType.NONE);\n      }\n      /**\n       * Update the toolbar if it's required to reflect the tool currently used.\n       * @param {number} mode\n       */\n      // updateToolbar(mode) {\n      updateToolbar() {\n          // this.#uiManager.updateToolbar(mode);\n      }\n      /**\n       * The mode has changed: it must be updated.\n       * @param {number} mode\n       */\n      updateMode(mode = __classPrivateFieldGet(this, _AnnotationEditorLayer_uiManager, \"f\").getMode()) {\n          __classPrivateFieldGet(this, _AnnotationEditorLayer_instances, \"m\", _AnnotationEditorLayer_cleanup).call(this);\n          switch (mode) {\n              case kendo_pdfjs_loader_js.AnnotationEditorType.NONE:\n                  this.disableTextSelection();\n                  this.togglePointerEvents(false);\n                  this.toggleAnnotationLayerPointerEvents(true);\n                  this.disableClick();\n                  return;\n              case kendo_pdfjs_loader_js.AnnotationEditorType.INK:\n                  // We always want to have an ink editor ready to draw in.\n                  this.addInkEditorIfNeeded(false);\n                  this.disableTextSelection();\n                  this.togglePointerEvents(true);\n                  this.disableClick();\n                  break;\n              case kendo_pdfjs_loader_js.AnnotationEditorType.HIGHLIGHT:\n                  this.enableTextSelection();\n                  this.togglePointerEvents(false);\n                  this.disableClick();\n                  break;\n              default:\n                  this.disableTextSelection();\n                  this.togglePointerEvents(true);\n                  this.enableClick();\n          }\n          this.toggleAnnotationLayerPointerEvents(false);\n          const { classList } = this.div;\n          for (const editorType of __classPrivateFieldGet(_a$1, _a$1, \"f\", _AnnotationEditorLayer_editorTypes).values()) {\n              classList.toggle(`${editorType._type}Editing`, mode === editorType._editorType);\n          }\n          this.div.hidden = false;\n      }\n      hasTextLayer(textLayer) {\n          var _b;\n          return textLayer === ((_b = __classPrivateFieldGet(this, _AnnotationEditorLayer_textLayer, \"f\")) === null || _b === void 0 ? void 0 : _b.div);\n          // return textLayer === this.#textLayer || textLayer === this.#textLayer?.div;\n      }\n      addInkEditorIfNeeded(isCommitting) {\n          if (__classPrivateFieldGet(this, _AnnotationEditorLayer_uiManager, \"f\").getMode() !== kendo_pdfjs_loader_js.AnnotationEditorType.INK) {\n              // We don't want to add an ink editor if we're not in ink mode!\n              return;\n          }\n          if (!isCommitting) {\n              // We're removing an editor but an empty one can already exist so in this\n              // case we don't need to create a new one.\n              for (const editor of __classPrivateFieldGet(this, _AnnotationEditorLayer_editors, \"f\").values()) {\n                  if (editor.isEmpty()) {\n                      editor.setInBackground();\n                      return;\n                  }\n              }\n          }\n          const newEditor = this.createAndAddNewEditor({ offsetX: 0, offsetY: 0 }, \n          /* isCentered = */ false);\n          newEditor.setInBackground();\n      }\n      /**\n       * Set the editing state.\n       * @param {boolean} isEditing\n       */\n      setEditingState(isEditing) {\n          __classPrivateFieldGet(this, _AnnotationEditorLayer_uiManager, \"f\").setEditingState(isEditing);\n      }\n      /**\n       * Add some commands into the CommandManager (undo/redo stuff).\n       * @param {Object} params\n       */\n      addCommands(params) {\n          __classPrivateFieldGet(this, _AnnotationEditorLayer_uiManager, \"f\").addCommands(params);\n      }\n      toggleDrawing(enabled = false) {\n          this.div.classList.toggle(\"drawing\", !enabled);\n          // this.div.classList.toggle(\"k-drawing\", !enabled);\n      }\n      togglePointerEvents(enabled = false) {\n          // this.div.classList.toggle(\"disabled\", !enabled);\n          this.div.classList.toggle(\"k-annotation-editor-layer-disabled\", !enabled);\n      }\n      toggleAnnotationLayerPointerEvents(enabled = false) {\n          var _b;\n          // this.#annotationLayer?.div.classList.toggle(\"disabled\", !enabled);\n          (_b = __classPrivateFieldGet(this, _AnnotationEditorLayer_annotationLayer, \"f\")) === null || _b === void 0 ? void 0 : _b.div.classList.toggle(\"k-annotation-editor-layer-disabled\", !enabled);\n      }\n      /**\n       * Enable pointer events on the main div in order to enable\n       * editor creation.\n       */\n      enable() {\n          this.div.tabIndex = 0;\n          this.togglePointerEvents(true);\n          const annotationElementIds = new Set();\n          for (const editor of __classPrivateFieldGet(this, _AnnotationEditorLayer_editors, \"f\").values()) {\n              editor.enableEditing();\n              editor.show(true);\n              if (editor.annotationElementId) {\n                  __classPrivateFieldGet(this, _AnnotationEditorLayer_uiManager, \"f\").removeChangedExistingAnnotation(editor);\n                  annotationElementIds.add(editor.annotationElementId);\n              }\n          }\n          if (!__classPrivateFieldGet(this, _AnnotationEditorLayer_annotationLayer, \"f\")) {\n              return;\n          }\n          const editables = __classPrivateFieldGet(this, _AnnotationEditorLayer_annotationLayer, \"f\").getEditableAnnotations();\n          for (const editable of editables) {\n              // The element must be hidden whatever its state is.\n              editable.hide();\n              if (__classPrivateFieldGet(this, _AnnotationEditorLayer_uiManager, \"f\").isDeletedAnnotationElement(editable.data.id)) {\n                  continue;\n              }\n              if (annotationElementIds.has(editable.data.id)) {\n                  continue;\n              }\n              const editor = this.deserialize(editable);\n              if (!editor) {\n                  continue;\n              }\n              this.addOrRebuild(editor);\n              editor.enableEditing();\n          }\n      }\n      /**\n       * Disable editor creation.\n       */\n      disable() {\n          var _b;\n          __classPrivateFieldSet(this, _AnnotationEditorLayer_isDisabling, true, \"f\");\n          this.div.tabIndex = -1;\n          this.togglePointerEvents(false);\n          const changedAnnotations = new Map();\n          const resetAnnotations = new Map();\n          for (const editor of __classPrivateFieldGet(this, _AnnotationEditorLayer_editors, \"f\").values()) {\n              editor.disableEditing();\n              if (!editor.annotationElementId) {\n                  continue;\n              }\n              if (editor.serialize() !== null) {\n                  changedAnnotations.set(editor.annotationElementId, editor);\n                  continue;\n              }\n              else {\n                  resetAnnotations.set(editor.annotationElementId, editor);\n              }\n              (_b = this.getEditableAnnotation(editor.annotationElementId)) === null || _b === void 0 ? void 0 : _b.show();\n              editor.remove();\n          }\n          if (__classPrivateFieldGet(this, _AnnotationEditorLayer_annotationLayer, \"f\")) {\n              // Show the annotations that were hidden in enable().\n              const editables = __classPrivateFieldGet(this, _AnnotationEditorLayer_annotationLayer, \"f\").getEditableAnnotations();\n              for (const editable of editables) {\n                  const { id } = editable.data;\n                  if (__classPrivateFieldGet(this, _AnnotationEditorLayer_uiManager, \"f\").isDeletedAnnotationElement(id)) {\n                      continue;\n                  }\n                  let editor = resetAnnotations.get(id);\n                  if (editor) {\n                      editor.resetAnnotationElement(editable);\n                      editor.show(false);\n                      editable.show();\n                      continue;\n                  }\n                  editor = changedAnnotations.get(id);\n                  if (editor) {\n                      __classPrivateFieldGet(this, _AnnotationEditorLayer_uiManager, \"f\").addChangedExistingAnnotation(editor);\n                      editor.renderAnnotationElement(editable);\n                      editor.show(false);\n                  }\n                  editable.show();\n              }\n          }\n          __classPrivateFieldGet(this, _AnnotationEditorLayer_instances, \"m\", _AnnotationEditorLayer_cleanup).call(this);\n          if (this.isEmpty) {\n              this.div.hidden = true;\n          }\n          const { classList } = this.div;\n          for (const editorType of __classPrivateFieldGet(_a$1, _a$1, \"f\", _AnnotationEditorLayer_editorTypes).values()) {\n              classList.remove(`${editorType._type}Editing`);\n          }\n          this.disableTextSelection();\n          this.toggleAnnotationLayerPointerEvents(true);\n          __classPrivateFieldSet(this, _AnnotationEditorLayer_isDisabling, false, \"f\");\n      }\n      getEditableAnnotation(id) {\n          var _b;\n          return ((_b = __classPrivateFieldGet(this, _AnnotationEditorLayer_annotationLayer, \"f\")) === null || _b === void 0 ? void 0 : _b.getEditableAnnotation(id)) || null;\n      }\n      /**\n       * Set the current editor.\n       * @param {AnnotationEditor} editor\n       */\n      setActiveEditor(editor) {\n          const currentActive = __classPrivateFieldGet(this, _AnnotationEditorLayer_uiManager, \"f\").getActive();\n          if (currentActive === editor) {\n              return;\n          }\n          __classPrivateFieldGet(this, _AnnotationEditorLayer_uiManager, \"f\").setActiveEditor(editor);\n      }\n      enableTextSelection() {\n          var _b;\n          this.div.tabIndex = -1;\n          if (((_b = __classPrivateFieldGet(this, _AnnotationEditorLayer_textLayer, \"f\")) === null || _b === void 0 ? void 0 : _b.div) && !__classPrivateFieldGet(this, _AnnotationEditorLayer_textSelectionAC, \"f\")) {\n              __classPrivateFieldSet(this, _AnnotationEditorLayer_textSelectionAC, new AbortController(), \"f\");\n              const signal = __classPrivateFieldGet(this, _AnnotationEditorLayer_uiManager, \"f\").combinedSignal(__classPrivateFieldGet(this, _AnnotationEditorLayer_textSelectionAC, \"f\"));\n              __classPrivateFieldGet(this, _AnnotationEditorLayer_textLayer, \"f\").div.addEventListener(\"pointerdown\", __classPrivateFieldGet(this, _AnnotationEditorLayer_instances, \"m\", _AnnotationEditorLayer_textLayerPointerDown).bind(this), { signal });\n              // this.#textLayer.div.classList.add(\"highlighting\");\n          }\n      }\n      disableTextSelection() {\n          var _b;\n          this.div.tabIndex = 0;\n          if (((_b = __classPrivateFieldGet(this, _AnnotationEditorLayer_textLayer, \"f\")) === null || _b === void 0 ? void 0 : _b.div) && __classPrivateFieldGet(this, _AnnotationEditorLayer_textSelectionAC, \"f\")) {\n              __classPrivateFieldGet(this, _AnnotationEditorLayer_textSelectionAC, \"f\").abort();\n              __classPrivateFieldSet(this, _AnnotationEditorLayer_textSelectionAC, null, \"f\");\n              __classPrivateFieldGet(this, _AnnotationEditorLayer_textLayer, \"f\").div.classList.remove(\"highlighting\");\n          }\n      }\n      enableClick() {\n          if (__classPrivateFieldGet(this, _AnnotationEditorLayer_clickAC, \"f\")) {\n              return;\n          }\n          __classPrivateFieldSet(this, _AnnotationEditorLayer_clickAC, new AbortController(), \"f\");\n          const signal = __classPrivateFieldGet(this, _AnnotationEditorLayer_uiManager, \"f\").combinedSignal(__classPrivateFieldGet(this, _AnnotationEditorLayer_clickAC, \"f\"));\n          this.div.addEventListener(\"pointerdown\", this.pointerdown.bind(this), {\n              signal\n          });\n          this.div.addEventListener(\"pointerup\", this.pointerup.bind(this), {\n              signal\n          });\n      }\n      disableClick() {\n          var _b;\n          (_b = __classPrivateFieldGet(this, _AnnotationEditorLayer_clickAC, \"f\")) === null || _b === void 0 ? void 0 : _b.abort();\n          __classPrivateFieldSet(this, _AnnotationEditorLayer_clickAC, null, \"f\");\n      }\n      attach(editor) {\n          __classPrivateFieldGet(this, _AnnotationEditorLayer_editors, \"f\").set(editor.id, editor);\n          const { annotationElementId } = editor;\n          if (annotationElementId &&\n              __classPrivateFieldGet(this, _AnnotationEditorLayer_uiManager, \"f\").isDeletedAnnotationElement(annotationElementId)) {\n              __classPrivateFieldGet(this, _AnnotationEditorLayer_uiManager, \"f\").removeDeletedAnnotationElement(editor);\n          }\n      }\n      detach(editor) {\n          var _b;\n          __classPrivateFieldGet(this, _AnnotationEditorLayer_editors, \"f\").delete(editor.id);\n          (_b = __classPrivateFieldGet(this, _AnnotationEditorLayer_accessibilityManager, \"f\")) === null || _b === void 0 ? void 0 : _b.removePointerInTextLayer(editor.contentDiv);\n          if (!__classPrivateFieldGet(this, _AnnotationEditorLayer_isDisabling, \"f\") && editor.annotationElementId) {\n              __classPrivateFieldGet(this, _AnnotationEditorLayer_uiManager, \"f\").addDeletedAnnotationElement(editor);\n          }\n      }\n      /**\n       * Remove an editor.\n       * @param {AnnotationEditor} editor\n       */\n      remove(editor) {\n          this.detach(editor);\n          __classPrivateFieldGet(this, _AnnotationEditorLayer_uiManager, \"f\").removeEditor(editor);\n          editor.div.remove();\n          editor.isAttachedToDOM = false;\n          if (!__classPrivateFieldGet(this, _AnnotationEditorLayer_isCleaningUp, \"f\")) {\n              this.addInkEditorIfNeeded(/* isCommitting = */ false);\n          }\n      }\n      /**\n       * An editor can have a different parent, for example after having\n       * being dragged and droped from a page to another.\n       * @param {AnnotationEditor} editor\n       */\n      changeParent(editor) {\n          var _b;\n          if (editor.parent === this) {\n              return;\n          }\n          if (editor.parent && editor.annotationElementId) {\n              __classPrivateFieldGet(this, _AnnotationEditorLayer_uiManager, \"f\").addDeletedAnnotationElement(editor.annotationElementId);\n              AnnotationEditor.deleteAnnotationElement(editor);\n              editor.annotationElementId = null;\n          }\n          this.attach(editor);\n          (_b = editor.parent) === null || _b === void 0 ? void 0 : _b.detach(editor);\n          editor.setParent(this);\n          if (editor.div && editor.isAttachedToDOM) {\n              editor.div.remove();\n              this.div.append(editor.div);\n          }\n      }\n      /**\n       * Add a new editor in the current view.\n       * @param {AnnotationEditor} editor\n       */\n      add(editor) {\n          if (editor.parent === this && editor.isAttachedToDOM) {\n              return;\n          }\n          this.changeParent(editor);\n          __classPrivateFieldGet(this, _AnnotationEditorLayer_uiManager, \"f\").addEditor(editor);\n          this.attach(editor);\n          if (!editor.isAttachedToDOM) {\n              const div = editor.render();\n              this.div.append(div);\n              editor.isAttachedToDOM = true;\n          }\n          // The editor will be correctly moved into the DOM (see fixAndSetPosition).\n          editor.fixAndSetPosition();\n          editor.onceAdded();\n          __classPrivateFieldGet(this, _AnnotationEditorLayer_uiManager, \"f\").addToAnnotationStorage(editor);\n          // editor._reportTelemetry(editor.telemetryInitialData);\n          // todo: this differs from pdf.js\n          // this.setActiveEditor(editor);\n      }\n      moveEditorInDOM(editor) {\n          var _b;\n          if (!editor.isAttachedToDOM) {\n              return;\n          }\n          const { activeElement } = document;\n          if (editor.div.contains(activeElement) && !__classPrivateFieldGet(this, _AnnotationEditorLayer_editorFocusTimeoutId, \"f\")) {\n              // When the div is moved in the DOM the focus can move somewhere else,\n              // so we want to be sure that the focus will stay on the editor but we\n              // don't want to call any focus callbacks, hence we disable them and only\n              // re-enable them when the editor has the focus.\n              editor._focusEventsAllowed = false;\n              __classPrivateFieldSet(this, _AnnotationEditorLayer_editorFocusTimeoutId, setTimeout(() => {\n                  __classPrivateFieldSet(this, _AnnotationEditorLayer_editorFocusTimeoutId, null, \"f\");\n                  if (!editor.div.contains(document.activeElement)) {\n                      editor.div.addEventListener(\"focusin\", () => {\n                          editor._focusEventsAllowed = true;\n                      }, { once: true, signal: __classPrivateFieldGet(this, _AnnotationEditorLayer_uiManager, \"f\")._signal });\n                      activeElement.focus();\n                  }\n                  else {\n                      editor._focusEventsAllowed = true;\n                  }\n              }, 0), \"f\");\n          }\n          editor._structTreeParentId = (_b = __classPrivateFieldGet(this, _AnnotationEditorLayer_accessibilityManager, \"f\")) === null || _b === void 0 ? void 0 : _b.moveElementInDOM(this.div, editor.div, editor.contentDiv, \n          /* isRemovable = */ true);\n      }\n      /**\n       * Add or rebuild depending if it has been removed or not.\n       * @param {AnnotationEditor} editor\n       */\n      addOrRebuild(editor) {\n          if (editor.needsToBeRebuilt()) {\n              editor.parent || (editor.parent = this);\n              editor.rebuild();\n              editor.show();\n          }\n          else {\n              this.add(editor);\n          }\n      }\n      /**\n       * Add a new editor and make this addition undoable.\n       * @param {AnnotationEditor} editor\n       */\n      addUndoableEditor(editor) {\n          const cmd = () => editor._uiManager.rebuild(editor);\n          const undo = () => {\n              editor.remove();\n          };\n          this.addCommands({ cmd, undo, mustExec: false });\n      }\n      /**\n       * Get an id for an editor.\n       * @returns {string}\n       */\n      getNextId() {\n          return __classPrivateFieldGet(this, _AnnotationEditorLayer_uiManager, \"f\").getId();\n      }\n      combinedSignal(abortController) {\n          return __classPrivateFieldGet(this, _AnnotationEditorLayer_uiManager, \"f\").combinedSignal(abortController);\n      }\n      canCreateNewEmptyEditor() {\n          var _b;\n          return (_b = __classPrivateFieldGet(this, _AnnotationEditorLayer_instances, \"a\", _AnnotationEditorLayer_currentEditorType_get)) === null || _b === void 0 ? void 0 : _b.canCreateNewEmptyEditor();\n      }\n      /**\n       * Paste some content into a new editor.\n       * @param {number} mode\n       * @param {Object} params\n       */\n      pasteEditor(mode, params) {\n          __classPrivateFieldGet(this, _AnnotationEditorLayer_uiManager, \"f\").updateToolbar(mode);\n          __classPrivateFieldGet(this, _AnnotationEditorLayer_uiManager, \"f\").updateMode(mode);\n          const { offsetX, offsetY } = __classPrivateFieldGet(this, _AnnotationEditorLayer_instances, \"m\", _AnnotationEditorLayer_getCenterPoint).call(this);\n          const id = this.getNextId();\n          const editor = __classPrivateFieldGet(this, _AnnotationEditorLayer_instances, \"m\", _AnnotationEditorLayer_createNewEditor).call(this, Object.assign({ parent: this, id, x: offsetX, y: offsetY, uiManager: __classPrivateFieldGet(this, _AnnotationEditorLayer_uiManager, \"f\"), isCentered: true }, params));\n          if (editor) {\n              this.add(editor);\n          }\n      }\n      /**\n       * Create a new editor\n       * @param {Object} data\n       * @returns {AnnotationEditor | null}\n       */\n      deserialize(data) {\n          var _b, _c;\n          return (((_c = __classPrivateFieldGet(_a$1, _a$1, \"f\", _AnnotationEditorLayer_editorTypes)\n              .get((_b = data.annotationType) !== null && _b !== void 0 ? _b : data.annotationEditorType)) === null || _c === void 0 ? void 0 : _c.deserialize(data, this, __classPrivateFieldGet(this, _AnnotationEditorLayer_uiManager, \"f\"))) || null);\n      }\n      /**\n       * Create and add a new editor.\n       * @param {PointerEvent} event\n       * @param {boolean} isCentered\n       * @param [Object] data\n       * @returns {AnnotationEditor}\n       */\n      createAndAddNewEditor(event, isCentered, data = {}) {\n          const id = this.getNextId();\n          const editor = __classPrivateFieldGet(this, _AnnotationEditorLayer_instances, \"m\", _AnnotationEditorLayer_createNewEditor).call(this, Object.assign({ parent: this, id, x: event.offsetX, y: event.offsetY, uiManager: __classPrivateFieldGet(this, _AnnotationEditorLayer_uiManager, \"f\"), isCentered }, data));\n          if (editor) {\n              this.add(editor);\n          }\n          return editor;\n      }\n      /**\n       * Create and add a new editor.\n       */\n      addNewEditor() {\n          this.createAndAddNewEditor(__classPrivateFieldGet(this, _AnnotationEditorLayer_instances, \"m\", _AnnotationEditorLayer_getCenterPoint).call(this), /* isCentered = */ true);\n      }\n      /**\n       * Set the last selected editor.\n       * @param {AnnotationEditor} editor\n       */\n      setSelected(editor) {\n          __classPrivateFieldGet(this, _AnnotationEditorLayer_uiManager, \"f\").setSelected(editor);\n      }\n      /**\n       * Add or remove an editor the current selection.\n       * @param {AnnotationEditor} editor\n       */\n      toggleSelected(editor) {\n          __classPrivateFieldGet(this, _AnnotationEditorLayer_uiManager, \"f\").toggleSelected(editor);\n      }\n      /**\n       * Check if the editor is selected.\n       * @param {AnnotationEditor} editor\n       */\n      isSelected(editor) {\n          return __classPrivateFieldGet(this, _AnnotationEditorLayer_uiManager, \"f\").isSelected(editor);\n      }\n      /**\n       * Unselect an editor.\n       * @param {AnnotationEditor} editor\n       */\n      unselect(editor) {\n          __classPrivateFieldGet(this, _AnnotationEditorLayer_uiManager, \"f\").unselect(editor);\n      }\n      /**\n       * Pointerup callback.\n       * @param {PointerEvent} event\n       */\n      pointerup(event) {\n          const { isMac } = kendo_pdfjs_loader_js.FeatureTest.platform;\n          if (event.button !== 0 || (event.ctrlKey && isMac)) {\n              // Don't create an editor on right click.\n              return;\n          }\n          if (event.target !== this.div) {\n              return;\n          }\n          if (!__classPrivateFieldGet(this, _AnnotationEditorLayer_hadPointerDown, \"f\")) {\n              // It can happen when the user starts a drag inside a text editor\n              // and then releases the mouse button outside of it. In such a case\n              // we don't want to create a new editor, hence we check that a pointerdown\n              // occurred on this div previously.\n              return;\n          }\n          __classPrivateFieldSet(this, _AnnotationEditorLayer_hadPointerDown, false, \"f\");\n          if (!__classPrivateFieldGet(this, _AnnotationEditorLayer_allowClick, \"f\")) {\n              __classPrivateFieldSet(this, _AnnotationEditorLayer_allowClick, true, \"f\");\n              return;\n          }\n          if (__classPrivateFieldGet(this, _AnnotationEditorLayer_uiManager, \"f\").getMode() === kendo_pdfjs_loader_js.AnnotationEditorType.STAMP) {\n              __classPrivateFieldGet(this, _AnnotationEditorLayer_uiManager, \"f\").unselectAll();\n              return;\n          }\n          this.createAndAddNewEditor(event, /* isCentered = */ false);\n      }\n      /**\n       * Pointerdown callback.\n       * @param {PointerEvent} event\n       */\n      pointerdown(event) {\n          if (__classPrivateFieldGet(this, _AnnotationEditorLayer_uiManager, \"f\").getMode() === kendo_pdfjs_loader_js.AnnotationEditorType.HIGHLIGHT) {\n              this.enableTextSelection();\n          }\n          if (__classPrivateFieldGet(this, _AnnotationEditorLayer_hadPointerDown, \"f\")) {\n              // It's possible to have a second pointerdown event before a pointerup one\n              // when the user puts a finger on a touchscreen and then add a second one\n              // to start a pinch-to-zoom gesture.\n              // That said, in case it's possible to have two pointerdown events with\n              // a mouse, we don't want to create a new editor in such a case either.\n              __classPrivateFieldSet(this, _AnnotationEditorLayer_hadPointerDown, false, \"f\");\n              return;\n          }\n          const { isMac } = kendo_pdfjs_loader_js.FeatureTest.platform;\n          if (event.button !== 0 || (event.ctrlKey && isMac)) {\n              // Do nothing on right click.\n              return;\n          }\n          if (event.target !== this.div) {\n              return;\n          }\n          __classPrivateFieldSet(this, _AnnotationEditorLayer_hadPointerDown, true, \"f\");\n          const editor = __classPrivateFieldGet(this, _AnnotationEditorLayer_uiManager, \"f\").getActive();\n          __classPrivateFieldSet(this, _AnnotationEditorLayer_allowClick, !editor || editor.isEmpty(), \"f\");\n      }\n      /**\n       *\n       * @param {AnnotationEditor} editor\n       * @param {number} x\n       * @param {number} y\n       * @returns\n       */\n      findNewParent(editor, x, y) {\n          const layer = __classPrivateFieldGet(this, _AnnotationEditorLayer_uiManager, \"f\").findParent(x, y);\n          if (layer === null || layer === this) {\n              return false;\n          }\n          layer.changeParent(editor);\n          return true;\n      }\n      /**\n       * Destroy the main editor.\n       */\n      destroy() {\n          var _b, _c;\n          if (((_b = __classPrivateFieldGet(this, _AnnotationEditorLayer_uiManager, \"f\").getActive()) === null || _b === void 0 ? void 0 : _b.parent) === this) {\n              // We need to commit the current editor before destroying the layer.\n              __classPrivateFieldGet(this, _AnnotationEditorLayer_uiManager, \"f\").commitOrRemove();\n              __classPrivateFieldGet(this, _AnnotationEditorLayer_uiManager, \"f\").setActiveEditor(null);\n          }\n          if (__classPrivateFieldGet(this, _AnnotationEditorLayer_editorFocusTimeoutId, \"f\")) {\n              clearTimeout(__classPrivateFieldGet(this, _AnnotationEditorLayer_editorFocusTimeoutId, \"f\"));\n              __classPrivateFieldSet(this, _AnnotationEditorLayer_editorFocusTimeoutId, null, \"f\");\n          }\n          for (const editor of __classPrivateFieldGet(this, _AnnotationEditorLayer_editors, \"f\").values()) {\n              (_c = __classPrivateFieldGet(this, _AnnotationEditorLayer_accessibilityManager, \"f\")) === null || _c === void 0 ? void 0 : _c.removePointerInTextLayer(editor.contentDiv);\n              editor.setParent(null);\n              editor.isAttachedToDOM = false;\n              editor.div.remove();\n          }\n          this.div = null;\n          __classPrivateFieldGet(this, _AnnotationEditorLayer_editors, \"f\").clear();\n          __classPrivateFieldGet(this, _AnnotationEditorLayer_uiManager, \"f\").removeLayer(this);\n      }\n      /**\n       * Render the main editor.\n       * @param {RenderEditorLayerOptions} parameters\n       */\n      render({ viewport }) {\n          this.viewport = viewport;\n          kendo_pdfjs_loader_js.setLayerDimensions(this.div, viewport);\n          for (const editor of __classPrivateFieldGet(this, _AnnotationEditorLayer_uiManager, \"f\").getEditors(this.pageIndex)) {\n              this.add(editor);\n              editor.rebuild();\n          }\n          // We're maybe rendering a layer which was invisible when we started to edit\n          // so we must set the different callbacks for it.\n          this.updateMode();\n      }\n      // /**\n      //  * Update the main editor.\n      //  * @param {RenderEditorLayerOptions} parameters\n      //  */\n      update({ viewport }) {\n          // Editors have their dimensions/positions in percent so to avoid any\n          // issues (see #15582), we must commit the current one before changing\n          // the viewport.\n          __classPrivateFieldGet(this, _AnnotationEditorLayer_uiManager, \"f\").commitOrRemove();\n          __classPrivateFieldGet(this, _AnnotationEditorLayer_instances, \"m\", _AnnotationEditorLayer_cleanup).call(this);\n          const oldRotation = this.viewport.rotation;\n          const rotation = viewport.rotation;\n          this.viewport = viewport;\n          // setLayerDimensions(this.div, { rotation });\n          // todo: fix parameters\n          // setLayerDimensions(this.div, { rotation } as PageViewport);\n          kendo_pdfjs_loader_js.setLayerDimensions(this.div, viewport);\n          if (oldRotation !== rotation) {\n              for (const editor of __classPrivateFieldGet(this, _AnnotationEditorLayer_editors, \"f\").values()) {\n                  editor.rotate(rotation);\n              }\n          }\n          this.addInkEditorIfNeeded(/* isCommitting = */ false);\n      }\n      /**\n       * Get page dimensions.\n       * @returns {Object} dimensions.\n       */\n      get pageDimensions() {\n          const { pageWidth, pageHeight } = this.viewport.rawDims;\n          return [pageWidth, pageHeight];\n      }\n      get scale() {\n          return __classPrivateFieldGet(this, _AnnotationEditorLayer_uiManager, \"f\").viewParameters.realScale;\n      }\n  }\n  _a$1 = AnnotationEditorLayer, _AnnotationEditorLayer_accessibilityManager = new WeakMap(), _AnnotationEditorLayer_allowClick = new WeakMap(), _AnnotationEditorLayer_annotationLayer = new WeakMap(), _AnnotationEditorLayer_clickAC = new WeakMap(), _AnnotationEditorLayer_editorFocusTimeoutId = new WeakMap(), _AnnotationEditorLayer_editors = new WeakMap(), _AnnotationEditorLayer_hadPointerDown = new WeakMap(), _AnnotationEditorLayer_isCleaningUp = new WeakMap(), _AnnotationEditorLayer_isDisabling = new WeakMap(), _AnnotationEditorLayer_textLayer = new WeakMap(), _AnnotationEditorLayer_textSelectionAC = new WeakMap(), _AnnotationEditorLayer_uiManager = new WeakMap(), _AnnotationEditorLayer_instances = new WeakSet(), _AnnotationEditorLayer_textLayerPointerDown = function _AnnotationEditorLayer_textLayerPointerDown(event) {\n      // Unselect all the editors in order to let the user select some text\n      // without being annoyed by an editor toolbar.\n      __classPrivateFieldGet(this, _AnnotationEditorLayer_uiManager, \"f\").unselectAll();\n      const { target } = event;\n      if (target === __classPrivateFieldGet(this, _AnnotationEditorLayer_textLayer, \"f\").div ||\n          (target.classList.contains(\"endOfContent\") && __classPrivateFieldGet(this, _AnnotationEditorLayer_textLayer, \"f\").div.contains(target))) {\n          const { isMac } = kendo_pdfjs_loader_js.FeatureTest.platform;\n          if (event.button !== 0 || (event.ctrlKey && isMac)) {\n              // Do nothing on right click.\n              return;\n          }\n          __classPrivateFieldGet(this, _AnnotationEditorLayer_uiManager, \"f\").showAllEditors(\"highlight\", true\n          // /* updateButton = */ true\n          );\n          // if (this.#uiManager.getMode() === AnnotationEditorType.HIGHLIGHT) {\n          if (__classPrivateFieldGet(this, _AnnotationEditorLayer_uiManager, \"f\").getMode() === kendo_pdfjs_loader_js.AnnotationEditorType.NONE) {\n              // todo: do not continue with free highlight\n              return;\n          }\n          // this.#textLayer.div.classList.add(\"free\");\n          // todo: intentionally prevent free highlight\n          // this.toggleDrawing();\n          // HighlightEditor.startHighlighting(\n          //     this,\n          //     this.#uiManager.direction === \"ltr\",\n          //     event\n          // );\n          __classPrivateFieldGet(this, _AnnotationEditorLayer_textLayer, \"f\").div.addEventListener(\"pointerup\", () => {\n              __classPrivateFieldGet(this, _AnnotationEditorLayer_textLayer, \"f\").div.classList.remove(\"free\");\n              this.toggleDrawing(true);\n          }, { once: true, signal: __classPrivateFieldGet(this, _AnnotationEditorLayer_uiManager, \"f\")._signal });\n          event.preventDefault();\n      }\n  }, _AnnotationEditorLayer_currentEditorType_get = function _AnnotationEditorLayer_currentEditorType_get() {\n      return __classPrivateFieldGet(_a$1, _a$1, \"f\", _AnnotationEditorLayer_editorTypes).get(__classPrivateFieldGet(this, _AnnotationEditorLayer_uiManager, \"f\").getMode());\n  }, _AnnotationEditorLayer_createNewEditor = function _AnnotationEditorLayer_createNewEditor(params) {\n      const editorType = __classPrivateFieldGet(this, _AnnotationEditorLayer_instances, \"a\", _AnnotationEditorLayer_currentEditorType_get);\n      // return editorType ? new editorType.prototype.constructor(params) : null;\n      return editorType ? new editorType(params) : null;\n  }, _AnnotationEditorLayer_getCenterPoint = function _AnnotationEditorLayer_getCenterPoint() {\n      const { x, y, width, height } = this.div.getBoundingClientRect();\n      const tlX = Math.max(0, x);\n      const tlY = Math.max(0, y);\n      const brX = Math.min(window.innerWidth, x + width);\n      const brY = Math.min(window.innerHeight, y + height);\n      const centerX = (tlX + brX) / 2 - x;\n      const centerY = (tlY + brY) / 2 - y;\n      const [offsetX, offsetY] = this.viewport.rotation % 180 === 0\n          ? [centerX, centerY]\n          : [centerY, centerX];\n      return { offsetX, offsetY };\n  }, _AnnotationEditorLayer_cleanup = function _AnnotationEditorLayer_cleanup() {\n      // When we're cleaning up, some editors are removed but we don't want\n      // to add a new one which will induce an addition in this.#editors, hence\n      // an infinite loop.\n      __classPrivateFieldSet(this, _AnnotationEditorLayer_isCleaningUp, true, \"f\");\n      for (const editor of __classPrivateFieldGet(this, _AnnotationEditorLayer_editors, \"f\").values()) {\n          if (editor.isEmpty()) {\n              editor.remove();\n          }\n      }\n      __classPrivateFieldSet(this, _AnnotationEditorLayer_isCleaningUp, false, \"f\");\n  };\n  AnnotationEditorLayer._initialized = false;\n  _AnnotationEditorLayer_editorTypes = { value: new Map(\n      // [FreeTextEditor, InkEditor, StampEditor, HighlightEditor].map(type => [\n      [FreeTextEditor, HighlightEditor].map(type => [\n          type._editorType,\n          type\n      ])) };\n\n  /* Copyright 2022 Mozilla Foundation\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *     http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   * See the License for the specific language governing permissions and\n   * limitations under the License.\n   */\n  var _AnnotationEditorLayerBuilder_annotationLayer, _AnnotationEditorLayerBuilder_drawLayer, _AnnotationEditorLayerBuilder_onAppend, _AnnotationEditorLayerBuilder_textLayer, _AnnotationEditorLayerBuilder_uiManager;\n  // import { GenericL10n } from \"web-null_l10n\";\n  /**\n   * @typedef {Object} AnnotationEditorLayerBuilderOptions\n   * @property {AnnotationEditorUIManager} [uiManager]\n   * @property {PDFPageProxy} pdfPage\n   * @property {IL10n} [l10n]\n   * @property {TextAccessibilityManager} [accessibilityManager]\n   * @property {AnnotationLayer} [annotationLayer]\n   * @property {TextLayer} [textLayer]\n   * @property {DrawLayer} [drawLayer]\n   * @property {function} [onAppend]\n   */\n  class AnnotationEditorLayerBuilder {\n      /**\n       * @param {AnnotationEditorLayerBuilderOptions} options\n       */\n      constructor(options) {\n          // todo: props\n          this.pdfPage = null;\n          this.annotationEditorLayer = null;\n          this._cancelled = null;\n          this.div = null;\n          this.accessibilityManager = null;\n          // todo: props\n          _AnnotationEditorLayerBuilder_annotationLayer.set(this, null);\n          _AnnotationEditorLayerBuilder_drawLayer.set(this, null);\n          _AnnotationEditorLayerBuilder_onAppend.set(this, null);\n          _AnnotationEditorLayerBuilder_textLayer.set(this, null);\n          _AnnotationEditorLayerBuilder_uiManager.set(this, null);\n          this.pdfPage = options.pdfPage;\n          this.accessibilityManager = options.accessibilityManager;\n          // this.l10n = options.l10n;\n          // if (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) {\n          // this.l10n ||= new GenericL10n();\n          // }\n          this.annotationEditorLayer = null;\n          this.div = null;\n          this._cancelled = false;\n          __classPrivateFieldSet(this, _AnnotationEditorLayerBuilder_uiManager, options.uiManager, \"f\");\n          __classPrivateFieldSet(this, _AnnotationEditorLayerBuilder_annotationLayer, options.annotationLayer || null, \"f\");\n          __classPrivateFieldSet(this, _AnnotationEditorLayerBuilder_textLayer, options.textLayer || null, \"f\");\n          __classPrivateFieldSet(this, _AnnotationEditorLayerBuilder_drawLayer, options.drawLayer || null, \"f\");\n          __classPrivateFieldSet(this, _AnnotationEditorLayerBuilder_onAppend, options.onAppend || null, \"f\");\n      }\n      /**\n       * @param {PageViewport} viewport\n       * @param {string} intent (default value is 'display')\n       */\n      render(viewport_1) {\n          return __awaiter(this, arguments, void 0, function* (viewport, intent = \"display\") {\n              var _a;\n              if (intent !== \"display\") {\n                  return;\n              }\n              if (this._cancelled) {\n                  return;\n              }\n              const clonedViewport = viewport.clone({ dontFlip: true });\n              if (this.div) {\n                  this.annotationEditorLayer.update({ viewport: clonedViewport });\n                  this.show();\n                  return;\n              }\n              // Create an AnnotationEditor layer div\n              const div = (this.div = document.createElement(\"div\"));\n              div.className = \"k-annotation-editor-layer\";\n              div.hidden = true;\n              div.dir = __classPrivateFieldGet(this, _AnnotationEditorLayerBuilder_uiManager, \"f\").direction;\n              (_a = __classPrivateFieldGet(this, _AnnotationEditorLayerBuilder_onAppend, \"f\")) === null || _a === void 0 ? void 0 : _a.call(this, div);\n              this.annotationEditorLayer = new AnnotationEditorLayer({\n                  uiManager: __classPrivateFieldGet(this, _AnnotationEditorLayerBuilder_uiManager, \"f\"),\n                  div,\n                  accessibilityManager: this.accessibilityManager,\n                  pageIndex: this.pdfPage.pageNumber - 1,\n                  // l10n: this.l10n,\n                  viewport: clonedViewport,\n                  annotationLayer: __classPrivateFieldGet(this, _AnnotationEditorLayerBuilder_annotationLayer, \"f\"),\n                  textLayer: __classPrivateFieldGet(this, _AnnotationEditorLayerBuilder_textLayer, \"f\"),\n                  drawLayer: __classPrivateFieldGet(this, _AnnotationEditorLayerBuilder_drawLayer, \"f\")\n              });\n              const parameters = {\n                  viewport: clonedViewport,\n                  div,\n                  annotations: null,\n                  intent\n              };\n              this.annotationEditorLayer.render(parameters);\n              this.show();\n          });\n      }\n      cancel() {\n          var _a;\n          this._cancelled = true;\n          if (!this.div) {\n              return;\n          }\n          (_a = this.annotationEditorLayer) === null || _a === void 0 ? void 0 : _a.destroy();\n      }\n      hide() {\n          if (!this.div) {\n              return;\n          }\n          this.div.hidden = true;\n      }\n      show() {\n          if (!this.div || this.annotationEditorLayer.isInvisible) {\n              return;\n          }\n          this.div.hidden = false;\n      }\n      destroy() {\n          var _a;\n          (_a = this.annotationEditorLayer) === null || _a === void 0 ? void 0 : _a.destroy();\n      }\n  }\n  _AnnotationEditorLayerBuilder_annotationLayer = new WeakMap(), _AnnotationEditorLayerBuilder_drawLayer = new WeakMap(), _AnnotationEditorLayerBuilder_onAppend = new WeakMap(), _AnnotationEditorLayerBuilder_textLayer = new WeakMap(), _AnnotationEditorLayerBuilder_uiManager = new WeakMap();\n\n  var _Page_instances, _Page_annotationMode, _Page_isEditing, _Page_layerProperties, _Page_previousRotation, _Page_renderingState, _Page_textLayerMode, _Page_viewportMap, _Page_layers, _Page_addLayer, _Page_setDimensions, _Page_dispatchLayerRendered, _Page_renderAnnotationLayer, _Page_renderAnnotationEditorLayer, _Page_renderDrawLayer, _Page_renderTextLayer, _Page_finishRenderTask;\n  const DEFAULT_ZOOM_LEVEL$1 = 1.25;\n  const DEFAULT_LAYER_PROPERTIES = {\n      annotationEditorUIManager: null,\n      annotationStorage: null,\n      downloadManager: null,\n      enableScripting: false,\n      fieldObjectsPromise: null,\n      findController: null,\n      hasJSActionsPromise: null,\n      get linkService() {\n          // return new SimpleLinkService();\n          return null;\n      }\n  };\n  const LAYERS_ORDER = new Map([\n      [\"canvasWrapper\", 0],\n      [\"textLayer\", 1],\n      [\"annotationLayer\", 2],\n      [\"annotationEditorLayer\", 3],\n      [\"xfaLayer\", 3]\n  ]);\n  class Page extends Component {\n      constructor(element, options) {\n          super(element, options);\n          _Page_instances.add(this);\n          // todo: props\n          this.eventBus = null;\n          this.zoomLayer = null;\n          this.div = null;\n          this.viewport = null;\n          this.id = 1;\n          this._accessibilityManager = null;\n          this._annotationCanvasMap = new Map();\n          this.renderTask = null;\n          this.pdfPageRotate = null;\n          this.rotation = null;\n          this.scale = null;\n          this.pdfViewer = null;\n          // todo: props\n          // todo: props ported from pdf.js\n          this.xfaLayer = null;\n          _Page_annotationMode.set(this, kendo_pdfjs_loader_js.AnnotationMode.ENABLE);\n          // #enableHWA = false;\n          // #hasRestrictedScaling = false;\n          // // @ts-expect-error(TS)\n          _Page_isEditing.set(this, false);\n          _Page_layerProperties.set(this, null);\n          // #loadingId = null;\n          _Page_previousRotation.set(this, null);\n          // #renderError = null;\n          _Page_renderingState.set(this, RenderingStates.INITIAL);\n          _Page_textLayerMode.set(this, TextLayerMode.ENABLE);\n          // #useThumbnailCanvas = {\n          //   directDrawing: true,\n          //   initialOptionalContent: true,\n          //   regularAnnotations: true,\n          // };\n          _Page_viewportMap.set(this, new WeakMap());\n          _Page_layers.set(this, [null, null, null, null]);\n          // textLayer: HTMLDivElement;\n          this.textLayer = null;\n          this.textLayerBuilder = null;\n          this.textAccessibilityManager = null;\n          this.annotationLayer = null;\n          this.drawLayer = null;\n          this.annotationEditorLayer = null;\n          this.options = {};\n          this.state = {};\n          this.pdfPage = null;\n          this.extendOptions(options);\n          // todo: ported from pdf.js\n          this.div = element;\n          this.viewport = this.options.viewport;\n          this.id = this.options.id || this.options.number || 1;\n          __classPrivateFieldSet(this, _Page_layerProperties, options.layerProperties || DEFAULT_LAYER_PROPERTIES, \"f\");\n          this.eventBus = options.eventBus;\n          this.initScale();\n          // todo: ported from pdf.js\n          this.pdfViewer = options.pdfViewer;\n          this.pdfPage = options.pdfPage;\n          __classPrivateFieldSet(this, _Page_annotationMode, this.pdfViewer.getAnnotationMode(), \"f\");\n          this.resetState();\n      }\n      destroy() {\n          var _a, _b, _c, _d, _e;\n          this.destroyTextLayer();\n          if (this.canvas) {\n              this.canvas.width = 0;\n              this.canvas.height = 0;\n              this.canvas.remove();\n              this.canvas = null;\n          }\n          if (this.canvasForPrint) {\n              this.canvasForPrint.width = 0;\n              this.canvasForPrint.height = 0;\n              this.canvasForPrint.remove();\n              this.canvasForPrint = null;\n          }\n          (_a = this.drawLayer) === null || _a === void 0 ? void 0 : _a.destroy();\n          (_b = this.annotationLayer) === null || _b === void 0 ? void 0 : _b.destroy();\n          (_c = this.annotationEditorLayer) === null || _c === void 0 ? void 0 : _c.destroy();\n          (_d = this.div) === null || _d === void 0 ? void 0 : _d.remove();\n          this.div = null;\n          this.pdfViewer = null;\n          (_e = this.pdfPage) === null || _e === void 0 ? void 0 : _e.cleanup();\n          this.pdfPage = null;\n      }\n      get isEditing() {\n          return __classPrivateFieldGet(this, _Page_isEditing, \"f\");\n      }\n      get rawWidth() {\n          var _a, _b;\n          return (_b = (_a = this.viewport) === null || _a === void 0 ? void 0 : _a.rawDims) === null || _b === void 0 ? void 0 : _b.pageWidth;\n      }\n      get rawHeight() {\n          var _a, _b;\n          return (_b = (_a = this.viewport) === null || _a === void 0 ? void 0 : _a.rawDims) === null || _b === void 0 ? void 0 : _b.pageWidth;\n      }\n      setState(newState) {\n          this.state = deepExtend(this.state || {}, newState);\n      }\n      resetState() {\n          this.setState({});\n      }\n      initScale() {\n          this.scale = this.options.zoomLevel || this.options.scale || DEFAULT_SCALE;\n      }\n      createPromise() {\n          return createPromise();\n      }\n      getViewport(options = { scale: 1 }) {\n          const viewport = this.pdfPage ? this.pdfPage.getViewport(options) : { width: 0, height: 0 };\n          return viewport;\n      }\n      destroyTextLayer() {\n          var _a, _b;\n          (_a = this.textLayer) === null || _a === void 0 ? void 0 : _a.cancel();\n          (_b = this.textLayer) === null || _b === void 0 ? void 0 : _b.destroy();\n          this.removeTextLayer();\n          this.textLayer = null;\n      }\n      removeTextLayer() {\n          var _a, _b;\n          if (this.textLayer && ((_a = this.textLayer.div) === null || _a === void 0 ? void 0 : _a.parentNode)) {\n              (_b = this.textLayer.div) === null || _b === void 0 ? void 0 : _b.parentNode.removeChild(this.textLayer.div);\n          }\n      }\n      getPrintContentAsync() {\n          const canvas = this.canvasForPrint;\n          const printContentLoadPromise = this.createPromise();\n          const printContent = new Image();\n          const viewportRawDimensions = this.viewport.rawDims;\n          const pageHeight = Math.floor(viewportRawDimensions.pageHeight);\n          const pageWidth = Math.floor(viewportRawDimensions.pageWidth);\n          printContent.src = canvas.toDataURL();\n          printContent.width = pageWidth;\n          printContent.height = pageHeight;\n          printContent.onload = () => {\n              // @ts-expect-error TS(2339):\n              printContentLoadPromise.resolve(printContent);\n          };\n          return printContentLoadPromise;\n      }\n      loadForPrintAsync({ zoomLevel = DEFAULT_ZOOM_LEVEL$1, force = false }) {\n          const that = this;\n          const pageLoadPromise = this.createPromise();\n          const pageZoomLevel = this.pdfViewer.state.zoomLevel;\n          if (this.pdfPage && pageZoomLevel === zoomLevel && !force) {\n              // @ts-expect-error TS(2339): Property 'resolve' does not exist on type 'Promise... Remove this comment to see the full error message\n              return pageLoadPromise.resolve(that);\n          }\n          else if (this.pdfPage && pageZoomLevel && (pageZoomLevel !== zoomLevel || force)) {\n              this.renderForPrintAsync()\n                  .then(() => {\n                  this.setState({\n                      isPrintingInProgress: false\n                  });\n                  // @ts-expect-error TS(2339): Property 'resolve' does not exist on type 'Promise... Remove this comment to see the full error message\n                  pageLoadPromise.resolve(that);\n              });\n              return pageLoadPromise;\n          }\n          const pageIndex = Math.max(0, this.pdfPage._pageIndex);\n          const pagePromise = this.pdfViewer.state.pdfDocument.getPage(pageIndex + 1);\n          pagePromise.then(() => {\n              this.renderForPrintAsync()\n                  .then(() => {\n                  this.setState({\n                      isPrintingInProgress: false\n                  });\n                  // @ts-expect-error TS(2339): Property 'resolve' does not exist on type 'Promise... Remove this comment to see the full error message\n                  pageLoadPromise.resolve(that);\n              });\n          });\n          return pageLoadPromise;\n      }\n      renderForPrintAsync() {\n          var _a, _b;\n          const printUnits = this.pdfViewer.getPrintUnits();\n          const { canvasContext, canvas } = this.pdfViewer.createPageElements({\n              pdfPage: this.pdfPage,\n              zoom: 1,\n              printUnits\n          });\n          this.canvasForPrint = canvas;\n          // canvasWrapper.appendChild(canvas);\n          // pageElement.appendChild(canvasWrapper);\n          this.setState({\n              isPrintingInProgress: true\n          });\n          const optionalContentConfigPromise = this.pdfViewer.state.pdfDocument.getOptionalContentConfig({\n              intent: \"print\"\n          });\n          const renderContext = {\n              canvasContext: canvasContext,\n              transform: [printUnits, 0, 0, printUnits, 0, 0],\n              viewport: this.pdfPage.getViewport({ scale: 1, rotation: this.viewport.rotation }),\n              intent: \"print\",\n              annotationMode: kendo_pdfjs_loader_js.AnnotationMode.ENABLE_STORAGE,\n              optionalContentConfigPromise,\n              printAnnotationStorage: (_b = (_a = this.pdfViewer) === null || _a === void 0 ? void 0 : _a.annotationStorage) === null || _b === void 0 ? void 0 : _b.print\n          };\n          const renderTask = this.pdfPage.render(renderContext);\n          const resultPromise = renderTask.promise;\n          return resultPromise;\n      }\n      isBlank() {\n          return this.element && this.element.getAttribute(\"data-blank\");\n      }\n      setBlank(isBlank) {\n          if (!this.element) {\n              return;\n          }\n          if (isBlank) {\n              this.element.setAttribute(\"data-blank\", true.toString());\n          }\n          else {\n              this.element.removeAttribute(\"data-blank\");\n          }\n      }\n      get renderingState() {\n          return __classPrivateFieldGet(this, _Page_renderingState, \"f\");\n      }\n      setPdfPage(pdfPage) {\n          // if (\n          //     (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) &&\n          //     this._isStandalone &&\n          //     (this.pageColors?.foreground === \"CanvasText\" ||\n          //         this.pageColors?.background === \"Canvas\")\n          // ) {\n          //     this._container?.style.setProperty(\n          //         \"--hcm-highlight-filter\",\n          //         pdfPage.filterFactory.addHighlightHCMFilter(\n          //             \"highlight\",\n          //             \"CanvasText\",\n          //             \"Canvas\",\n          //             \"HighlightText\",\n          //             \"Highlight\"\n          //         )\n          //     );\n          //     this._container?.style.setProperty(\n          //         \"--hcm-highlight-selected-filter\",\n          //         pdfPage.filterFactory.addHighlightHCMFilter(\n          //             \"highlight_selected\",\n          //             \"CanvasText\",\n          //             \"Canvas\",\n          //             \"HighlightText\",\n          //             \"Highlight\"\n          //         )\n          //     );\n          // }\n          this.pdfPage = pdfPage;\n          this.pdfPageRotate = pdfPage.rotate;\n          const totalRotation = (this.rotation + this.pdfPageRotate) % 360;\n          this.viewport = pdfPage.getViewport({\n              scale: this.scale * kendo_pdfjs_loader_js.PixelsPerInch.PDF_TO_CSS_UNITS,\n              rotation: totalRotation\n          });\n          __classPrivateFieldGet(this, _Page_instances, \"m\", _Page_setDimensions).call(this);\n          this.reset();\n      }\n      hasEditableAnnotations() {\n          var _a;\n          return !!((_a = this.annotationLayer) === null || _a === void 0 ? void 0 : _a.hasEditableAnnotations());\n      }\n      // /**\n      //  * The structure tree is currently only supported when the text layer is\n      //  * enabled and a canvas is used for rendering.\n      //  *\n      //  * The structure tree must be generated after the text layer for the\n      //  * aria-owns to work.\n      //  */\n      // async #renderStructTreeLayer() {\n      //     if (!this.textLayer) {\n      //         return;\n      //     }\n      //     this.structTreeLayer ||= new StructTreeLayerBuilder();\n      //     const tree = await (!this.structTreeLayer.renderingDone\n      //         ? this.pdfPage.getStructTree()\n      //         : null);\n      //     const treeDom = this.structTreeLayer?.render(tree);\n      //     if (treeDom) {\n      //         // Pause translation when inserting the structTree in the DOM.\n      //         this.l10n.pause();\n      //         this.canvas?.append(treeDom);\n      //         this.l10n.resume();\n      //     }\n      //     this.structTreeLayer?.show();\n      // }\n      // async #buildXfaTextContentItems(textDivs) {\n      //     const text = await this.pdfPage.getTextContent();\n      //     const items = [];\n      //     for (const item of text.items) {\n      //         items.push(item.str);\n      //     }\n      //     this._textHighlighter.setTextMapping(textDivs, items);\n      //     this._textHighlighter.enable();\n      // }\n      _resetZoomLayer(removeFromDOM = false) {\n          if (!this.zoomLayer) {\n              return;\n          }\n          const zoomLayerCanvas = this.zoomLayer.firstChild;\n          __classPrivateFieldGet(this, _Page_viewportMap, \"f\").delete(zoomLayerCanvas);\n          // Zeroing the width and height causes Firefox to release graphics\n          // resources immediately, which can greatly reduce memory consumption.\n          zoomLayerCanvas.width = 0;\n          zoomLayerCanvas.height = 0;\n          if (removeFromDOM) {\n              // Note: `ChildNode.remove` doesn't throw if the parent node is undefined.\n              this.zoomLayer.remove();\n          }\n          this.zoomLayer = null;\n      }\n      reset({ keepZoomLayer = false, keepAnnotationLayer = false, keepAnnotationEditorLayer = false, keepXfaLayer = false, keepTextLayer = false } = {}) {\n          // this.cancelRendering({\n          //     keepAnnotationLayer,\n          //     keepAnnotationEditorLayer,\n          //     keepXfaLayer,\n          //     keepTextLayer,\n          // });\n          // this.renderingState = RenderingStates.INITIAL;\n          var _a, _b, _c, _d, _e, _f, _g, _h;\n          const div = this.div;\n          if (!div) {\n              return;\n          }\n          const childNodes = div.childNodes, zoomLayerNode = (keepZoomLayer && this.zoomLayer) || null, annotationLayerNode = (keepAnnotationLayer && ((_a = this.annotationLayer) === null || _a === void 0 ? void 0 : _a.div)) || null, annotationEditorLayerNode = (keepAnnotationEditorLayer && ((_b = this.annotationEditorLayer) === null || _b === void 0 ? void 0 : _b.div)) || null, xfaLayerNode = (keepXfaLayer && ((_c = this.xfaLayer) === null || _c === void 0 ? void 0 : _c.div)) || null, textLayerNode = (keepTextLayer && ((_d = this.textLayer) === null || _d === void 0 ? void 0 : _d.div)) || null;\n          for (let i = childNodes.length - 1; i >= 0; i--) {\n              const node = childNodes[i];\n              switch (node) {\n                  case zoomLayerNode:\n                  case annotationLayerNode:\n                  case annotationEditorLayerNode:\n                  case xfaLayerNode:\n                  case textLayerNode:\n                      continue;\n                  default: break;\n              }\n              node.remove();\n              const layerIndex = __classPrivateFieldGet(this, _Page_layers, \"f\").indexOf(node);\n              if (layerIndex >= 0) {\n                  __classPrivateFieldGet(this, _Page_layers, \"f\")[layerIndex] = null;\n              }\n          }\n          div.removeAttribute(\"data-loaded\");\n          if (annotationLayerNode) {\n              // Hide the annotation layer until all elements are resized\n              // so they are not displayed on the already resized page.\n              (_e = this.annotationLayer) === null || _e === void 0 ? void 0 : _e.hide();\n          }\n          if (annotationEditorLayerNode) {\n              (_f = this.annotationEditorLayer) === null || _f === void 0 ? void 0 : _f.hide();\n          }\n          if (xfaLayerNode) {\n              // Hide the XFA layer until all elements are resized\n              // so they are not displayed on the already resized page.\n              (_g = this.xfaLayer) === null || _g === void 0 ? void 0 : _g.hide();\n          }\n          if (textLayerNode) {\n              (_h = this.textLayer) === null || _h === void 0 ? void 0 : _h.hide();\n          }\n          // this.structTreeLayer?.hide();\n          if (!zoomLayerNode) {\n              if (this.canvas) {\n                  __classPrivateFieldGet(this, _Page_viewportMap, \"f\").delete(this.canvas);\n                  // Zeroing the width and height causes Firefox to release graphics\n                  // resources immediately, which can greatly reduce memory consumption.\n                  this.canvas.width = 0;\n                  this.canvas.height = 0;\n                  delete this.canvas;\n              }\n              this._resetZoomLayer();\n          }\n      }\n      toggleEditingMode(isEditing) {\n          if (!this.hasEditableAnnotations()) {\n              return;\n          }\n          __classPrivateFieldSet(this, _Page_isEditing, isEditing, \"f\");\n          this.reset({\n              keepZoomLayer: true,\n              keepAnnotationLayer: true,\n              keepAnnotationEditorLayer: true,\n              keepXfaLayer: true,\n              keepTextLayer: true\n          });\n      }\n      draw() {\n          return __awaiter(this, void 0, void 0, function* () {\n              // if (this.renderingState !== RenderingStates.INITIAL) {\n              //     console.error(\"Must be in new state before drawing\");\n              //     this.reset(); // Ensure that we reset all state to prevent issues.\n              // }\n              // const { div, l10n, pageColors, pdfPage: pdfPage, viewport } = this;\n              // if (!pdfPage) {\n              //     this.renderingState = RenderingStates.FINISHED;\n              //     throw new Error(\"pdfPage is not loaded\");\n              // }\n              // this.renderingState = RenderingStates.RUNNING;\n              const { canvasContext, canvas, canvasWrapper, viewport, pageElement, styles } = this.pdfViewer.createPageElements({\n                  pdfPage: this.pdfPage,\n                  zoom: this.pdfViewer.options.zoomLevel || 1\n              });\n              if (this.isBlank()) {\n                  this.element.replaceWith(pageElement);\n                  this.element = this.div = pageElement;\n                  this.canvas = canvas;\n              }\n              else {\n                  this.element = this.div = this.element || this.div || pageElement;\n                  this.canvas = this.canvas || canvas;\n              }\n              this.options.styles = styles;\n              // Wrap the canvas so that if it has a CSS transform for high DPI the\n              // overflow will be hidden in Firefox.\n              // const canvasWrapper = document.createElement(\"div\");\n              // canvasWrapper.classList.add(\"canvasWrapper\");\n              canvasWrapper.appendChild(canvas);\n              this.element.appendChild(canvasWrapper);\n              __classPrivateFieldGet(this, _Page_instances, \"m\", _Page_addLayer).call(this, canvasWrapper, \"canvasWrapper\");\n              const { div, \n              // l10n,\n              // pageColors,\n              pdfPage\n              // viewport\n               } = this;\n              if (!this.textLayer && __classPrivateFieldGet(this, _Page_textLayerMode, \"f\") !== TextLayerMode.DISABLE && !pdfPage.isPureXfa) {\n                  this._accessibilityManager || (this._accessibilityManager = new TextAccessibilityManager());\n                  this.textLayer = new TextLayerBuilder({\n                      // todo: not part of pdf.js\n                      styles: this.options.styles,\n                      pdfPage,\n                      // highlighter: this._textHighlighter,\n                      accessibilityManager: this._accessibilityManager,\n                      // enablePermissions: this.#textLayerMode === TextLayerMode.ENABLE_PERMISSIONS,\n                      onAppend: textLayerDiv => {\n                          // Pause translation when inserting the textLayer in the DOM.\n                          // this.l10n.pause();\n                          __classPrivateFieldGet(this, _Page_instances, \"m\", _Page_addLayer).call(this, textLayerDiv, \"textLayer\");\n                          // this.l10n.resume();\n                      }\n                  });\n              }\n              if (!this.annotationLayer && __classPrivateFieldGet(this, _Page_annotationMode, \"f\") !== kendo_pdfjs_loader_js.AnnotationMode.DISABLE) {\n                  const { annotationStorage, annotationEditorUIManager, \n                  // downloadManager,\n                  // enableScripting,\n                  // fieldObjectsPromise,\n                  // hasJSActionsPromise,\n                  linkService } = __classPrivateFieldGet(this, _Page_layerProperties, \"f\");\n                  this._annotationCanvasMap || (this._annotationCanvasMap = new Map());\n                  this.annotationLayer = new AnnotationLayerBuilder({\n                      pdfPage,\n                      eventBus: this.eventBus || this.pdfViewer.eventBus,\n                      annotationStorage,\n                      // imageResourcesPath: this.imageResourcesPath,\n                      renderForms: __classPrivateFieldGet(this, _Page_annotationMode, \"f\") === kendo_pdfjs_loader_js.AnnotationMode.ENABLE_FORMS,\n                      linkService,\n                      // downloadManager,\n                      // enableScripting,\n                      // hasJSActionsPromise,\n                      // fieldObjectsPromise,\n                      annotationCanvasMap: this._annotationCanvasMap,\n                      accessibilityManager: this._accessibilityManager,\n                      annotationEditorUIManager,\n                      onAppend: annotationLayerDiv => {\n                          __classPrivateFieldGet(this, _Page_instances, \"m\", _Page_addLayer).call(this, annotationLayerDiv, \"annotationLayer\");\n                      }\n                  });\n              }\n              // const renderContinueCallback = cont => {\n              //     showCanvas?.(false);\n              //     if (this.renderingQueue && !this.renderingQueue.isHighestPriority(this)) {\n              //         this.renderingState = RenderingStates.PAUSED;\n              //         this.resume = () => {\n              //             this.renderingState = RenderingStates.RUNNING;\n              //             cont();\n              //         };\n              //         return;\n              //     }\n              //     cont();\n              // };\n              // const { width, height } = viewport;\n              // const canvas = document.createElement(\"canvas\");\n              // canvas.setAttribute(\"role\", \"presentation\");\n              // // Keep the canvas hidden until the first draw callback, or until drawing\n              // // is complete when `!this.renderingQueue`, to prevent black flickering.\n              // canvas.hidden = true;\n              // const hasHCM = !!(pageColors?.background && pageColors?.foreground);\n              // let showCanvas = isLastShow => {\n              //     // In HCM, a final filter is applied on the canvas which means that\n              //     // before it's applied we've normal colors. Consequently, to avoid to have\n              //     // a final flash we just display it once all the drawing is done.\n              //     if (!hasHCM || isLastShow) {\n              //         canvas.hidden = false;\n              //         showCanvas = null; // Only invoke the function once.\n              //     }\n              // };\n              // canvasWrapper.append(canvas);\n              // this.canvas = canvas;\n              // const ctx = canvas.getContext(\"2d\", {\n              //     alpha: false,\n              //     willReadFrequently: !this.#enableHWA,\n              // });\n              // const ctx = canvas.getContext(\"2d\");\n              // const outputScale = (this.outputScale = new OutputScale());\n              // if (\n              //     (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) &&\n              //     this.maxCanvasPixels === 0\n              // ) {\n              //     const invScale = 1 / this.scale;\n              //     // Use a scale that makes the canvas have the originally intended size\n              //     // of the page.\n              //     outputScale.sx *= invScale;\n              //     outputScale.sy *= invScale;\n              //     this.#hasRestrictedScaling = true;\n              // } else if (this.maxCanvasPixels > 0) {\n              //     const pixelsInViewport = width * height;\n              //     const maxScale = Math.sqrt(this.maxCanvasPixels / pixelsInViewport);\n              //     if (outputScale.sx > maxScale || outputScale.sy > maxScale) {\n              //         outputScale.sx = maxScale;\n              //         outputScale.sy = maxScale;\n              //         this.#hasRestrictedScaling = true;\n              //     } else {\n              //         this.#hasRestrictedScaling = false;\n              //     }\n              // }\n              // const sfx = approximateFraction(outputScale.sx);\n              // const sfy = approximateFraction(outputScale.sy);\n              // canvas.width = floorToDivide(width * outputScale.sx, sfx[0]);\n              // canvas.height = floorToDivide(height * outputScale.sy, sfy[0]);\n              // const { style } = canvas;\n              // style.width = floorToDivide(width, sfx[1]) + \"px\";\n              // style.height = floorToDivide(height, sfy[1]) + \"px\";\n              // Add the viewport so it's known what it was originally drawn with.\n              __classPrivateFieldGet(this, _Page_viewportMap, \"f\").set(canvas, viewport);\n              // // Rendering area\n              // const transform = outputScale.scaled\n              //     ? [outputScale.sx, 0, 0, outputScale.sy, 0, 0]\n              //     : null;\n              const renderContext = {\n                  canvasContext: canvasContext,\n                  // transform,\n                  viewport,\n                  annotationMode: __classPrivateFieldGet(this, _Page_annotationMode, \"f\"),\n                  // optionalContentConfigPromise: this._optionalContentConfigPromise,\n                  annotationCanvasMap: this._annotationCanvasMap,\n                  // pageColors,\n                  isEditing: __classPrivateFieldGet(this, _Page_isEditing, \"f\")\n              };\n              // pdfPage.render(renderContext)\n              const renderTask = (this.renderTask = pdfPage.render(renderContext));\n              // renderTask.onContinue = renderContinueCallback;\n              const resultPromise = renderTask.promise.then(() => __awaiter(this, void 0, void 0, function* () {\n                  var _a;\n                  // showCanvas?.(true);\n                  yield __classPrivateFieldGet(this, _Page_instances, \"m\", _Page_finishRenderTask).call(this, renderTask);\n                  // todo: awaiting this breaks text nodes positioning after zoom\n                  // if \"includeMarkedContent\": true is set in TextLayerBuilder\n                  yield __classPrivateFieldGet(this, _Page_instances, \"m\", _Page_renderTextLayer).call(this);\n                  // this.#renderTextLayer();\n                  if (this.annotationLayer) {\n                      yield __classPrivateFieldGet(this, _Page_instances, \"m\", _Page_renderAnnotationLayer).call(this);\n                  }\n                  const { annotationEditorUIManager } = __classPrivateFieldGet(this, _Page_layerProperties, \"f\");\n                  if (!annotationEditorUIManager) {\n                      return;\n                  }\n                  this.drawLayer || (this.drawLayer = new DrawLayerBuilder({\n                      pageIndex: this.id\n                  }));\n                  yield __classPrivateFieldGet(this, _Page_instances, \"m\", _Page_renderDrawLayer).call(this);\n                  this.drawLayer.setParent(canvasWrapper);\n                  if (!this.annotationEditorLayer) {\n                      this.annotationEditorLayer = new AnnotationEditorLayerBuilder({\n                          uiManager: annotationEditorUIManager,\n                          pdfPage,\n                          // l10n,\n                          accessibilityManager: this._accessibilityManager,\n                          annotationLayer: (_a = this.annotationLayer) === null || _a === void 0 ? void 0 : _a.annotationLayer,\n                          textLayer: this.textLayer,\n                          drawLayer: this.drawLayer.getDrawLayer(),\n                          onAppend: annotationEditorLayerDiv => {\n                              __classPrivateFieldGet(this, _Page_instances, \"m\", _Page_addLayer).call(this, annotationEditorLayerDiv, \"annotationEditorLayer\");\n                          }\n                      });\n                  }\n                  // todo: this is not awaited in pdf.js\n                  __classPrivateFieldGet(this, _Page_instances, \"m\", _Page_renderAnnotationEditorLayer).call(this);\n                  // await this.#renderAnnotationEditorLayer();\n              }), error => {\n                  // When zooming with a `drawingDelay` set, avoid temporarily showing\n                  // a black canvas if rendering was cancelled before the `onContinue`-\n                  // callback had been invoked at least once.\n                  // if (!(error instanceof RenderingCancelledException)) {\n                  //     showCanvas?.(true);\n                  // }\n                  // return this.#finishRenderTask(renderTask, error);\n                  if (!error) {\n                      /* no-empty */\n                  }\n              });\n              if (pdfPage.isPureXfa) {\n                  // if (!this.xfaLayer) {\n                  //     const { annotationStorage, linkService } = this.#layerProperties;\n                  //     this.xfaLayer = new XfaLayerBuilder({\n                  //         pdfPage,\n                  //         annotationStorage,\n                  //         linkService,\n                  //     });\n                  // }\n                  // this.#renderXfaLayer();\n              }\n              div.setAttribute(\"data-loaded\", true);\n              this.eventBus.dispatch(\"pagerender\", {\n                  source: this,\n                  pageNumber: this.id\n              });\n              return resultPromise;\n          });\n      }\n  }\n  _Page_annotationMode = new WeakMap(), _Page_isEditing = new WeakMap(), _Page_layerProperties = new WeakMap(), _Page_previousRotation = new WeakMap(), _Page_renderingState = new WeakMap(), _Page_textLayerMode = new WeakMap(), _Page_viewportMap = new WeakMap(), _Page_layers = new WeakMap(), _Page_instances = new WeakSet(), _Page_addLayer = function _Page_addLayer(div, name) {\n      const pos = LAYERS_ORDER.get(name);\n      const oldDiv = __classPrivateFieldGet(this, _Page_layers, \"f\")[pos];\n      __classPrivateFieldGet(this, _Page_layers, \"f\")[pos] = div;\n      if (oldDiv) {\n          oldDiv.replaceWith(div);\n          return;\n      }\n      for (let i = pos - 1; i >= 0; i--) {\n          const layer = __classPrivateFieldGet(this, _Page_layers, \"f\")[i];\n          if (layer) {\n              layer.after(div);\n              return;\n          }\n      }\n      this.div.prepend(div);\n  }, _Page_setDimensions = function _Page_setDimensions() {\n      const { viewport } = this;\n      if (this.pdfPage) {\n          if (__classPrivateFieldGet(this, _Page_previousRotation, \"f\") === viewport.rotation) {\n              return;\n          }\n          __classPrivateFieldSet(this, _Page_previousRotation, viewport.rotation, \"f\");\n      }\n      if (!this.div || !viewport) {\n          return;\n      }\n      kendo_pdfjs_loader_js.setLayerDimensions(this.div, viewport, \n      /* mustFlip = */ true, \n      /* mustRotate = */ false);\n  }, _Page_dispatchLayerRendered = function _Page_dispatchLayerRendered(name, error) {\n      this.eventBus.dispatch(name, {\n          source: this,\n          pageNumber: this.id,\n          error\n      });\n  }, _Page_renderAnnotationLayer = function _Page_renderAnnotationLayer() {\n      return __awaiter(this, void 0, void 0, function* () {\n          let error = null;\n          try {\n              yield this.annotationLayer.render(this.viewport, \"display\");\n          }\n          catch (ex) {\n              // eslint-disable-next-line no-console\n              console.error(`#renderAnnotationLayer: \"${ex}\".`);\n              error = ex;\n          }\n          finally {\n              __classPrivateFieldGet(this, _Page_instances, \"m\", _Page_dispatchLayerRendered).call(this, \"annotationlayerrendered\", error);\n          }\n      });\n  }, _Page_renderAnnotationEditorLayer = function _Page_renderAnnotationEditorLayer() {\n      return __awaiter(this, void 0, void 0, function* () {\n          let error = null;\n          try {\n              // await this.annotationEditorLayer.render(this.viewport, \"display\");\n              yield this.annotationEditorLayer.render(this.viewport);\n          }\n          catch (ex) {\n              // console.error(`#renderAnnotationEditorLayer: \"${ex}\".`);\n              error = ex;\n          }\n          finally {\n              __classPrivateFieldGet(this, _Page_instances, \"m\", _Page_dispatchLayerRendered).call(this, \"annotationeditorlayerrendered\", error);\n          }\n      });\n  }, _Page_renderDrawLayer = function _Page_renderDrawLayer() {\n      return __awaiter(this, void 0, void 0, function* () {\n          try {\n              yield this.drawLayer.render(\"display\");\n          }\n          catch (ex) {\n              // console.error(`#renderDrawLayer: \"${ex}\".`);\n          }\n      });\n  }, _Page_renderTextLayer = function _Page_renderTextLayer() {\n      return __awaiter(this, void 0, void 0, function* () {\n          if (!this.textLayer) {\n              return;\n          }\n          let error = null;\n          try {\n              yield this.textLayer.render(this.viewport);\n          }\n          catch (ex) {\n              if (ex instanceof kendo_pdfjs_loader_js.AbortException) {\n                  return;\n              }\n              // console.error(`#renderTextLayer: \"${ex}\".`);\n              error = ex;\n          }\n          __classPrivateFieldGet(this, _Page_instances, \"m\", _Page_dispatchLayerRendered).call(this, \"textlayerrendered\", error);\n          // this.#renderStructTreeLayer();\n      });\n  }, _Page_finishRenderTask = function _Page_finishRenderTask(renderTask) {\n      return __awaiter(this, void 0, void 0, function* () {\n          // The renderTask may have been replaced by a new one, so only remove\n          // the reference to the renderTask if it matches the one that is\n          // triggering this callback.\n          if (renderTask === this.renderTask) {\n              this.renderTask = null;\n          }\n          //     if (error instanceof RenderingCancelledException) {\n          //         this.#renderError = null;\n          //         return;\n          //     }\n          //     this.#renderError = error;\n          //     this.renderingState = RenderingStates.FINISHED;\n          this._resetZoomLayer(/* removeFromDOM = */ true);\n          //     // Ensure that the thumbnails won't become partially (or fully) blank,\n          //     // for documents that contain interactive form elements.\n          //     this.#useThumbnailCanvas.regularAnnotations = !renderTask.separateAnnots;\n          this.eventBus.dispatch(\"pagerendered\", {\n              source: this,\n              pageNumber: this.id,\n              cssTransform: false,\n              timestamp: performance.now(),\n              // error: this.#renderError,\n              error: \"page render error\"\n          });\n          //     if (error) {\n          //         throw error;\n          //     }\n      });\n  };\n\n  /* eslint-disable no-console */\n  /* Copyright 2015 Mozilla Foundation\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *     http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   * See the License for the specific language governing permissions and\n   * limitations under the License.\n   */\n  var _a, _PDFLinkService_isValidExplicitDest;\n  const DEFAULT_LINK_REL = \"noopener noreferrer nofollow\";\n  const LinkTarget = {\n      NONE: 0, // Default value.\n      SELF: 1,\n      BLANK: 2,\n      PARENT: 3,\n      TOP: 4\n  };\n  /**\n   * @typedef {Object} PDFLinkServiceOptions\n   * @property {EventBus} eventBus - The application event bus.\n   * @property {number} [externalLinkTarget] - Specifies the `target` attribute\n   *   for external links. Must use one of the values from {LinkTarget}.\n   *   Defaults to using no target.\n   * @property {string} [externalLinkRel] - Specifies the `rel` attribute for\n   *   external links. Defaults to stripping the referrer.\n   * @property {boolean} [ignoreDestinationZoom] - Ignores the zoom argument,\n   *   thus preserving the current zoom level in the viewer, when navigating\n   *   to internal destinations. The default value is `false`.\n   */\n  /**\n   * Performs navigation functions inside PDF, such as opening specified page,\n   * or destination.\n   * @implements {IPDFLinkService}\n   */\n  class PDFLinkService {\n      /**\n       * @param {PDFLinkServiceOptions} options\n       */\n      constructor({ eventBus = null, externalLinkTarget = null, externalLinkRel = null, ignoreDestinationZoom = false } = {}) {\n          // todo: props\n          this.eventBus = null;\n          this.externalLinkTarget = null;\n          this.externalLinkRel = null;\n          this._ignoreDestinationZoom = null;\n          this.baseUrl = null;\n          this.pdfDocument = null;\n          this.pdfViewer = null;\n          this.pdfHistory = null;\n          // todo: props\n          this.externalLinkEnabled = true;\n          this.eventBus = eventBus;\n          this.externalLinkTarget = externalLinkTarget;\n          this.externalLinkRel = externalLinkRel;\n          this._ignoreDestinationZoom = ignoreDestinationZoom;\n          this.baseUrl = null;\n          this.pdfDocument = null;\n          this.pdfViewer = null;\n          this.pdfHistory = null;\n      }\n      setDocument(pdfDocument, baseUrl = null) {\n          this.baseUrl = baseUrl;\n          this.pdfDocument = pdfDocument;\n      }\n      setViewer(pdfViewer) {\n          this.pdfViewer = pdfViewer;\n      }\n      setHistory(pdfHistory) {\n          this.pdfHistory = pdfHistory;\n      }\n      /**\n       * @type {number}\n       */\n      get pagesCount() {\n          return this.pdfDocument ? this.pdfDocument.numPages : 0;\n      }\n      /**\n       * @type {number}\n       */\n      get page() {\n          return this.pdfDocument ? this.pdfViewer.currentPageNumber : 1;\n      }\n      /**\n       * @param {number} value\n       */\n      set page(value) {\n          if (this.pdfDocument) {\n              this.pdfViewer.currentPageNumber = value;\n          }\n      }\n      /**\n       * @type {number}\n       */\n      get rotation() {\n          return this.pdfDocument ? this.pdfViewer.pagesRotation : 0;\n      }\n      /**\n       * @param {number} value\n       */\n      set rotation(value) {\n          if (this.pdfDocument) {\n              this.pdfViewer.pagesRotation = value;\n          }\n      }\n      /**\n       * @type {boolean}\n       */\n      get isInPresentationMode() {\n          return this.pdfDocument ? this.pdfViewer.isInPresentationMode : false;\n      }\n      /**\n       * This method will, when available, also update the browser history.\n       *\n       * @param {string|Array} dest - The named, or explicit, PDF destination.\n       */\n      goToDestination(dest) {\n          return __awaiter(this, void 0, void 0, function* () {\n              if (!this.pdfDocument) {\n                  return;\n              }\n              let namedDest, explicitDest, pageNumber;\n              if (typeof dest === \"string\") {\n                  namedDest = dest;\n                  explicitDest = yield this.pdfDocument.getDestination(dest);\n              }\n              else {\n                  namedDest = null;\n                  explicitDest = yield dest;\n              }\n              if (!Array.isArray(explicitDest)) {\n                  // console.error(\n                  //     `goToDestination: \"${explicitDest}\" is not a valid destination array, for dest=\"${dest}\".`\n                  // );\n                  return;\n              }\n              // Dest array looks like that: <page-ref> </XYZ|/FitXXX> <args..>\n              const [destRef] = explicitDest;\n              if (destRef && typeof destRef === \"object\") {\n                  pageNumber = this.pdfDocument.cachedPageNumber(destRef);\n                  if (!pageNumber) {\n                      // Fetch the page reference if it's not yet available. This could\n                      // only occur during loading, before all pages have been resolved.\n                      try {\n                          pageNumber = (yield this.pdfDocument.getPageIndex(destRef)) + 1;\n                      }\n                      catch (_b) {\n                          console.error(`goToDestination: \"${destRef}\" is not a valid page reference, for dest=\"${dest}\".`);\n                          return;\n                      }\n                  }\n              }\n              else if (Number.isInteger(destRef)) {\n                  pageNumber = destRef + 1;\n              }\n              if (!pageNumber || pageNumber < 1 || pageNumber > this.pagesCount) {\n                  console.error(`goToDestination: \"${pageNumber}\" is not a valid page number, for dest=\"${dest}\".`);\n                  return;\n              }\n              if (this.pdfHistory) {\n                  // Update the browser history before scrolling the new destination into\n                  // view, to be able to accurately capture the current document position.\n                  this.pdfHistory.pushCurrentPosition();\n                  this.pdfHistory.push({ namedDest, explicitDest, pageNumber });\n              }\n              this.pdfViewer.scrollPageIntoView({\n                  pageNumber,\n                  destArray: explicitDest,\n                  ignoreDestinationZoom: this._ignoreDestinationZoom\n              });\n          });\n      }\n      /**\n       * This method will, when available, also update the browser history.\n       *\n       * @param {number|string} val - The page number, or page label.\n       */\n      goToPage(val) {\n          if (!this.pdfDocument) {\n              return;\n          }\n          const pageNumber = (typeof val === \"string\" && this.pdfViewer.pageLabelToPageNumber(val)) ||\n              val | 0;\n          if (!(Number.isInteger(pageNumber) &&\n              pageNumber > 0 &&\n              pageNumber <= this.pagesCount)) {\n              console.error(`PDFLinkService.goToPage: \"${val}\" is not a valid page.`);\n              return;\n          }\n          if (this.pdfHistory) {\n              // Update the browser history before scrolling the new page into view,\n              // to be able to accurately capture the current document position.\n              this.pdfHistory.pushCurrentPosition();\n              this.pdfHistory.pushPage(pageNumber);\n          }\n          this.pdfViewer.scrollPageIntoView({ pageNumber });\n      }\n      /**\n       * Adds various attributes (href, title, target, rel) to hyperlinks.\n       * @param {HTMLAnchorElement} link\n       * @param {string} url\n       * @param {boolean} [newWindow]\n       */\n      addLinkAttributes(link, url, newWindow = false) {\n          if (!url || typeof url !== \"string\") {\n              throw new Error('A valid \"url\" parameter must provided.');\n          }\n          const target = newWindow ? LinkTarget.BLANK : this.externalLinkTarget, rel = this.externalLinkRel;\n          if (this.externalLinkEnabled) {\n              link.href = link.title = url;\n          }\n          else {\n              link.href = \"\";\n              link.title = `Disabled: ${url}`;\n              link.onclick = () => false;\n          }\n          let targetStr = \"\"; // LinkTarget.NONE\n          switch (target) {\n              case LinkTarget.NONE:\n                  break;\n              case LinkTarget.SELF:\n                  targetStr = \"_self\";\n                  break;\n              case LinkTarget.BLANK:\n                  targetStr = \"_blank\";\n                  break;\n              case LinkTarget.PARENT:\n                  targetStr = \"_parent\";\n                  break;\n              case LinkTarget.TOP:\n                  targetStr = \"_top\";\n                  break;\n              default: break;\n          }\n          link.target = targetStr;\n          link.rel = typeof rel === \"string\" ? rel : DEFAULT_LINK_REL;\n      }\n      /**\n       * @param {string|Array} dest - The PDF destination object.\n       * @returns {string} The hyperlink to the PDF object.\n       */\n      getDestinationHash(dest) {\n          if (typeof dest === \"string\") {\n              if (dest.length > 0) {\n                  return this.getAnchorUrl(\"#\" + escape(dest));\n              }\n          }\n          else if (Array.isArray(dest)) {\n              const str = JSON.stringify(dest);\n              if (str.length > 0) {\n                  return this.getAnchorUrl(\"#\" + escape(str));\n              }\n          }\n          return this.getAnchorUrl(\"\");\n      }\n      /**\n       * Prefix the full url on anchor links to make sure that links are resolved\n       * relative to the current URL instead of the one defined in <base href>.\n       * @param {string} anchor - The anchor hash, including the #.\n       * @returns {string} The hyperlink to the PDF object.\n       */\n      getAnchorUrl(anchor) {\n          return this.baseUrl ? this.baseUrl + anchor : anchor;\n      }\n      /**\n       * @param {string} hash\n       */\n      setHash(hash) {\n          if (!this.pdfDocument) {\n              return;\n          }\n          let pageNumber, dest;\n          if (hash.includes(\"=\")) {\n              const params = parseQueryString(hash);\n              if (params.has(\"search\")) {\n                  const query = params.get(\"search\").replaceAll('\"', \"\"), phrase = params.get(\"phrase\") === \"true\";\n                  this.eventBus.dispatch(\"findfromurlhash\", {\n                      source: this,\n                      query: phrase ? query : query.match(/\\S+/g)\n                  });\n              }\n              // borrowing syntax from \"Parameters for Opening PDF Files\"\n              if (params.has(\"page\")) {\n                  pageNumber = params.get(\"page\") | 0 || 1;\n              }\n              if (params.has(\"zoom\")) {\n                  // Build the destination array.\n                  const zoomArgs = params.get(\"zoom\").split(\",\"); // scale,left,top\n                  const zoomArg = zoomArgs[0];\n                  const zoomArgNumber = parseFloat(zoomArg);\n                  if (!zoomArg.includes(\"Fit\")) {\n                      // If the zoomArg is a number, it has to get divided by 100. If it's\n                      // a string, it should stay as it is.\n                      dest = [\n                          null,\n                          { name: \"XYZ\" },\n                          zoomArgs.length > 1 ? zoomArgs[1] | 0 : null,\n                          zoomArgs.length > 2 ? zoomArgs[2] | 0 : null,\n                          zoomArgNumber ? zoomArgNumber / 100 : zoomArg\n                      ];\n                  }\n                  else if (zoomArg === \"Fit\" || zoomArg === \"FitB\") {\n                      dest = [null, { name: zoomArg }];\n                  }\n                  else if (zoomArg === \"FitH\" ||\n                      zoomArg === \"FitBH\" ||\n                      zoomArg === \"FitV\" ||\n                      zoomArg === \"FitBV\") {\n                      dest = [\n                          null,\n                          { name: zoomArg },\n                          zoomArgs.length > 1 ? zoomArgs[1] | 0 : null\n                      ];\n                  }\n                  else if (zoomArg === \"FitR\") {\n                      if (zoomArgs.length !== 5) {\n                          console.error('PDFLinkService.setHash: Not enough parameters for \"FitR\".');\n                      }\n                      else {\n                          dest = [\n                              null,\n                              { name: zoomArg },\n                              zoomArgs[1] | 0,\n                              zoomArgs[2] | 0,\n                              zoomArgs[3] | 0,\n                              zoomArgs[4] | 0\n                          ];\n                      }\n                  }\n                  else {\n                      console.error(`PDFLinkService.setHash: \"${zoomArg}\" is not a valid zoom value.`);\n                  }\n              }\n              if (dest) {\n                  this.pdfViewer.scrollPageIntoView({\n                      pageNumber: pageNumber || this.page,\n                      destArray: dest,\n                      allowNegativeOffset: true\n                  });\n              }\n              else if (pageNumber) {\n                  this.page = pageNumber; // simple page\n              }\n              if (params.has(\"pagemode\")) {\n                  this.eventBus.dispatch(\"pagemode\", {\n                      source: this,\n                      mode: params.get(\"pagemode\")\n                  });\n              }\n              // Ensure that this parameter is *always* handled last, in order to\n              // guarantee that it won't be overridden (e.g. by the \"page\" parameter).\n              if (params.has(\"nameddest\")) {\n                  this.goToDestination(params.get(\"nameddest\"));\n              }\n              // if (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"MOZCENTRAL\")) {\n              return;\n              // }\n              // // Support opening of PDF attachments in the Firefox PDF Viewer,\n              // // which uses a couple of non-standard hash parameters; refer to\n              // // `DownloadManager.openOrDownloadData` in the firefoxcom.js file.\n              // if (!params.has(\"filename\") || !params.has(\"filedest\")) {\n              //     return;\n              // }\n              // hash = params.get(\"filedest\");\n          }\n          // Named (or explicit) destination.\n          dest = unescape(hash);\n          try {\n              dest = JSON.parse(dest);\n              if (!Array.isArray(dest)) {\n                  // Avoid incorrectly rejecting a valid named destination, such as\n                  // e.g. \"4.3\" or \"true\", because `JSON.parse` converted its type.\n                  dest = dest.toString();\n              }\n          }\n          catch (e) {\n              if (!e) {\n                  return;\n              }\n          }\n          if (typeof dest === \"string\" || __classPrivateFieldGet(_a, _a, \"m\", _PDFLinkService_isValidExplicitDest).call(_a, dest)) {\n              this.goToDestination(dest);\n          }\n          // console.error(\n          //     `PDFLinkService.setHash: \"${unescape(hash)}\" is not a valid destination.`\n          // );\n      }\n      /**\n       * @param {string} action\n       */\n      executeNamedAction(action) {\n          var _b, _c;\n          if (!this.pdfDocument) {\n              return;\n          }\n          // See PDF reference, table 8.45 - Named action\n          switch (action) {\n              case \"GoBack\":\n                  (_b = this.pdfHistory) === null || _b === void 0 ? void 0 : _b.back();\n                  break;\n              case \"GoForward\":\n                  (_c = this.pdfHistory) === null || _c === void 0 ? void 0 : _c.forward();\n                  break;\n              case \"NextPage\":\n                  this.pdfViewer.nextPage();\n                  break;\n              case \"PrevPage\":\n                  this.pdfViewer.previousPage();\n                  break;\n              case \"LastPage\":\n                  this.page = this.pagesCount;\n                  break;\n              case \"FirstPage\":\n                  this.page = 1;\n                  break;\n              default:\n                  break; // No action according to spec\n          }\n          this.eventBus.dispatch(\"namedaction\", {\n              source: this,\n              action\n          });\n      }\n      /**\n       * @param {Object} action\n       */\n      executeSetOCGState(action) {\n          return __awaiter(this, void 0, void 0, function* () {\n              if (!this.pdfDocument) {\n                  return;\n              }\n              const pdfDocument = this.pdfDocument, optionalContentConfig = yield this.pdfViewer.optionalContentConfigPromise;\n              if (pdfDocument !== this.pdfDocument) {\n                  return; // The document was closed while the optional content resolved.\n              }\n              optionalContentConfig.setOCGState(action);\n              this.pdfViewer.optionalContentConfigPromise = Promise.resolve(optionalContentConfig);\n          });\n      }\n  }\n  _a = PDFLinkService, _PDFLinkService_isValidExplicitDest = function _PDFLinkService_isValidExplicitDest(dest) {\n      if (!Array.isArray(dest) || dest.length < 2) {\n          return false;\n      }\n      const [page, zoom, ...args] = dest;\n      if (!(typeof page === \"object\" &&\n          Number.isInteger(page === null || page === void 0 ? void 0 : page.num) &&\n          Number.isInteger(page === null || page === void 0 ? void 0 : page.gen)) &&\n          !Number.isInteger(page)) {\n          return false;\n      }\n      if (!(typeof zoom === \"object\" && typeof (zoom === null || zoom === void 0 ? void 0 : zoom.name) === \"string\")) {\n          return false;\n      }\n      const argsLen = args.length;\n      let allowNull = true;\n      switch (zoom.name) {\n          case \"XYZ\":\n              if (argsLen < 2 || argsLen > 3) {\n                  return false;\n              }\n              break;\n          case \"Fit\":\n          case \"FitB\":\n              return argsLen === 0;\n          case \"FitH\":\n          case \"FitBH\":\n          case \"FitV\":\n          case \"FitBV\":\n              if (argsLen > 1) {\n                  return false;\n              }\n              break;\n          case \"FitR\":\n              if (argsLen !== 4) {\n                  return false;\n              }\n              allowNull = false;\n              break;\n          default:\n              return false;\n      }\n      for (const arg of args) {\n          if (!(typeof arg === \"number\" || (allowNull && arg === null))) {\n              return false;\n          }\n      }\n      return true;\n  };\n\n  exports.P = void 0;\n  (function (PdfViewerInteractionMode) {\n      PdfViewerInteractionMode[PdfViewerInteractionMode[\"TextSelection\"] = 0] = \"TextSelection\";\n      PdfViewerInteractionMode[PdfViewerInteractionMode[\"Pan\"] = 1] = \"Pan\";\n  })(exports.P || (exports.P = {}));\n\n  var _PdfViewer_instances, _PdfViewer_annotationEditorMode, _PdfViewer_switchAnnotationEditorModeTimeoutId, _PdfViewer_annotationMode, _PdfViewer_eventAbortController, _PdfViewer_onPageRenderedCallback, _PdfViewer_switchToEditAnnotationMode, _PdfViewer_scrollIntoView;\n  const PDF_JS = \"pdfjs\";\n  const ERROR = \"error\";\n  const ZOOM_START = \"zoomStart\";\n  const ZOOM_END = \"zoomEnd\";\n  const PAGE_RENDERED = \"pageRendered\";\n  const PAGES_LOAD = \"pagesLoad\";\n  const PRINT_END = \"printEnd\";\n  const SCROLL = \"scroll\";\n  const DOWNLOAD = \"download\";\n  const ANNOTATION_EDITOR_TOOLBAR_SHOW = \"annotationEditorToolBarShow\";\n  const ANNOTATION_EDITOR_TOOLBAR_HIDE = \"annotationEditorToolBarHide\";\n  const DEFAULT_ZOOM_LEVEL = 1.25;\n  const FRAMES_PER_SECOND = 1000 / 60;\n  class PdfViewer extends Component {\n      constructor(element, options) {\n          super(element, options);\n          _PdfViewer_instances.add(this);\n          this.options = {\n              pdfServiceType: PDF_JS,\n              // this is a flag used mainly in tests as CSSStyleSheet.replaceSync\n              // fails with jsdom\n              // a better solution is not to load a stylesheet in setHiddenCanvasStyles\n              // but rather create a class like \"k-hidden-canvas-element\"\n              // and override the rendering from pdf.js\n              pdfjsSetHiddenCanvasStyles: true,\n              fileData: [],\n              page: 1,\n              fileDescriptor: null,\n              downloadFileName: \"Document\",\n              minZoom: 0.5,\n              maxZoom: 4,\n              zoomRate: 0.25,\n              zoomLevel: DEFAULT_ZOOM_LEVEL,\n              zoomBeforePrint: false,\n              zoomLevelForPrint: 3,\n              renderForms: false,\n              searchMatchScrollLeftOffset: 0,\n              // add some default offset, so that the found match\n              // does not appear on the top edge of the page when navigated to\n              searchMatchScrollTopOffset: -64,\n              // what percentage of the page should be scrolled,\n              // so that the page is considered to be changed to the next one\n              pageChangeScrollThreshold: 0.85,\n              // values higher than 200ms can result in browser zoom\n              pageWheelThrottleDelay: 200,\n              // ported from pdf.js\n              printResolution: 100,\n              // the render scale that is used for controlling the render quality\n              renderScale: 3,\n              loadOnDemand: false,\n              loadOnDemandPageSize: 2,\n              messages: {\n                  freeTextEditorPlaceholder: \"Start typing\",\n                  errorMessages: {\n                      parseError: \"PDF file fails to process.\",\n                      notFound: \"File is not found.\",\n                      popupBlocked: \"Popup is blocked.\"\n                  }\n              },\n              annotations: {\n                  highlight: {\n                      color: \"#ffff00\"\n                  }\n              },\n              elementSelectors: {\n                  pageSelector: \"k-page:not(.k-blank-page)\",\n                  anyPageSelector: \"k-page\",\n                  pagesContainerClass: \"k-pdf-viewer-pages\",\n                  pageCanvasWrapper: \"k-canvas-wrapper\",\n                  documentContainerClass: \"k-pdf-viewer-canvas\",\n                  textLayerClass: \"k-text-layer\",\n                  searchHighlightClass: \"k-search-highlight\",\n                  searchHighlightMarkClass: \"k-search-highlight-mark\",\n                  charClass: \"k-text-char\",\n                  textElementSelector: \"span[role='presentation']\",\n                  renderedPageSelector: \"k-page[data-page-number]\",\n                  enabledTextSelectionClass: \"k-enable-text-select\",\n                  enabledPanningClass: \"k-enable-panning\"\n              },\n              events: {\n                  [PAGE_RENDERED]: noop,\n                  [PAGES_LOAD]: noop,\n                  [PRINT_END]: noop,\n                  [ZOOM_START]: noop,\n                  [ZOOM_END]: noop,\n                  [ERROR]: noop,\n                  [SCROLL]: noop,\n                  [ANNOTATION_EDITOR_TOOLBAR_SHOW]: noop,\n                  [ANNOTATION_EDITOR_TOOLBAR_HIDE]: noop\n              }\n          };\n          // todo: props\n          // isPageEditing = null;\n          this.interactionMode = exports.P.TextSelection;\n          this.printContainer = null;\n          // todo: props ported from pdf.js\n          this._scrollMode = ScrollMode.PAGE;\n          this.isInPresentationMode = false;\n          this._currentPageNumber = 1;\n          this.linkService = null;\n          this.annotationStorage = null;\n          this._annotationStorageModified = false;\n          this._hasAnnotationEditors = false;\n          _PdfViewer_annotationEditorMode.set(this, kendo_pdfjs_loader_js.AnnotationEditorType.NONE);\n          this.annotationEditorUIManager = null;\n          _PdfViewer_switchAnnotationEditorModeTimeoutId.set(this, null);\n          // #buffer = null;\n          // #altTextManager = null;\n          // #annotationEditorHighlightColors = null;\n          // #annotationEditorMode = AnnotationEditorType.NONE;\n          // #annotationEditorUIManager = null;\n          _PdfViewer_annotationMode.set(this, AnnotationMode.ENABLE);\n          // #containerTopLeft = null;\n          // #enableHWA = false;\n          // #enableHighlightFloatingButton = false;\n          // #enablePermissions = false;\n          // #enableUpdatedAddImage = false;\n          // #enableNewAltTextWhenAddingImage = false;\n          _PdfViewer_eventAbortController.set(this, null);\n          // #mlManager = null;\n          _PdfViewer_onPageRenderedCallback.set(this, null);\n          // #switchAnnotationEditorModeTimeoutId = null;\n          // #getAllTextInProgress = false;\n          // #hiddenCopyElement = null;\n          // #interruptCopyCondition = false;\n          // #previousContainerHeight = 0;\n          // #resizeObserver = new ResizeObserver(this.#resizeObserverCallback.bind(this));\n          // #scrollModePageState = null;\n          // #scaleTimeoutId = null;\n          // #textLayerMode = TextLayerMode.ENABLE;\n          // todo: props\n          this.state = {};\n          this.pdfDocument = null;\n          this.pages = [];\n          this.triggerError = (e) => {\n              this.trigger(ERROR, {\n                  error: e\n              });\n          };\n          this.triggerPrintEnd = (e) => {\n              this.trigger(PRINT_END, e);\n          };\n          this.onPagesLoad = (args) => {\n              this.state.pdfDocument = args.pdfDoc;\n              this.state.pdfPages = args.pdfPages;\n              this.clearSearch();\n              this.initSearchService();\n              this.enableDocumentScrollEventsTracking();\n              this.triggerPagesLoad(args);\n          };\n          this.onDocumentScrollerScroll = (e) => {\n              const currentPageIndex = this.getCurrentPageIndex();\n              const pages = this.pages;\n              const page = pages[currentPageIndex];\n              const nextPage = pages[currentPageIndex + 1];\n              const previousPage = pages[currentPageIndex - 1];\n              if (page && page.isBlank()) {\n                  this.drawPageAsync({ pageIndex: currentPageIndex });\n              }\n              if (nextPage && nextPage.isBlank()) {\n                  this.drawPageAsync({ pageIndex: currentPageIndex + 1 });\n              }\n              if (previousPage && previousPage.isBlank()) {\n                  this.drawPageAsync({ pageIndex: currentPageIndex - 1 });\n              }\n              this.tryTriggerScroll(e);\n          };\n          // this is mainly used by blazor to track the page number\n          // as this can only be obtained by JS\n          this.tryTriggerScroll = (e) => {\n              let isPageChanged = false;\n              const pageNumber = this.getCurrentPageIndex() + 1;\n              if (pageNumber !== this.state.activePageNumber && (pageNumber >= 1 && pageNumber <= this.state.pdfDocument.numPages)) {\n                  isPageChanged = true;\n                  this.state.activePageNumber = pageNumber;\n              }\n              if (this.shouldPreventScroll) {\n                  this.shouldPreventScroll = false;\n              }\n              else {\n                  this.trigger(SCROLL, {\n                      scrollLeft: e.scrollLeft,\n                      scrollTop: e.scrollTop,\n                      pageNumber: this.state.activePageNumber,\n                      isPageChanged: isPageChanged\n                  });\n              }\n          };\n          this.printDocumentAsync = () => {\n              this.initPrintContainer();\n              const pagePrintPromises = this.getPagesPrintContentAsync(this.printContainer);\n              const printPromise = createPromise();\n              Promise.all(pagePrintPromises)\n                  .then(() => {\n                  // print the document during next render task\n                  setTimeout(() => {\n                      this.openPrintDialog();\n                      // @ts-expect-error TS()\n                      printPromise.resolve();\n                  }, FRAMES_PER_SECOND);\n              });\n              return printPromise;\n          };\n          this.onDocumentWheel = (e) => {\n              if (!e.ctrlKey && !e.metaKey) {\n                  return;\n              }\n              e.preventDefault();\n              e.stopPropagation();\n              const wheelDelta = mousewheelDelta(e);\n              const zoomModifier = wheelDelta < 0 ? 1 : -1;\n              const zoomLevel = this.state.zoomLevel + (zoomModifier * this.options.zoomRate);\n              this.triggerZoomStart({\n                  zoomLevel: zoomLevel\n              });\n              this.zoom({\n                  zoomLevel: zoomLevel\n              });\n              this.triggerZoomEnd({\n                  zoomLevel: zoomLevel\n              });\n          };\n          this.extendOptions(options);\n          this.throwIfInvalidOptions();\n          this.wrapper = this.element;\n          this.initEventBus();\n          __classPrivateFieldSet(this, _PdfViewer_eventAbortController, new AbortController(), \"f\");\n          if (this.options.renderForms)\n              __classPrivateFieldSet(this, _PdfViewer_annotationMode, AnnotationMode.ENABLE_FORMS, \"f\");\n          this.resetState();\n          this.bindEvents();\n          this.initLinkService();\n          this.initDocumentContainer();\n          this.loadFile(this.options.fileDescriptor || {\n              data: this.options.fileData,\n              page: this.options.page\n          });\n      }\n      destroy() {\n          this.destroyEventBus();\n          this.unbindEvents();\n          this.clearDocument();\n          this.destroySearchService();\n          this.destroyAnnotationEditorUIManager();\n          this.destroyDocumentScroller();\n      }\n      throwIfInvalidOptions() {\n          if (this.options.minZoom > this.options.maxZoom) {\n              throw new Error(\"The min zoom should be greater than max zoom\");\n          }\n      }\n      set annotationEditorParams({ type, value }) {\n          if (!this.annotationEditorUIManager) {\n              return;\n          }\n          this.annotationEditorUIManager.updateParams(type, value);\n      }\n      get annotationEditorMode() {\n          return this.annotationEditorUIManager\n              ? __classPrivateFieldGet(this, _PdfViewer_annotationEditorMode, \"f\")\n              : kendo_pdfjs_loader_js.AnnotationEditorType.DISABLE;\n      }\n      set annotationEditorMode({ mode, editId = null, isFromKeyboard = false }) {\n          // todo: set isFromKeyboard intentionally to allow editor creation\n          // set annotationEditorMode({ mode, editId = null, isFromKeyboard = true }) {\n          if (!this.annotationEditorUIManager) {\n              // throw new Error(`The AnnotationEditor is not enabled.`);\n          }\n          if (__classPrivateFieldGet(this, _PdfViewer_annotationEditorMode, \"f\") === mode) {\n              return; // The AnnotationEditor mode didn't change.\n          }\n          if (!this.isValidAnnotationEditorMode(mode)) {\n              // throw new Error(`Invalid AnnotationEditor mode: ${mode}`);\n              return;\n          }\n          if (!this.pdfDocument) {\n              return;\n          }\n          if (mode === kendo_pdfjs_loader_js.AnnotationEditorType.STAMP) {\n              // this.#mlManager?.loadModel(\"altText\");\n          }\n          const { eventBus } = this;\n          const updater = () => {\n              this.cleanupSwitchAnnotationEditorMode();\n              __classPrivateFieldSet(this, _PdfViewer_annotationEditorMode, mode, \"f\");\n              this.annotationEditorUIManager.updateMode(mode, editId, isFromKeyboard);\n              eventBus.dispatch(\"annotationeditormodechanged\", {\n                  source: this,\n                  mode\n              });\n          };\n          // // todo: fix\n          // const isEditingPage = (this.pages || []).some(x => x.isEditing);\n          if (mode === kendo_pdfjs_loader_js.AnnotationEditorType.NONE || __classPrivateFieldGet(this, _PdfViewer_annotationEditorMode, \"f\") === kendo_pdfjs_loader_js.AnnotationEditorType.NONE) {\n              const isEditing = mode !== kendo_pdfjs_loader_js.AnnotationEditorType.NONE;\n              if (!isEditing) {\n                  this.pdfDocument.annotationStorage.resetModifiedIds();\n              }\n              for (const pageView of this.pages) {\n                  pageView.toggleEditingMode(isEditing);\n              }\n              // We must call #switchToEditAnnotationMode unconditionally to ensure that\n              // page is rendered if it's useful or not.\n              const idsToRefresh = __classPrivateFieldGet(this, _PdfViewer_instances, \"m\", _PdfViewer_switchToEditAnnotationMode).call(this);\n              if (isEditing && idsToRefresh) {\n                  // We're editing so we must switch to editing mode when the rendering is\n                  // done.\n                  this.cleanupSwitchAnnotationEditorMode();\n                  __classPrivateFieldSet(this, _PdfViewer_onPageRenderedCallback, ({ pageNumber }) => {\n                      idsToRefresh.delete(pageNumber);\n                      if (idsToRefresh.size === 0) {\n                          __classPrivateFieldSet(this, _PdfViewer_switchAnnotationEditorModeTimeoutId, setTimeout(updater, 0), \"f\");\n                      }\n                  }, \"f\");\n                  const { signal } = __classPrivateFieldGet(this, _PdfViewer_eventAbortController, \"f\");\n                  eventBus._on(\"pagerendered\", __classPrivateFieldGet(this, _PdfViewer_onPageRenderedCallback, \"f\"), { signal });\n              }\n          }\n          updater();\n      }\n      getAnnotationMode() {\n          return __classPrivateFieldGet(this, _PdfViewer_annotationMode, \"f\");\n      }\n      getPrintUnits() {\n          return this.options.printResolution / kendo_pdfjs_loader_js.PixelsPerInch.PDF;\n      }\n      extendOptions(options) {\n          this.options = deepExtend(this.options, options);\n      }\n      setOptions(options) {\n          this.options = options;\n      }\n      bindEvents() {\n          this.bindPagesWheel();\n      }\n      bindPagesWheel() {\n          const documentContainer = this.getDocumentContainer();\n          if (!documentContainer) {\n              return;\n          }\n          if (this.options.pageWheelThrottleDelay > 0) {\n              // @ts-expect-error TS(2339): Property 'throttledPagesWheel' does not exist on t... Remove this comment to see the full error message\n              this.throttledPagesWheel = throttle(this.onDocumentWheel, this.options.pageWheelThrottleDelay);\n          }\n          else {\n              // @ts-expect-error TS(2339): Property 'throttledPagesWheel' does not exist on t... Remove this comment to see the full error message\n              this.throttledPagesWheel = this.onDocumentWheel;\n          }\n          // @ts-expect-error TS(2339): Property 'throttledPagesWheel' does not exist on t... Remove this comment to see the full error message\n          documentContainer.addEventListener(\"wheel\", this.throttledPagesWheel);\n      }\n      unbindEvents() {\n          this.unbindPagesWheel();\n      }\n      unbindPagesWheel() {\n          const documentContainer = this.getDocumentContainer();\n          if (!documentContainer) {\n              return;\n          }\n          // @ts-expect-error TS(2339): Property 'throttledPagesWheel' does not exist on t... Remove this comment to see the full error message\n          if (this.throttledPagesWheel && this.throttledPagesWheel.cancel) {\n              // @ts-expect-error TS(2339): Property 'throttledPagesWheel' does not exist on t... Remove this comment to see the full error message\n              this.throttledPagesWheel.cancel();\n          }\n          // @ts-expect-error TS(2339): Property 'throttledPagesWheel' does not exist on t... Remove this comment to see the full error message\n          documentContainer.removeEventListener(\"wheel\", this.throttledPagesWheel);\n      }\n      setState(newState) {\n          this.state = deepExtend(this.state || {}, newState);\n      }\n      resetState() {\n          this.setState({\n              activePageNumber: 1,\n              visiblePagesCount: 1,\n              pagePromises: [],\n              downloadFilePromise: null,\n              pdfDocument: null,\n              zoomLevel: this.options.zoomLevel,\n              zoomLevelType: this.options.zoomLevelType,\n              zoomLevelBeforePrint: null\n          });\n      }\n      initEventBus() {\n          this.eventBus = new EventBus();\n      }\n      destroyEventBus() { }\n      initLinkService() {\n          var _a;\n          this.linkService = new PDFLinkService({\n              eventBus: this.eventBus,\n              externalLinkTarget: LinkTarget.BLANK,\n              externalLinkRel: \"noopener noreferrer nofollow\",\n              ignoreDestinationZoom: false\n          });\n          (_a = this.linkService) === null || _a === void 0 ? void 0 : _a.setViewer(this);\n      }\n      initAnnotationEditorUIManager() {\n          this.annotationEditorUIManager = new AnnotationEditorUIManager({\n              container: this.getDocumentContainer(),\n              // todo: pdf.js expects a dom element and not a component\n              viewer: this.element,\n              pdfViewer: this,\n              pdfDocument: this.state.pdfDocument,\n              eventBus: this.eventBus\n          });\n          this.setAnnotationEditorUIManagerScale();\n      }\n      setAnnotationEditorUIManagerScale() {\n          var _a;\n          // this is required when loading a new document\n          // so that annotation editors have correct positions during dragging\n          (_a = this.annotationEditorUIManager) === null || _a === void 0 ? void 0 : _a.onScaleChanging({\n              scale: this.options.zoomLevel\n          });\n      }\n      destroyAnnotationEditorUIManager() {\n          var _a;\n          (_a = this.annotationEditorUIManager) === null || _a === void 0 ? void 0 : _a.destroy();\n          this.annotationEditorUIManager = null;\n      }\n      bindEventBusAnnotationsEvents() {\n          const eventBus = this.eventBus = this.eventBus || new EventBus();\n          eventBus._on(\"switchannotationeditorparams\", (evt) => {\n              this.annotationEditorParams = evt;\n          }\n          // { signal }\n          );\n          eventBus._on(\"switchannotationeditormode\", evt => {\n              // todo: inline the call to this.annotationEditorMode = evt;\n              // this.annotationEditorMode = evt;\n              this.annotationEditorUIManager.updateParams(evt.type, evt.value);\n              const { mode, editId, isFromKeyboard } = evt;\n              this.annotationEditorUIManager.annotationEditorMode = evt;\n              this.annotationEditorUIManager.updateMode(mode, editId, isFromKeyboard);\n              eventBus.dispatch(\"annotationeditormodechanged\", {\n                  source: this,\n                  mode\n              });\n          }\n          // { signal }\n          );\n          eventBus._on(\"kendoAnnotationEditorToolBarShow\", (evt) => {\n              var _a;\n              if (!evt) {\n                  return;\n              }\n              const annotationEditorMode = this.annotationEditorUIManager.getMode();\n              if (annotationEditorMode === kendo_pdfjs_loader_js.AnnotationEditorType.HIGHLIGHT ||\n                  annotationEditorMode === kendo_pdfjs_loader_js.AnnotationEditorType.FREETEXT) {\n                  if (annotationEditorMode === kendo_pdfjs_loader_js.AnnotationEditorType.HIGHLIGHT) {\n                      this.addHighlightAnnotation();\n                  }\n                  this.triggerAnnotationEditorToolBarShow(Object.assign(Object.assign({}, evt), { annotationEditorMode: annotationEditorMode === kendo_pdfjs_loader_js.AnnotationEditorType.HIGHLIGHT ? \"highlight\" : \"freeText\", anchor: evt.anchor || ((_a = this.annotationEditorUIManager.firstSelectedEditor) === null || _a === void 0 ? void 0 : _a.div) }));\n              }\n          }\n          // { signal }\n          );\n          eventBus._on(\"kendoAnnotationEditorToolBarHide\", (evt) => {\n              if (!evt) {\n                  return;\n              }\n              const annotationEditorMode = this.annotationEditorUIManager.getMode();\n              if (annotationEditorMode === kendo_pdfjs_loader_js.AnnotationEditorType.HIGHLIGHT ||\n                  annotationEditorMode === kendo_pdfjs_loader_js.AnnotationEditorType.FREETEXT) {\n                  this.triggerAnnotationEditorToolBarHide(Object.assign(Object.assign({}, evt), { annotationEditorMode: annotationEditorMode === kendo_pdfjs_loader_js.AnnotationEditorType.HIGHLIGHT ? \"highlight\" : \"freeText\" }));\n              }\n          }\n          // { signal }\n          );\n          eventBus._on(\"showannotationeditorui\", (evt) => {\n              switch (evt.mode) {\n                  case kendo_pdfjs_loader_js.AnnotationEditorType.HIGHLIGHT:\n                      // editorHighlightButton.click();\n                      eventBus.dispatch(\"switchannotationeditormode\", {\n                          source: this,\n                          mode: kendo_pdfjs_loader_js.AnnotationEditorType.HIGHLIGHT,\n                          // {},...eventDetails,\n                          // evt.detail is the number of clicks.\n                          // isFromKeyboard: evt.detail === 0,\n                          isFromKeyboard: false\n                      });\n                      break;\n                  default: break;\n              }\n          }\n          // { signal }\n          );\n      }\n      unbindEventBusAnnotationsEvents() {\n          // this.eventBus.off();\n      }\n      loadFile(args) {\n          const fileData = args.data;\n          const loadFileOptions = {\n              data: null,\n              url: \"\",\n              arrayBuffer: null,\n              typedArray: null\n          };\n          if (fileData && (fileData.buffer instanceof ArrayBuffer || fileData instanceof ArrayBuffer)) {\n              loadFileOptions.arrayBuffer = fileData.buffer || fileData;\n          }\n          else if (isString(fileData) && fileData !== \"\") {\n              loadFileOptions.data = fileData;\n              loadFileOptions.url = null;\n          }\n          else if (isString(args.url) && args.url !== \"\") {\n              loadFileOptions.data = null;\n              loadFileOptions.url = args.url;\n          }\n          else if (args.typedArray) {\n              loadFileOptions.typedArray = args.typedArray;\n          }\n          if (args.data || args.url || args.arrayBuffer || args.typedArray) {\n              const readOptions = Object.assign({ dom: this.getPagesContainer(), zoom: this.options.zoomLevel }, loadFileOptions);\n              this.disableDocumentScrollEventsTracking();\n              this.clearDocument();\n              this.initEventBus();\n              __classPrivateFieldSet(this, _PdfViewer_eventAbortController, new AbortController(), \"f\");\n              this.bindEvents();\n              this.initLinkService();\n              this.initDocumentContainer();\n              this.loadDocument(readOptions);\n              this.setScaleFactor(this.options.zoomLevel);\n          }\n      }\n      loadDocument(options) {\n          const params = this.getDocumentParameters(options);\n          const { zoom } = options;\n          this.clearDocumentState();\n          kendo_pdfjs_loader_js.getDocument(params)\n              .promise.then((pdfDoc) => {\n              var _a;\n              (_a = this.linkService) === null || _a === void 0 ? void 0 : _a.setDocument(pdfDoc);\n              this.initDocumentAnnotationStorage(pdfDoc);\n              this.initAnnotationEditorUIManager();\n              this.bindEventBusAnnotationsEvents();\n              const pagesPromises = [];\n              for (let i = 1; i <= pdfDoc.numPages; i++) {\n                  pagesPromises.push(pdfDoc.getPage(i));\n              }\n              return { pagesPromises: pagesPromises, pdfDoc };\n          })\n              .then(({ pagesPromises: pagesPromises, pdfDoc }) => {\n              this.state.pagesPromises = pagesPromises;\n              this.destroyPageComponents();\n              return this.drawPagesFromPromisesAsync(pagesPromises)\n                  .then((pdfPages) => {\n                  this.setHiddenCanvasStyles();\n                  this.onPagesLoad({ pdfPages, pdfDoc, zoom });\n              })\n                  .catch((e) => {\n                  this.triggerError(e);\n              });\n          })\n              .catch((e) => {\n              this.triggerError(e);\n          })\n              .finally(() => {\n              var _a;\n              (_a = this.linkService) === null || _a === void 0 ? void 0 : _a.setDocument(this.pdfDocument);\n          });\n      }\n      initDocumentAnnotationStorage(pdfDocument) {\n          this.state.pdfDocument = pdfDocument;\n          this.pdfDocument = pdfDocument;\n          this.annotationStorage = new AnnotationStorage();\n          // todo: intentionally override the default value\n          // as it relies on checks like \"instanceof <something>\"\n          // but the classes from pdf.js are not exported\n          // and thus they are migrated, see https://github.com/mozilla/pdf.js/issues/18656\n          // Object.defineProperty(Object.getPrototypeOf(this.pdfDocument), 'annotationStorage', {\n          //     get: () => {\n          //         if (this.state.isPrintingInProgress) {\n          //             return this.annotationStorage?.print;\n          //         } else {\n          //             return this.annotationStorage;\n          //         }\n          //     },\n          //     set: (value) => {\n          //         this.annotationStorage = value;\n          //     },\n          //     // this is required\n          //     configurable: true\n          // });\n          Object.defineProperty(Object.getPrototypeOf(this.pdfDocument._transport), 'annotationStorage', {\n              get: () => {\n                  var _a;\n                  if (this.state.isPrintingInProgress) {\n                      return (_a = this.annotationStorage) === null || _a === void 0 ? void 0 : _a.print;\n                  }\n                  else {\n                      return this.annotationStorage;\n                  }\n              },\n              set: (value) => {\n                  this.annotationStorage = value;\n              },\n              // this is required\n              configurable: true\n          });\n          this._initializeAnnotationStorageCallbacks(pdfDocument);\n      }\n      _initializeAnnotationStorageCallbacks(pdfDocument) {\n          if (pdfDocument !== this.pdfDocument) {\n              return;\n          }\n          const { annotationStorage } = pdfDocument;\n          annotationStorage.onSetModified = () => {\n              // window.addEventListener(\"beforeunload\", beforeUnload);\n              // if (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) {\n              this._annotationStorageModified = true;\n              // }\n          };\n          annotationStorage.onResetModified = () => {\n              // window.removeEventListener(\"beforeunload\", beforeUnload);\n              // if (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) {\n              delete this._annotationStorageModified;\n              // }\n          };\n          annotationStorage.onAnnotationEditor = typeStr => {\n              this._hasAnnotationEditors = !!typeStr;\n              // this.setTitle();\n          };\n      }\n      drawPagesFromPromisesAsync(pagesPromises) {\n          return Promise.all(pagesPromises)\n              .then((pdfPages) => __awaiter(this, void 0, void 0, function* () {\n              const pages = yield Promise.all(this.drawPagesAsync(pdfPages));\n              this.appendPages(pages);\n              return pdfPages;\n          }));\n      }\n      drawPagesAsync(pdfPages) {\n          pdfPages = pdfPages || this.state.pdfPages;\n          const hasPages = (this.pages || []).length > 0;\n          if (!hasPages) {\n              this.initPageComponents(pdfPages);\n          }\n          else {\n              for (let i = 0; i < this.pages.length; i++) {\n                  const pageViewport = this.pages[i].getViewport({\n                      scale: this.state.zoomLevel\n                  });\n                  // todo: adjust page viewport manually\n                  // otherwise, loading a document with links to the document\n                  // will not scroll to the specific page on click\n                  // pdf.js handles this in a more complex way\n                  // that will require porting more code\n                  this.pages[i].viewport = pageViewport;\n              }\n          }\n          const pageRenderPromises = [];\n          pdfPages.map((pdfPage, pageIndex) => __awaiter(this, void 0, void 0, function* () {\n              const page = this.pages[pageIndex];\n              if (this.options.loadOnDemand &&\n                  pageIndex >= this.options.loadOnDemandPageSize &&\n                  !page.element) {\n                  const blankPageElements = this.createBlankPageElements({ pdfPage, zoom: this.state.zoomLevel });\n                  if (page && !page.element) {\n                      page.element = blankPageElements.pageElement;\n                      page.setBlank(true);\n                  }\n                  const pageRenderPromise = createPromise();\n                  pageRenderPromises.push(pageRenderPromise);\n                  pageRenderPromise.then((renderedPage) => {\n                      return renderedPage;\n                  });\n                  pageRenderPromise.resolve(page.element);\n              }\n              else if (this.options.loadOnDemand && page.isBlank()) {\n                  // keep blank pages on reload\n                  const pageRenderPromise = createPromise();\n                  pageRenderPromises.push(pageRenderPromise);\n                  pageRenderPromise.then((renderedPage) => {\n                      return renderedPage;\n                  });\n                  pageRenderPromise.resolve(page.element);\n              }\n              else {\n                  const pageRenderPromise = this.drawPageAsync({ pageIndex });\n                  pageRenderPromises.push(pageRenderPromise);\n                  pageRenderPromise.then((renderedPage) => {\n                      return renderedPage;\n                  });\n              }\n          }));\n          return pageRenderPromises;\n      }\n      createBlankPageElements({ pdfPage, zoom }) {\n          const pageElements = this.createPageElements({ pdfPage, zoom });\n          pageElements.canvasWrapper.appendChild(pageElements.canvas);\n          pageElements.pageElement.appendChild(pageElements.canvasWrapper);\n          return pageElements;\n      }\n      getDocumentParameters(options) {\n          let params = {\n              verbosity: 0,\n              isEvalSupported: true\n          };\n          if (typeof options.data === 'string' && options.data !== \"\") {\n              params.data = parsePdfFromBase64String(options.data);\n          }\n          else if (typeof options.url === 'string' && options.url !== \"\") {\n              params.url = options.url;\n          }\n          else if (options.arrayBuffer instanceof ArrayBuffer) {\n              params = options.arrayBuffer;\n          }\n          else if (options.typedArray) {\n              params = options.typedArray;\n          }\n          return params;\n      }\n      appendPages(pages) {\n          pages.forEach(page => this.appendPage(page));\n      }\n      appendPage(page, pageIndex = null) {\n          const pagesContainer = this.getPagesContainer();\n          if (hasValue(pageIndex)) {\n              pagesContainer === null || pagesContainer === void 0 ? void 0 : pagesContainer.insertBefore(page, pagesContainer.children[pageIndex]);\n          }\n          else {\n              pagesContainer === null || pagesContainer === void 0 ? void 0 : pagesContainer.appendChild(page);\n          }\n      }\n      drawPageAsync({ pageIndex = 0 }) {\n          var _a;\n          const index = clamp(pageIndex, 0, Math.max(0, this.state.pdfDocument.numPages - 1));\n          return (_a = this.pages[index]) === null || _a === void 0 ? void 0 : _a.draw().then(() => {\n              this.triggerPageRendered({ page: this.pages[index] });\n              return this.pages[index].element;\n          });\n      }\n      createPageElements({ pdfPage = null, zoom = 1, printUnits = null }) {\n          if (zoom <= 0) {\n              return;\n          }\n          let scaleNum = scale(this.options.renderScale);\n          if (printUnits) {\n              scaleNum = zoom || scaleNum;\n          }\n          // changing the viewport dimensions here requires changes in\n          // page.getPrintContentAsync for the printing dimensions\n          const viewport = pdfPage === null || pdfPage === void 0 ? void 0 : pdfPage.getViewport({ scale: scaleNum });\n          const { adjustedWidth, adjustedHeight, adjustRatio } = adjustCanvasSize(viewport.width, viewport.height);\n          const styles = {\n              // \"round\" is supported in all browsers since May 2024\n              // https://developer.mozilla.org/en-US/docs/Web/CSS/round#browser_compatibility\n              // width: `round(var(--scale-factor) * ${pageWidth}px, 1px)`,\n              // height: `round(var(--scale-factor) * ${pageHeight}px, 1px)`\n              width: `round(var(--scale-factor) * ${viewport.width / scaleNum}px, 1px)`,\n              height: `round(var(--scale-factor) * ${viewport.height / scaleNum}px, 1px)`\n          };\n          const pageElement = createElement(\"div\", \"k-page\", styles);\n          const canvas = createElement(\"canvas\", '', {\n              width: \"100%\",\n              height: \"100%\"\n          });\n          canvas.height = adjustedHeight;\n          canvas.width = adjustedWidth;\n          if (printUnits) {\n              canvas.width = Math.floor(canvas.width * (printUnits || 1));\n              canvas.height = Math.floor(canvas.height * (printUnits || 1));\n          }\n          const canvasContext = canvas.getContext(\"2d\");\n          const canvasWrapper = convertToHtml(`\n            <div class=\"${this.options.elementSelectors.pageCanvasWrapper}\"></div>\n        `);\n          const adjustedScale = adjustRatio * scaleNum;\n          viewport.width = adjustedWidth;\n          viewport.height = adjustedHeight;\n          viewport.scale = adjustedScale;\n          return {\n              canvasContext,\n              canvasWrapper,\n              canvas,\n              viewport,\n              scaleNum,\n              pageElement,\n              styles\n          };\n      }\n      triggerPageRendered(e) {\n          this.trigger(PAGE_RENDERED, e);\n      }\n      triggerPagesLoad(e) {\n          this.trigger(PAGES_LOAD, e);\n      }\n      triggerZoomStart(e) {\n          this.trigger(ZOOM_START, e);\n      }\n      triggerZoomEnd(e) {\n          this.trigger(ZOOM_END, e);\n      }\n      triggerDownload(e) {\n          return this.trigger(DOWNLOAD, e);\n      }\n      triggerAnnotationEditorToolBarShow(e) {\n          this.trigger(ANNOTATION_EDITOR_TOOLBAR_SHOW, e);\n      }\n      triggerAnnotationEditorToolBarHide(e) {\n          this.trigger(ANNOTATION_EDITOR_TOOLBAR_HIDE, e);\n      }\n      clearDocument() {\n          this.destroyEventBus();\n          this.unbindEvents();\n          this.destroySearchService();\n          this.destroyAnnotationEditorUIManager();\n          this.clearDocumentState();\n      }\n      clearDocumentState() {\n          var _a;\n          this.clearPagesState();\n          this.state.pdfDocument = null;\n          this.state.pdfPages = [];\n          (_a = this.linkService) === null || _a === void 0 ? void 0 : _a.setDocument(null);\n      }\n      clearPagesState() {\n          this.pages.forEach(x => x.destroy());\n          this.clearPagesElements();\n          this.pages = [];\n      }\n      initPageComponents(pdfPages) {\n          // const scale = this.currentScale;\n          // const currentScale = scale();\n          const currentScale = this.options.zoomLevel;\n          const viewport = pdfPages[0].getViewport({\n              scale: currentScale * kendo_pdfjs_loader_js.PixelsPerInch.PDF_TO_CSS_UNITS\n          });\n          for (let pageNum = 1; pageNum <= pdfPages.length; pageNum++) {\n              const pageIndex = pageNum - 1;\n              const pageView = new Page(null, {\n                  pdfViewer: this,\n                  container: this.element,\n                  eventBus: this.eventBus,\n                  id: pageNum,\n                  scale: currentScale,\n                  viewport: viewport,\n                  defaultViewport: viewport,\n                  // optionalContentConfigPromise,\n                  // renderingQueue: this.renderingQueue,\n                  textLayerMode: TextLayerMode.ENABLE,\n                  annotationMode: this.getAnnotationMode(),\n                  // imageResourcesPath: this.imageResourcesPath,\n                  // maxCanvasPixels: this.maxCanvasPixels,\n                  // pageColors,\n                  // l10n: this.l10n,\n                  layerProperties: this._layerProperties\n                  // enableHWA: this.#enableHWA,\n              });\n              this.pages.push(pageView);\n              this.pages[pageIndex].setPdfPage(pdfPages[pageIndex]);\n          }\n      }\n      destroyPageComponents() {\n          this.pages.forEach(x => x.destroy());\n          this.pages = [];\n      }\n      clearPagesElements() {\n          const documentContainer = this.getDocumentContainer();\n          const pagesContainer = this.getPagesContainer();\n          if (!documentContainer || !pagesContainer || !this.hasDocument()) {\n              return;\n          }\n          const pages = this.getPagesElements();\n          pages.forEach(page => {\n              // @ts-expect-error TS(2345): Argument of type 'unknown' is not assignable to pa... Remove this comment to see the full error message\n              pagesContainer.removeChild(page);\n          });\n      }\n      initDocumentContainer() {\n          if (this.documentContainer) {\n              return;\n          }\n          this.documentContainer = this.getDocumentContainer();\n          this.initDocumentScroller(this.documentContainer);\n      }\n      initDocumentScroller(element) {\n          if (this.documentScroller || !element) {\n              return;\n          }\n          this.documentScroller = this.createDocumentScroller(element, {\n              filter: toClassSelector$1(this.options.elementSelectors.pageSelector),\n              events: {\n                  [SCROLL]: this.onDocumentScrollerScroll\n              }\n          });\n      }\n      createDocumentScroller(element, options) {\n          return new Scroller(element, options);\n      }\n      destroyDocumentScroller() {\n          if (!this.documentScroller) {\n              return;\n          }\n          this.documentScroller.destroy();\n          this.documentScroller = null;\n      }\n      enableDocumentScrollEventsTracking() {\n          var _a;\n          (_a = this.documentScroller) === null || _a === void 0 ? void 0 : _a.enableScrollEventsTracking();\n      }\n      disableDocumentScrollEventsTracking() {\n          var _a;\n          (_a = this.documentScroller) === null || _a === void 0 ? void 0 : _a.disableScrollEventsTracking();\n      }\n      getCurrentPageIndex() {\n          return currentPage(this.element) || 0;\n      }\n      downloadFile({ fileName, saveOptions = {} }) {\n          this.downloadDocument({\n              options: {\n                  pdf: this.state.pdfDocument\n              },\n              fileName: fileName || this.options.downloadFileName,\n              saveOptions: saveOptions\n          });\n      }\n      downloadDocument({ options, fileName = \"Document\", saveOptions = {} }) {\n          if (options.pdf) {\n              let exportMethod = options.pdf.getData.bind(options.pdf);\n              let serializedAnnotationStorage = {};\n              let originalAnnotationStorage = {};\n              if (options.pdf.annotationStorage.size > 0) {\n                  exportMethod = options.pdf.saveDocument.bind(options.pdf);\n                  // saveDocument() has checks that test \"editor instanceof AnnotationEditor\", but they fail\n                  // because AnnotationEditor from \"pdfjs-dist/legacy/build/pdf.mjs\" is not exported\n                  // thus replace instances of editors with their serialized version\n                  // and then revert\n                  serializedAnnotationStorage = {};\n                  originalAnnotationStorage = options.pdf.annotationStorage.getAll();\n                  // With the form filling functionality enabled, values could be coming as pure JSON objects,\n                  // thus the additional assertion.\n                  Object.keys(originalAnnotationStorage).forEach((key) => {\n                      var _a;\n                      if (typeof ((_a = originalAnnotationStorage[key]) === null || _a === void 0 ? void 0 : _a.toJSON) === \"function\") {\n                          serializedAnnotationStorage[key] = originalAnnotationStorage[key].toJSON();\n                      }\n                      else {\n                          serializedAnnotationStorage[key] = originalAnnotationStorage[key];\n                      }\n                  });\n                  Object.keys(originalAnnotationStorage).forEach((key) => {\n                      options.pdf.annotationStorage.remove(key);\n                  });\n                  Object.keys(serializedAnnotationStorage).forEach((key) => {\n                      options.pdf.annotationStorage.setValue(key, serializedAnnotationStorage[key]);\n                  });\n              }\n              exportMethod()\n                  .then((data) => {\n                  return new Blob([data], { type: 'application/pdf' });\n              })\n                  .then((blob) => {\n                  if (!this.triggerDownload({ blob, fileName, saveOptions })) {\n                      this.saveFile(blob, fileName, saveOptions);\n                  }\n              })\n                  .catch((e) => {\n                  this.triggerError(e);\n              })\n                  .finally(() => {\n                  var _a;\n                  if (((_a = options.pdf) === null || _a === void 0 ? void 0 : _a.annotationStorage.size) <= 0) {\n                      return;\n                  }\n                  const currentAnnotationStorage = options.pdf.annotationStorage.getAll();\n                  Object.keys(currentAnnotationStorage).forEach((key) => {\n                      options.pdf.annotationStorage.remove(key);\n                  });\n                  Object.keys(originalAnnotationStorage).forEach((key) => {\n                      options.pdf.annotationStorage.setValue(key, originalAnnotationStorage[key]);\n                  });\n              });\n          }\n      }\n      saveFile(blob, fileName, saveOptions) {\n          try {\n              kendo_fileSaver_cmn_chunk_js.s(blob, fileName, saveOptions);\n          }\n          catch (_a) {\n              return false;\n          }\n          return true;\n      }\n      hasDocument() {\n          return hasValue(this.state.pdfDocument);\n      }\n      zoom(args) {\n          args.zoomLevel = this.calculateZoomLevel({\n              zoomLevel: args.zoomLevel,\n              zoomLevelType: args.zoomLevelType,\n              currentZoom: this.options.zoomLevel\n          });\n          this.options.zoomLevel = args.zoomLevel;\n          this.state.zoomLevel = args.zoomLevel;\n          this.eventBus.dispatch(\"scalechanging\", {\n              source: this,\n              scale: this.options.zoomLevel\n          });\n          this.reloadFile(this.state.pdfDocument);\n      }\n      calculateZoomLevel({ zoomLevel, zoomLevelType, currentZoom }) {\n          const documentContainer = this.getDocumentContainer();\n          const page = documentContainer.querySelector(toClassSelector$1(this.options.elementSelectors.anyPageSelector));\n          let calculatedZoomLevel = clamp(zoomLevel || DEFAULT_ZOOM_LEVEL, this.options.minZoom, this.options.maxZoom);\n          if (!hasValue(page)) {\n              return calculatedZoomLevel;\n          }\n          const pageSize = { width: page.offsetWidth, height: page.offsetHeight };\n          if (zoomLevelType === \"ActualWidth\" || zoomLevelType === \"actualWidth\") {\n              calculatedZoomLevel = 1;\n          }\n          else if (zoomLevelType === \"FitToWidth\" || zoomLevelType === \"fitToWidth\") {\n              calculatedZoomLevel = documentContainer.offsetWidth / (pageSize.width / currentZoom);\n          }\n          else if (zoomLevelType === \"FitToPage\" || zoomLevelType === \"fitToPage\") {\n              calculatedZoomLevel = documentContainer.offsetHeight / (pageSize.height / currentZoom);\n          }\n          return calculatedZoomLevel;\n      }\n      reloadFile(pdfDoc) {\n          const pagesPromises = [];\n          for (let i = 1; i <= pdfDoc.numPages; i++) {\n              pagesPromises.push(pdfDoc.getPage(i));\n          }\n          this.disableDocumentScrollEventsTracking();\n          this.drawPagesFromPromisesAsync(pagesPromises)\n              .then((pdfPages) => {\n              this.setHiddenCanvasStyles();\n              this.onPagesLoad({ pdfPages, pdfDoc });\n          })\n              .catch((e) => {\n              this.triggerError(e);\n          });\n          this.setScaleFactor(this.state.zoomLevel);\n      }\n      setHiddenCanvasStyles() {\n          if (!this.options.pdfjsSetHiddenCanvasStyles) {\n              return;\n          }\n          // required after pdf.js 4.x version\n          const sheet = new CSSStyleSheet();\n          sheet.replaceSync(`.hiddenCanvasElement {\n            position: absolute;\n            top: 0;\n            left: 0;\n            width: 0;\n            height: 0;\n            display: none;\n        }`);\n          this.getPagesContainer().ownerDocument.adoptedStyleSheets = [sheet];\n      }\n      printFile() {\n          if (!this.hasDocument()) {\n              return;\n          }\n          this.setState({\n              isPrintingInProgress: true\n          });\n          if (this.options.zoomBeforePrint) {\n              // such option existed in the Kendo jQuery version internally\n              this.cacheZoomLevelBeforePrint();\n              this.loadDocumentForPrintAsync({\n                  zoomLevel: this.options.zoomLevelBeforePrint,\n                  force: true\n              })\n                  .then(() => {\n                  this.printDocumentAsync()\n                      .then(() => {\n                      this.trigger(PRINT_END);\n                  });\n              })\n                  .catch(this.triggerError)\n                  .finally(() => {\n                  this.setState({\n                      isPrintingInProgress: false\n                  });\n                  this.restoreZoomLevelBeforePrint();\n              });\n          }\n          else {\n              this.loadDocumentForPrintAsync({\n                  zoomLevel: this.state.zoomLevel,\n                  force: true\n              })\n                  .then(() => {\n                  this.printDocumentAsync()\n                      .then(() => {\n                      this.trigger(PRINT_END);\n                  });\n              })\n                  .catch(this.triggerError)\n                  .finally(() => {\n                  this.setState({\n                      isPrintingInProgress: false\n                  });\n              });\n          }\n      }\n      loadDocumentForPrintAsync({ zoomLevel = DEFAULT_ZOOM_LEVEL, force = false }) {\n          const pages = this.pages;\n          const pageLoadPromises = [];\n          const loadPromise = createPromise();\n          for (let i = 0; i < pages.length; i++) {\n              const pageLoadPromise = pages[i].loadForPrintAsync({\n                  zoomLevel: zoomLevel,\n                  force: force\n              });\n              pageLoadPromises.push(pageLoadPromise);\n          }\n          Promise.all(pageLoadPromises)\n              .then(() => {\n              // @ts-expect-error TS()\n              loadPromise.resolve();\n          });\n          return loadPromise;\n      }\n      getPagesPrintContentAsync(printContainer) {\n          const pages = this.pages;\n          const pagePrintPromises = [];\n          for (let i = 0; i < pages.length; i++) {\n              const pagePrintPromise = pages[i].getPrintContentAsync();\n              pagePrintPromise.then((pagePrintContent) => {\n                  const pageWrapper = convertToHtml(`<div></div>`);\n                  pageWrapper.appendChild(pagePrintContent);\n                  printContainer.appendChild(pageWrapper);\n              });\n              pagePrintPromises.push(pagePrintPromise);\n          }\n          return pagePrintPromises;\n      }\n      initPrintContainer() {\n          this.printContainer = convertToHtml(`<div></div>`);\n      }\n      openPrintDialog() {\n          const pages = this.pages;\n          const width = pages[0].rawWidth * this.getPrintUnits();\n          const height = pages[0].rawHeight * this.getPrintUnits();\n          const printDialog = window.open('', '', 'innerWidth=' + width + ',innerHeight=' + height + 'location=no,titlebar=no,toolbar=no');\n          if (!printDialog || !printDialog.document) {\n              this.triggerError({\n                  message: this.options.messages.errorMessages.popupBlocked\n              });\n              return;\n          }\n          printDialog.document.body.style.margin = '0';\n          printDialog.document.body.appendChild(this.printContainer);\n          const afterPrintHandler = () => {\n              printDialog.removeEventListener(\"afterprint\", afterPrintHandler);\n              printDialog.close();\n          };\n          printDialog.addEventListener(\"afterprint\", afterPrintHandler);\n          printDialog.focus();\n          printDialog.print();\n          // setTimeout(() => {\n          // printDialog.print();\n          // done();\n          // });\n      }\n      cacheZoomLevelBeforePrint() {\n          this.setState({\n              zoomLevelBeforePrint: this.state.zoomLevel\n          });\n      }\n      restoreZoomLevelBeforePrint() {\n          if (this.state.zoomLevelBeforePrint === this.state.zoomLevel) {\n              return;\n          }\n          this.zoom({\n              zoomLevel: this.state.zoomLevelBeforePrint,\n              zoomLevelType: this.state.zoomLevelType,\n              currentZoom: this.state.zoomLevel\n          });\n      }\n      searchText(options = { text: \"\", matchCase: false }) {\n          var _a;\n          this.initSearchService();\n          const matches = (_a = this.searchService) === null || _a === void 0 ? void 0 : _a.search(options);\n          return matches;\n      }\n      clearSearch() {\n          this.destroySearchService();\n      }\n      initSearchService() {\n          const textLayers = Array.from(this.wrapper.querySelectorAll(toClassSelector$1(this.options.elementSelectors.textLayerClass)) || []);\n          if (this.searchService) {\n              // refresh text nodes as text layers have changed\n              if (textLayers.every((x, i) => x === this.searchService.options.textContainers[i])) {\n                  return;\n              }\n              else {\n                  this.destroySearchService();\n              }\n          }\n          this.searchService = new SearchService({\n              textContainers: textLayers,\n              highlightClass: this.options.elementSelectors.searchHighlightClass,\n              highlightMarkClass: this.options.elementSelectors.searchHighlightMarkClass,\n              charClass: this.options.elementSelectors.charClass\n          });\n      }\n      destroySearchService() {\n          if (!this.searchService) {\n              return;\n          }\n          this.searchService.destroy();\n          this.searchService = null;\n      }\n      goToNextSearchMatch() {\n          if (!this.searchService) {\n              return;\n          }\n          this.searchService.markNextMatch();\n          const matchElement = this.searchService.getActiveMatchElement();\n          this.scrollToSearchMatch(matchElement);\n      }\n      goToPreviousSearchMatch() {\n          if (!this.searchService) {\n              return;\n          }\n          this.searchService.markPreviousMatch();\n          const matchElement = this.searchService.getActiveMatchElement();\n          this.scrollToSearchMatch(matchElement);\n      }\n      getPagesContainer() {\n          return this.element.querySelector(toClassSelector$1(this.options.elementSelectors.pagesContainerClass));\n      }\n      getDocumentContainer() {\n          return this.wrapper.querySelector(toClassSelector$1(this.options.elementSelectors.documentContainerClass));\n      }\n      getPagesElements() {\n          const documentContainer = this.getDocumentContainer();\n          if (!documentContainer) {\n              return [];\n          }\n          return toArray(documentContainer.querySelectorAll(toClassSelector$1(this.options.elementSelectors.pageSelector)));\n      }\n      scrollToSearchMatch(matchElement) {\n          if (!matchElement) {\n              return;\n          }\n          const closestCharElement = matchElement.closest('.k-text-char');\n          const closestTextElement = closestCharElement\n              ? closestCharElement.closest('span[role=\"presentation\"]')\n              : null;\n          if (!closestTextElement) {\n              return;\n          }\n          const closestPageElement = closestTextElement.closest('.k-page');\n          if (!closestPageElement) {\n              return;\n          }\n          const scrollLeft = closestPageElement.offsetLeft +\n              -1 * this.documentScroller.element.offsetLeft +\n              closestTextElement.offsetLeft +\n              this.options.searchMatchScrollLeftOffset;\n          const scrollTop = closestPageElement.offsetTop +\n              -1 * this.documentScroller.element.offsetTop +\n              closestTextElement.offsetTop +\n              this.options.searchMatchScrollTopOffset;\n          this.documentScroller.scrollTo(scrollLeft, scrollTop, { trackScrollEvent: false });\n      }\n      resetInteractionMode() {\n          this.setInteractionMode({\n              mode: exports.P.TextSelection\n          });\n      }\n      setInteractionMode(args) {\n          this.interactionMode = args.mode;\n          if (this.interactionMode === exports.P.TextSelection) {\n              this.disableScrollerEventsTracking();\n              addClass(this.options.elementSelectors.enabledTextSelectionClass, this.documentScroller.element);\n              removeClass(this.options.elementSelectors.enabledPanningClass, this.documentScroller.element);\n          }\n          else if (this.interactionMode === exports.P.Pan) {\n              this.enableScrollerEventsTracking();\n              removeClass(this.options.elementSelectors.enabledTextSelectionClass, this.documentScroller.element);\n              addClass(this.options.elementSelectors.enabledPanningClass, this.documentScroller.element);\n          }\n      }\n      enableScrollerEventsTracking() {\n          if (!this.documentScroller) {\n              return;\n          }\n          this.documentScroller.enablePanEventsTracking();\n      }\n      disableScrollerEventsTracking() {\n          if (!this.documentScroller) {\n              return;\n          }\n          this.documentScroller.disablePanEventsTracking();\n      }\n      setScaleFactor(scaleFactor) {\n          this.element.style.setProperty('--scale-factor', String(scaleFactor * kendo_pdfjs_loader_js.PixelsPerInch.PDF_TO_CSS_UNITS));\n      }\n      activatePageNumber(pageNumber) {\n          const page = this.getPageByNumber(pageNumber);\n          if (!page) {\n              return;\n          }\n          const pageIndex = pageNumber - 1;\n          if (this.state.activePageNumber === pageNumber) {\n              return;\n          }\n          this.state.activePageNumber = pageNumber;\n          if (page.isBlank()) {\n              this.drawPageAsync({ pageIndex: pageIndex })\n                  .then(() => {\n                  this.scrollToPage({\n                      pageNumber\n                  });\n              });\n          }\n          else {\n              this.scrollToPage({\n                  pageNumber\n              });\n          }\n      }\n      scrollToPage({ pageNumber }) {\n          const { left, top } = this.getPageNumberScrollOffset(pageNumber);\n          this.scrollDocument({\n              left: left,\n              top: top\n          });\n      }\n      scrollDocument({ left, top }) {\n          var _a;\n          (_a = this.documentScroller) === null || _a === void 0 ? void 0 : _a.scrollTo(left, top, {\n              // as we are manually scrolling to the page\n              // we want to ignore the scroller's element scroll event\n              // to avoid double handling of the scrolling\n              trackScrollEvent: false\n          });\n      }\n      getPageNumberScrollOffset(pageNumber) {\n          const page = this.getPageByNumber(pageNumber);\n          if (!page) {\n              return {\n                  left: 0,\n                  top: 0\n              };\n          }\n          // pages might have different sizes\n          // although pdf.js does not fully support this\n          const previousPages = this.pages.slice(0, Math.max(0, pageNumber - 1));\n          const previousPagesScrollOffset = previousPages\n              .map(x => {\n              const pageScrollOffset = this.getPageScrollOffset(x);\n              return pageScrollOffset;\n          })\n              .reduce((sum, pageScrollOffset) => sum + pageScrollOffset, 0);\n          return {\n              left: 0,\n              top: previousPagesScrollOffset\n          };\n      }\n      getPageScrollOffset(page) {\n          var _a;\n          const pageHeight = ((_a = page === null || page === void 0 ? void 0 : page.element) === null || _a === void 0 ? void 0 : _a.getBoundingClientRect().height) || 0;\n          const computedStyles = getComputedStyle(page.element);\n          const pageMarginTop = parseFloat(computedStyles.marginTop) || 0;\n          return pageHeight + pageMarginTop;\n      }\n      getPageByNumber(pageNumber) {\n          const page = this.pages && this.pages[pageNumber - 1];\n          return page;\n      }\n      addHighlightAnnotation() {\n          var _a;\n          (_a = this.annotationEditorUIManager) === null || _a === void 0 ? void 0 : _a.highlightSelection();\n      }\n      setHighlightColor(color) {\n          this.executeAnnotationCommand({\n              commandType: kendo_pdfjs_loader_js.AnnotationEditorParamsType.HIGHLIGHT_COLOR,\n              commandValue: color\n          });\n      }\n      deleteAnnotation() {\n          var _a;\n          (_a = this.annotationEditorUIManager) === null || _a === void 0 ? void 0 : _a.delete();\n      }\n      resetAnnotationEditorMode() {\n          this.setAnnotationEditorMode({\n              mode: kendo_pdfjs_loader_js.AnnotationEditorType.NONE,\n              editId: null,\n              isFromKeyboard: false\n          });\n      }\n      setAnnotationEditorMode(modeDescriptor) {\n          this.annotationEditorMode = modeDescriptor;\n      }\n      setFreeTextColor(color) {\n          this.executeAnnotationCommand({\n              commandType: kendo_pdfjs_loader_js.AnnotationEditorParamsType.FREETEXT_COLOR,\n              commandValue: color\n          });\n      }\n      setFreeTextFontSize(fontSize) {\n          this.executeAnnotationCommand({\n              commandType: kendo_pdfjs_loader_js.AnnotationEditorParamsType.FREETEXT_SIZE,\n              commandValue: parseFloat(fontSize)\n          });\n      }\n      executeAnnotationCommand({ commandType, commandValue }) {\n          this.eventBus.dispatch(\"switchannotationeditorparams\", {\n              source: this,\n              type: commandType,\n              value: commandValue\n          });\n      }\n      // todo: ported from pdf.js\n      isValidAnnotationEditorMode(mode) {\n          return Object.values(kendo_pdfjs_loader_js.AnnotationEditorType).includes(mode) && mode !== kendo_pdfjs_loader_js.AnnotationEditorType.DISABLE;\n      }\n      cleanupSwitchAnnotationEditorMode() {\n          if (__classPrivateFieldGet(this, _PdfViewer_onPageRenderedCallback, \"f\")) {\n              this.eventBus._off(\"pagerendered\", __classPrivateFieldGet(this, _PdfViewer_onPageRenderedCallback, \"f\"));\n              __classPrivateFieldSet(this, _PdfViewer_onPageRenderedCallback, null, \"f\");\n          }\n          if (__classPrivateFieldGet(this, _PdfViewer_switchAnnotationEditorModeTimeoutId, \"f\") !== null) {\n              clearTimeout(__classPrivateFieldGet(this, _PdfViewer_switchAnnotationEditorModeTimeoutId, \"f\"));\n              __classPrivateFieldSet(this, _PdfViewer_switchAnnotationEditorModeTimeoutId, null, \"f\");\n          }\n      }\n      _getVisiblePages() {\n          // const views =\n          //     this._scrollMode === ScrollMode.PAGE\n          //         ? this.#scrollModePageState.pages\n          //         : this._pages,\n          //     horizontal = this._scrollMode === ScrollMode.HORIZONTAL,\n          //     rtl = horizontal && this._isContainerRtl;\n          // return getVisibleElements({\n          //     scrollEl: this.container,\n          //     views,\n          //     sortByVisibility: true,\n          //     horizontal,\n          //     rtl,\n          // });\n          return this.pages;\n      }\n      get _layerProperties() {\n          const self = this;\n          return kendo_pdfjs_loader_js.shadow(this, \"_layerProperties\", {\n              get annotationEditorUIManager() {\n                  return self.annotationEditorUIManager;\n              },\n              get annotationStorage() {\n                  var _a;\n                  return (_a = self.pdfDocument) === null || _a === void 0 ? void 0 : _a.annotationStorage;\n              },\n              // get downloadManager() {\n              //     return self.downloadManager;\n              // },\n              // get enableScripting() {\n              //     return !!self._scriptingManager;\n              // },\n              // get fieldObjectsPromise() {\n              //     return self.pdfDocument?.getFieldObjects();\n              // },\n              // get findController() {\n              //     return self.findController;\n              // },\n              // get hasJSActionsPromise() {\n              //     return self.pdfDocument?.hasJSActions();\n              // },\n              get linkService() {\n                  return self.linkService;\n              }\n          });\n      }\n      /**\n       * Scrolls page into view.\n       * @param {ScrollPageIntoViewParameters} params\n       */\n      scrollPageIntoView({ pageNumber, destArray = null, allowNegativeOffset = false, ignoreDestinationZoom = false }) {\n          if (!this.pdfDocument) {\n              return;\n          }\n          const pageView = Number.isInteger(pageNumber) && this.pages[pageNumber - 1];\n          if (!pageView) {\n              // console.error(\n              //     `scrollPageIntoView: \"${pageNumber}\" is not a valid pageNumber parameter.`\n              // );\n              return;\n          }\n          if (this.isInPresentationMode || !destArray) {\n              this._setCurrentPageNumber(pageNumber, /* resetCurrentPageView = */ true);\n              return;\n          }\n          let x = 0, y = 0;\n          const width = 0, height = 0;\n          // widthScale,\n          // heightScale;\n          const changeOrientation = pageView.rotation % 180 !== 0;\n          // const pageWidth =\n          //     (changeOrientation ? pageView.height : pageView.width) /\n          //     pageView.scale /\n          //     PixelsPerInch.PDF_TO_CSS_UNITS;\n          const pageHeight = (changeOrientation ? pageView.rawWidth : pageView.rawHeight) /\n              pageView.scale /\n              kendo_pdfjs_loader_js.PixelsPerInch.PDF_TO_CSS_UNITS;\n          // let scale: any = 0;\n          switch (destArray[1].name) {\n              case \"XYZ\":\n                  x = destArray[2];\n                  y = destArray[3];\n                  // scale = destArray[4];\n                  // If x and/or y coordinates are not supplied, default to\n                  // _top_ left of the page (not the obvious bottom left,\n                  // since aligning the bottom of the intended page with the\n                  // top of the window is rarely helpful).\n                  x = x !== null ? x : 0;\n                  y = y !== null ? y : pageHeight;\n                  break;\n              // case \"Fit\":\n              // case \"FitB\":\n              //     scale = \"page-fit\";\n              //     break;\n              // case \"FitH\":\n              // case \"FitBH\":\n              //     y = destArray[2];\n              //     scale = \"page-width\";\n              //     // According to the PDF spec, section 12.3.2.2, a `null` value in the\n              //     // parameter should maintain the position relative to the new page.\n              //     if (y === null && this._location) {\n              //         x = this._location.left;\n              //         y = this._location.top;\n              //     } else if (typeof y !== \"number\" || y < 0) {\n              //         // The \"top\" value isn't optional, according to the spec, however some\n              //         // bad PDF generators will pretend that it is (fixes bug 1663390).\n              //         y = pageHeight;\n              //     }\n              //     break;\n              // case \"FitV\":\n              // case \"FitBV\":\n              //     x = destArray[2];\n              //     width = pageWidth;\n              //     height = pageHeight;\n              //     scale = \"page-height\";\n              //     break;\n              // case \"FitR\":\n              //     x = destArray[2];\n              //     y = destArray[3];\n              //     width = destArray[4] - x;\n              //     height = destArray[5] - y;\n              //     let hPadding = SCROLLBAR_PADDING,\n              //         vPadding = VERTICAL_PADDING;\n              //     if (\n              //         (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) &&\n              //         this.removePageBorders\n              //     ) {\n              //         hPadding = vPadding = 0;\n              //     }\n              //     widthScale =\n              //         (this.container.clientWidth - hPadding) /\n              //         width /\n              //         PixelsPerInch.PDF_TO_CSS_UNITS;\n              //     heightScale =\n              //         (this.container.clientHeight - vPadding) /\n              //         height /\n              //         PixelsPerInch.PDF_TO_CSS_UNITS;\n              //     scale = Math.min(Math.abs(widthScale), Math.abs(heightScale));\n              //     break;\n              default:\n                  // console.error(\n                  //     `scrollPageIntoView: \"${destArray[1].name}\" is not a valid destination type.`\n                  // );\n                  return;\n          }\n          if (!ignoreDestinationZoom) {\n              // if (scale && scale !== this.options.zoomLevel) {\n              // }\n              // if (scale && scale !== this._currentScale) {\n              // this.currentScaleValue = scale;\n              // } else if (this._currentScale === UNKNOWN_SCALE) {\n              // this.currentScaleValue = DEFAULT_SCALE_VALUE;\n              // }\n          }\n          // if (scale === \"page-fit\" && !destArray[4]) {\n          //     this.#scrollIntoView(pageView);\n          //     return;\n          // }\n          const boundingRect = [\n              pageView.viewport.convertToViewportPoint(x, y),\n              pageView.viewport.convertToViewportPoint(x + width, y + height)\n          ];\n          let left = Math.min(boundingRect[0][0], boundingRect[1][0]);\n          let top = Math.min(boundingRect[0][1], boundingRect[1][1]);\n          if (!allowNegativeOffset) {\n              // Some bad PDF generators will create destinations with e.g. top values\n              // that exceeds the page height. Ensure that offsets are not negative,\n              // to prevent a previous page from becoming visible (fixes bug 874482).\n              left = Math.max(left, 0);\n              top = Math.max(top, 0);\n          }\n          // left *= scale || this.state.zoomLevel;\n          // top *= scale || this.state.zoomLevel;\n          __classPrivateFieldGet(this, _PdfViewer_instances, \"m\", _PdfViewer_scrollIntoView).call(this, pageView, /* pageSpot = */ { left, top });\n      }\n      /**\n       * @returns {boolean} Whether the pageNumber is valid (within bounds).\n       * @private\n       */\n      _setCurrentPageNumber(val, resetCurrentPageView = false) {\n          if (this._currentPageNumber === val) {\n              if (resetCurrentPageView) {\n                  // this.#resetCurrentPageView();\n              }\n              return true;\n          }\n          // if (!(0 < val && val <= this.pagesCount)) {\n          if (!(0 < val && val <= this.state.pdfDocument.numPages)) {\n              return false;\n          }\n          const previous = this._currentPageNumber;\n          this._currentPageNumber = val;\n          this.eventBus.dispatch(\"pagechanging\", {\n              source: this,\n              pageNumber: val,\n              // pageLabel: this._pageLabels?.[val - 1] ?? null,\n              previous\n          });\n          // if (resetCurrentPageView) {\n          //     this.#resetCurrentPageView();\n          // }\n          return true;\n      }\n  }\n  _PdfViewer_annotationEditorMode = new WeakMap(), _PdfViewer_switchAnnotationEditorModeTimeoutId = new WeakMap(), _PdfViewer_annotationMode = new WeakMap(), _PdfViewer_eventAbortController = new WeakMap(), _PdfViewer_onPageRenderedCallback = new WeakMap(), _PdfViewer_instances = new WeakSet(), _PdfViewer_switchToEditAnnotationMode = function _PdfViewer_switchToEditAnnotationMode() {\n      // const visible = this._getVisiblePages();\n      // const visible = this._getVisiblePages();\n      const pagesToRefresh = [];\n      // const { ids, views } = visible;\n      // for (const page of views) {\n      const ids = new Set();\n      this.pages.forEach(x => {\n          ids.add(x.id);\n      });\n      for (const page of this.pages) {\n          // const { view } = page;\n          const view = page;\n          if (!view.hasEditableAnnotations()) {\n              ids.delete(view.id);\n              continue;\n          }\n          pagesToRefresh.push(page);\n      }\n      if (pagesToRefresh.length === 0) {\n          return null;\n      }\n      // this.renderingQueue.renderHighestPriority({\n      //     first: pagesToRefresh[0],\n      //     last: pagesToRefresh.at(-1),\n      //     views: pagesToRefresh,\n      //     ids,\n      // });\n      // todo: render pages instead of using renderingQueue\n      // as this will require porting more code\n      this.drawPagesAsync(this.state.pdfPages);\n      return ids;\n  }, _PdfViewer_scrollIntoView = function _PdfViewer_scrollIntoView(pageView, pageSpot = null) {\n      const { div, id } = pageView;\n      // Ensure that `this._currentPageNumber` is correct, when `#scrollIntoView`\n      // is called directly (and not from `#resetCurrentPageView`).\n      if (this._currentPageNumber !== id) {\n          this._setCurrentPageNumber(id);\n      }\n      // if (this._scrollMode === ScrollMode.PAGE) {\n      //     this.#ensurePageViewVisible();\n      //     // Ensure that rendering always occurs, to avoid showing a blank page,\n      //     // even if the current position doesn't change when the page is scrolled.\n      //     this.update();\n      // }\n      if (!pageSpot && !this.isInPresentationMode) {\n          const left = div.offsetLeft + div.clientLeft, right = left + div.clientWidth;\n          // const { scrollLeft, clientWidth } = this.container;\n          const { scrollLeft, clientWidth } = this.element;\n          if (this._scrollMode === ScrollMode.HORIZONTAL ||\n              left < scrollLeft ||\n              right > scrollLeft + clientWidth) {\n              pageSpot = { left: 0, top: 0 };\n          }\n      }\n      scrollIntoView(div, pageSpot);\n      // // Ensure that the correct *initial* document position is set, when any\n      // // OpenParameters are used, for documents with non-default Scroll/Spread\n      // // modes (fixes issue 15695). This is necessary since the scroll-handler\n      // // invokes the `update`-method asynchronously, and `this._location` could\n      // // thus be wrong when the initial zooming occurs in the default viewer.\n      // if (!this._currentScaleValue && this._location) {\n      //     this._location = null;\n      // }\n  };\n\n  exports.D = DEFAULT_ZOOM_LEVEL$2;\n  exports.S = Scroller;\n  exports.__meta__ = __meta__;\n  exports.a = PdfViewer;\n  exports.c = currentPage;\n  exports.s = scrollToPage;\n\n}));\n"]}
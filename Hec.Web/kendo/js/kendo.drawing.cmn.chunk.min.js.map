{"version":3,"sources":["raw-js/kendo.drawing.cmn.chunk.js"],"names":["global","factory","exports","module","require","define","amd","globalThis","self","kendo","_globals","DrawingCmnChunk","CommonCmnChunk","PakoEsmCmnChunk","this","kendo_common_cmn_chunk_js","kendo_pakoEsm_cmn_chunk_js","Class","Observable","call","_events","__proto__","prototype","Object","create","constructor","bind","eventName","handlers","one","arguments$1","arguments","this$1$1","eventNames","getArray","handlersIsFunction","isFunction","length","undefined","field","loop","idx","eventName$1","handler","original","unbind","apply","push","first","unshift","trigger","e","events","sender","_defaultPrevented","preventDefault","isDefaultPrevented","slice","splice","value","animationFrameProxy","callback","wnd","window","animationFrame","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","ampRegExp","ltRegExp","quoteRegExp","aposRegExp","gtRegExp","htmlEncode","String","replace","logToConsole","message","console","log","saveAs$1","options","dataURI","fileName","data","Blob","parts","split","contentType","base64","atob","array","Uint8Array","charCodeAt","buffer","type","navigator","msSaveBlob","link","document","createElement","download","href","URL","createObjectURL","createEvent","initMouseEvent","dispatchEvent","revokeObjectURL","browser$3","support$1","browser","userAgent","browserRxs","edge","webkit","safari","opera","msie","mozilla","agent","hasOwnProperty","match","toLowerCase","version","parseInt","documentMode","matchUserAgent","now","Date","getTime","throttle","fn","delay","timeout","lastExecTime","throttled","elapsed","args","exec","clearTimeout","cancel","namedColors","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgrey","darkgreen","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","grey","green","greenyellow","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgrey","lightgreen","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","browser$2","matchNamedColor","color","colorNames","keys","regexp","RegExp","join","BaseColor","toHSV","toRGB","toHex","toBytes","toCss","toCssRgba","rgb","parseFloat","Number","a","toFixed","toDisplay","equals","c","parseColor$2","diff","other","NaN","c1","c2","Math","sqrt","pow","r","g","b","clone","Bytes","RGB","h","s","ref","min","max","delta","v","HSV","toHSL","l","d","HSL","round","hex","alpha","n","width","pad","result","toString","i","floor","f","p","q","t","hue2rgb","alphaFromHex","safe","m","ret","Error","Color","formats","resolvedColor","resolveColor","formatRegex","re","processor","process","channels","normalizeByte","padDigit","charAt","substr","isNaN","brightness","percBrightness","isDark","fromBytes","fromRGB","fromHSV","fromHSL","HasObservers","observers","_observers","addObserver","element","removeObserver","index","indexOf","methodName","event","_suspended","observer","optionsChange","geometryChange","suspend","resume","_observerField","append","second","literals","arabicToRoman","values","roman","shift","createPromise","resolveFn","rejectFn","promise","Promise","resolve","reject","_state","state","defined","defId","definitionId","DEG_TO_RAD","PI","MAX_NUM","MAX_VALUE","MIN_NUM","deg","radians","fromCharCode","encodeUnit","codeUnit","KEY_STR","encodeBase64","input","output","utfInput","code","hi","low","encodeUTF8","chr1","chr2","chr3","enc1","enc2","enc3","enc4","eventCoordinates","x","location","y","pageX","clientX","pageY","clientY","eventElement","touch","initialTouch","target","isTransparent","last","limitValue","mergeSort","cmp","sort","left","right","ai","bi","merge","promiseAll","promises","all","rad","degrees","precision","power","valueOrDefault","defaultValue","bindEvents","trim","addEventListener","elementOffset","box","getBoundingClientRect","documentElement","top","pageYOffset","scrollTop","clientTop","pageXOffset","scrollLeft","clientLeft","elementStyles","styles","style","getComputedStyle","stylesArray","Array","isArray","getPixels","elementSize","size","size$1","height","unbindEvents","name","removeEventListener","elementPadding","paddingLeft","paddingTop","Matrix","multiplyCopy","matrix","invert","det","toArray","separator","translate","unit","rotate","angle","cos","sin","scale","scaleX","scaleY","IDENTITY","matrixRegexp","transformMatrix","transform","matrixString","members","map","Function","concat","parseMatrix","elementScale","parent","parentElement","parentMatrix","LRUCache","_size","_length","_map","put","key","entry","_head","_tail","newer","older","get","REPLACE_REGEX","normalizeText","text","objectKey","object","hashKey","str","hash","defaultMeasureBox","DEFAULT_OPTIONS$1","baselineMarkerSize","setProperty","TextMetrics","_cache","assign","measure","baseline","cacheKey","cachedResult","measureBox","baselineMarker","_baselineMarker","cloneNode","textStr","textContent","appendChild","body","offsetWidth","offsetHeight","offsetTop","parentNode","removeChild","marker","display","verticalAlign","overflow","measureText","current","util","freeze","OptionsStore","prefix","member","_wrap","set","_set","composite","parentObj","fieldName","obj","_clear","wrapped","setAccessor","getAccessor","withAccessors","TBase","names","fields","capitalized","toUpperCase","substring","defineAccessors","toMatrix","transformation","Point$1","superclass","Point","staticAccessors","ZERO","configurable","origin","originPoint","translateWith","point","move","scaleCopy","transformCopy","distanceTo","dx","dy","digits","doRound","arg0","arg1","minX","minY","maxX","maxY","minPoint","maxPoint","defineProperties","Size","Rect$1","Rect","cornerRadius","setOrigin","setSize","setCornerRadius","getOrigin","radius","getCornerRadius","getSize","topLeft","bottomRight","topRight","bottomLeft","center","bbox","tl","tr","br","bl","fromPoints","expand","expandCopy","containsPoint","_isOnPath","rectOuter","rectInner","union","intersect","rect1","bottom","rect2","Transformation","_matrix","_optionsChange","multiply","DASH_ARRAYS","dot","dash","longdash","dashdot","longdashdot","longdashdotdot","SOLID","BUTT","PATTERN","Element$1","Element","_initOptions","prototypeAccessors","nodeType","clip","transform$1","id","parentTransform","currentTransform","combinedMatrix","elementMatrix","visible","opacity","className","clippedBBox","_clippedBBox","transformedPoint","_hasFill","_containsPoint","_hasStroke","fill","stroke","ellipseExtremeAngles","rx","ry","extremeX","extremeY","atan2","PI_DIV_2","Circle$2","Circle","setCenter","setRadius","getCenter","pointAt","_pointAt","extremeAngles","currentPointX","currentPointY","currentPoint","pointDistance","paintable","anonymous","newFill","IDENTITY_MATRIX_HASH","measurable","matrixHash","_bboxCache","_matrixHash","_bbox","strokeWidth","geometryAccessor","withGeometry","defineGeometryAccessors","Circle$1","geometry","rawBBox","_geometry","PRECISION","close","tolerance","abs","closeOrLess","Arc$1","Arc","radiusX","radiusY","startAngle","endAngle","anticlockwise","xRotation","radian","curvePoints","dir","interval","_arcInterval","intervalAngle","subIntervalsCount","ceil","subIntervalAngle","currentAngle","nextAngle","points","_intervalCurvePoints","cp1","cp2","p2","endPoint","currentAngleX","bboxStartAngle","currentAngleY","oldStart","p1","p1Derivative","_derivativeAt","p2Derivative","distance","angleRad","pointRadius","startPoint","intersection","p0","p3","s1x","s2x","s1y","s2y","nx","ny","lineIntersection","calculateAngle","inAngleRange","start","end","largeArc","swipe","rotation","arcParameters","parameters","x1","y1","x2","y2","cosine","sine","xT","yT","sign","xt2","yt2","rx2","ry2","constT","cxT","cyT","cx","cy","uX","uY","vX","vY","acos","angleCosine","signEndAngle","normalizeArcParameters","pop","slice$1","ElementsArray","_splice","elements","_change","_add","_remove","howMany","_clearObserver","_setObserver","GeometryElementsArray","isOutOfEndPoint","controlPoint","calculateCurveAt","t1","toCubicPolynomial","ComplexNumber","real","img","add","cNumber","addConstant","negate","multiplyConstant","nthRoot","nthR","isReal","numberSign$1","solveCubicEquation","squareRoot","solveQuadraticEquation","y3","z1","z2","Q","b3a","hasRootsInRange","rootField","range","polynomial","roots","lineIntersectionsCount","intersects","inRange","pointAccessor","withPoints","definePointAccessors","Segment","anchor","controlIn","controlOut","bboxTo","toSegment","segmentAnchor","toSegmentAnchor","_curveBoundingBox","_lineBoundingBox","extremesX","_curveExtremesFor","extremesY","xLimits","arrayLimits","yLimits","extremes","_curveExtremes","x3","x4","t2","_intersectionsTo","segment","intersectionsCount","rayIntersection","count","curveIntersectionsCount","_isOnCurveTo","endSegment","p4","rotatedPoints","_isOnLineTo","_isOnPathTo","arr","X","Y","pointsToCurve","pointsIn","closed","segments","removeDuplicates","initialControlPoint","lastControlPoint","tangent","getTangent","firstControlPoint","secondControlPoint","controlPoints","getControlPoints","cp0","controlPoints$1","controlPoints$2","tangent$2","lineFunction","xField","yField","restrict","switchOrientation","calculateFunction","isLine","monotonic","isMonotonicByField","invertAxis","numberSign","secondCP","oldXField","firstCP","restrictControlPoint","cp","xValue","yValue","ShapeMap","path","position","isRelative","lineTo","curveTo","toLineParamaters","arcTo","lastControlIn","previousCommand","paths","reflectionPoint","cubicControlPoints","quadraticToCubicControlPoints","isVertical","insertPosition","third","scaledPoint","SEGMENT_REGEX","SPLIT_REGEX","parsePath","pathInstance","params","closePath","command","number","parseParameters","moveTo","elementsBoundingBox","applyTransform","boundingBox","elementBoundingBox","elementsClippedBoundingBox","SPACE","Path$1","Path","lineJoin","lastSegment","arc","_addArcSegments","segmentStart","segmentEnd","currentType","print","len","previous","pathWidth","segmentBox","parse","MultiPath","fromRect","rect","curveFromPoints","fromArc","prototypeAccessors$1","toPath","Text","content","font","pos","Image$1","Image","src","_rect","traversable","childrenField","traverse","children","child","Group$1","Group","childrenChange","action","items","_reparent","insert","insertAt","remove","removeAt","clear","newParent","translateToPoint","transofrm","alignStart","align","axis","sizeField","alignStartReverse","DEFAULT_OPTIONS","alignContent","justifyContent","alignItems","spacing","orientation","lineSpacing","wrap","revers","forEach","forEachReverse","Layout$1","Layout","_fieldMap","_initMap","fieldMap","groupsSizeField","groupAxis","groupsAxis","reverse","justifyAlign","reflow","elementStart","group","groupBox","_initGroups","groups","groupsSize","ref$1","groupOrigin","elementOrigin","groupStart","arrangeElements","groupIdx","lineSize","bboxes","scaledStart","newStart","_newGroup","addGroup","_addToGroup","alignElements","alignment","stackElements","stackAxis","otherAxis","previousBBox","createStackElements","wrapElements","stacks","maxSize","stack","stackSize","addElementToStack","getStacks","startElement","elementIdx","StopsArray","optionsAccessor","GradientStop","offset","arg","defineOptionsAccessors","Gradient","stops","_createStops","_userSpace","userSpace","addStop","removeStop","stop","LinearGradient","RadialGradient","_radius","_fallbackFill","fallbackFill","defaultColor","defaultLine","defaultDot","defaultGrid","Pattern","drawBackground","pattern","instance$2","instance$1","easingFunctions","easeOutElastic","time","asin","linear","swing","AnimationFactory","_items","register","Animation","_options","duration","easing","setup","step","play","finish","abort","_stopped","wallTime","easingPosition","destroy","PathParser","BaseNode","srcElement","childNodes","observe","load","node","removeSelf","invalidate","Surface$3","Surface","_kendoExportVisual","exportVisual","_click","_handler","_mouseenter","_mouseleave","_mousemove","_visual","_enableTracking","draw","eventTarget","domNode","_kendoNode","currentSize","_resize","resize","force","suspendTracking","_suspendedTracking","resumeTracking","originalEvent","_elementOffset","padding","_surfacePoint","coord","inverseTransform","renderAttr","renderAllAttr","attrs","renderStyle","NODE_MAP$1","setStyle","styleString","styleAttr","replaceStyleAttr","html","restoreStyleAttr","container","from","querySelectorAll","getAttribute","removeAttribute","setInnerHTML","innerHTML","SVG_NS","NONE","renderSVG","svg","testFragment","testContainer","hasParser","DOMParser","firstChild","namespaceURI","chartDoc","parseFromString","importedDoc","adoptNode","renderSVG$1","TRANSFORM","DefinitionMap","isDefinition","Node$1","Node","definitions","clearDefinitions","childNode","createDefinitions","attachTo","root","domElement","render","insertBefore","setElement","nodes","childElement","template","renderChildren","css","updateDefinition","attr","removeAttr","accessibilityOptionsChange","setAttribute","allAttr","toggleAttr","allCss","classList","item","mapTransform","renderTransform","transformChange","mapStyle","cursor","renderOpacity","renderId","renderClassName","renderRole","role","renderAriaLabel","ariaLabel","renderAriaRoleDescription","ariaRoleDescription","renderAriaChecked","ariaChecked","hasDefinitions","definition","definitionChange","refUrl","renderDefinitions","mapDefinitions","skipBaseHref","baseHref","baseUrl","base","getElementsByTagName","url","hashIndex","GradientStopNode","renderOffset","GradientNode","loadStops","stopNode","mapCoordinates","renderCoordinates","mapSpace","LinearGradientNode","RadialGradientNode","PatternNode","getWidth","getHeight","ClipNode","renderClipRule","DefinitionNode","definitionMap","addDefinitions","removeDefinitions","createDefinition","addDefinition","mapItem","removeDefinition","RootNode$1","RootNode","defs","firstElementChild","ATTRIBUTE_MAP","PathNode$1","PathNode","renderData","mapFill","mapStroke","renderLinecap","dashType","renderDashType","renderStroke","dashArray","lineCap","renderFill","ArcNode$1","ArcNode","CircleNode$1","CircleNode","GroupNode$1","GroupNode","ImageNode$1","ImageNode","mapPosition","mapSource","renderPosition","encode","renderSource","MultiPathNode$1","MultiPathNode","RectNode$1","RectNode","ENTITY_REGEX","decodeEntities","test","_element","lastIndex","innerText","TextNode$1","TextNode","setY","renderContent","renderTextAnchor","rtl","renderPaintOrder","paintOrder","Surface$2","BaseSurface","_root","direction","_template","_rootElement","ctm","getScreenCTM","alignToScreen","click","mouseover","mouseout","mousemove","viewBox","_offset","visual","svgStyles","NODE_MAP","initClip","clearClip","setClip","ctx","beginPath","renderPoints","setTransform","loadElements","cors","setOpacity","globalAlpha","opactity","renderTo","save","restore","FRAME_DELAY","canvas","getContext","invalidateHandler","_invalidate","_rescale","_devicePixelRatio","devicePixelRatio","fixedScale","clearRect","QuadRoot","shapes","shape","_quadNode","pointShapes","QuadNode","inBounds","nodeRect","nodeBottomRight","inserted","_initChildren","halfWidth","halfHeight","ROOT_SIZE","ShapesQuadTree","initRoots","rootMap","rootElements","pointShape","sectorRoot","assignZindex","zIndexComparer","zIndex","levelWeight","parents","_zIndex","bboxChange","_insertShape","elementsArray","_insert","sectors","getSectors","inRoot","bottomX","bottomY","SurfaceCursor","surface","renderPath","prevOut","bezierCurveTo","_resetCursor","_shapeCursor","_current","_defaultCursor","_getCursor","_setCursor","setLineDash","setLineCap","setLineJoin","setFill","setStroke","hasFill","setGradientFill","setPatternFill","fillStyle","gradient","createLinearGradient","createRadialGradient","addColorStop","addGradientStops","patternCanvas","patternContext","createPattern","strokeStyle","lineWidth","mozDash","webkitLineDash","onLoad","onError","loading","crossOrigin","complete","onload","onerror","drawImage","textAlign","strokeText","fillText","instance","support","Surface$1","_mouseTrackHandler","_trackMouse","_searchTree","_cursor","image","rootElement","loadingStates","resolveDataURL","toDataURL","then","currentShape","_currentShape","hasDocument","SurfaceFactory","implementation","hasFeature","preferred","exportGroup","rootGroup","exportRoot","exportImage","defaults","surfaceOptions","exportSVG","raw","keyStr","drawing","crosshatchPattern","gap","background","shapeOptions","line1","line2","diagonalStripesPattern","dotsPattern","yC2","center1","center2","center3","fit","rectSize","gridPattern","squareSize","halfGap","vAlign","vStack","vWrap","verticalStripesPattern","xStart","xEnd","startLine","endLine","HAS_TYPED_ARRAYS","BASE64","decode","bytes","BinaryStream","ensure","tmp","write","writeString","writeByte","readByte","readShort","writeShort","w","readLong","writeLong","readLong_","writeLong_","read","times","reader","stream","eof","readFixed","writeFixed","readShort_","writeShort_","readFixed_","writeFixed_","readString","skip","nbytes","saveExcursion","writeBase64","base64ToUint8Array","atobUint8Array","createUint8Array","hasOwnProperty$2","sortedKeys","Directory","scalerType","tableCount","searchRange","entrySelector","rangeShift","tables","tag","checksum","readTable","Ctor","def","table","maxpow2","LN2","out","directoryLength","headOffset","tableData","adjustment","sum","Table","file","rawData","NameEntry","POSTSCRIPT_GLYPHS","CmapEntry","HeadTable","revision","checkSumAdjustment","magicNumber","flags","unitsPerEm","created","modified","xMin","yMin","xMax","yMax","macStyle","lowestRecPPEM","fontDirectionHint","indexToLocFormat","glyphDataFormat","LocaTable","format","head","offsets","offsetOf","lengthOf","needsLongFormat","HheaTable","ascent","descent","lineGap","advanceWidthMax","minLeftSideBearing","minRightSideBearing","xMaxExtent","caretSlopeRise","caretSlopeRun","caretOffset","metricDataFormat","numOfLongHorMetrics","ids","MaxpTable","numGlyphs","maxPoints","maxContours","maxComponentPoints","maxComponentContours","maxZones","maxTwilightPoints","maxStorage","maxFunctionDefs","maxInstructionDefs","maxStackElements","maxSizeOfInstructions","maxComponentElements","maxComponentDepth","glyphIds","HmtxTable","hhea","metrics","advance","lsb","lsbCount","maxp","leftSideBearings","forGlyph","GlyfTable","SimpleGlyph","compound","CompoundGlyph","idOffsets","old2new","cache","glyphFor","loca","numberOfContours","glyph","glyphs","oldIds","NameTable","platformID","platformSpecificID","languageID","nameID","stringOffset","nameRecords","strings","rec","postscriptEntry","postscriptName","psName","strCount","strTable","list","j","PostTable","numberOfGlyphs","italicAngle","underlinePosition","underlineThickness","isFixedPitch","minMemType42","maxMemType42","minMemType1","maxMemType1","glyphNameIndex","limit","mapping","indexes","post","CmapTable","codeMap","language","segCount","endCode","startCode","idDelta","idRangeOffset","glyphId","ngroups","endCharCode","glyphCode","error","ncid2ogid","ogid2ngid","codes","startCodes","endCodes","new_gid","charcode","segCountX2","deltas","rangeOffsets","startGlyph","renderCharmap","OS2Table","averageCharWidth","weightClass","widthClass","ySubscriptXSize","ySubscriptYSize","ySubscriptXOffset","ySubscriptYOffset","ySuperscriptXSize","ySuperscriptYSize","ySuperscriptXOffset","ySuperscriptYOffset","yStrikeoutSize","yStrikeoutPosition","familyClass","panose","charRange","vendorID","selection","firstCharIndex","lastCharIndex","winAscent","winDescent","codePageRange","xHeight","capHeight","defaultChar","breakChar","maxContext","subsetTag","Subfont","subset","unicodes","ngid2ogid","next","firstChar","nextGid","nextSubsetTag","use","ch","string","extra","counter","ucs2decode","reduce","old_gid","cmap","encodeText","glyphsFor","glyf","old_gid_ids","lastChar","hmtx","os2","directory","cidToGidMap","cid","TTFFont","contents","numFonts","widthOfGlyph","makeSubset","deflate","browser$1","NL","RESOURCE_COUNTER","PATTERN_COUNTER","PAPER_SIZE","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","a10","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","b10","c0","c3","c4","c5","c6","c7","c8","c9","c10","executive","folio","legal","letter","tabloid","makeOutput","indentLevel","PDFValue","beforeRender","renderArray","renderDate","num","PDFDictionary","writeData","withIndent","indent","getPaperOptions","getOption","paperSize","unitsToPoints","margin","FONT_CACHE","Helvetica","Courier","Symbol","ZapfDingbats","IMAGE_CACHE$1","clearImageCache","loadOne","loadFonts","cont","req","XMLHttpRequest","open","responseType","status","response","VBArray","responseBody","send","loadBinary","urls","loadImages","images","jpegQuality","keepPNG","bloburl","blob","xhr","FileReader","_load","XMLSerializer","serializeToString","readAsText","_onerror","_onload","_trycanvas","imgdata","getImageData","ex","hasAlpha","rawbytes","PDFRawImage","PDFJpegImage","upscale","readAsArrayBuffer","loadImage","PDFDocument","objcount","objects","defval","attach","renderValue","renderFull","wrapObject","pages","FONTS","PATTERNS","IMAGES","GRAD_COL_FUNCTIONS","GRAD_OPC_FUNCTIONS","GRAD_COL","GRAD_OPC","catalog","PDFCatalog","pageTree","PDFPageTree","nameTree","JavaScript","Names","PDFString","S","_","JS","props","setPages","info","Producer","Title","Author","Subject","Keywords","Creator","CreationDate","addPage","paperOptions","contentWidth","contentHeight","PDFStream","Contents","Parent","MediaBox","page","PDFPage","_content","xrefOffset","zeropad","Root","Info","hasOwnProperty$1","getFont","PDFStandardFont","PDFFont","getPattern","drawPattern","PDFPattern","getImage","asStream","getOpacityGS","forStroke","_opacityGSCache","gs","Type","CA","ca","_resourceName","dict","date","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","mm2pt","mm","cm2pt","cm","in2pt","inch","in","utf16be","Boolean","txt","trail","encodeUTF16BE","PDFHexString","PDFName","escape","empty","compress","Filter","Length","pagesObj","Pages","Kids","Count","pageObj","SOF_CODES","colorSpace","bitsPerComponent","Subtype","Width","Height","BitsPerComponent","ColorSpace","Decode","pdf","mask","SMask","curPage","_pdf","_xResources","_fontResources","_gsResources","PatternType","PaintType","TilingType","BBox","XStep","YStep","Resources","ExtGState","XObject","Font","BaseFont","Encoding","_font","_sub","stemV","isSerif","isScript","getTextWidth","fontSize","sub","fontStream","Length1","descriptor","FontName","FontBBox","Flags","StemV","ItalicAngle","Ascent","Descent","CapHeight","XHeight","FontFile2","charWidths","chunk","gid","descendant","CIDSystemInfo","Registry","Ordering","Supplement","FontDescriptor","FirstChar","LastChar","DW","W","CIDToGIDMap","_makeCidToGidMap","DescendantFonts","unimap","PDFToUnicodeCmap","unimapStream","ToUnicode","unicode","makeHash","cacheColorGradientFunction","r1","g1","r2","g2","func","FunctionType","Domain","Range","N","C0","C1","cacheOpacityGradientFunction","cacheGradient","isRadial","funcs","prev","cur","prevColor","curColor","opacities","colors","assemble","Functions","Bounds","Encode","makeGradientFunctions","coords","shading","ShadingType","Coords","Extend","cacheColorGradient","AIS","G","FormType","CS","I","Shading","s0","cacheOpacityGradient","_rcount","_textMode","_patResources","_shResources","_opacity","_annotations","_fontSize","_contextStack","ProcSet","Annots","_out","d1","e1","f1","d2","e2","f2","mmul$1","sx","sy","beginText","endText","_requireTextMode","_requireFont","setFont","setTextLeading","setTextRenderingMode","mode","showText","requestedWidth","showTextNL","addLink","uri","ll","_toPage","ur","Border","A","URI","setStrokeColor","setFillOpacity","setStrokeOpacity","setFillColor","gradient$1","oname","sname","setDashPattern","dashPhase","setLineWidth","setMitterLimit","mitterLimit","_context","bezier","bezier1","bezier2","ellipse","_X","_Y","k","circle","nop","clipStroke","closeStroke","fillStroke","comment","line","val","unquote","parseFontDef","fontdef","fontFamily","italic","variant","bold","lineHeight","getFontURL$1","mkFamily","FONT_MAPPINGS","serif","monospace","zapfdingbats","fontAlias","alias","defineFont","TEXT_RENDERING_MODE$1","fillAndStroke","invisible","fillAndClip","strokeAndClip","fillStrokeClip","TEXT_RENDERING_MODE","DASH_PATTERNS","dashDot","longDash","longDashDot","longDashDotDot","solid","LINE_CAP","butt","square","LINE_JOIN","miter","bevel","fonts","multiPage","imgDPI","doIt","producer","title","author","subject","keywords","creator","autoPrint","drawPage","changed","clipbox","currentBox","opt","change","newShape","shouldDraw","optArray","el","withClipping","saveclipbox","savematrix","inClipbox","dispatch","_pdfLink","optimize","addMargin","drawElement","landscape","toBlob","_pdfDebug","parseColor$1","setStrokeOptions","setFillOptions","_drawPath","setClipping$1","drawPath","drawMultiPath","drawCircle","drawArc","drawText$1","drawGroup","drawRect","thing","maybeGradient","maybePattern","maybeFillStroke","maybeDrawRect","seg","_position","renderMode","_pdfRect","sz","exportPDF","_ignoreMargin","Document","exportPDFToBlob","getFontURL","saveAs","filename","proxy","dataURL","proxyURL","KENDO_PSEUDO_ELEMENT","KENDO_BULLET_TYPE","IMAGE_CACHE","nodeInfo","microsoft","TextRect","setCSS","matches","selector","webkitMatchesSelector","mozMatchesSelector","msMatchesSelector","closest","$","cloneNodes","jQuery","$el","$clone","tagName","checked","selected","nextSibling","dive","canvases","orig","parseBackgroundImage","tok_linear_gradient","tok_percent","tok_length","tok_keyword","tok_angle","tok_whitespace","tok_popen","tok_pclose","tok_comma","tok_url","tok_content","cache1","cache2","tok","token","skip_ws","read_stop","percent","propName","to1","to2","parseAngle","to","read_linear_gradient","read_url","splitProperty","in_paren","in_string","looking_at","getFontHeight","getFontFaces","doc","styleSheets","doStylesheet","ss","rules","cssRules","styleSheet","family","getPropertyValue","findFonts","addRule","addRules","rule","cssText","incCounter","inc","getPrototypeOf","resetCounter","doCounters","updateCounters","counterReset","counterIncrement","parseColor","whenImagesAreActuallyLoaded","pending","done","cacheImages","getComputedStyle$1","bg","alphaNumeral","pushNodeInfo","decoration","prop","createsStackingContext","_stackingContext","popNodeInfo","updateClipbox","_clipbox","pseudoElt","defa","pleaseSetPropertyValue","important","getBorder","side","saveStyle","getBorderRadius","sanitizeRadius","getContentBox","innerBox","wt","wr","wb","wl","radiansToDegrees","setClipping","clipPath","addArcToPath","adjustBorderRadiusForBox","rTL","rTR","rBR","rBL","tl_x","tl_y","tr_x","tr_y","br_x","br_y","bl_x","bl_y","elementRoundBox","bt","bb","pt","pr","pb","pl","roundBox","rTL0","rTR0","rBR0","rBL0","formatCounter","evalPseudoElementContent","displayCounter","getAllCounters","getCounter","getCssText","_renderWithPseudoElements","fake","pseudo","saveClass","_renderElement","kind","place","psel","ownerDocument","backgroundColor","textOverflow","saveTextOverflow","backgroundImage","backgroundRepeat","backgroundPosition","backgroundOrigin","backgroundSize","currentStyle","boxes","cells","innerbox","getClientRects","tableBorderLeft","tableBorderTop","tableBox","firstCellBox","rows","adjustBoxes","drawOneBox","_avoidLinks","createRange","selectNodeContents","listStyleType","listStylePosition","_drawBullet","bullet","boxSizing","renderElement","elementIndex","drawBullet","clipit","isFormField","widget","widgetInstance","exportDOMVisual","maybeRenderWidget","bulletType","maybeRenderBullet","renderContents","drawEdge","Wtop","Wleft","Wright","rl","rr","drawRoundCorner","ri","drawOneBackground","drawBackgroundImage","pxlen","scaledAngle","atan","implicit","img_width","img_height","renderBG","aspect_ratio","orgBox","rewX","rewY","repeatX","isFirst","isLast","shouldDrawLeft","shouldDrawRight","inv","renderImage","zIndexSort","sa","sb","za","zb","pa","renderFormField","renderCheckbox","option","whiteSpace","multiple","selectedOptions","selectedIndex","getSelectedOption","xml","serializer","serializeSVG","floats","positioned","renderText","floating","cb","search","isJustified","columnCount","textTransform","estimateLineLength","prevLineBottom","underline","lineThrough","overline","underlineOffset","forEachRect","underlinePos","drawTextLine","doChunk","selectNode","clientRects","actuallyGetRangeBoundingRect","chrome","rectangles","Infinity","origStart","setStart","setEnd","found","findEOL","eol","startOffset","cc","drawText","textBox","ypos","visibility","getTransform","main","_dom_zIndex","groupInStackingContext","mmul","B","C","D","E","F","H","J","K","L","M","O","P","R","T","U","doOne","cls","avoidLinks","word","removeClass","makeTemplate","template$1","div","forceBreak","forcePageBreak","hasPaperSize","pageWidth","pageHeight","hasMargin","copy","_destructive","adjust","tfoot","ol","li","paddingRight","beforePageBreak","doPageBreak","splitElement","makePage","pageNum","totalPages","keepTogether","tableLayout","bottomPadding","bottomBorder","saveAdjust","breakAtElement","fall","fallsOnMargin","splitText","firstInParent","colgroup","thead","grid","gridHead","querySelector","repeatHeaders","setStartBefore","setEndBefore","extractContents","preventBulletOnListItem","pageClassName","available","nextnode","findEOP","endOffset","handlePageBreaks","progress","canceled","V","__meta__","category","description","depends","hidden","o","u","z"],"mappings":"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","file":"kendo.drawing.cmn.chunk.min.js","sourcesContent":["(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('kendo.common.cmn.chunk.js'), require('kendo.pako-esm.cmn.chunk.js')) :\n  typeof define === 'function' && define.amd ? define(['exports', 'kendo.common.cmn.chunk', 'kendo.pako-esm.cmn.chunk'], factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global.kendo = global.kendo || {}, global.kendo._globals = global.kendo._globals || {}, global.kendo._globals.DrawingCmnChunk = {}), global.kendo._globals.CommonCmnChunk, global.kendo._globals.PakoEsmCmnChunk));\n})(this, (function (exports, kendo_common_cmn_chunk_js, kendo_pakoEsm_cmn_chunk_js) {\n  const __meta__ = {\n      id: \"drawing.cmn.chunk\",\n      name: \"DrawingCmnChunk\",\n      category: \"web\",\n      description: \"A reusable outputed chunk of code\",\n      depends: ['common.cmn.chunk', 'pako-esm.cmn.chunk'],\n      hidden: true,\n      chunk: true,\n      \n  };\n\n  var Class = function Class () {};\n\n  var Observable = (function (Class) {\n      function Observable() {\n          Class.call(this);\n\n          this._events = {};\n      }\n\n      if ( Class ) Observable.__proto__ = Class;\n      Observable.prototype = Object.create( Class && Class.prototype );\n      Observable.prototype.constructor = Observable;\n\n      Observable.prototype.bind = function bind (eventName, handlers, one) {\n          var arguments$1 = arguments;\n          var this$1$1 = this;\n\n          var eventNames = getArray(eventName);\n          var handlersIsFunction = isFunction(handlers);\n          var length = eventNames.length;\n\n          if (handlers === undefined) {\n              for (var field in eventName) {\n                  this$1$1.bind(field, eventName[field]);\n              }\n              return this;\n          }\n\n          var loop = function ( idx ) {\n              var eventName$1 = eventNames[idx];\n\n              var handler = handlersIsFunction ? handlers : handlers[eventName$1];\n\n              if (handler) {\n                  if (one) {\n                      var original = handler;\n                      handler = function () { // eslint-disable-line no-loop-func\n                          this$1$1.unbind(eventName$1, handler);\n                          original.apply(this$1$1, arguments$1);\n                      };\n                      handler.original = original;\n                  }\n                  var events = this$1$1._events[eventName$1] = this$1$1._events[eventName$1] || [];\n                  events.push(handler);\n              }\n          };\n\n          for (var idx = 0; idx < length; idx++) loop( idx );\n\n          return this;\n      };\n\n      Observable.prototype.one = function one (eventNames, handlers) {\n          return this.bind(eventNames, handlers, true);\n      };\n\n      Observable.prototype.first = function first (eventName, handlers) {\n          var this$1$1 = this;\n\n          var eventNames = getArray(eventName);\n          var handlersIsFunction = isFunction(handlers);\n\n          for (var idx = 0, length = eventNames.length; idx < length; idx++) {\n              var eventName$1 = eventNames[idx];\n\n              var handler = handlersIsFunction ? handlers : handlers[eventName$1];\n\n              if (handler) {\n                  var events = this$1$1._events[eventName$1] = this$1$1._events[eventName$1] || [];\n                  events.unshift(handler);\n              }\n          }\n\n          return this;\n      };\n\n      Observable.prototype.trigger = function trigger (eventName, e) {\n          var this$1$1 = this;\n          if ( e === void 0 ) e = {};\n\n          var events = this._events[eventName];\n\n          if (events) {\n              var length = events.length;\n\n              e.sender = this;\n              e._defaultPrevented = false;\n              e.preventDefault = preventDefault;\n              e.isDefaultPrevented = isDefaultPrevented;\n\n              events = events.slice();\n\n              for (var idx = 0; idx < length; idx++) {\n                  events[idx].call(this$1$1, e);\n              }\n\n              return e._defaultPrevented === true;\n          }\n\n          return false;\n      };\n\n      Observable.prototype.unbind = function unbind (eventName, handler) {\n          var events = this._events[eventName];\n\n          if (eventName === undefined) {\n              this._events = {};\n          } else if (events) {\n              if (handler) {\n                  for (var idx = events.length - 1; idx >= 0; idx--) {\n                      if (events[idx] === handler || events[idx].original === handler) {\n                          events.splice(idx, 1);\n                      }\n                  }\n              } else {\n                  this._events[eventName] = [];\n              }\n          }\n\n          return this;\n      };\n\n      return Observable;\n  }(Class));\n\n  function isFunction(value) {\n      return typeof value === \"function\";\n  }\n\n  function getArray(value) {\n      return typeof value === \"string\" ? [ value ] : value;\n  }\n\n  function preventDefault() {\n      this._defaultPrevented = true;\n  }\n\n  function isDefaultPrevented() {\n      return this._defaultPrevented === true;\n  }\n\n  var animationFrameProxy = function (callback) {\n      var wnd = typeof window !== \"undefined\" ? window : {};\n      var animationFrame = wnd.requestAnimationFrame ||\n                          wnd.webkitRequestAnimationFrame ||\n                          wnd.mozRequestAnimationFrame ||\n                          wnd.oRequestAnimationFrame ||\n                          wnd.msRequestAnimationFrame ||\n                          function(callback) { setTimeout(callback, 1000 / 60); };\n\n      animationFrameProxy = function (callback) { return animationFrame.call(wnd, callback); };\n      animationFrameProxy(callback);\n  };\n\n  var animationFrame = animationFrameProxy;\n\n  var ampRegExp = /&/g;\n  var ltRegExp = /</g;\n  var quoteRegExp = /\"/g;\n  var aposRegExp = /'/g;\n  var gtRegExp = />/g;\n\n  function htmlEncode(value) {\n      return String(value).replace(ampRegExp, \"&amp;\").replace(ltRegExp, \"&lt;\").replace(gtRegExp, \"&gt;\").replace(quoteRegExp, \"&quot;\").replace(aposRegExp, \"&#39;\");\n  }\n\n  /* eslint-disable no-console */\n\n  function logToConsole(message) {\n      var console = window.console;\n\n      if (typeof(console) != \"undefined\" && console.log) {\n          console.log(message);\n      }\n  }\n\n  // XXX: the following will not work with IE9 (requires server proxy).\n  function saveAs$1(options) {\n      var dataURI = options.dataURI;\n      var fileName = options.fileName;\n      var data = dataURI;\n\n      if (typeof data == \"string\" && window.Blob) {\n          var parts = data.split(\";base64,\");\n          var contentType = parts[0];\n          var base64 = atob(parts[1]);\n          var array = new Uint8Array(base64.length);\n          for (var idx = 0; idx < base64.length; idx++) {\n              array[idx] = base64.charCodeAt(idx);\n          }\n          data = new Blob([ array.buffer ], { type: contentType });\n      }\n      if (navigator.msSaveBlob) {\n          navigator.msSaveBlob(data, fileName);\n      } else {\n          var link = document.createElement(\"a\");\n          link.download = fileName;\n          data = link.href = URL.createObjectURL(data);\n          var e = document.createEvent(\"MouseEvents\");\n          e.initMouseEvent(\"click\", true, false, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);\n          link.dispatchEvent(e);\n          setTimeout(function() {\n              URL.revokeObjectURL(data);\n          });\n      }\n  }\n\n  function matchUserAgent(userAgent) {\n      var browserRxs = {\n          edge: /(edge)[ \\/]([\\w.]+)/i,\n          webkit: /(chrome)[ \\/]([\\w.]+)/i,\n          safari: /(webkit)[ \\/]([\\w.]+)/i,\n          opera: /(opera)(?:.*version|)[ \\/]([\\w.]+)/i,\n          msie: /(msie\\s|trident.*? rv:)([\\w.]+)/i,\n          mozilla: /(mozilla)(?:.*? rv:([\\w.]+))/i\n      };\n\n      var browser = {};\n\n      for (var agent in browserRxs) {\n          if (browserRxs.hasOwnProperty(agent)) {\n              var match = userAgent.match(browserRxs[agent]);\n              if (match) {\n                  browser[agent] = true;\n                  browser[match[1].toLowerCase().split(\" \")[0].split(\"/\")[0]] = true;\n                  browser.version = parseInt(document.documentMode || match[2], 10);\n\n                  break;\n              }\n          }\n      }\n\n      return browser;\n  }\n\n  var browser$3 = null;\n\n  var support$1 = {\n      get browser() {\n          if (typeof window === 'undefined' || browser$3) {\n              return browser$3;\n          }\n\n          browser$3 = matchUserAgent(window.navigator.userAgent);\n          return browser$3;\n      }\n  };\n\n  function template() {\n      throw new Error(\"Template implementation missing.\");\n  }\n\n  var now = Date.now || function() {\n      return new Date().getTime();\n  };\n\n  function throttle(fn, delay) {\n      var lastExecTime = 0;\n      var timeout;\n\n      if (!delay || delay <= 0) {\n          return fn;\n      }\n\n      var throttled = function() {\n          var elapsed = now() - lastExecTime;\n          var args = arguments;\n\n          var exec = function() {\n              fn.apply(null, args);\n              lastExecTime = now();\n          };\n\n          // first execution\n          if (!lastExecTime) {\n              return exec();\n          }\n\n          if (timeout) {\n              clearTimeout(timeout);\n          }\n\n          if (elapsed > delay) {\n              exec();\n          } else {\n              timeout = setTimeout(exec, delay - elapsed);\n          }\n      };\n\n      throttled.cancel = function() {\n          clearTimeout(timeout);\n      };\n\n      return throttled;\n  }\n\n  var namedColors = {\n      aliceblue: \"f0f8ff\", antiquewhite: \"faebd7\", aqua: \"00ffff\",\n      aquamarine: \"7fffd4\", azure: \"f0ffff\", beige: \"f5f5dc\",\n      bisque: \"ffe4c4\", black: \"000000\", blanchedalmond: \"ffebcd\",\n      blue: \"0000ff\", blueviolet: \"8a2be2\", brown: \"a52a2a\",\n      burlywood: \"deb887\", cadetblue: \"5f9ea0\", chartreuse: \"7fff00\",\n      chocolate: \"d2691e\", coral: \"ff7f50\", cornflowerblue: \"6495ed\",\n      cornsilk: \"fff8dc\", crimson: \"dc143c\", cyan: \"00ffff\",\n      darkblue: \"00008b\", darkcyan: \"008b8b\", darkgoldenrod: \"b8860b\",\n      darkgray: \"a9a9a9\", darkgrey: \"a9a9a9\", darkgreen: \"006400\",\n      darkkhaki: \"bdb76b\", darkmagenta: \"8b008b\", darkolivegreen: \"556b2f\",\n      darkorange: \"ff8c00\", darkorchid: \"9932cc\", darkred: \"8b0000\",\n      darksalmon: \"e9967a\", darkseagreen: \"8fbc8f\", darkslateblue: \"483d8b\",\n      darkslategray: \"2f4f4f\", darkslategrey: \"2f4f4f\", darkturquoise: \"00ced1\",\n      darkviolet: \"9400d3\", deeppink: \"ff1493\", deepskyblue: \"00bfff\",\n      dimgray: \"696969\", dimgrey: \"696969\", dodgerblue: \"1e90ff\",\n      firebrick: \"b22222\", floralwhite: \"fffaf0\", forestgreen: \"228b22\",\n      fuchsia: \"ff00ff\", gainsboro: \"dcdcdc\", ghostwhite: \"f8f8ff\",\n      gold: \"ffd700\", goldenrod: \"daa520\", gray: \"808080\",\n      grey: \"808080\", green: \"008000\", greenyellow: \"adff2f\",\n      honeydew: \"f0fff0\", hotpink: \"ff69b4\", indianred: \"cd5c5c\",\n      indigo: \"4b0082\", ivory: \"fffff0\", khaki: \"f0e68c\",\n      lavender: \"e6e6fa\", lavenderblush: \"fff0f5\", lawngreen: \"7cfc00\",\n      lemonchiffon: \"fffacd\", lightblue: \"add8e6\", lightcoral: \"f08080\",\n      lightcyan: \"e0ffff\", lightgoldenrodyellow: \"fafad2\", lightgray: \"d3d3d3\",\n      lightgrey: \"d3d3d3\", lightgreen: \"90ee90\", lightpink: \"ffb6c1\",\n      lightsalmon: \"ffa07a\", lightseagreen: \"20b2aa\", lightskyblue: \"87cefa\",\n      lightslategray: \"778899\", lightslategrey: \"778899\", lightsteelblue: \"b0c4de\",\n      lightyellow: \"ffffe0\", lime: \"00ff00\", limegreen: \"32cd32\",\n      linen: \"faf0e6\", magenta: \"ff00ff\", maroon: \"800000\",\n      mediumaquamarine: \"66cdaa\", mediumblue: \"0000cd\", mediumorchid: \"ba55d3\",\n      mediumpurple: \"9370d8\", mediumseagreen: \"3cb371\", mediumslateblue: \"7b68ee\",\n      mediumspringgreen: \"00fa9a\", mediumturquoise: \"48d1cc\", mediumvioletred: \"c71585\",\n      midnightblue: \"191970\", mintcream: \"f5fffa\", mistyrose: \"ffe4e1\",\n      moccasin: \"ffe4b5\", navajowhite: \"ffdead\", navy: \"000080\",\n      oldlace: \"fdf5e6\", olive: \"808000\", olivedrab: \"6b8e23\",\n      orange: \"ffa500\", orangered: \"ff4500\", orchid: \"da70d6\",\n      palegoldenrod: \"eee8aa\", palegreen: \"98fb98\", paleturquoise: \"afeeee\",\n      palevioletred: \"d87093\", papayawhip: \"ffefd5\", peachpuff: \"ffdab9\",\n      peru: \"cd853f\", pink: \"ffc0cb\", plum: \"dda0dd\",\n      powderblue: \"b0e0e6\", purple: \"800080\", red: \"ff0000\",\n      rosybrown: \"bc8f8f\", royalblue: \"4169e1\", saddlebrown: \"8b4513\",\n      salmon: \"fa8072\", sandybrown: \"f4a460\", seagreen: \"2e8b57\",\n      seashell: \"fff5ee\", sienna: \"a0522d\", silver: \"c0c0c0\",\n      skyblue: \"87ceeb\", slateblue: \"6a5acd\", slategray: \"708090\",\n      slategrey: \"708090\", snow: \"fffafa\", springgreen: \"00ff7f\",\n      steelblue: \"4682b4\", tan: \"d2b48c\", teal: \"008080\",\n      thistle: \"d8bfd8\", tomato: \"ff6347\", turquoise: \"40e0d0\",\n      violet: \"ee82ee\", wheat: \"f5deb3\", white: \"ffffff\",\n      whitesmoke: \"f5f5f5\", yellow: \"ffff00\", yellowgreen: \"9acd32\"\n  };\n\n  var browser$2 = support$1.browser;\n\n  var matchNamedColor = function (color) {\n      var colorNames = Object.keys(namedColors);\n      colorNames.push(\"transparent\");\n\n      var regexp = new RegExp(\"^(\" + colorNames.join(\"|\") + \")(\\\\W|$)\", \"i\");\n      matchNamedColor = function (color) { return regexp.exec(color); };\n\n      return regexp.exec(color);\n  };\n\n  var BaseColor = (function (Class) {\n      function BaseColor() { Class.call(this); }\n\n      if ( Class ) BaseColor.__proto__ = Class;\n      BaseColor.prototype = Object.create( Class && Class.prototype );\n      BaseColor.prototype.constructor = BaseColor;\n      BaseColor.prototype.toHSV = function toHSV () { return this; };\n\n      BaseColor.prototype.toRGB = function toRGB () { return this; };\n\n      BaseColor.prototype.toHex = function toHex (options) { return this.toBytes().toHex(options); };\n\n      BaseColor.prototype.toBytes = function toBytes () { return this; };\n\n      BaseColor.prototype.toCss = function toCss (options) { return \"#\" + this.toHex(options); };\n\n      BaseColor.prototype.toCssRgba = function toCssRgba () {\n          var rgb = this.toBytes();\n          return (\"rgba(\" + (rgb.r) + \", \" + (rgb.g) + \", \" + (rgb.b) + \", \" + (parseFloat((Number(this.a)).toFixed(3))) + \")\");\n      };\n\n      BaseColor.prototype.toDisplay = function toDisplay () {\n          if (browser$2.msie && browser$2.version < 9) {\n              return this.toCss(); // no RGBA support; does it support any opacity in colors?\n          }\n          return this.toCssRgba();\n      };\n\n      BaseColor.prototype.equals = function equals (c) {\n          return c === this || ((c !== null && c !== undefined) && this.toCssRgba() === parseColor$2(c).toCssRgba());\n      };\n\n      BaseColor.prototype.diff = function diff (other) {\n          if (other === null) {\n              return NaN;\n          }\n\n          var c1 = this.toBytes();\n          var c2 = other.toBytes();\n\n          return Math.sqrt(Math.pow((c1.r - c2.r) * 0.30, 2) +\n                           Math.pow((c1.g - c2.g) * 0.59, 2) +\n                           Math.pow((c1.b - c2.b) * 0.11, 2));\n      };\n\n      BaseColor.prototype.clone = function clone () {\n          var c = this.toBytes();\n          if (c === this) {\n              c = new Bytes(c.r, c.g, c.b, c.a);\n          }\n\n          return c;\n      };\n\n      return BaseColor;\n  }(Class));\n\n  var RGB = (function (BaseColor) {\n      function RGB(r, g, b, a) {\n          BaseColor.call(this);\n\n          this.r = r;\n          this.g = g;\n          this.b = b;\n          this.a = a;\n      }\n\n      if ( BaseColor ) RGB.__proto__ = BaseColor;\n      RGB.prototype = Object.create( BaseColor && BaseColor.prototype );\n      RGB.prototype.constructor = RGB;\n\n      RGB.prototype.toHSV = function toHSV () {\n          var ref = this;\n          var r = ref.r;\n          var g = ref.g;\n          var b = ref.b;\n          var min = Math.min(r, g, b);\n          var max = Math.max(r, g, b);\n          var delta = max - min;\n          var v = max;\n          var h, s;\n\n          if (delta === 0) {\n              return new HSV(0, 0, v, this.a);\n          }\n\n          if (max !== 0) {\n              s = delta / max;\n              if (r === max) {\n                  h = (g - b) / delta;\n              } else if (g === max) {\n                  h = 2 + (b - r) / delta;\n              } else {\n                  h = 4 + (r - g) / delta;\n              }\n\n              h *= 60;\n              if (h < 0) {\n                  h += 360;\n              }\n          } else {\n              s = 0;\n              h = -1;\n          }\n\n          return new HSV(h, s, v, this.a);\n      };\n\n      RGB.prototype.toHSL = function toHSL () {\n          var ref = this;\n          var r = ref.r;\n          var g = ref.g;\n          var b = ref.b;\n          var max = Math.max(r, g, b);\n          var min = Math.min(r, g, b);\n          var h, s, l = (max + min) / 2;\n\n          if (max === min) {\n              h = s = 0;\n          } else {\n              var d = max - min;\n              s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n              switch (max) {\n              case r: h = (g - b) / d + (g < b ? 6 : 0); break;\n              case g: h = (b - r) / d + 2; break;\n              case b: h = (r - g) / d + 4; break;\n              default: break;\n              }\n          }\n\n          return new HSL(h * 60, s * 100, l * 100, this.a);\n      };\n\n      RGB.prototype.toBytes = function toBytes () {\n          return new Bytes(this.r * 255, this.g * 255, this.b * 255, this.a);\n      };\n\n      return RGB;\n  }(BaseColor));\n\n  var Bytes = (function (RGB) {\n      function Bytes(r, g, b, a) {\n          RGB.call(this, Math.round(r), Math.round(g), Math.round(b), a);\n      }\n\n      if ( RGB ) Bytes.__proto__ = RGB;\n      Bytes.prototype = Object.create( RGB && RGB.prototype );\n      Bytes.prototype.constructor = Bytes;\n\n      Bytes.prototype.toRGB = function toRGB () {\n          return new RGB(this.r / 255, this.g / 255, this.b / 255, this.a);\n      };\n\n      Bytes.prototype.toHSV = function toHSV () {\n          return this.toRGB().toHSV();\n      };\n\n      Bytes.prototype.toHSL = function toHSL () {\n          return this.toRGB().toHSL();\n      };\n\n      Bytes.prototype.toHex = function toHex (options) {\n          var value = hex(this.r, 2) + hex(this.g, 2) + hex(this.b, 2);\n\n          if (options && options.alpha) {\n              value += hex(Math.round(this.a * 255), 2);\n          }\n\n          return value;\n      };\n\n      Bytes.prototype.toBytes = function toBytes () {\n          return this;\n      };\n\n      return Bytes;\n  }(RGB));\n\n  function hex(n, width, pad) {\n      if ( pad === void 0 ) pad = \"0\";\n\n      var result = n.toString(16);\n      while (width > result.length) {\n          result = pad + result;\n      }\n\n      return result;\n  }\n\n  var HSV = (function (BaseColor) {\n      function HSV(h, s, v, a) {\n          BaseColor.call(this);\n\n          this.h = h;\n          this.s = s;\n          this.v = v;\n          this.a = a;\n      }\n\n      if ( BaseColor ) HSV.__proto__ = BaseColor;\n      HSV.prototype = Object.create( BaseColor && BaseColor.prototype );\n      HSV.prototype.constructor = HSV;\n\n      HSV.prototype.toRGB = function toRGB () {\n          var ref = this;\n          var h = ref.h;\n          var s = ref.s;\n          var v = ref.v;\n          var r, g, b;\n\n          if (s === 0) {\n              r = g = b = v;\n          } else {\n              h /= 60;\n\n              var i = Math.floor(h);\n              var f = h - i;\n              var p = v * (1 - s);\n              var q = v * (1 - s * f);\n              var t = v * (1 - s * (1 - f));\n\n              switch (i) {\n              case 0: r = v; g = t; b = p; break;\n              case 1: r = q; g = v; b = p; break;\n              case 2: r = p; g = v; b = t; break;\n              case 3: r = p; g = q; b = v; break;\n              case 4: r = t; g = p; b = v; break;\n              default: r = v; g = p; b = q; break;\n              }\n          }\n\n          return new RGB(r, g, b, this.a);\n      };\n\n      HSV.prototype.toHSL = function toHSL () {\n          return this.toRGB().toHSL();\n      };\n\n      HSV.prototype.toBytes = function toBytes () {\n          return this.toRGB().toBytes();\n      };\n\n      return HSV;\n  }(BaseColor));\n\n  var HSL = (function (BaseColor) {\n      function HSL(h, s, l, a) {\n          BaseColor.call(this);\n\n          this.h = h;\n          this.s = s;\n          this.l = l;\n          this.a = a;\n      }\n\n      if ( BaseColor ) HSL.__proto__ = BaseColor;\n      HSL.prototype = Object.create( BaseColor && BaseColor.prototype );\n      HSL.prototype.constructor = HSL;\n\n      HSL.prototype.toRGB = function toRGB () {\n          var h = this.h / 360;\n          var s = this.s / 100;\n          var l = this.l / 100;\n          var r, g, b;\n\n          if (s === 0) {\n              r = g = b = l; // achromatic\n          } else {\n              var q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n              var p = 2 * l - q;\n              r = hue2rgb(p, q, h + 1 / 3);\n              g = hue2rgb(p, q, h);\n              b = hue2rgb(p, q, h - 1 / 3);\n          }\n\n          return new RGB(r, g, b, this.a);\n      };\n\n      HSL.prototype.toHSV = function toHSV () {\n          return this.toRGB().toHSV();\n      };\n\n      HSL.prototype.toBytes = function toBytes () {\n          return this.toRGB().toBytes();\n      };\n\n      return HSL;\n  }(BaseColor));\n\n  function hue2rgb(p, q, s) {\n      var t = s;\n\n      if (t < 0) {\n          t += 1;\n      }\n\n      if (t > 1) {\n          t -= 1;\n      }\n\n      if (t < 1 / 6) {\n          return p + (q - p) * 6 * t;\n      }\n\n      if (t < 1 / 2) {\n          return q;\n      }\n\n      if (t < 2 / 3) {\n          return p + (q - p) * (2 / 3 - t) * 6;\n      }\n\n      return p;\n  }\n\n  function alphaFromHex(a) {\n      return parseFloat(parseFloat(parseInt(a, 16) / 255 ).toFixed(3));\n  }\n\n  function parseColor$2(value, safe) {\n      var m, ret;\n\n      if (!value || value === \"none\") {\n          return null;\n      }\n\n      if (value instanceof BaseColor) {\n          return value;\n      }\n\n      var color = value.toLowerCase();\n      if ((m = matchNamedColor(color))) {\n          if (m[1] === \"transparent\") {\n              color = new RGB(1, 1, 1, 0);\n          } else {\n              color = parseColor$2(namedColors[m[1]], safe);\n          }\n          color.match = [ m[1] ];\n          return color;\n      }\n      if ((m = /^#?([0-9a-f]{2})([0-9a-f]{2})([0-9a-f]{2})\\b/i.exec(color))) {\n          ret = new Bytes(parseInt(m[1], 16),\n              parseInt(m[2], 16),\n              parseInt(m[3], 16), 1);\n      } else if ((m = /^#?([0-9a-f])([0-9a-f])([0-9a-f])\\b/i.exec(color))) {\n          ret = new Bytes(parseInt(m[1] + m[1], 16),\n              parseInt(m[2] + m[2], 16),\n              parseInt(m[3] + m[3], 16), 1);\n      } else if ((m = /^#?([0-9a-f])([0-9a-f])([0-9a-f])([0-9a-f])\\b/i.exec(color))) { // Parse 4 digit hex color\n          ret = new Bytes(parseInt(m[1] + m[1], 16),\n              parseInt(m[2] + m[2], 16),\n              parseInt(m[3] + m[3], 16),\n              alphaFromHex(m[4] + m[4]));\n      } else if ((m = /^#?([0-9a-f]{2})([0-9a-f]{2})([0-9a-f]{2})([0-9a-f]{2})\\b/i.exec(color))) { // Parse 8 digit hex color\n          ret = new Bytes(parseInt(m[1], 16),\n              parseInt(m[2], 16),\n              parseInt(m[3], 16),\n              alphaFromHex(m[4]));\n      } else if ((m = /^rgb\\(\\s*([0-9]+)\\s*,\\s*([0-9]+)\\s*,\\s*([0-9]+)\\s*\\)/.exec(color))) {\n          ret = new Bytes(parseInt(m[1], 10),\n              parseInt(m[2], 10),\n              parseInt(m[3], 10), 1);\n      } else if ((m = /^rgba\\(\\s*([0-9]+)\\s*,\\s*([0-9]+)\\s*,\\s*([0-9]+)\\s*,\\s*([0-9.]+)\\s*\\)/.exec(color))) {\n          ret = new Bytes(parseInt(m[1], 10),\n              parseInt(m[2], 10),\n              parseInt(m[3], 10), parseFloat(m[4]));\n      } else if ((m = /^rgb\\(\\s*([0-9]*\\.?[0-9]+)%\\s*,\\s*([0-9]*\\.?[0-9]+)%\\s*,\\s*([0-9]*\\.?[0-9]+)%\\s*\\)/.exec(color))) {\n          ret = new RGB(parseFloat(m[1]) / 100,\n              parseFloat(m[2]) / 100,\n              parseFloat(m[3]) / 100, 1);\n      } else if ((m = /^rgba\\(\\s*([0-9]*\\.?[0-9]+)%\\s*,\\s*([0-9]*\\.?[0-9]+)%\\s*,\\s*([0-9]*\\.?[0-9]+)%\\s*,\\s*([0-9.]+)\\s*\\)/.exec(color))) {\n          ret = new RGB(parseFloat(m[1]) / 100,\n              parseFloat(m[2]) / 100,\n              parseFloat(m[3]) / 100, parseFloat(m[4]));\n      } else if ((m = /^color\\(\\s*srgb\\s*([0-9]*\\.?[0-9]+)\\s+([0-9]*\\.?[0-9]+)\\s+([0-9]*\\.?[0-9]+)\\s*(\\/\\s+([0-9]*\\.?[0-9]+))?\\)/.exec(color))) {\n          ret = new RGB(\n              parseFloat(m[1]),\n              parseFloat(m[2]),\n              parseFloat(m[3]),\n              parseFloat(m[5] || '1'));\n      }\n\n      if (ret) {\n          ret.match = m;\n      } else if (!safe) {\n          throw new Error(\"Cannot parse color: \" + color);\n      }\n\n      return ret;\n  }\n\n  var DARK_TRESHOLD = 180;\n\n  var Color = (function (Class) {\n      function Color(value) {\n          var this$1$1 = this;\n\n          Class.call(this);\n\n          if (arguments.length === 1) {\n              var formats = Color.formats;\n              var resolvedColor = this.resolveColor(value);\n\n              for (var idx = 0; idx < formats.length; idx++) {\n                  var formatRegex = formats[idx].re;\n                  var processor = formats[idx].process;\n                  var parts = formatRegex.exec(resolvedColor);\n\n                  if (parts) {\n                      var channels = processor(parts);\n                      this$1$1.r = channels[0];\n                      this$1$1.g = channels[1];\n                      this$1$1.b = channels[2];\n                  }\n              }\n          } else {\n              this.r = arguments[0];\n              this.g = arguments[1];\n              this.b = arguments[2];\n          }\n\n          this.r = this.normalizeByte(this.r);\n          this.g = this.normalizeByte(this.g);\n          this.b = this.normalizeByte(this.b);\n      }\n\n      if ( Class ) Color.__proto__ = Class;\n      Color.prototype = Object.create( Class && Class.prototype );\n      Color.prototype.constructor = Color;\n\n      Color.prototype.toHex = function toHex () {\n          var pad = this.padDigit;\n          var r = this.r.toString(16);\n          var g = this.g.toString(16);\n          var b = this.b.toString(16);\n\n          return \"#\" + pad(r) + pad(g) + pad(b);\n      };\n\n      Color.prototype.resolveColor = function resolveColor (value) {\n          var color = value || \"black\";\n\n          if (color.charAt(0) === \"#\") {\n              color = color.substr(1, 6);\n          }\n\n          color = color.replace(/ /g, \"\");\n          color = color.toLowerCase();\n          color = Color.namedColors[color] || color;\n\n          return color;\n      };\n\n      Color.prototype.normalizeByte = function normalizeByte (value) {\n          if (value < 0 || isNaN(value)) {\n              return 0;\n          }\n\n          return value > 255 ? 255 : value;\n      };\n\n      Color.prototype.padDigit = function padDigit (value) {\n          return (value.length === 1) ? \"0\" + value : value;\n      };\n\n      Color.prototype.brightness = function brightness (value) {\n          var round = Math.round;\n\n          this.r = round(this.normalizeByte(this.r * value));\n          this.g = round(this.normalizeByte(this.g * value));\n          this.b = round(this.normalizeByte(this.b * value));\n\n          return this;\n      };\n\n      Color.prototype.percBrightness = function percBrightness () {\n          return Math.sqrt(0.241 * this.r * this.r + 0.691 * this.g * this.g + 0.068 * this.b * this.b);\n      };\n\n      Color.prototype.isDark = function isDark () {\n          return this.percBrightness() < DARK_TRESHOLD;\n      };\n\n      Color.fromBytes = function fromBytes (r, g, b, a) {\n          return new Bytes(r, g, b, a != null ? a : 1);\n      };\n\n      Color.fromRGB = function fromRGB (r, g, b, a) {\n          return new RGB(r, g, b, a != null ? a : 1);\n      };\n\n      Color.fromHSV = function fromHSV (h, s, v, a) {\n          return new HSV(h, s, v, a != null ? a : 1);\n      };\n\n      Color.fromHSL = function fromHSL (h, s, l, a) {\n          return new HSL(h, s, l, a != null ? a : 1);\n      };\n\n      return Color;\n  }(Class));\n\n  Color.formats = [ {\n      re: /^rgb\\((\\d{1,3}),\\s*(\\d{1,3}),\\s*(\\d{1,3})\\)$/,\n      process: function(parts) {\n          return [\n              parseInt(parts[1], 10), parseInt(parts[2], 10), parseInt(parts[3], 10)\n          ];\n      }\n  }, {\n      re: /^(\\w{2})(\\w{2})(\\w{2})$/,\n      process: function(parts) {\n          return [\n              parseInt(parts[1], 16), parseInt(parts[2], 16), parseInt(parts[3], 16)\n          ];\n      }\n  }, {\n      re: /^(\\w{1})(\\w{1})(\\w{1})$/,\n      process: function(parts) {\n          return [\n              parseInt(parts[1] + parts[1], 16),\n              parseInt(parts[2] + parts[2], 16),\n              parseInt(parts[3] + parts[3], 16)\n          ];\n      }\n  } ];\n\n  Color.namedColors = namedColors;\n\n  var HasObservers = (function (Class) {\n      function HasObservers () {\n          Class.apply(this, arguments);\n      }\n\n      if ( Class ) HasObservers.__proto__ = Class;\n      HasObservers.prototype = Object.create( Class && Class.prototype );\n      HasObservers.prototype.constructor = HasObservers;\n\n      HasObservers.prototype.observers = function observers () {\n          this._observers = this._observers || [];\n          return this._observers;\n      };\n\n      HasObservers.prototype.addObserver = function addObserver (element) {\n          if (!this._observers) {\n              this._observers = [ element ];\n          } else {\n              this._observers.push(element);\n          }\n          return this;\n      };\n\n      HasObservers.prototype.removeObserver = function removeObserver (element) {\n          var observers = this.observers();\n          var index = observers.indexOf(element);\n          if (index !== -1) {\n              observers.splice(index, 1);\n          }\n          return this;\n      };\n\n      HasObservers.prototype.trigger = function trigger (methodName, event) {\n          var observers = this._observers;\n\n          if (observers && !this._suspended) {\n              for (var idx = 0; idx < observers.length; idx++) {\n                  var observer = observers[idx];\n                  if (observer[methodName]) {\n                      observer[methodName](event);\n                  }\n              }\n          }\n          return this;\n      };\n\n      HasObservers.prototype.optionsChange = function optionsChange (e) {\n          if ( e === void 0 ) e = {};\n\n          e.element = this;\n          this.trigger(\"optionsChange\", e);\n      };\n\n      HasObservers.prototype.geometryChange = function geometryChange () {\n          this.trigger(\"geometryChange\", {\n              element: this\n          });\n      };\n\n      HasObservers.prototype.suspend = function suspend () {\n          this._suspended = (this._suspended || 0) + 1;\n          return this;\n      };\n\n      HasObservers.prototype.resume = function resume () {\n          this._suspended = Math.max((this._suspended || 0) - 1, 0);\n          return this;\n      };\n\n      HasObservers.prototype._observerField = function _observerField (field, value) {\n          if (this[field]) {\n              this[field].removeObserver(this);\n          }\n          this[field] = value;\n          value.addObserver(this);\n      };\n\n      return HasObservers;\n  }(Class));\n\n  function append(first, second) {\n      first.push.apply(first, second);\n      return first;\n  }\n\n  /* eslint-disable key-spacing,no-multi-spaces,no-param-reassign */\n\n  var literals = {\n      1    : \"i\",       10   : \"x\",       100  : \"c\",\n      2    : \"ii\",      20   : \"xx\",      200  : \"cc\",\n      3    : \"iii\",     30   : \"xxx\",     300  : \"ccc\",\n      4    : \"iv\",      40   : \"xl\",      400  : \"cd\",\n      5    : \"v\",       50   : \"l\",       500  : \"d\",\n      6    : \"vi\",      60   : \"lx\",      600  : \"dc\",\n      7    : \"vii\",     70   : \"lxx\",     700  : \"dcc\",\n      8    : \"viii\",    80   : \"lxxx\",    800  : \"dccc\",\n      9    : \"ix\",      90   : \"xc\",      900  : \"cm\",\n      1000 : \"m\"\n  };\n\n  function arabicToRoman(n) {\n      var values = [ 1000,\n          900 , 800, 700, 600, 500, 400, 300, 200, 100,\n          90  , 80 , 70 , 60 , 50 , 40 , 30 , 20 , 10 ,\n          9   , 8  , 7  , 6  , 5  , 4  , 3  , 2  , 1 ];\n\n      var roman = \"\";\n      while (n > 0) {\n          if (n < values[0]) {\n              values.shift();\n          } else {\n              roman += literals[values[0]];\n              n -= values[0];\n          }\n      }\n      return roman;\n  }\n\n  function createPromise() {\n      var resolveFn, rejectFn;\n      var promise = new Promise(function (resolve, reject) {\n          resolveFn = function (data) {\n              promise._state = \"resolved\";\n              resolve(data);\n              return promise;\n          };\n          rejectFn = function (data) {\n              promise._state = \"rejected\";\n              reject(data);\n\n              return promise;\n          };\n      });\n      promise._state = \"pending\";\n      promise.resolve = resolveFn;\n      promise.reject = rejectFn;\n      promise.state = function () { return promise._state; };\n\n      return promise;\n  }\n\n  var UNDEFINED = \"undefined\";\n\n  function defined(value) {\n      return typeof value !== UNDEFINED;\n  }\n\n  var defId = 1;\n\n  function definitionId() {\n      return \"kdef\" + defId++;\n  }\n\n  var DEG_TO_RAD = Math.PI / 180;\n  var MAX_NUM = Number.MAX_VALUE;\n  var MIN_NUM = -Number.MAX_VALUE;\n\n  function deg(radians) {\n      return radians / DEG_TO_RAD;\n  }\n\n  var fromCharCode = String.fromCharCode;\n\n  var BOM = '\\xfe\\xff';\n\n  // Encodes a string as UTF-8\n  function encodeUTF8(input) {\n      var output = \"\";\n\n      for (var i = 0; i < input.length; i++) {\n          var code = input.charCodeAt(i);\n\n          if (0xD800 <= code && code <= 0xDBFF) {\n              var hi = code;\n              var low = input.charCodeAt(++i);\n\n              if (!isNaN(low)) {\n                  // Combine high and low surrogate\n                  // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/charCodeAt\n                  code = (hi - 0xD800) * 0x400 +\n                         (low - 0xDC00) + 0x10000;\n              }\n          }\n\n          if (code < 0x80) {\n              // One byte\n              output += fromCharCode(code);\n          } else if (code < 0x800) {\n              // Two bytes\n              output += fromCharCode(0xC0 | (code >>> 6));\n              output += fromCharCode(0x80 | (code & 0x3f));\n          } else if (code < 0x10000) {\n              // Three bytes\n              output += fromCharCode(0xE0 | (code >>> 12));\n              output += fromCharCode(0x80 | (code >>> 6 & 0x3f));\n              output += fromCharCode(0x80 | (code & 0x3f));\n          } else if (code < 0x10FFFF) {\n              // Four bytes\n              output += fromCharCode(0xF0 | (code >>> 18));\n              output += fromCharCode(0x80 | (code >>> 12 & 0x3f));\n              output += fromCharCode(0x80 | (code >>> 6 & 0x3f));\n              output += fromCharCode(0x80 | (code & 0x3f));\n          }\n      }\n\n      return output;\n  }\n\n  function encodeUnit(codeUnit) {\n      return fromCharCode(codeUnit >> 8) + fromCharCode(codeUnit & 0x00ff);\n  }\n\n  // Encodes a string as UTF-16 big-endian\n  function encodeUTF16BE(input) {\n      var output = '';\n\n      for (var i = 0; i < input.length; i++) {\n          var c = input.charCodeAt(i);\n\n          if (c < 0xFFFF) {\n              output += encodeUnit(c);\n          } else {\n              var lead = ((c - 0x10000) >> 10) + 0xD800;\n              var trail = ((c - 0x10000) & 0x3FF) + 0xDC00;\n              output += encodeUnit(lead);\n              output += encodeUnit(trail);\n          }\n      }\n\n      return output;\n  }\n\n  var KEY_STR = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n\n  function encodeBase64(input) {\n      var output = \"\";\n      var i = 0;\n\n      var utfInput = encodeUTF8(input);\n\n      while (i < utfInput.length) {\n          var chr1 = utfInput.charCodeAt(i++);\n          var chr2 = utfInput.charCodeAt(i++);\n          var chr3 = utfInput.charCodeAt(i++);\n\n          var enc1 = chr1 >> 2;\n          var enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);\n          var enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);\n          var enc4 = chr3 & 63;\n\n          if (isNaN(chr2)) {\n              enc3 = enc4 = 64;\n          } else if (isNaN(chr3)) {\n              enc4 = 64;\n          }\n\n          output = output +\n              KEY_STR.charAt(enc1) + KEY_STR.charAt(enc2) +\n              KEY_STR.charAt(enc3) + KEY_STR.charAt(enc4);\n      }\n\n      return output;\n  }\n\n  function eventCoordinates(e) {\n      if (defined((e.x || {}).location)) {\n          return {\n              x: e.x.location,\n              y: e.y.location\n          };\n      }\n\n      return {\n          x: e.pageX || e.clientX || 0,\n          y: e.pageY || e.clientY || 0\n      };\n  }\n\n  function eventElement(e) {\n      if ( e === void 0 ) e = {};\n\n      return e.touch ? e.touch.initialTouch : e.target;\n  }\n\n  function isTransparent(color) {\n      return color === \"\" || color === null || color === \"none\" || color === \"transparent\" || !defined(color);\n  }\n\n  function last(array) {\n      if (array) {\n          return array[array.length - 1];\n      }\n  }\n\n  function limitValue(value, min, max) {\n      return Math.max(Math.min(value, max), min);\n  }\n\n  /* eslint-disable no-multi-spaces, key-spacing, indent, camelcase, space-before-blocks, eqeqeq, brace-style */\n  /* eslint-disable space-infix-ops, space-before-function-paren, array-bracket-spacing, object-curly-spacing */\n  /* eslint-disable no-nested-ternary, max-params, default-case, no-else-return, no-empty */\n  /* eslint-disable no-param-reassign, no-var, block-scoped-var */\n\n  // mergeSort is stable.\n  function mergeSort(a, cmp) {\n      if (a.length < 2) {\n          return a.slice();\n      }\n      function merge(a, b) {\n          var r = [], ai = 0, bi = 0, i = 0;\n          while (ai < a.length && bi < b.length) {\n              if (cmp(a[ai], b[bi]) <= 0) {\n                  r[i++] = a[ai++];\n              } else {\n                  r[i++] = b[bi++];\n              }\n          }\n          if (ai < a.length) {\n              r.push.apply(r, a.slice(ai));\n          }\n          if (bi < b.length) {\n              r.push.apply(r, b.slice(bi));\n          }\n          return r;\n      }\n      return (function sort(a) {\n          if (a.length <= 1) {\n              return a;\n          }\n          var m = Math.floor(a.length / 2);\n          var left = a.slice(0, m);\n          var right = a.slice(m);\n          left = sort(left);\n          right = sort(right);\n          return merge(left, right);\n      })(a);\n  }\n\n  function promiseAll(promises) {\n      return Promise.all(promises);\n  }\n\n  function rad(degrees) {\n      return degrees * DEG_TO_RAD;\n  }\n\n  function pow$1(p) {\n      if (p) {\n          return Math.pow(10, p);\n      }\n\n      return 1;\n  }\n\n  function round(value, precision) {\n      var power = pow$1(precision);\n      return Math.round(value * power) / power;\n  }\n\n  function valueOrDefault(value, defaultValue) {\n      return defined(value) ? value : defaultValue;\n  }\n\n  function bindEvents(element, events) {\n      for (var eventName in events) {\n          var eventNames = eventName.trim().split(\" \");\n          for (var idx = 0; idx < eventNames.length; idx++) {\n              element.addEventListener(eventNames[idx], events[eventName], false);\n          }\n      }\n  }\n\n  function elementOffset(element) {\n      var box = element.getBoundingClientRect();\n\n      var documentElement = document.documentElement;\n\n      return {\n          top: box.top + (window.pageYOffset || documentElement.scrollTop) - (documentElement.clientTop || 0),\n          left: box.left + (window.pageXOffset || documentElement.scrollLeft) - (documentElement.clientLeft || 0)\n      };\n  }\n\n  function elementStyles(element, styles) {\n      var result = {};\n      var style = window.getComputedStyle(element) || {};\n      var stylesArray = Array.isArray(styles) ? styles : [ styles ];\n\n      for (var idx = 0; idx < stylesArray.length; idx++) {\n          var field = stylesArray[idx];\n          result[field] = style[field];\n      }\n\n      return result;\n  }\n\n  function getPixels(value) {\n      if (isNaN(value)) {\n          return value;\n      }\n      return value + \"px\";\n  }\n\n  function elementSize(element, size) {\n      if (size) {\n          var width = size.width;\n          var height = size.height;\n\n          if (defined(width)) {\n              element.style.width = getPixels(width);\n          }\n\n          if (defined(height)) {\n              element.style.height = getPixels(height);\n          }\n\n      } else {\n          var size$1 = elementStyles(element, [ 'width', 'height' ]);\n\n          return {\n              width: parseInt(size$1.width, 10),\n              height: parseInt(size$1.height, 10)\n          };\n      }\n  }\n\n  function unbindEvents(element, events) {\n      if ( events === void 0 ) events = {};\n\n      for (var name in events) {\n          var eventNames = name.trim().split(\" \");\n          for (var idx = 0; idx < eventNames.length; idx++) {\n              element.removeEventListener(eventNames[idx], events[name], false);\n          }\n      }\n  }\n\n  function elementPadding(element) {\n      var ref = elementStyles(element, [ \"paddingLeft\", \"paddingTop\" ]);\n      var paddingLeft = ref.paddingLeft;\n      var paddingTop = ref.paddingTop;\n      return {\n          top: parseFloat(paddingTop),\n          left: parseFloat(paddingLeft)\n      };\n  }\n\n  var Matrix = (function (Class) {\n      function Matrix(a, b, c, d, e, f) {\n          if ( a === void 0 ) a = 0;\n          if ( b === void 0 ) b = 0;\n          if ( c === void 0 ) c = 0;\n          if ( d === void 0 ) d = 0;\n          if ( e === void 0 ) e = 0;\n          if ( f === void 0 ) f = 0;\n\n          Class.call(this);\n\n          this.a = a;\n          this.b = b;\n          this.c = c;\n          this.d = d;\n          this.e = e;\n          this.f = f;\n      }\n\n      if ( Class ) Matrix.__proto__ = Class;\n      Matrix.prototype = Object.create( Class && Class.prototype );\n      Matrix.prototype.constructor = Matrix;\n\n      Matrix.prototype.multiplyCopy = function multiplyCopy (matrix) {\n          return new Matrix(\n              this.a * matrix.a + this.c * matrix.b,\n              this.b * matrix.a + this.d * matrix.b,\n              this.a * matrix.c + this.c * matrix.d,\n              this.b * matrix.c + this.d * matrix.d,\n              this.a * matrix.e + this.c * matrix.f + this.e,\n              this.b * matrix.e + this.d * matrix.f + this.f\n          );\n      };\n\n      Matrix.prototype.invert = function invert () {\n          var ref = this;\n          var a = ref.a;\n          var b = ref.b;\n          var d = ref.c;\n          var e = ref.d;\n          var g = ref.e;\n          var h = ref.f;\n          var det = a * e - b * d;\n\n          if (det === 0) {\n              return null;\n          }\n\n          return new Matrix(e / det, -b / det, -d / det, a / det,\n              (d * h - e * g) / det, (b * g - a * h) / det);\n      };\n\n      Matrix.prototype.clone = function clone () {\n          return new Matrix(this.a, this.b, this.c, this.d, this.e, this.f);\n      };\n\n      Matrix.prototype.equals = function equals (other) {\n          if (!other) {\n              return false;\n          }\n\n          return this.a === other.a && this.b === other.b &&\n              this.c === other.c && this.d === other.d &&\n              this.e === other.e && this.f === other.f;\n      };\n\n      Matrix.prototype.round = function round$1 (precision) {\n          this.a = round(this.a, precision);\n          this.b = round(this.b, precision);\n          this.c = round(this.c, precision);\n          this.d = round(this.d, precision);\n          this.e = round(this.e, precision);\n          this.f = round(this.f, precision);\n\n          return this;\n      };\n\n      Matrix.prototype.toArray = function toArray (precision) {\n          var result = [ this.a, this.b, this.c, this.d, this.e, this.f ];\n\n          if (defined(precision)) {\n              for (var i = 0; i < result.length; i++) {\n                  result[i] = round(result[i], precision);\n              }\n          }\n\n          return result;\n      };\n\n      Matrix.prototype.toString = function toString (precision, separator) {\n          if ( separator === void 0 ) separator = \",\";\n\n          return this.toArray(precision).join(separator);\n      };\n\n      Matrix.translate = function translate (x, y) {\n          return new Matrix(1, 0, 0, 1, x, y);\n      };\n\n      Matrix.unit = function unit () {\n          return new Matrix(1, 0, 0, 1, 0, 0);\n      };\n\n      Matrix.rotate = function rotate (angle, x, y) {\n          var matrix = new Matrix();\n          matrix.a = Math.cos(rad(angle));\n          matrix.b = Math.sin(rad(angle));\n          matrix.c = -matrix.b;\n          matrix.d = matrix.a;\n          matrix.e = (x - x * matrix.a + y * matrix.b) || 0;\n          matrix.f = (y - y * matrix.a - x * matrix.b) || 0;\n\n          return matrix;\n      };\n\n      Matrix.scale = function scale (scaleX, scaleY) {\n          return new Matrix(scaleX, 0, 0, scaleY, 0, 0);\n      };\n\n      return Matrix;\n  }(Class));\n\n  Matrix.IDENTITY = Matrix.unit();\n\n  var matrixRegexp = /matrix\\((.*)\\)/;\n\n  function parseMatrix(matrixString) {\n      var match = matrixString.match(matrixRegexp);\n      if (match === null || match.length !== 2) {\n          return Matrix.unit();\n      }\n\n      var members = match[1].split(',').map(function (x) { return parseFloat(x); });\n      return new (Function.prototype.bind.apply( Matrix, [ null ].concat( members) ));\n  }\n\n  function transformMatrix(element) {\n      var transform = getComputedStyle(element).transform;\n\n      if (transform === 'none') {\n          return Matrix.unit();\n      }\n\n      return parseMatrix(transform);\n  }\n\n  function elementScale(element) {\n      if (!element) {\n          return Matrix.unit();\n      }\n\n      var matrix = transformMatrix(element);\n      var parent = element.parentElement;\n      while (parent) {\n          var parentMatrix = transformMatrix(parent);\n          matrix = matrix.multiplyCopy(parentMatrix);\n          parent = parent.parentElement;\n      }\n\n      matrix.b = matrix.c = matrix.e = matrix.f = 0;\n      return matrix;\n  }\n\n  var LRUCache = (function (Class) {\n      function LRUCache(size) {\n          Class.call(this);\n\n          this._size = size;\n          this._length = 0;\n          this._map = {};\n      }\n\n      if ( Class ) LRUCache.__proto__ = Class;\n      LRUCache.prototype = Object.create( Class && Class.prototype );\n      LRUCache.prototype.constructor = LRUCache;\n\n      LRUCache.prototype.put = function put (key, value) {\n          var map = this._map;\n          var entry = { key: key, value: value };\n\n          map[key] = entry;\n\n          if (!this._head) {\n              this._head = this._tail = entry;\n          } else {\n              this._tail.newer = entry;\n              entry.older = this._tail;\n              this._tail = entry;\n          }\n\n          if (this._length >= this._size) {\n              map[this._head.key] = null;\n              this._head = this._head.newer;\n              this._head.older = null;\n          } else {\n              this._length++;\n          }\n      };\n\n      LRUCache.prototype.get = function get (key) {\n          var entry = this._map[key];\n\n          if (entry) {\n              if (entry === this._head && entry !== this._tail) {\n                  this._head = entry.newer;\n                  this._head.older = null;\n              }\n\n              if (entry !== this._tail) {\n                  if (entry.older) {\n                      entry.older.newer = entry.newer;\n                      entry.newer.older = entry.older;\n                  }\n\n                  entry.older = this._tail;\n                  entry.newer = null;\n\n                  this._tail.newer = entry;\n                  this._tail = entry;\n              }\n\n              return entry.value;\n          }\n      };\n\n      return LRUCache;\n  }(Class));\n\n  var REPLACE_REGEX = /\\r?\\n|\\r|\\t/g;\n  var SPACE$1 = ' ';\n\n  function normalizeText(text) {\n      return String(text).replace(REPLACE_REGEX, SPACE$1);\n  }\n\n  function objectKey(object) {\n      var parts = [];\n      for (var key in object) {\n          parts.push(key + object[key]);\n      }\n\n      return parts.sort().join(\"\");\n  }\n\n  // Computes FNV-1 hash\n  // See http://en.wikipedia.org/wiki/Fowler%E2%80%93Noll%E2%80%93Vo_hash_function\n  function hashKey(str) {\n      // 32-bit FNV-1 offset basis\n      // See http://isthe.com/chongo/tech/comp/fnv/#FNV-param\n      var hash = 0x811C9DC5;\n\n      for (var i = 0; i < str.length; ++i) {\n          hash += (hash << 1) + (hash << 4) + (hash << 7) + (hash << 8) + (hash << 24);\n          hash ^= str.charCodeAt(i);\n      }\n\n      return hash >>> 0;\n  }\n\n  function zeroSize() {\n      return { width: 0, height: 0, baseline: 0 };\n  }\n\n  var DEFAULT_OPTIONS$1 = {\n      baselineMarkerSize: 1\n  };\n\n  var defaultMeasureBox;\n\n  if (typeof document !== \"undefined\") {\n      defaultMeasureBox = document.createElement(\"div\");\n      defaultMeasureBox.style.setProperty(\"position\", \"absolute\", \"important\");\n      defaultMeasureBox.style.setProperty(\"top\", \"-4000px\", \"important\");\n      defaultMeasureBox.style.setProperty(\"width\", \"auto\", \"important\");\n      defaultMeasureBox.style.setProperty(\"height\", \"auto\", \"important\");\n      defaultMeasureBox.style.setProperty(\"padding\", \"0\", \"important\");\n      defaultMeasureBox.style.setProperty(\"margin\", \"0\", \"important\");\n      defaultMeasureBox.style.setProperty(\"border\", \"0\", \"important\");\n      defaultMeasureBox.style.setProperty(\"line-height\", \"normal\", \"important\");\n      defaultMeasureBox.style.setProperty(\"visibility\", \"hidden\", \"important\");\n      defaultMeasureBox.style.setProperty(\"white-space\", \"pre\", \"important\");\n  }\n\n  var TextMetrics = (function (Class) {\n      function TextMetrics(options) {\n          Class.call(this);\n\n          this._cache = new LRUCache(1000);\n          this.options = Object.assign({}, DEFAULT_OPTIONS$1, options);\n      }\n\n      if ( Class ) TextMetrics.__proto__ = Class;\n      TextMetrics.prototype = Object.create( Class && Class.prototype );\n      TextMetrics.prototype.constructor = TextMetrics;\n\n      TextMetrics.prototype.measure = function measure (text, style, options) {\n          if ( options === void 0 ) options = {};\n\n          if (typeof text === 'undefined' || text === null) {\n              return zeroSize();\n          }\n\n          var styleKey = objectKey(style);\n          var cacheKey = hashKey(text + styleKey);\n          var cachedResult = this._cache.get(cacheKey);\n\n          if (cachedResult) {\n              return cachedResult;\n          }\n\n          var size = zeroSize();\n          var measureBox = options.box || defaultMeasureBox;\n          var baselineMarker = this._baselineMarker().cloneNode(false);\n\n          for (var key in style) {\n              var value = style[key];\n              if (typeof value !== \"undefined\") {\n                  measureBox.style[key] = value;\n              }\n          }\n\n          var textStr = options.normalizeText !== false ? normalizeText(text) : String(text);\n\n          measureBox.textContent = textStr;\n          measureBox.appendChild(baselineMarker);\n          document.body.appendChild(measureBox);\n\n          if (textStr.length) {\n              size.width = measureBox.offsetWidth - this.options.baselineMarkerSize;\n              size.height = measureBox.offsetHeight;\n              size.baseline = baselineMarker.offsetTop + this.options.baselineMarkerSize;\n          }\n\n          if (size.width > 0 && size.height > 0) {\n              this._cache.put(cacheKey, size);\n          }\n\n          measureBox.parentNode.removeChild(measureBox);\n\n          return size;\n      };\n\n      TextMetrics.prototype._baselineMarker = function _baselineMarker () {\n          var marker = document.createElement(\"div\");\n          marker.style.display = \"inline-block\";\n          marker.style.verticalAlign = \"baseline\";\n          marker.style.width = this.options.baselineMarkerSize + \"px\";\n          marker.style.height = this.options.baselineMarkerSize + \"px\";\n          marker.style.overflow = \"hidden\";\n\n          return marker;\n      };\n\n      return TextMetrics;\n  }(Class));\n\n  TextMetrics.current = new TextMetrics();\n\n  function measureText(text, style, measureBox) {\n      return TextMetrics.current.measure(text, style, measureBox);\n  }\n\n  var util = /*#__PURE__*/Object.freeze({\n      __proto__: null,\n      DEG_TO_RAD: DEG_TO_RAD,\n      LRUCache: LRUCache,\n      MAX_NUM: MAX_NUM,\n      MIN_NUM: MIN_NUM,\n      TextMetrics: TextMetrics,\n      append: append,\n      arabicToRoman: arabicToRoman,\n      bindEvents: bindEvents,\n      createPromise: createPromise,\n      defined: defined,\n      definitionId: definitionId,\n      deg: deg,\n      elementOffset: elementOffset,\n      elementPadding: elementPadding,\n      elementScale: elementScale,\n      elementSize: elementSize,\n      elementStyles: elementStyles,\n      encodeBase64: encodeBase64,\n      eventCoordinates: eventCoordinates,\n      eventElement: eventElement,\n      hashKey: hashKey,\n      isTransparent: isTransparent,\n      last: last,\n      limitValue: limitValue,\n      measureText: measureText,\n      mergeSort: mergeSort,\n      normalizeText: normalizeText,\n      now: now,\n      objectKey: objectKey,\n      promiseAll: promiseAll,\n      rad: rad,\n      round: round,\n      unbindEvents: unbindEvents,\n      valueOrDefault: valueOrDefault\n  });\n\n  var toString = {}.toString;\n\n  var OptionsStore = (function (HasObservers) {\n      function OptionsStore(options, prefix) {\n          var this$1$1 = this;\n          if ( prefix === void 0 ) prefix = \"\";\n\n          HasObservers.call(this);\n\n          this.prefix = prefix;\n\n          for (var field in options) {\n              var member = options[field];\n              member = this$1$1._wrap(member, field);\n              this$1$1[field] = member;\n          }\n      }\n\n      if ( HasObservers ) OptionsStore.__proto__ = HasObservers;\n      OptionsStore.prototype = Object.create( HasObservers && HasObservers.prototype );\n      OptionsStore.prototype.constructor = OptionsStore;\n\n      OptionsStore.prototype.get = function get (field) {\n          var parts = field.split(\".\");\n          var result = this;\n\n          while (parts.length && result) {\n              var part = parts.shift();\n              result = result[part];\n          }\n\n          return result;\n      };\n\n      OptionsStore.prototype.set = function set (field, value) {\n          var current = this.get(field);\n\n          if (current !== value) {\n              this._set(field, this._wrap(value, field));\n              this.optionsChange({\n                  field: this.prefix + field,\n                  value: value\n              });\n          }\n      };\n\n      OptionsStore.prototype._set = function _set (field, value) {\n          var this$1$1 = this;\n\n          var composite = field.indexOf(\".\") >= 0;\n          var parentObj = this;\n          var fieldName = field;\n\n          if (composite) {\n              var parts = fieldName.split(\".\");\n              var prefix = this.prefix;\n\n              while (parts.length > 1) {\n                  fieldName = parts.shift();\n                  prefix += fieldName + \".\";\n\n                  var obj = parentObj[fieldName];\n\n                  if (!obj) {\n                      obj = new OptionsStore({}, prefix);\n                      obj.addObserver(this$1$1);\n                      parentObj[fieldName] = obj;\n                  }\n                  parentObj = obj;\n              }\n              fieldName = parts[0];\n          }\n\n          parentObj._clear(fieldName);\n          parentObj[fieldName] = value;\n      };\n\n      OptionsStore.prototype._clear = function _clear (field) {\n          var current = this[field];\n          if (current && current.removeObserver) {\n              current.removeObserver(this);\n          }\n      };\n\n      OptionsStore.prototype._wrap = function _wrap (object, field) {\n          var type = toString.call(object);\n          var wrapped = object;\n\n          if (wrapped !== null && defined(wrapped) && type === \"[object Object]\") {\n              if (!(object instanceof OptionsStore) && !(object instanceof Class)) {\n                  wrapped = new OptionsStore(wrapped, this.prefix + field + \".\");\n              }\n\n              wrapped.addObserver(this);\n          }\n\n          return wrapped;\n      };\n\n      return OptionsStore;\n  }(HasObservers));\n\n  function setAccessor(field) {\n      return function(value) {\n          if (this[field] !== value) {\n              this[field] = value;\n              this.geometryChange();\n          }\n\n          return this;\n      };\n  }\n\n  function getAccessor(field) {\n      return function() {\n          return this[field];\n      };\n  }\n\n  function defineAccessors(fn, fields) {\n      for (var i = 0; i < fields.length; i++) {\n          var name = fields[i];\n          var capitalized = name.charAt(0).toUpperCase() +\n                            name.substring(1, name.length);\n\n          fn[\"set\" + capitalized] = setAccessor(name);\n          fn[\"get\" + capitalized] = getAccessor(name);\n      }\n  }\n\n  var withAccessors = function (TBase, names) {\n      var result = (function (TBase) {\n          function result () {\n              TBase.apply(this, arguments);\n          }if ( TBase ) result.__proto__ = TBase;\n          result.prototype = Object.create( TBase && TBase.prototype );\n          result.prototype.constructor = result;\n\n          \n\n          return result;\n      }(TBase));\n      defineAccessors(result.prototype, names);\n\n      return result;\n  };\n\n  function toMatrix(transformation) {\n      if (transformation && typeof transformation.matrix === \"function\") {\n          return transformation.matrix();\n      }\n\n      return transformation;\n  }\n\n  var Point$1 = (function (superclass) {\n      function Point(x, y) {\n          superclass.call(this);\n\n          this.x = x || 0;\n          this.y = y || 0;\n      }\n\n      if ( superclass ) Point.__proto__ = superclass;\n      Point.prototype = Object.create( superclass && superclass.prototype );\n      Point.prototype.constructor = Point;\n\n      var staticAccessors = { ZERO: { configurable: true } };\n\n      Point.prototype.equals = function equals (other) {\n          return other && other.x === this.x && other.y === this.y;\n      };\n\n      Point.prototype.clone = function clone () {\n          return new Point(this.x, this.y);\n      };\n\n      Point.prototype.rotate = function rotate (angle, origin) {\n          var originPoint = Point.create(origin) || Point.ZERO;\n\n          return this.transform(Matrix.rotate(angle, originPoint.x, originPoint.y));\n      };\n\n      Point.prototype.translate = function translate (x, y) {\n          this.x += x;\n          this.y += y;\n\n          this.geometryChange();\n\n          return this;\n      };\n\n      Point.prototype.translateWith = function translateWith (point) {\n          return this.translate(point.x, point.y);\n      };\n\n      Point.prototype.move = function move (x, y) {\n          this.x = this.y = 0;\n          return this.translate(x, y);\n      };\n\n      Point.prototype.scale = function scale (scaleX, scaleY) {\n          if ( scaleY === void 0 ) scaleY = scaleX;\n\n          this.x *= scaleX;\n          this.y *= scaleY;\n\n          this.geometryChange();\n\n          return this;\n      };\n\n      Point.prototype.scaleCopy = function scaleCopy (scaleX, scaleY) {\n          return this.clone().scale(scaleX, scaleY);\n      };\n\n      Point.prototype.transform = function transform (transformation) {\n          var matrix = toMatrix(transformation);\n          var ref = this;\n          var x = ref.x;\n          var y = ref.y;\n\n          this.x = matrix.a * x + matrix.c * y + matrix.e;\n          this.y = matrix.b * x + matrix.d * y + matrix.f;\n\n          this.geometryChange();\n\n          return this;\n      };\n\n      Point.prototype.transformCopy = function transformCopy (transformation) {\n          var point = this.clone();\n\n          if (transformation) {\n              point.transform(transformation);\n          }\n\n          return point;\n      };\n\n      Point.prototype.distanceTo = function distanceTo (point) {\n          var dx = this.x - point.x;\n          var dy = this.y - point.y;\n\n          return Math.sqrt(dx * dx + dy * dy);\n      };\n\n      Point.prototype.round = function round$1 (digits) {\n          this.x = round(this.x, digits);\n          this.y = round(this.y, digits);\n\n          this.geometryChange();\n\n          return this;\n      };\n\n      Point.prototype.toArray = function toArray (digits) {\n          var doRound = defined(digits);\n          var x = doRound ? round(this.x, digits) : this.x;\n          var y = doRound ? round(this.y, digits) : this.y;\n\n          return [ x, y ];\n      };\n\n      Point.prototype.toString = function toString (digits, separator) {\n          if ( separator === void 0 ) separator = \" \";\n\n          var ref = this;\n          var x = ref.x;\n          var y = ref.y;\n\n          if (defined(digits)) {\n              x = round(x, digits);\n              y = round(y, digits);\n          }\n\n          return x + separator + y;\n      };\n\n      Point.create = function create (arg0, arg1) {\n          if (defined(arg0)) {\n              if (arg0 instanceof Point) {\n                  return arg0;\n              } else if (arguments.length === 1 && arg0.length === 2) {\n                  return new Point(arg0[0], arg0[1]);\n              }\n\n              return new Point(arg0, arg1);\n          }\n      };\n\n      Point.min = function min () {\n          var arguments$1 = arguments;\n\n          var minX = MAX_NUM;\n          var minY = MAX_NUM;\n\n          for (var i = 0; i < arguments.length; i++) {\n              var point = arguments$1[i];\n              minX = Math.min(point.x, minX);\n              minY = Math.min(point.y, minY);\n          }\n\n          return new Point(minX, minY);\n      };\n\n      Point.max = function max () {\n          var arguments$1 = arguments;\n\n          var maxX = MIN_NUM;\n          var maxY = MIN_NUM;\n\n          for (var i = 0; i < arguments.length; i++) {\n              var point = arguments$1[i];\n              maxX = Math.max(point.x, maxX);\n              maxY = Math.max(point.y, maxY);\n          }\n\n          return new Point(maxX, maxY);\n      };\n\n      Point.minPoint = function minPoint () {\n          return new Point(MIN_NUM, MIN_NUM);\n      };\n\n      Point.maxPoint = function maxPoint () {\n          return new Point(MAX_NUM, MAX_NUM);\n      };\n\n      staticAccessors.ZERO.get = function () {\n          return new Point(0, 0);\n      };\n\n      Object.defineProperties( Point, staticAccessors );\n\n      return Point;\n  }(withAccessors(HasObservers, [ \"x\", \"y\" ])));\n\n  var Size = (function (superclass) {\n      function Size(width, height) {\n          superclass.call(this);\n\n          this.width = width || 0;\n          this.height = height || 0;\n      }\n\n      if ( superclass ) Size.__proto__ = superclass;\n      Size.prototype = Object.create( superclass && superclass.prototype );\n      Size.prototype.constructor = Size;\n\n      var staticAccessors = { ZERO: { configurable: true } };\n\n      Size.prototype.equals = function equals (other) {\n          return other && other.width === this.width && other.height === this.height;\n      };\n\n      Size.prototype.clone = function clone () {\n          return new Size(this.width, this.height);\n      };\n\n      Size.prototype.toArray = function toArray (digits) {\n          var doRound = defined(digits);\n          var width = doRound ? round(this.width, digits) : this.width;\n          var height = doRound ? round(this.height, digits) : this.height;\n\n          return [ width, height ];\n      };\n\n      Size.create = function create (arg0, arg1) {\n          if (defined(arg0)) {\n              if (arg0 instanceof Size) {\n                  return arg0;\n              } else if (arguments.length === 1 && arg0.length === 2) {\n                  return new Size(arg0[0], arg0[1]);\n              }\n\n              return new Size(arg0, arg1);\n          }\n      };\n\n      staticAccessors.ZERO.get = function () {\n          return new Size(0, 0);\n      };\n\n      Object.defineProperties( Size, staticAccessors );\n\n      return Size;\n  }(withAccessors(HasObservers, [ \"width\", \"height\" ])));\n\n  var Rect$1 = (function (HasObservers) {\n      function Rect(origin, size, cornerRadius) {\n          if ( origin === void 0 ) origin = new Point$1();\n          if ( size === void 0 ) size = new Size();\n          if ( cornerRadius === void 0 ) cornerRadius = 0;\n\n          HasObservers.call(this);\n\n          this.setOrigin(origin);\n          this.setSize(size);\n          this.setCornerRadius(cornerRadius);\n      }\n\n      if ( HasObservers ) Rect.__proto__ = HasObservers;\n      Rect.prototype = Object.create( HasObservers && HasObservers.prototype );\n      Rect.prototype.constructor = Rect;\n\n      Rect.prototype.clone = function clone () {\n          return new Rect(\n              this.origin.clone(),\n              this.size.clone()\n          );\n      };\n\n      Rect.prototype.equals = function equals (other) {\n          return other &&\n                 other.origin.equals(this.origin) &&\n                 other.size.equals(this.size);\n      };\n\n      Rect.prototype.setOrigin = function setOrigin (value) {\n          this._observerField(\"origin\", Point$1.create(value));\n          this.geometryChange();\n          return this;\n      };\n\n      Rect.prototype.getOrigin = function getOrigin () {\n          return this.origin;\n      };\n\n      Rect.prototype.setCornerRadius = function setCornerRadius (radius) {\n          this.cornerRadius = Array.isArray(radius) ? radius : [ radius, radius ];\n\n          this.geometryChange();\n          return this;\n      };\n\n      Rect.prototype.getCornerRadius = function getCornerRadius () {\n          return this.cornerRadius;\n      };\n\n      Rect.prototype.setSize = function setSize (value) {\n          this._observerField(\"size\", Size.create(value));\n          this.geometryChange();\n          return this;\n      };\n\n      Rect.prototype.getSize = function getSize () {\n          return this.size;\n      };\n\n      Rect.prototype.width = function width () {\n          return this.size.width;\n      };\n\n      Rect.prototype.height = function height () {\n          return this.size.height;\n      };\n\n      Rect.prototype.topLeft = function topLeft () {\n          return this.origin.clone();\n      };\n\n      Rect.prototype.bottomRight = function bottomRight () {\n          return this.origin.clone().translate(this.width(), this.height());\n      };\n\n      Rect.prototype.topRight = function topRight () {\n          return this.origin.clone().translate(this.width(), 0);\n      };\n\n      Rect.prototype.bottomLeft = function bottomLeft () {\n          return this.origin.clone().translate(0, this.height());\n      };\n\n      Rect.prototype.center = function center () {\n          return this.origin.clone().translate(this.width() / 2, this.height() / 2);\n      };\n\n      Rect.prototype.bbox = function bbox (matrix) {\n          var tl = this.topLeft().transformCopy(matrix);\n          var tr = this.topRight().transformCopy(matrix);\n          var br = this.bottomRight().transformCopy(matrix);\n          var bl = this.bottomLeft().transformCopy(matrix);\n\n          return Rect.fromPoints(tl, tr, br, bl);\n      };\n\n      Rect.prototype.transformCopy = function transformCopy (m) {\n          return Rect.fromPoints(\n              this.topLeft().transform(m),\n              this.bottomRight().transform(m)\n          );\n      };\n\n      Rect.prototype.expand = function expand (x, y) {\n          if ( y === void 0 ) y = x;\n\n\n          this.size.width += 2 * x;\n          this.size.height += 2 * y;\n\n          this.origin.translate(-x, -y);\n\n          return this;\n      };\n\n      Rect.prototype.expandCopy = function expandCopy (x, y) {\n          return this.clone().expand(x, y);\n      };\n\n      Rect.prototype.containsPoint = function containsPoint (point) {\n          var origin = this.origin;\n          var bottomRight = this.bottomRight();\n          return !(point.x < origin.x || point.y < origin.y || bottomRight.x < point.x || bottomRight.y < point.y);\n      };\n\n      Rect.prototype._isOnPath = function _isOnPath (point, width) {\n          var rectOuter = this.expandCopy(width, width);\n          var rectInner = this.expandCopy(-width, -width);\n\n          return rectOuter.containsPoint(point) && !rectInner.containsPoint(point);\n      };\n\n      Rect.fromPoints = function fromPoints () {\n          var topLeft = Point$1.min.apply(null, arguments);\n          var bottomRight = Point$1.max.apply(null, arguments);\n          var size = new Size(\n              bottomRight.x - topLeft.x,\n              bottomRight.y - topLeft.y\n          );\n\n          return new Rect(topLeft, size);\n      };\n\n      Rect.union = function union (a, b) {\n          return Rect.fromPoints(\n              Point$1.min(a.topLeft(), b.topLeft()),\n              Point$1.max(a.bottomRight(), b.bottomRight())\n          );\n      };\n\n      Rect.intersect = function intersect (a, b) {\n          var rect1 = {\n              left: a.topLeft().x,\n              top: a.topLeft().y,\n              right: a.bottomRight().x,\n              bottom: a.bottomRight().y\n          };\n\n          var rect2 = {\n              left: b.topLeft().x,\n              top: b.topLeft().y,\n              right: b.bottomRight().x,\n              bottom: b.bottomRight().y\n          };\n\n          if (rect1.left <= rect2.right &&\n              rect2.left <= rect1.right &&\n              rect1.top <= rect2.bottom &&\n              rect2.top <= rect1.bottom) {\n              return Rect.fromPoints(\n                  new Point$1(Math.max(rect1.left, rect2.left), Math.max(rect1.top, rect2.top)),\n                  new Point$1(Math.min(rect1.right, rect2.right), Math.min(rect1.bottom, rect2.bottom))\n              );\n          }\n      };\n\n      return Rect;\n  }(HasObservers));\n\n  var Transformation = (function (HasObservers) {\n      function Transformation(matrix) {\n          if ( matrix === void 0 ) matrix = Matrix.unit();\n\n          HasObservers.call(this);\n\n          this._matrix = matrix;\n      }\n\n      if ( HasObservers ) Transformation.__proto__ = HasObservers;\n      Transformation.prototype = Object.create( HasObservers && HasObservers.prototype );\n      Transformation.prototype.constructor = Transformation;\n\n      Transformation.prototype.clone = function clone () {\n          return new Transformation(\n              this._matrix.clone()\n          );\n      };\n\n      Transformation.prototype.equals = function equals (other) {\n          return other &&\n                 other._matrix.equals(this._matrix);\n      };\n\n      Transformation.prototype.translate = function translate (x, y) {\n          this._matrix = this._matrix.multiplyCopy(Matrix.translate(x, y));\n\n          this._optionsChange();\n          return this;\n      };\n\n      Transformation.prototype.scale = function scale (scaleX, scaleY, origin) {\n          if ( scaleY === void 0 ) scaleY = scaleX;\n          if ( origin === void 0 ) origin = null;\n\n          var originPoint = origin;\n\n          if (originPoint) {\n              originPoint = Point$1.create(originPoint);\n              this._matrix = this._matrix.multiplyCopy(Matrix.translate(originPoint.x, originPoint.y));\n          }\n\n          this._matrix = this._matrix.multiplyCopy(Matrix.scale(scaleX, scaleY));\n\n          if (originPoint) {\n              this._matrix = this._matrix.multiplyCopy(Matrix.translate(-originPoint.x, -originPoint.y));\n          }\n\n          this._optionsChange();\n          return this;\n      };\n\n      Transformation.prototype.rotate = function rotate (angle, origin) {\n          var originPoint = Point$1.create(origin) || Point$1.ZERO;\n\n          this._matrix = this._matrix.multiplyCopy(Matrix.rotate(angle, originPoint.x, originPoint.y));\n\n          this._optionsChange();\n          return this;\n      };\n\n      Transformation.prototype.multiply = function multiply (transformation) {\n          var matrix = toMatrix(transformation);\n\n          this._matrix = this._matrix.multiplyCopy(matrix);\n\n          this._optionsChange();\n          return this;\n      };\n\n      Transformation.prototype.matrix = function matrix (value) {\n          if (value) {\n              this._matrix = value;\n              this._optionsChange();\n              return this;\n          }\n\n          return this._matrix;\n      };\n\n      Transformation.prototype._optionsChange = function _optionsChange () {\n          this.optionsChange({\n              field: \"transform\",\n              value: this\n          });\n      };\n\n      return Transformation;\n  }(HasObservers));\n\n  function transform(matrix) {\n      if (matrix === null) {\n          return null;\n      }\n\n      if (matrix instanceof Transformation) {\n          return matrix;\n      }\n\n      return new Transformation(matrix);\n  }\n\n  var DASH_ARRAYS = {\n      dot: [ 1.5, 3.5 ],\n      dash: [ 4, 3.5 ],\n      longdash: [ 8, 3.5 ],\n      dashdot: [ 3.5, 3.5, 1.5, 3.5 ],\n      longdashdot: [ 8, 3.5, 1.5, 3.5 ],\n      longdashdotdot: [ 8, 3.5, 1.5, 3.5, 1.5, 3.5 ]\n  };\n\n  var SOLID = \"solid\";\n  var BUTT = \"butt\";\n  var PATTERN = \"Pattern\";\n\n  var Element$1 = (function (HasObservers) {\n      function Element(options) {\n          HasObservers.call(this);\n\n          this._initOptions(options);\n      }\n\n      if ( HasObservers ) Element.__proto__ = HasObservers;\n      Element.prototype = Object.create( HasObservers && HasObservers.prototype );\n      Element.prototype.constructor = Element;\n\n      var prototypeAccessors = { nodeType: { configurable: true } };\n\n      prototypeAccessors.nodeType.get = function () {\n          return \"Rect\";\n      };\n\n      Element.prototype._initOptions = function _initOptions (options) {\n          if ( options === void 0 ) options = {};\n\n          var clip = options.clip;\n          var transform$1 = options.transform;\n\n          if (transform$1) {\n              options.transform = transform(transform$1);\n          }\n\n          if (clip && !clip.id) {\n              clip.id = definitionId();\n          }\n\n          this.options = new OptionsStore(options);\n          this.options.addObserver(this);\n      };\n\n      Element.prototype.transform = function transform$1 (value) {\n          if (defined(value)) {\n              this.options.set(\"transform\", transform(value));\n          } else {\n              return this.options.get(\"transform\");\n          }\n      };\n\n      Element.prototype.parentTransform = function parentTransform () {\n          var element = this;\n          var parentMatrix;\n\n          while (element.parent) {\n              element = element.parent;\n              var transformation = element.transform();\n              if (transformation) {\n                  parentMatrix = transformation.matrix().multiplyCopy(parentMatrix || Matrix.unit());\n              }\n          }\n\n          if (parentMatrix) {\n              return transform(parentMatrix);\n          }\n      };\n\n      Element.prototype.currentTransform = function currentTransform (parentTransform) {\n          if ( parentTransform === void 0 ) parentTransform = this.parentTransform();\n\n          var elementTransform = this.transform();\n          var elementMatrix = toMatrix(elementTransform);\n\n          var parentMatrix = toMatrix(parentTransform);\n          var combinedMatrix;\n\n          if (elementMatrix && parentMatrix) {\n              combinedMatrix = parentMatrix.multiplyCopy(elementMatrix);\n          } else {\n              combinedMatrix = elementMatrix || parentMatrix;\n          }\n\n          if (combinedMatrix) {\n              return transform(combinedMatrix);\n          }\n      };\n\n      Element.prototype.visible = function visible (value) {\n          if (defined(value)) {\n              this.options.set(\"visible\", value);\n              return this;\n          }\n\n          return this.options.get(\"visible\") !== false;\n      };\n\n      Element.prototype.clip = function clip (value) {\n          var options = this.options;\n          if (defined(value)) {\n              if (value && !value.id) {\n                  value.id = definitionId();\n              }\n              options.set(\"clip\", value);\n              return this;\n          }\n\n          return options.get(\"clip\");\n      };\n\n      Element.prototype.opacity = function opacity (value) {\n          if (defined(value)) {\n              this.options.set(\"opacity\", value);\n              return this;\n          }\n\n          return valueOrDefault(this.options.get(\"opacity\"), 1);\n      };\n\n      Element.prototype.className = function className (value) {\n          if (defined(value)) {\n              this.options.set(\"className\", value);\n              return this;\n          }\n\n          return this.options.get(\"className\");\n      };\n\n      Element.prototype.clippedBBox = function clippedBBox (transformation) {\n          var bbox = this._clippedBBox(transformation);\n          if (bbox) {\n              var clip = this.clip();\n              return clip ? Rect$1.intersect(bbox, clip.bbox(transformation)) : bbox;\n          }\n      };\n\n      Element.prototype.containsPoint = function containsPoint (point, parentTransform) {\n          if (this.visible()) {\n              var transform = this.currentTransform(parentTransform);\n              var transformedPoint = point;\n              if (transform) {\n                  transformedPoint = point.transformCopy(transform.matrix().invert());\n              }\n              return (this._hasFill() && this._containsPoint(transformedPoint)) || (this._isOnPath && this._hasStroke() && this._isOnPath(transformedPoint));\n          }\n          return false;\n      };\n\n      Element.prototype._hasFill = function _hasFill () {\n          var fill = this.options.fill;\n          return fill && (fill.nodeType === PATTERN || !isTransparent(fill.color));\n      };\n\n      Element.prototype._hasStroke = function _hasStroke () {\n          var stroke = this.options.stroke;\n          return stroke && stroke.width > 0 && !isTransparent(stroke.color);\n      };\n\n      Element.prototype._clippedBBox = function _clippedBBox (transformation) {\n          return this.bbox(transformation);\n      };\n\n      Object.defineProperties( Element.prototype, prototypeAccessors );\n\n      return Element;\n  }(HasObservers));\n\n  function ellipseExtremeAngles(center, rx, ry, matrix) {\n      var extremeX = 0;\n      var extremeY = 0;\n\n      if (matrix) {\n          extremeX = Math.atan2(matrix.c * ry, matrix.a * rx);\n          if (matrix.b !== 0) {\n              extremeY = Math.atan2(matrix.d * ry, matrix.b * rx);\n          }\n      }\n\n      return {\n          x: extremeX,\n          y: extremeY\n      };\n  }\n\n  var PI_DIV_2 = Math.PI / 2;\n\n  var Circle$2 = (function (superclass) {\n      function Circle(center, radius) {\n          if ( center === void 0 ) center = new Point$1();\n          if ( radius === void 0 ) radius = 0;\n\n          superclass.call(this);\n\n          this.setCenter(center);\n          this.setRadius(radius);\n      }\n\n      if ( superclass ) Circle.__proto__ = superclass;\n      Circle.prototype = Object.create( superclass && superclass.prototype );\n      Circle.prototype.constructor = Circle;\n\n      Circle.prototype.setCenter = function setCenter (value) {\n          this._observerField(\"center\", Point$1.create(value));\n          this.geometryChange();\n          return this;\n      };\n\n      Circle.prototype.getCenter = function getCenter () {\n          return this.center;\n      };\n\n      Circle.prototype.equals = function equals (other) {\n          return other &&\n                 other.center.equals(this.center) &&\n                 other.radius === this.radius;\n      };\n\n      Circle.prototype.clone = function clone () {\n          return new Circle(this.center.clone(), this.radius);\n      };\n\n      Circle.prototype.pointAt = function pointAt (angle) {\n          return this._pointAt(rad(angle));\n      };\n\n      Circle.prototype.bbox = function bbox (matrix) {\n          var this$1$1 = this;\n\n          var extremeAngles = ellipseExtremeAngles(this.center, this.radius, this.radius, matrix);\n          var minPoint = Point$1.maxPoint();\n          var maxPoint = Point$1.minPoint();\n\n          for (var i = 0; i < 4; i++) {\n              var currentPointX = this$1$1._pointAt(extremeAngles.x + i * PI_DIV_2).transformCopy(matrix);\n              var currentPointY = this$1$1._pointAt(extremeAngles.y + i * PI_DIV_2).transformCopy(matrix);\n              var currentPoint = new Point$1(currentPointX.x, currentPointY.y);\n\n              minPoint = Point$1.min(minPoint, currentPoint);\n              maxPoint = Point$1.max(maxPoint, currentPoint);\n          }\n\n          return Rect$1.fromPoints(minPoint, maxPoint);\n      };\n\n      Circle.prototype._pointAt = function _pointAt (angle) {\n          var ref = this;\n          var center = ref.center;\n          var radius = ref.radius;\n\n          return new Point$1(\n              center.x + radius * Math.cos(angle),\n              center.y + radius * Math.sin(angle)\n          );\n      };\n\n      Circle.prototype.containsPoint = function containsPoint (point) {\n          var ref = this;\n          var center = ref.center;\n          var radius = ref.radius;\n          var inCircle = Math.pow(point.x - center.x, 2) +\n              Math.pow(point.y - center.y, 2) <= Math.pow(radius, 2);\n          return inCircle;\n      };\n\n      Circle.prototype._isOnPath = function _isOnPath (point, width) {\n          var ref = this;\n          var center = ref.center;\n          var radius = ref.radius;\n          var pointDistance = center.distanceTo(point);\n\n          return radius - width <= pointDistance && pointDistance <= radius + width;\n      };\n\n      return Circle;\n  }(withAccessors(HasObservers, [ \"radius\" ])));\n\n  var GRADIENT = \"Gradient\";\n\n  var paintable = function (TBase) { return (\n      (function (TBase) {\n          function anonymous () {\n              TBase.apply(this, arguments);\n          }\n\n          if ( TBase ) anonymous.__proto__ = TBase;\n          anonymous.prototype = Object.create( TBase && TBase.prototype );\n          anonymous.prototype.constructor = anonymous;\n\n          anonymous.prototype.fill = function fill (color, opacity) {\n              var options = this.options;\n\n              if (defined(color)) {\n                  if (color && color.nodeType !== GRADIENT) {\n                      var newFill = {\n                          color: color\n                      };\n                      if (defined(opacity)) {\n                          newFill.opacity = opacity;\n                      }\n                      options.set(\"fill\", newFill);\n                  } else {\n                      options.set(\"fill\", color);\n                  }\n\n                  return this;\n              }\n\n              return options.get(\"fill\");\n          };\n\n          anonymous.prototype.stroke = function stroke (color, width, opacity) {\n              if (defined(color)) {\n                  this.options.set(\"stroke.color\", color);\n\n                  if (defined(width)) {\n                      this.options.set(\"stroke.width\", width);\n                  }\n\n                  if (defined(opacity)) {\n                      this.options.set(\"stroke.opacity\", opacity);\n                  }\n\n                  return this;\n              }\n\n              return this.options.get(\"stroke\");\n          };\n\n          return anonymous;\n      }(TBase))\n  ); };\n\n  var IDENTITY_MATRIX_HASH = Matrix.IDENTITY.toString();\n\n  var measurable = function (TBase) { return (\n      (function (TBase) {\n          function anonymous () {\n              TBase.apply(this, arguments);\n          }\n\n          if ( TBase ) anonymous.__proto__ = TBase;\n          anonymous.prototype = Object.create( TBase && TBase.prototype );\n          anonymous.prototype.constructor = anonymous;\n\n          anonymous.prototype.bbox = function bbox (transformation) {\n              var combinedMatrix = toMatrix(this.currentTransform(transformation));\n              var matrixHash = combinedMatrix ? combinedMatrix.toString() : IDENTITY_MATRIX_HASH;\n              var bbox;\n\n              if (this._bboxCache && this._matrixHash === matrixHash) {\n                  bbox = this._bboxCache.clone();\n              } else {\n                  bbox = this._bbox(combinedMatrix);\n                  this._bboxCache = bbox ? bbox.clone() : null;\n                  this._matrixHash = matrixHash;\n              }\n\n              var strokeWidth = this.options.get(\"stroke.width\");\n              if (strokeWidth && bbox) {\n                  bbox.expand(strokeWidth / 2);\n              }\n\n              return bbox;\n          };\n\n          anonymous.prototype.geometryChange = function geometryChange () {\n              delete this._bboxCache;\n              this.trigger(\"geometryChange\", {\n                  element: this\n              });\n          };\n\n          return anonymous;\n      }(TBase))\n  ); };\n\n  function geometryAccessor(name) {\n      var fieldName = \"_\" + name;\n      return function(value) {\n          if (defined(value)) {\n              this._observerField(fieldName, value);\n              this.geometryChange();\n              return this;\n          }\n\n          return this[fieldName];\n      };\n  }\n\n  function defineGeometryAccessors(fn, names) {\n      for (var i = 0; i < names.length; i++) {\n          fn[names[i]] = geometryAccessor(names[i]);\n      }\n  }\n\n  var withGeometry = function (TBase, names) {\n      if ( names === void 0 ) names = [ \"geometry\" ];\n\n      var result = (function (TBase) {\n          function result () {\n              TBase.apply(this, arguments);\n          }if ( TBase ) result.__proto__ = TBase;\n          result.prototype = Object.create( TBase && TBase.prototype );\n          result.prototype.constructor = result;\n\n          \n\n          return result;\n      }(TBase));\n      defineGeometryAccessors(result.prototype, names);\n\n      return result;\n  };\n\n  var DEFAULT_STROKE$1 = \"#000\";\n\n  var Circle$1 = (function (superclass) {\n      function Circle(geometry, options) {\n          if ( geometry === void 0 ) geometry = new Circle$2();\n          if ( options === void 0 ) options = {};\n\n          superclass.call(this, options);\n\n          this.geometry(geometry);\n\n          if (!defined(this.options.stroke)) {\n              this.stroke(DEFAULT_STROKE$1);\n          }\n      }\n\n      if ( superclass ) Circle.__proto__ = superclass;\n      Circle.prototype = Object.create( superclass && superclass.prototype );\n      Circle.prototype.constructor = Circle;\n\n      var prototypeAccessors = { nodeType: { configurable: true } };\n\n      prototypeAccessors.nodeType.get = function () {\n          return \"Circle\";\n      };\n\n      Circle.prototype.rawBBox = function rawBBox () {\n          return this._geometry.bbox();\n      };\n\n      Circle.prototype._bbox = function _bbox (matrix) {\n          return this._geometry.bbox(matrix);\n      };\n\n      Circle.prototype._containsPoint = function _containsPoint (point) {\n          return this.geometry().containsPoint(point);\n      };\n\n      Circle.prototype._isOnPath = function _isOnPath (point) {\n          return this.geometry()._isOnPath(point, this.options.stroke.width / 2);\n      };\n\n      Object.defineProperties( Circle.prototype, prototypeAccessors );\n\n      return Circle;\n  }(paintable(measurable(withGeometry(Element$1)))));\n\n  var PRECISION = 10;\n\n  function close(a, b, tolerance) {\n      if ( tolerance === void 0 ) tolerance = PRECISION;\n\n      return round(Math.abs(a - b), tolerance) === 0;\n  }\n\n  function closeOrLess(a, b, tolerance) {\n      return a < b || close(a, b, tolerance);\n  }\n\n  function lineIntersection(p0, p1, p2, p3) {\n      var s1x = p1.x - p0.x;\n      var s2x = p3.x - p2.x;\n      var s1y = p1.y - p0.y;\n      var s2y = p3.y - p2.y;\n      var nx = p0.x - p2.x;\n      var ny = p0.y - p2.y;\n      var d = s1x * s2y - s2x * s1y;\n      var s = (s1x * ny - s1y * nx) / d;\n      var t = (s2x * ny - s2y * nx) / d;\n\n      if (s >= 0 && s <= 1 && t >= 0 && t <= 1) {\n          return new Point$1(p0.x + t * s1x, p0.y + t * s1y);\n      }\n  }\n\n  var MAX_INTERVAL = 45;\n  var pow = Math.pow;\n  var accessors = [ \"radiusX\", \"radiusY\", \"startAngle\", \"endAngle\", \"anticlockwise\" ];\n\n  var Arc$1 = (function (superclass) {\n      function Arc(center, options) {\n          if ( center === void 0 ) center = new Point$1();\n          if ( options === void 0 ) options = {};\n\n          superclass.call(this);\n\n          this.setCenter(center);\n\n          this.radiusX = options.radiusX;\n          this.radiusY = options.radiusY || options.radiusX;\n          this.startAngle = options.startAngle;\n          this.endAngle = options.endAngle;\n          this.anticlockwise = options.anticlockwise || false;\n          this.xRotation = options.xRotation;\n      }\n\n      if ( superclass ) Arc.__proto__ = superclass;\n      Arc.prototype = Object.create( superclass && superclass.prototype );\n      Arc.prototype.constructor = Arc;\n\n      Arc.prototype.clone = function clone () {\n          return new Arc(this.center, {\n              radiusX: this.radiusX,\n              radiusY: this.radiusY,\n              startAngle: this.startAngle,\n              endAngle: this.endAngle,\n              anticlockwise: this.anticlockwise\n          });\n      };\n\n      Arc.prototype.setCenter = function setCenter (value) {\n          this._observerField(\"center\", Point$1.create(value));\n          this.geometryChange();\n          return this;\n      };\n\n      Arc.prototype.getCenter = function getCenter () {\n          return this.center;\n      };\n\n      Arc.prototype.pointAt = function pointAt (angle) {\n          var center = this.center;\n          var radian = rad(angle);\n\n          return new Point$1(\n              center.x + this.radiusX * Math.cos(radian),\n              center.y + this.radiusY * Math.sin(radian)\n          );\n      };\n\n      Arc.prototype.curvePoints = function curvePoints () {\n          var this$1$1 = this;\n\n          var startAngle = this.startAngle;\n          var dir = this.anticlockwise ? -1 : 1;\n          var curvePoints = [ this.pointAt(startAngle) ];\n          var interval = this._arcInterval();\n          var intervalAngle = interval.endAngle - interval.startAngle;\n          var subIntervalsCount = Math.ceil(intervalAngle / MAX_INTERVAL);\n          var subIntervalAngle = intervalAngle / subIntervalsCount;\n          var currentAngle = startAngle;\n          var transformation;\n          if (this.xRotation) {\n              transformation = transform().rotate(this.xRotation, this.center);\n          }\n\n          for (var i = 1; i <= subIntervalsCount; i++) {\n              var nextAngle = currentAngle + dir * subIntervalAngle;\n              var points = this$1$1._intervalCurvePoints(currentAngle, nextAngle, transformation);\n\n              curvePoints.push(points.cp1, points.cp2, points.p2);\n              currentAngle = nextAngle;\n          }\n\n          return curvePoints;\n      };\n\n      Arc.prototype.bbox = function bbox (matrix) {\n          var this$1$1 = this;\n\n          var interval = this._arcInterval();\n          var startAngle = interval.startAngle;\n          var endAngle = interval.endAngle;\n          var extremeAngles = ellipseExtremeAngles(this.center, this.radiusX, this.radiusY, matrix);\n          var extremeX = deg(extremeAngles.x);\n          var extremeY = deg(extremeAngles.y);\n          var endPoint = this.pointAt(endAngle).transformCopy(matrix);\n          var currentAngleX = bboxStartAngle(extremeX, startAngle);\n          var currentAngleY = bboxStartAngle(extremeY, startAngle);\n          var currentPoint = this.pointAt(startAngle).transformCopy(matrix);\n          var minPoint = Point$1.min(currentPoint, endPoint);\n          var maxPoint = Point$1.max(currentPoint, endPoint);\n\n          while (currentAngleX < endAngle || currentAngleY < endAngle) {\n              var currentPointX = (void 0);\n              if (currentAngleX < endAngle) {\n                  currentPointX = this$1$1.pointAt(currentAngleX).transformCopy(matrix);\n                  currentAngleX += 90;\n              }\n\n              var currentPointY = (void 0);\n              if (currentAngleY < endAngle) {\n                  currentPointY = this$1$1.pointAt(currentAngleY).transformCopy(matrix);\n                  currentAngleY += 90;\n              }\n\n              currentPoint = new Point$1(currentPointX.x, currentPointY.y);\n              minPoint = Point$1.min(minPoint, currentPoint);\n              maxPoint = Point$1.max(maxPoint, currentPoint);\n          }\n\n          return Rect$1.fromPoints(minPoint, maxPoint);\n      };\n\n      Arc.prototype._arcInterval = function _arcInterval () {\n          var ref = this;\n          var startAngle = ref.startAngle;\n          var endAngle = ref.endAngle;\n          var anticlockwise = ref.anticlockwise;\n\n          if (anticlockwise) {\n              var oldStart = startAngle;\n              startAngle = endAngle;\n              endAngle = oldStart;\n          }\n\n          if (startAngle > endAngle || (anticlockwise && startAngle === endAngle)) {\n              endAngle += 360;\n          }\n\n          return {\n              startAngle: startAngle,\n              endAngle: endAngle\n          };\n      };\n\n      Arc.prototype._intervalCurvePoints = function _intervalCurvePoints (startAngle, endAngle, transformation) {\n          var p1 = this.pointAt(startAngle);\n          var p2 = this.pointAt(endAngle);\n          var p1Derivative = this._derivativeAt(startAngle);\n          var p2Derivative = this._derivativeAt(endAngle);\n          var t = (rad(endAngle) - rad(startAngle)) / 3;\n          var cp1 = new Point$1(p1.x + t * p1Derivative.x, p1.y + t * p1Derivative.y);\n          var cp2 = new Point$1(p2.x - t * p2Derivative.x, p2.y - t * p2Derivative.y);\n          if (transformation) {\n              p1.transform(transformation);\n              p2.transform(transformation);\n              cp1.transform(transformation);\n              cp2.transform(transformation);\n          }\n\n          return {\n              p1: p1,\n              cp1: cp1,\n              cp2: cp2,\n              p2: p2\n          };\n      };\n\n      Arc.prototype._derivativeAt = function _derivativeAt (angle) {\n          var radian = rad(angle);\n\n          return new Point$1(-this.radiusX * Math.sin(radian), this.radiusY * Math.cos(radian));\n      };\n\n      Arc.prototype.containsPoint = function containsPoint (point) {\n          var interval = this._arcInterval();\n          var intervalAngle = interval.endAngle - interval.startAngle;\n          var ref = this;\n          var center = ref.center;\n          var radiusX = ref.radiusX;\n          var radiusY = ref.radiusY;\n          var distance = center.distanceTo(point);\n          var angleRad = Math.atan2(point.y - center.y, point.x - center.x);\n          var pointRadius = (radiusX * radiusY) /\n              Math.sqrt(pow(radiusX, 2) * pow(Math.sin(angleRad), 2) + pow(radiusY, 2) * pow(Math.cos(angleRad), 2));\n          var startPoint = this.pointAt(this.startAngle).round(PRECISION);\n          var endPoint = this.pointAt(this.endAngle).round(PRECISION);\n          var intersection = lineIntersection(center, point.round(PRECISION), startPoint, endPoint);\n          var containsPoint;\n\n          if (intervalAngle < 180) {\n              containsPoint = intersection && closeOrLess(center.distanceTo(intersection), distance) && closeOrLess(distance, pointRadius);\n          } else {\n              var angle = calculateAngle(center.x, center.y, radiusX, radiusY, point.x, point.y);\n              if (angle !== 360) {\n                  angle = (360 + angle) % 360;\n              }\n\n              var inAngleRange = interval.startAngle <= angle && angle <= interval.endAngle;\n              containsPoint = (inAngleRange && closeOrLess(distance, pointRadius)) || (!inAngleRange && (!intersection || intersection.equals(point)));\n          }\n          return containsPoint;\n      };\n\n      Arc.prototype._isOnPath = function _isOnPath (point, width) {\n          var interval = this._arcInterval();\n          var center = this.center;\n          var angle = calculateAngle(center.x, center.y, this.radiusX, this.radiusY, point.x, point.y);\n          if (angle !== 360) {\n              angle = (360 + angle) % 360;\n          }\n\n          var inAngleRange = interval.startAngle <= angle && angle <= interval.endAngle;\n\n          return inAngleRange && this.pointAt(angle).distanceTo(point) <= width;\n      };\n\n      Arc.fromPoints = function fromPoints (start, end, rx, ry, largeArc, swipe, rotation) {// eslint-disable-line max-params\n          var arcParameters = normalizeArcParameters({\n              x1: start.x,\n              y1: start.y,\n              x2: end.x,\n              y2: end.y,\n              rx: rx,\n              ry: ry,\n              largeArc: largeArc,\n              swipe: swipe,\n              rotation: rotation\n          });\n\n          return new Arc(arcParameters.center, {\n              startAngle: arcParameters.startAngle,\n              endAngle: arcParameters.endAngle,\n              radiusX: arcParameters.radiusX,\n              radiusY: arcParameters.radiusY,\n              xRotation: arcParameters.xRotation,\n              anticlockwise: swipe === 0\n          });\n      };\n\n      return Arc;\n  }(withAccessors(HasObservers, accessors)));\n\n  function calculateAngle(cx, cy, rx, ry, x, y) {\n      var cos = round((x - cx) / rx, 3);\n      var sin = round((y - cy) / ry, 3);\n\n      return round(deg(Math.atan2(sin, cos)));\n  }\n\n  function normalizeArcParameters(parameters) {\n      var x1 = parameters.x1;\n      var y1 = parameters.y1;\n      var x2 = parameters.x2;\n      var y2 = parameters.y2;\n      var rx = parameters.rx;\n      var ry = parameters.ry;\n      var largeArc = parameters.largeArc;\n      var swipe = parameters.swipe;\n      var rotation = parameters.rotation; if ( rotation === void 0 ) rotation = 0;\n\n      var radians = rad(rotation);\n      var cosine = Math.cos(radians);\n      var sine = Math.sin(radians);\n\n      var xT = cosine * (x1 - x2) / 2 + sine * (y1 - y2) / 2;\n      var yT = -sine * (x1 - x2) / 2 + cosine * (y1 - y2) / 2;\n\n      var sign = largeArc !== swipe ? 1 : -1;\n\n      var xt2 = Math.pow(xT, 2);\n      var yt2 = Math.pow(yT, 2);\n      var rx2 = Math.pow(rx, 2);\n      var ry2 = Math.pow(ry, 2);\n\n      var delta = xt2 / rx2 + yt2 / ry2;\n\n      if (delta > 1) {\n          delta = Math.sqrt(xt2 / rx2 + yt2 / ry2);\n          rx = delta * rx;\n          rx2 = Math.pow(rx, 2);\n\n          ry = delta * ry;\n          ry2 = Math.pow(ry, 2);\n      }\n\n      var constT = sign * Math.sqrt((rx2 * ry2 - rx2 * yt2 - ry2 * xt2) / (rx2 * yt2 + ry2 * xt2));\n      // due to rounding errors the value could become NaN even after radii correction\n      if (isNaN(constT)) {\n          constT = 0;\n      }\n\n      var cxT = constT * (rx * yT) / ry;\n      var cyT = - constT * (ry * xT) / rx;\n\n      var cx = cosine * cxT - sine * cyT + (x1 + x2) / 2;\n      var cy = sine * cxT + cosine * cyT + (y1 + y2) / 2;\n\n\n      var uX = (xT - cxT) / rx;\n      var uY = (yT - cyT) / ry;\n      var vX = -(xT + cxT) / rx;\n      var vY = -(yT + cyT) / ry;\n\n      var startAngle = (uY >= 0 ? 1 : -1) * deg(Math.acos(uX / Math.sqrt(uX * uX + uY * uY)));\n\n      var angleCosine = round((uX * vX + uY * vY) / (Math.sqrt(uX * uX + uY * uY) * Math.sqrt(vX * vX + vY * vY)), 10);\n      var angle = (uX * vY - uY * vX >= 0 ? 1 : -1) * deg(Math.acos(angleCosine));\n\n      if (!swipe && angle > 0) {\n          angle -= 360;\n      }\n\n      if (swipe && angle < 0) {\n          angle += 360;\n      }\n      var endAngle = startAngle + angle;\n      var signEndAngle = endAngle >= 0 ? 1 : -1;\n      endAngle = (Math.abs(endAngle) % 360) * signEndAngle;\n\n      return {\n          center: new Point$1(cx, cy),\n          startAngle: startAngle,\n          endAngle: endAngle,\n          radiusX: rx,\n          radiusY: ry,\n          xRotation: rotation\n      };\n  }\n\n  function bboxStartAngle(angle, start) {\n      var startAngle = angle;\n\n      while (startAngle < start) {\n          startAngle += 90;\n      }\n\n      return startAngle;\n  }\n\n  var push = [].push;\n  var pop = [].pop;\n  var splice = [].splice;\n  var shift = [].shift;\n  var slice$1 = [].slice;\n  var unshift = [].unshift;\n\n  var ElementsArray = (function (HasObservers) {\n      function ElementsArray(array) {\n          if ( array === void 0 ) array = [];\n\n          HasObservers.call(this);\n\n          this.length = 0;\n          this._splice(0, array.length, array);\n      }\n\n      if ( HasObservers ) ElementsArray.__proto__ = HasObservers;\n      ElementsArray.prototype = Object.create( HasObservers && HasObservers.prototype );\n      ElementsArray.prototype.constructor = ElementsArray;\n\n      ElementsArray.prototype.elements = function elements (value) {\n          if (value) {\n              this._splice(0, this.length, value);\n\n              this._change();\n              return this;\n          }\n\n          return this.slice(0);\n      };\n\n      ElementsArray.prototype.push = function push$1 () {\n          var elements = arguments;\n          var result = push.apply(this, elements);\n\n          this._add(elements);\n\n          return result;\n      };\n\n      ElementsArray.prototype.slice = function slice$1$1 () {\n          return slice$1.call(this);\n      };\n\n      ElementsArray.prototype.pop = function pop$1 () {\n          var length = this.length;\n          var result = pop.apply(this);\n\n          if (length) {\n              this._remove([ result ]);\n          }\n\n          return result;\n      };\n\n      ElementsArray.prototype.splice = function splice (index, howMany) {\n          var elements = slice$1.call(arguments, 2);\n          var result = this._splice(index, howMany, elements);\n\n          this._change();\n\n          return result;\n      };\n\n      ElementsArray.prototype.shift = function shift$1 () {\n          var length = this.length;\n          var result = shift.apply(this);\n\n          if (length) {\n              this._remove([ result ]);\n          }\n\n          return result;\n      };\n\n      ElementsArray.prototype.unshift = function unshift$1 () {\n          var elements = arguments;\n          var result = unshift.apply(this, elements);\n\n          this._add(elements);\n\n          return result;\n      };\n\n      ElementsArray.prototype.indexOf = function indexOf (element) {\n          var this$1$1 = this;\n\n          var length = this.length;\n\n          for (var idx = 0; idx < length; idx++) {\n              if (this$1$1[idx] === element) {\n                  return idx;\n              }\n          }\n          return -1;\n      };\n\n      ElementsArray.prototype._splice = function _splice (index, howMany, elements) {\n          var result = splice.apply(this, [ index, howMany ].concat(elements));\n\n          this._clearObserver(result);\n          this._setObserver(elements);\n\n          return result;\n      };\n\n      ElementsArray.prototype._add = function _add (elements) {\n          this._setObserver(elements);\n          this._change();\n      };\n\n      ElementsArray.prototype._remove = function _remove (elements) {\n          this._clearObserver(elements);\n          this._change();\n      };\n\n      ElementsArray.prototype._setObserver = function _setObserver (elements) {\n          var this$1$1 = this;\n\n          for (var idx = 0; idx < elements.length; idx++) {\n              elements[idx].addObserver(this$1$1);\n          }\n      };\n\n      ElementsArray.prototype._clearObserver = function _clearObserver (elements) {\n          var this$1$1 = this;\n\n          for (var idx = 0; idx < elements.length; idx++) {\n              elements[idx].removeObserver(this$1$1);\n          }\n      };\n\n      ElementsArray.prototype._change = function _change () {};\n\n      return ElementsArray;\n  }(HasObservers));\n\n  var GeometryElementsArray = (function (ElementsArray) {\n      function GeometryElementsArray () {\n          ElementsArray.apply(this, arguments);\n      }\n\n      if ( ElementsArray ) GeometryElementsArray.__proto__ = ElementsArray;\n      GeometryElementsArray.prototype = Object.create( ElementsArray && ElementsArray.prototype );\n      GeometryElementsArray.prototype.constructor = GeometryElementsArray;\n\n      GeometryElementsArray.prototype._change = function _change () {\n          this.geometryChange();\n      };\n\n      return GeometryElementsArray;\n  }(ElementsArray));\n\n  function isOutOfEndPoint(endPoint, controlPoint, point) {\n      var angle = deg(Math.atan2(controlPoint.y - endPoint.y, controlPoint.x - endPoint.x));\n      var rotatedPoint = point.transformCopy(transform().rotate(-angle, endPoint));\n\n      return rotatedPoint.x < endPoint.x;\n  }\n\n  function calculateCurveAt(t, field, points) {\n      var t1 = 1 - t;\n      return Math.pow(t1, 3) * points[0][field] +\n          3 * Math.pow(t1, 2) * t * points[1][field] +\n          3 * Math.pow(t, 2) * t1 * points[2][field] +\n          Math.pow(t, 3) * points[3][field];\n  }\n\n  function toCubicPolynomial(points, field) {\n      return [ -points[0][field] + 3 * points[1][field] - 3 * points[2][field] + points[3][field],\n          3 * (points[0][field] - 2 * points[1][field] + points[2][field]),\n          3 * (-points[0][field] + points[1][field]),\n          points[0][field]\n      ];\n  }\n\n  var ComplexNumber = (function (Class) {\n      function ComplexNumber(real, img) {\n          if ( real === void 0 ) real = 0;\n          if ( img === void 0 ) img = 0;\n\n          Class.call(this);\n\n          this.real = real;\n          this.img = img;\n      }\n\n      if ( Class ) ComplexNumber.__proto__ = Class;\n      ComplexNumber.prototype = Object.create( Class && Class.prototype );\n      ComplexNumber.prototype.constructor = ComplexNumber;\n\n      ComplexNumber.prototype.add = function add (cNumber) {\n          return new ComplexNumber(round(this.real + cNumber.real, PRECISION), round(this.img + cNumber.img, PRECISION));\n      };\n\n      ComplexNumber.prototype.addConstant = function addConstant (value) {\n          return new ComplexNumber(this.real + value, this.img);\n      };\n\n      ComplexNumber.prototype.negate = function negate () {\n          return new ComplexNumber(-this.real, -this.img);\n      };\n\n      ComplexNumber.prototype.multiply = function multiply (cNumber) {\n          return new ComplexNumber(this.real * cNumber.real - this.img * cNumber.img,\n              this.real * cNumber.img + this.img * cNumber.real);\n      };\n\n      ComplexNumber.prototype.multiplyConstant = function multiplyConstant (value) {\n          return new ComplexNumber(this.real * value, this.img * value);\n      };\n\n      ComplexNumber.prototype.nthRoot = function nthRoot (n) {\n          var rad = Math.atan2(this.img, this.real);\n          var r = Math.sqrt(Math.pow(this.img, 2) + Math.pow(this.real, 2));\n          var nthR = Math.pow(r, 1 / n);\n\n          return new ComplexNumber(nthR * Math.cos(rad / n), nthR * Math.sin(rad / n)); //Moivre's formula\n      };\n\n      ComplexNumber.prototype.equals = function equals (cNumber) {\n          return this.real === cNumber.real && this.img === cNumber.img;\n      };\n\n      ComplexNumber.prototype.isReal = function isReal () {\n          return this.img === 0;\n      };\n\n      return ComplexNumber;\n  }(Class));\n\n  function numberSign$1(x) {\n      return x < 0 ? -1 : 1;\n  }\n\n  function solveQuadraticEquation(a, b, c) {\n      var squareRoot = Math.sqrt(Math.pow(b, 2) - 4 * a * c);\n      return [\n          (-b + squareRoot) / (2 * a),\n          (-b - squareRoot) / (2 * a)\n      ];\n  }\n\n  //Cardano's formula\n  function solveCubicEquation(a, b, c, d) {\n      if (a === 0) {\n          return solveQuadraticEquation(b, c, d);\n      }\n\n      var p = (3 * a * c - Math.pow(b, 2)) / (3 * Math.pow(a, 2));\n      var q = (2 * Math.pow(b, 3) - 9 * a * b * c + 27 * Math.pow(a, 2) * d) / (27 * Math.pow(a, 3));\n      var Q = Math.pow(p / 3, 3) + Math.pow(q / 2, 2);\n      var i = new ComplexNumber(0,1);\n      var b3a = -b / (3 * a);\n      var x1, x2, y1, y2, y3, z1, z2;\n\n      if (Q < 0) {\n          x1 = new ComplexNumber(-q / 2, Math.sqrt(-Q)).nthRoot(3);\n          x2 = new ComplexNumber(-q / 2, - Math.sqrt(-Q)).nthRoot(3);\n      } else {\n          x1 = -q / 2 + Math.sqrt(Q);\n          x1 = new ComplexNumber(numberSign$1(x1) * Math.pow(Math.abs(x1), 1 / 3));\n          x2 = -q / 2 - Math.sqrt(Q);\n          x2 = new ComplexNumber(numberSign$1(x2) * Math.pow(Math.abs(x2), 1 / 3));\n      }\n\n      y1 = x1.add(x2);\n\n      z1 = x1.add(x2).multiplyConstant(-1 / 2);\n      z2 = x1.add(x2.negate()).multiplyConstant(Math.sqrt(3) / 2);\n\n      y2 = z1.add(i.multiply(z2));\n      y3 = z1.add(i.negate().multiply(z2));\n\n      var result = [];\n\n      if (y1.isReal()) {\n          result.push(round(y1.real + b3a, PRECISION));\n      }\n      if (y2.isReal()) {\n          result.push(round(y2.real + b3a, PRECISION));\n      }\n      if (y3.isReal()) {\n          result.push(round(y3.real + b3a, PRECISION));\n      }\n\n      return result;\n  }\n\n  function hasRootsInRange(points, point, field, rootField, range) {\n      var polynomial = toCubicPolynomial(points, rootField);\n      var roots = solveCubicEquation(polynomial[0], polynomial[1], polynomial[2], polynomial[3] - point[rootField]);\n      var intersection;\n\n      for (var idx = 0; idx < roots.length; idx++) {\n          if (0 <= roots[idx] && roots[idx] <= 1) {\n              intersection = calculateCurveAt(roots[idx], field, points);\n              if (Math.abs(intersection - point[field]) <= range) {\n                  return true;\n              }\n          }\n      }\n  }\n\n  function curveIntersectionsCount(points, point, bbox) {\n      var polynomial = toCubicPolynomial(points, \"x\");\n      var roots = solveCubicEquation(polynomial[0], polynomial[1], polynomial[2], polynomial[3] - point.x);\n      var rayIntersection, intersectsRay;\n      var count = 0;\n      for (var i = 0; i < roots.length; i++) {\n          rayIntersection = calculateCurveAt(roots[i], \"y\", points);\n          intersectsRay = close(rayIntersection, point.y) || rayIntersection > point.y;\n          if (intersectsRay && (((roots[i] === 0 || roots[i] === 1) && bbox.bottomRight().x > point.x) || (0 < roots[i] && roots[i] < 1))) {\n              count++;\n          }\n      }\n\n      return count;\n  }\n\n  function lineIntersectionsCount(a, b, point) {\n      var intersects;\n      if (a.x !== b.x) {\n          var minX = Math.min(a.x, b.x);\n          var maxX = Math.max(a.x, b.x);\n          var minY = Math.min(a.y, b.y);\n          var maxY = Math.max(a.y, b.y);\n          var inRange = minX <= point.x && point.x < maxX;\n\n          if (minY === maxY) {\n              intersects = point.y <= minY && inRange;\n          } else {\n              intersects = inRange && (((maxY - minY) * ((a.x - b.x) * (a.y - b.y) > 0 ? point.x - minX : maxX - point.x)) / (maxX - minX) + minY - point.y) >= 0;\n          }\n      }\n\n      return intersects ? 1 : 0;\n  }\n\n  function pointAccessor(name) {\n      var fieldName = \"_\" + name;\n      return function(value) {\n          if (defined(value)) {\n              this._observerField(fieldName, Point$1.create(value));\n              this.geometryChange();\n              return this;\n          }\n\n          return this[fieldName];\n      };\n  }\n\n  function definePointAccessors(fn, names) {\n      for (var i = 0; i < names.length; i++) {\n          fn[names[i]] = pointAccessor(names[i]);\n      }\n  }\n\n  var withPoints = function (TBase, names) {\n      var result = (function (TBase) {\n          function result () {\n              TBase.apply(this, arguments);\n          }if ( TBase ) result.__proto__ = TBase;\n          result.prototype = Object.create( TBase && TBase.prototype );\n          result.prototype.constructor = result;\n\n          \n\n          return result;\n      }(TBase));\n      definePointAccessors(result.prototype, names);\n\n      return result;\n  };\n\n  var points$1 = [ \"anchor\", \"controlIn\", \"controlOut\" ];\n\n  var Segment = (function (superclass) {\n      function Segment(anchor, controlIn, controlOut) {\n          superclass.call(this);\n\n          this.anchor(anchor || new Point$1());\n          this.controlIn(controlIn);\n          this.controlOut(controlOut);\n      }\n\n      if ( superclass ) Segment.__proto__ = superclass;\n      Segment.prototype = Object.create( superclass && superclass.prototype );\n      Segment.prototype.constructor = Segment;\n\n      Segment.prototype.bboxTo = function bboxTo (toSegment, matrix) {\n          var segmentAnchor = this.anchor().transformCopy(matrix);\n          var toSegmentAnchor = toSegment.anchor().transformCopy(matrix);\n          var rect;\n\n          if (this.controlOut() && toSegment.controlIn()) {\n              rect = this._curveBoundingBox(\n                  segmentAnchor, this.controlOut().transformCopy(matrix),\n                  toSegment.controlIn().transformCopy(matrix), toSegmentAnchor\n              );\n          } else {\n              rect = this._lineBoundingBox(segmentAnchor, toSegmentAnchor);\n          }\n\n          return rect;\n      };\n\n      Segment.prototype._lineBoundingBox = function _lineBoundingBox (p1, p2) {\n          return Rect$1.fromPoints(p1, p2);\n      };\n\n      Segment.prototype._curveBoundingBox = function _curveBoundingBox (p1, cp1, cp2, p2) {\n          var points = [ p1, cp1, cp2, p2 ];\n          var extremesX = this._curveExtremesFor(points, \"x\");\n          var extremesY = this._curveExtremesFor(points, \"y\");\n          var xLimits = arrayLimits([ extremesX.min, extremesX.max, p1.x, p2.x ]);\n          var yLimits = arrayLimits([ extremesY.min, extremesY.max, p1.y, p2.y ]);\n\n          return Rect$1.fromPoints(new Point$1(xLimits.min, yLimits.min), new Point$1(xLimits.max, yLimits.max));\n      };\n\n      Segment.prototype._curveExtremesFor = function _curveExtremesFor (points, field) {\n          var extremes = this._curveExtremes(\n              points[0][field], points[1][field],\n              points[2][field], points[3][field]\n          );\n\n          return {\n              min: calculateCurveAt(extremes.min, field, points),\n              max: calculateCurveAt(extremes.max, field, points)\n          };\n      };\n\n      Segment.prototype._curveExtremes = function _curveExtremes (x1, x2, x3, x4) {\n          var a = x1 - 3 * x2 + 3 * x3 - x4;\n          var b = - 2 * (x1 - 2 * x2 + x3);\n          var c = x1 - x2;\n          var sqrt = Math.sqrt(b * b - 4 * a * c);\n          var t1 = 0;\n          var t2 = 1;\n\n          if (a === 0) {\n              if (b !== 0) {\n                  t1 = t2 = -c / b;\n              }\n          } else if (!isNaN(sqrt)) {\n              t1 = (- b + sqrt) / (2 * a);\n              t2 = (- b - sqrt) / (2 * a);\n          }\n\n          var min = Math.max(Math.min(t1, t2), 0);\n          if (min < 0 || min > 1) {\n              min = 0;\n          }\n\n          var max = Math.min(Math.max(t1, t2), 1);\n          if (max > 1 || max < 0) {\n              max = 1;\n          }\n\n          return {\n              min: min,\n              max: max\n          };\n      };\n\n      Segment.prototype._intersectionsTo = function _intersectionsTo (segment, point) {\n          var intersectionsCount;\n          if (this.controlOut() && segment.controlIn()) {\n              intersectionsCount = curveIntersectionsCount([ this.anchor(), this.controlOut(), segment.controlIn(), segment.anchor() ], point, this.bboxTo(segment));\n          } else {\n              intersectionsCount = lineIntersectionsCount(this.anchor(), segment.anchor(), point);\n          }\n          return intersectionsCount;\n      };\n\n      Segment.prototype._isOnCurveTo = function _isOnCurveTo (segment, point, width, endSegment) {\n          var bbox = this.bboxTo(segment).expand(width, width);\n          if (bbox.containsPoint(point)) {\n              var p1 = this.anchor();\n              var p2 = this.controlOut();\n              var p3 = segment.controlIn();\n              var p4 = segment.anchor();\n\n              if (endSegment === \"start\" && p1.distanceTo(point) <= width) {\n                  return !isOutOfEndPoint(p1, p2, point);\n              } else if (endSegment === \"end\" && p4.distanceTo(point) <= width) {\n                  return !isOutOfEndPoint(p4, p3, point);\n              }\n\n              //the approach is not entirely correct but is close and the alternatives are solving a 6th degree polynomial or testing the segment points\n              var points = [ p1, p2, p3, p4 ];\n              if (hasRootsInRange(points, point, \"x\", \"y\", width) || hasRootsInRange(points, point, \"y\", \"x\", width)) {\n                  return true;\n              }\n              var rotation = transform().rotate(45, point);\n              var rotatedPoints = [ p1.transformCopy(rotation), p2.transformCopy(rotation), p3.transformCopy(rotation), p4.transformCopy(rotation) ];\n              return hasRootsInRange(rotatedPoints, point, \"x\", \"y\", width) || hasRootsInRange(rotatedPoints, point, \"y\", \"x\", width);\n          }\n      };\n\n      Segment.prototype._isOnLineTo = function _isOnLineTo (segment, point, width) {\n          var p1 = this.anchor();\n          var p2 = segment.anchor();\n          var angle = deg(Math.atan2(p2.y - p1.y, p2.x - p1.x));\n          var rect = new Rect$1([ p1.x, p1.y - width / 2 ], [ p1.distanceTo(p2), width ]);\n          return rect.containsPoint(point.transformCopy(transform().rotate(-angle, p1)));\n      };\n\n      Segment.prototype._isOnPathTo = function _isOnPathTo (segment, point, width, endSegment) {\n          var isOnPath;\n          if (this.controlOut() && segment.controlIn()) {\n              isOnPath = this._isOnCurveTo(segment, point, width / 2, endSegment);\n          } else {\n              isOnPath = this._isOnLineTo(segment, point, width);\n          }\n          return isOnPath;\n      };\n\n      return Segment;\n  }(withPoints(HasObservers, points$1)));\n\n  function arrayLimits(arr) {\n      var length = arr.length;\n      var min = MAX_NUM;\n      var max = MIN_NUM;\n\n      for (var i = 0; i < length; i ++) {\n          max = Math.max(max, arr[i]);\n          min = Math.min(min, arr[i]);\n      }\n\n      return {\n          min: min,\n          max: max\n      };\n  }\n\n  var geometry = /*#__PURE__*/Object.freeze({\n      __proto__: null,\n      Arc: Arc$1,\n      Circle: Circle$2,\n      Matrix: Matrix,\n      Point: Point$1,\n      Rect: Rect$1,\n      Segment: Segment,\n      Size: Size,\n      Transformation: Transformation,\n      toMatrix: toMatrix,\n      transform: transform\n  });\n\n  var WEIGHT = 0.333;\n  var EXTREMUM_ALLOWED_DEVIATION = 0.01;\n  var X = \"x\";\n  var Y = \"y\";\n\n  function pointsToCurve(pointsIn, closed) {\n      var points = pointsIn.slice(0);\n      var segments = [];\n      var length = points.length;\n\n      if (length > 2) {\n          removeDuplicates(0, points);\n          length = points.length;\n      }\n\n      if (length < 2 || (length === 2 && points[0].equals(points[1]))) {\n          return segments;\n      }\n\n      var p0 = points[0];\n      var p1 = points[1];\n      var p2 = points[2];\n\n      segments.push(new Segment(p0));\n\n      while (p0.equals(points[length - 1])) {\n          closed = true;\n          points.pop();\n          length--;\n      }\n\n      if (length === 2) {\n          var tangent = getTangent(p0,p1, X, Y);\n\n          last(segments).controlOut(\n              firstControlPoint(tangent, p0, p1, X, Y)\n          );\n\n          segments.push(new Segment(\n              p1,\n              secondControlPoint(tangent, p0, p1, X, Y)\n          ));\n\n          return segments;\n      }\n\n      var initialControlPoint, lastControlPoint;\n\n      if (closed) {\n          p0 = points[length - 1]; p1 = points[0]; p2 = points[1];\n          var controlPoints = getControlPoints(p0, p1, p2);\n          initialControlPoint = controlPoints[1];\n          lastControlPoint = controlPoints[0];\n      } else {\n          var tangent$1 = getTangent(p0, p1, X,Y);\n          initialControlPoint = firstControlPoint(tangent$1, p0, p1, X, Y);\n      }\n\n      var cp0 = initialControlPoint;\n      for (var idx = 0; idx <= length - 3; idx++) {\n          removeDuplicates(idx, points);\n          length = points.length;\n          if (idx + 3 <= length) {\n              p0 = points[idx]; p1 = points[idx + 1]; p2 = points[idx + 2];\n              var controlPoints$1 = getControlPoints(p0,p1,p2);\n\n              last(segments).controlOut(cp0);\n              cp0 = controlPoints$1[1];\n\n              var cp1 = controlPoints$1[0];\n              segments.push(new Segment(p1, cp1));\n          }\n      }\n\n      if (closed) {\n          p0 = points[length - 2]; p1 = points[length - 1]; p2 = points[0];\n          var controlPoints$2 = getControlPoints(p0, p1, p2);\n\n          last(segments).controlOut(cp0);\n          segments.push(new Segment(\n              p1,\n              controlPoints$2[0]\n          ));\n\n          last(segments).controlOut(controlPoints$2[1]);\n          segments.push(new Segment(\n              p2,\n              lastControlPoint\n          ));\n      } else {\n          var tangent$2 = getTangent(p1, p2, X, Y);\n\n          last(segments).controlOut(cp0);\n          segments.push(new Segment(\n              p2,\n              secondControlPoint(tangent$2, p1, p2, X, Y)\n          ));\n      }\n\n      return segments;\n  }\n\n  function pointsToClosedCurve(pointsIn) {\n      return pointsToCurve(pointsIn, true);\n  }\n\n  function removeDuplicates(idx, points) {\n      while (points[idx + 1] && (points[idx].equals(points[idx + 1]) || points[idx + 1].equals(points[idx + 2]))) {\n          points.splice(idx + 1, 1);\n      }\n  }\n\n  function invertAxis(p0, p1, p2) {\n      var invertAxis = false;\n\n      if (p0.x === p1.x) {\n          invertAxis = true;\n      } else if (p1.x === p2.x) {\n          if ((p1.y < p2.y && p0.y <= p1.y) || (p2.y < p1.y && p1.y <= p0.y)) {\n              invertAxis = true;\n          }\n      } else {\n          var fn = lineFunction(p0,p1);\n          var y2 = calculateFunction(fn, p2.x);\n          if (!(p0.y <= p1.y && p2.y <= y2) &&\n              !(p1.y <= p0.y && p2.y >= y2)) {\n              invertAxis = true;\n          }\n      }\n\n      return invertAxis;\n  }\n\n  function isLine(p0, p1, p2) {\n      var fn = lineFunction(p0, p1);\n      var y2 = calculateFunction(fn, p2.x);\n\n      return (p0.x === p1.x && p1.x === p2.x) || round(y2, 1) === round(p2.y, 1);\n  }\n\n  function lineFunction(p1, p2) {\n      var a = (p2.y - p1.y) / (p2.x - p1.x);\n      var b = p1.y - a * p1.x;\n\n      return [ b, a ];\n  }\n\n  function getControlPoints(p0, p1, p2) {\n      var xField = X;\n      var yField = Y;\n      var restrict = false;\n      var switchOrientation = false;\n      var tangent;\n\n      if (isLine(p0, p1, p2)) {\n          tangent = getTangent(p0, p1, X, Y);\n      } else {\n          var monotonic = {\n              x: isMonotonicByField(p0, p1, p2, X),\n              y: isMonotonicByField(p0, p1, p2, Y)\n          };\n\n          if (monotonic.x && monotonic.y) {\n              tangent = getTangent(p0, p2, X, Y);\n              restrict = true;\n          } else {\n              if (invertAxis(p0, p1, p2)) {\n                  xField = Y;\n                  yField = X;\n              }\n\n              if (monotonic[xField]) {\n                  tangent = 0;\n              } else {\n                  var sign;\n                  if ((p2[yField] < p0[yField] && p0[yField] <= p1[yField]) ||\n                      (p0[yField] < p2[yField] && p1[yField] <= p0[yField])) {\n                      sign = numberSign((p2[yField] - p0[yField]) * (p1[xField] - p0[xField]));\n                  } else {\n                      sign = -numberSign((p2[xField] - p0[xField]) * (p1[yField] - p0[yField]));\n                  }\n\n                  tangent = EXTREMUM_ALLOWED_DEVIATION * sign;\n                  switchOrientation = true;\n              }\n          }\n      }\n\n      var secondCP = secondControlPoint(tangent, p0, p1, xField, yField);\n\n      if (switchOrientation) {\n          var oldXField = xField;\n          xField = yField;\n          yField = oldXField;\n      }\n\n      var firstCP = firstControlPoint(tangent, p1, p2, xField, yField);\n\n      if (restrict) {\n          restrictControlPoint(p0, p1, secondCP, tangent);\n          restrictControlPoint(p1, p2, firstCP, tangent);\n      }\n\n      return [ secondCP, firstCP ];\n  }\n\n  function restrictControlPoint(p1, p2, cp, tangent) {\n      if (p1.y < p2.y) {\n          if (p2.y < cp.y) {\n              cp.x = p1.x + (p2.y - p1.y) / tangent;\n              cp.y = p2.y;\n          } else if (cp.y < p1.y) {\n              cp.x = p2.x - (p2.y - p1.y) / tangent;\n              cp.y = p1.y;\n          }\n      } else {\n          if (cp.y < p2.y) {\n              cp.x = p1.x - (p1.y - p2.y) / tangent;\n              cp.y = p2.y;\n          } else if (p1.y < cp.y) {\n              cp.x = p2.x + (p1.y - p2.y) / tangent;\n              cp.y = p1.y;\n          }\n      }\n  }\n\n  function getTangent(p0, p1, xField, yField) {\n      var x = p1[xField] - p0[xField];\n      var y = p1[yField] - p0[yField];\n      var tangent;\n\n      if (x === 0) {\n          tangent = 0;\n      } else {\n          tangent = y / x;\n      }\n\n      return tangent;\n  }\n\n  function isMonotonicByField(p0, p1, p2, field) {\n      return (p2[field] > p1[field] && p1[field] > p0[field]) ||\n                  (p2[field] < p1[field] && p1[field] < p0[field]);\n  }\n\n  function firstControlPoint(tangent, p0, p3, xField, yField) {\n      var t1 = p0[xField];\n      var t2 = p3[xField];\n      var distance = (t2 - t1) * WEIGHT;\n\n      return point(t1 + distance, p0[yField] + distance * tangent, xField, yField);\n  }\n\n  function secondControlPoint(tangent, p0, p3, xField, yField) {\n      var t1 = p0[xField];\n      var t2 = p3[xField];\n      var distance = (t2 - t1) * WEIGHT;\n\n      return point(t2 - distance, p3[yField] - distance * tangent, xField, yField);\n  }\n\n  function point(xValue, yValue, xField, yField) {\n      var controlPoint = new Point$1();\n      controlPoint[xField] = xValue;\n      controlPoint[yField] = yValue;\n\n      return controlPoint;\n  }\n\n  function calculateFunction(fn, x) {\n      var length = fn.length;\n      var result = 0;\n\n      for (var i = 0; i < length; i++) {\n          result += Math.pow(x,i) * fn[i];\n      }\n      return result;\n  }\n\n  function numberSign(value) {\n      return value <= 0 ? -1 : 1;\n  }\n\n  var ShapeMap = {\n      l: function(path, options) {\n          var parameters = options.parameters;\n          var position = options.position;\n\n          for (var i = 0; i < parameters.length; i += 2) {\n              var point = new Point$1(parameters[i], parameters[i + 1]);\n\n              if (options.isRelative) {\n                  point.translateWith(position);\n              }\n\n              path.lineTo(point.x, point.y);\n\n              position.x = point.x;\n              position.y = point.y;\n          }\n      },\n\n      c: function(path, options) {\n          var parameters = options.parameters;\n          var position = options.position;\n\n          for (var i = 0; i < parameters.length; i += 6) {\n              var controlOut = new Point$1(parameters[i], parameters[i + 1]);\n              var controlIn = new Point$1(parameters[i + 2], parameters[i + 3]);\n              var point = new Point$1(parameters[i + 4], parameters[i + 5]);\n              if (options.isRelative) {\n                  controlIn.translateWith(position);\n                  controlOut.translateWith(position);\n                  point.translateWith(position);\n              }\n\n              path.curveTo(controlOut, controlIn, point);\n\n              position.x = point.x;\n              position.y = point.y;\n          }\n      },\n\n      v: function(path, options) {\n          var value = options.isRelative ? 0 : options.position.x;\n\n          toLineParamaters(options.parameters, true, value);\n          this.l(path, options);\n      },\n\n      h: function(path, options) {\n          var value = options.isRelative ? 0 : options.position.y;\n\n          toLineParamaters(options.parameters, false, value);\n          this.l(path, options);\n      },\n\n      a: function(path, options) {\n          var parameters = options.parameters;\n          var position = options.position;\n\n          for (var i = 0; i < parameters.length; i += 7) {\n              var radiusX = parameters[i];\n              var radiusY = parameters[i + 1];\n              var rotation = parameters[i + 2];\n              var largeArc = parameters[i + 3];\n              var swipe = parameters[i + 4];\n              var endPoint = new Point$1(parameters[i + 5], parameters[i + 6]);\n\n              if (options.isRelative) {\n                  endPoint.translateWith(position);\n              }\n              if (position.x !== endPoint.x || position.y !== endPoint.y) {\n                  path.arcTo(endPoint, radiusX, radiusY, largeArc, swipe, rotation);\n\n                  position.x = endPoint.x;\n                  position.y = endPoint.y;\n              }\n          }\n      },\n\n      s: function(path, options) {\n          var parameters = options.parameters;\n          var position = options.position;\n          var previousCommand = options.previousCommand;\n          var lastControlIn;\n\n          if (previousCommand === \"s\" || previousCommand === \"c\") {\n              lastControlIn = last(last(path.paths).segments).controlIn();\n          }\n\n          for (var i = 0; i < parameters.length; i += 4) {\n              var controlIn = new Point$1(parameters[i], parameters[i + 1]);\n              var endPoint = new Point$1(parameters[i + 2], parameters[i + 3]);\n              var controlOut = (void 0);\n\n              if (options.isRelative) {\n                  controlIn.translateWith(position);\n                  endPoint.translateWith(position);\n              }\n\n              if (lastControlIn) {\n                  controlOut = reflectionPoint(lastControlIn, position);\n              } else {\n                  controlOut = position.clone();\n              }\n\n              lastControlIn = controlIn;\n\n              path.curveTo(controlOut, controlIn, endPoint);\n\n              position.x = endPoint.x;\n              position.y = endPoint.y;\n          }\n      },\n\n      q: function(path, options) {\n          var parameters = options.parameters;\n          var position = options.position;\n\n          for (var i = 0; i < parameters.length; i += 4) {\n              var controlPoint = new Point$1(parameters[i], parameters[i + 1]);\n              var endPoint = new Point$1(parameters[i + 2], parameters[i + 3]);\n\n              if (options.isRelative) {\n                  controlPoint.translateWith(position);\n                  endPoint.translateWith(position);\n              }\n\n              var cubicControlPoints = quadraticToCubicControlPoints(position, controlPoint, endPoint);\n\n              path.curveTo(cubicControlPoints.controlOut, cubicControlPoints.controlIn, endPoint);\n\n              position.x = endPoint.x;\n              position.y = endPoint.y;\n          }\n      },\n\n      t: function(path, options) {\n          var parameters = options.parameters;\n          var position = options.position;\n          var previousCommand = options.previousCommand;\n          var controlPoint;\n\n          if (previousCommand === \"q\" || previousCommand === \"t\") {\n              var lastSegment = last(last(path.paths).segments);\n              controlPoint = lastSegment.controlIn().clone()\n                  .translateWith(position.scaleCopy(-1 / 3))\n                  .scale(3 / 2);\n          }\n\n          for (var i = 0; i < parameters.length; i += 2) {\n              var endPoint = new Point$1(parameters[i], parameters[i + 1]);\n              if (options.isRelative) {\n                  endPoint.translateWith(position);\n              }\n\n              if (controlPoint) {\n                  controlPoint = reflectionPoint(controlPoint, position);\n              } else {\n                  controlPoint = position.clone();\n              }\n\n              var cubicControlPoints = quadraticToCubicControlPoints(position, controlPoint, endPoint);\n\n              path.curveTo(cubicControlPoints.controlOut, cubicControlPoints.controlIn, endPoint);\n\n              position.x = endPoint.x;\n              position.y = endPoint.y;\n          }\n      }\n  };\n\n  function toLineParamaters(parameters, isVertical, value) {\n      var insertPosition = isVertical ? 0 : 1;\n\n      for (var i = 0; i < parameters.length; i += 2) {\n          parameters.splice(i + insertPosition, 0, value);\n      }\n  }\n\n  function reflectionPoint(point, center) {\n      if (point && center) {\n          return center.scaleCopy(2).translate(-point.x, -point.y);\n      }\n  }\n\n  var third = 1 / 3;\n\n  function quadraticToCubicControlPoints(position, controlPoint, endPoint) {\n      var scaledPoint = controlPoint.clone().scale(2 / 3);\n      return {\n          controlOut: scaledPoint.clone().translateWith(position.scaleCopy(third)),\n          controlIn: scaledPoint.translateWith(endPoint.scaleCopy(third))\n      };\n  }\n\n  var SEGMENT_REGEX = /([a-df-z]{1})([^a-df-z]*)(z)?/gi;\n  var SPLIT_REGEX = /[,\\s]?([+\\-]?(?:\\d*\\.\\d+|\\d+)(?:[eE][+\\-]?\\d+)?)/g;\n  var MOVE = \"m\";\n  var CLOSE = \"z\";\n\n  function parseParameters(str) {\n      var parameters = [];\n      str.replace(SPLIT_REGEX, function(match, number) {\n          parameters.push(parseFloat(number));\n      });\n      return parameters;\n  }\n\n  function parsePath(pathInstance, str) {\n      var position = new Point$1();\n      var previousCommand;\n\n      str.replace(SEGMENT_REGEX, function (match, element, params, closePath) {\n          var command = element.toLowerCase();\n          var isRelative = command === element;\n          var parameters = parseParameters(params.trim());\n\n          if (command === MOVE) {\n              if (isRelative) {\n                  position.x += parameters[0];\n                  position.y += parameters[1];\n              } else {\n                  position.x = parameters[0];\n                  position.y = parameters[1];\n              }\n\n              pathInstance.moveTo(position.x, position.y);\n\n              if (parameters.length > 2) {\n                  command = \"l\";\n                  parameters.splice(0, 2);\n              }\n          }\n\n          if (ShapeMap[command]) {\n              ShapeMap[command](\n                  pathInstance, {\n                      parameters: parameters,\n                      position: position,\n                      isRelative: isRelative,\n                      previousCommand: previousCommand\n                  }\n              );\n\n              if (closePath && closePath.toLowerCase() === CLOSE) {\n                  pathInstance.close();\n              }\n          } else if (command !== MOVE) {\n              throw new Error(\"Error while parsing SVG path. Unsupported command: \" + command);\n          }\n\n          previousCommand = command;\n      });\n\n      return pathInstance;\n  }\n\n  function elementsBoundingBox(elements, applyTransform, transformation) {\n      var boundingBox;\n\n      for (var i = 0; i < elements.length; i++) {\n          var element = elements[i];\n          if (element.visible()) {\n              var elementBoundingBox = applyTransform ? element.bbox(transformation) : element.rawBBox();\n              if (elementBoundingBox) {\n                  if (boundingBox) {\n                      boundingBox = Rect$1.union(boundingBox, elementBoundingBox);\n                  } else {\n                      boundingBox = elementBoundingBox;\n                  }\n              }\n          }\n      }\n\n      return boundingBox;\n  }\n\n  function elementsClippedBoundingBox(elements, transformation) {\n      var boundingBox;\n\n      for (var i = 0; i < elements.length; i++) {\n          var element = elements[i];\n          if (element.visible()) {\n              var elementBoundingBox = element.clippedBBox(transformation);\n              if (elementBoundingBox) {\n                  if (boundingBox) {\n                      boundingBox = Rect$1.union(boundingBox, elementBoundingBox);\n                  } else {\n                      boundingBox = elementBoundingBox;\n                  }\n              }\n          }\n      }\n\n      return boundingBox;\n  }\n\n  var SPACE = ' ';\n  var printPoints = function (precision) { return function () {\n      var points = [], len = arguments.length;\n      while ( len-- ) points[ len ] = arguments[ len ];\n\n      return points.map(function (p) { return p.toString(precision); }).join(SPACE);\n  ; }    };\n  var segmentType = function (segmentStart, segmentEnd) { return segmentStart.controlOut() && segmentEnd.controlIn() ? 'C' : 'L'; };\n\n  var Path$1 = (function (superclass) {\n      function Path(options) {\n          superclass.call(this, options);\n          this.segments = new GeometryElementsArray();\n          this.segments.addObserver(this);\n\n          if (!defined(this.options.stroke)) {\n              this.stroke('#000');\n\n              if (!defined(this.options.stroke.lineJoin)) {\n                  this.options.set('stroke.lineJoin', 'miter');\n              }\n          }\n      }\n\n      if ( superclass ) Path.__proto__ = superclass;\n      Path.prototype = Object.create( superclass && superclass.prototype );\n      Path.prototype.constructor = Path;\n\n      var prototypeAccessors = { nodeType: { configurable: true } };\n\n      prototypeAccessors.nodeType.get = function () {\n          return 'Path';\n      };\n\n      Path.prototype.moveTo = function moveTo (x, y) {\n          this.suspend();\n          this.segments.elements([]);\n          this.resume();\n\n          this.lineTo(x, y);\n\n          return this;\n      };\n\n      Path.prototype.lineTo = function lineTo (x, y) {\n          var point = defined(y) ? new Point$1(x, y) : x;\n          var segment = new Segment(point);\n\n          this.segments.push(segment);\n\n          return this;\n      };\n\n      Path.prototype.curveTo = function curveTo (controlOut, controlIn, point) {\n          if (this.segments.length > 0) {\n              var lastSegment = last(this.segments);\n              var segment = new Segment(point, controlIn);\n              this.suspend();\n              lastSegment.controlOut(controlOut);\n              this.resume();\n\n              this.segments.push(segment);\n          }\n\n          return this;\n      };\n\n      Path.prototype.arc = function arc (startAngle, endAngle, radiusX, radiusY, anticlockwise) {\n          if (this.segments.length > 0) {\n              var lastSegment = last(this.segments);\n              var anchor = lastSegment.anchor();\n              var start = rad(startAngle);\n              var center = new Point$1(anchor.x - radiusX * Math.cos(start),\n                  anchor.y - radiusY * Math.sin(start));\n              var arc = new Arc$1(center, {\n                  startAngle: startAngle,\n                  endAngle: endAngle,\n                  radiusX: radiusX,\n                  radiusY: radiusY,\n                  anticlockwise: anticlockwise\n              });\n\n              this._addArcSegments(arc);\n          }\n\n          return this;\n      };\n\n      Path.prototype.arcTo = function arcTo (end, rx, ry, largeArc, swipe, rotation) {\n          if (this.segments.length > 0) {\n              var lastSegment = last(this.segments);\n              var anchor = lastSegment.anchor();\n              var arc = Arc$1.fromPoints(anchor, Point$1.create(end), rx, ry, largeArc, swipe, rotation);\n\n              this._addArcSegments(arc);\n          }\n          return this;\n      };\n\n      Path.prototype._addArcSegments = function _addArcSegments (arc) {\n          var this$1$1 = this;\n\n          this.suspend();\n\n          var curvePoints = arc.curvePoints();\n\n          for (var i = 1; i < curvePoints.length; i += 3) {\n              this$1$1.curveTo(curvePoints[i], curvePoints[i + 1], curvePoints[i + 2]);\n          }\n\n          this.resume();\n          this.geometryChange();\n      };\n\n      Path.prototype.close = function close () {\n          this.options.closed = true;\n          this.geometryChange();\n\n          return this;\n      };\n\n      Path.prototype.rawBBox = function rawBBox () {\n          return this._bbox();\n      };\n\n      Path.prototype.toString = function toString (digits) {\n          var output = '';\n\n          var segments = this.segments;\n          var length = segments.length;\n          if (length > 0) {\n              var parts = [];\n              var print = printPoints(digits);\n              var currentType;\n\n              for (var i = 1; i < length; i++) {\n                  var type = segmentType(segments[i - 1], segments[i]);\n                  if (type !== currentType) {\n                      currentType = type;\n                      parts.push(type);\n                  }\n\n                  if (type === 'L') {\n                      parts.push(print(segments[i].anchor()));\n                  } else {\n                      parts.push(print(\n                          segments[i - 1].controlOut(), segments[i].controlIn(), segments[i].anchor()\n                      ));\n                  }\n              }\n\n              output = 'M' + print(segments[0].anchor()) + SPACE + parts.join(SPACE);\n              if (this.options.closed) {\n                  output += 'Z';\n              }\n          }\n\n          return output;\n      };\n\n      Path.prototype._containsPoint = function _containsPoint (point) {\n          var segments = this.segments;\n          var length = segments.length;\n          var intersectionsCount = 0;\n          var previous, current;\n\n          for (var idx = 1; idx < length; idx++) {\n              previous = segments[idx - 1];\n              current = segments[idx];\n              intersectionsCount += previous._intersectionsTo(current, point);\n          }\n\n          if (this.options.closed || !segments[0].anchor().equals(segments[length - 1].anchor())) {\n              intersectionsCount += lineIntersectionsCount(segments[0].anchor(), segments[length - 1].anchor(), point);\n          }\n\n          return intersectionsCount % 2 !== 0;\n      };\n\n      Path.prototype._isOnPath = function _isOnPath (point, width) {\n          var segments = this.segments;\n          var length = segments.length;\n          var pathWidth = width || this.options.stroke.width;\n\n          if (length > 1) {\n              if (segments[0]._isOnPathTo(segments[1], point, pathWidth, 'start')) {\n                  return true;\n              }\n\n              for (var idx = 2; idx <= length - 2; idx++) {\n                  if (segments[idx - 1]._isOnPathTo(segments[idx], point, pathWidth)) {\n                      return true;\n                  }\n              }\n\n              if (segments[length - 2]._isOnPathTo(segments[length - 1], point, pathWidth, 'end')) {\n                  return true;\n              }\n          }\n          return false;\n      };\n\n      Path.prototype._bbox = function _bbox (matrix) {\n          var segments = this.segments;\n          var length = segments.length;\n          var boundingBox;\n\n          if (length === 1) {\n              var anchor = segments[0].anchor().transformCopy(matrix);\n              boundingBox = new Rect$1(anchor, Size.ZERO);\n          } else if (length > 0) {\n              for (var i = 1; i < length; i++) {\n                  var segmentBox = segments[i - 1].bboxTo(segments[i], matrix);\n                  if (boundingBox) {\n                      boundingBox = Rect$1.union(boundingBox, segmentBox);\n                  } else {\n                      boundingBox = segmentBox;\n                  }\n              }\n          }\n\n          return boundingBox;\n      };\n\n      Path.parse = function parse (str, options) {\n          return MultiPath.parse(str, options);\n      };\n\n      Path.fromRect = function fromRect (rect, options) {\n          var path = new Path(options);\n          var ref = rect.cornerRadius;\n          var rx = ref[0];\n          var ry = ref[1];\n\n          if (rx === 0 && ry === 0) {\n              path.moveTo(rect.topLeft())\n                  .lineTo(rect.topRight())\n                  .lineTo(rect.bottomRight())\n                  .lineTo(rect.bottomLeft())\n                  .close();\n          } else {\n              var origin = rect.origin;\n              var x = origin.x;\n              var y = origin.y;\n              var width = rect.width();\n              var height = rect.height();\n              rx = limitValue(rx, 0, width / 2);\n              ry = limitValue(ry, 0, height / 2);\n\n              path.moveTo(x + rx, y)\n                  .lineTo(x + width - rx, y)\n                  .arcTo([ x + width, y + ry ], rx, ry, false)\n                  .lineTo(x + width, y + height - ry)\n                  .arcTo([ x + width - rx, y + height ], rx, ry, false)\n                  .lineTo(x + rx, y + height)\n                  .arcTo([ x, y + height - ry ], rx, ry, false)\n                  .lineTo(x, y + ry)\n                  .arcTo([ x + rx, y ], rx, ry, false);\n          }\n\n          return path;\n      };\n\n      Path.fromPoints = function fromPoints (points, options) {\n          if (points) {\n              var path = new Path(options);\n\n              for (var i = 0; i < points.length; i++) {\n                  var point = Point$1.create(points[i]);\n                  if (point) {\n                      if (i === 0) {\n                          path.moveTo(point);\n                      } else {\n                          path.lineTo(point);\n                      }\n                  }\n              }\n\n              return path;\n          }\n      };\n\n      Path.curveFromPoints = function curveFromPoints (points, options) {\n          if (points) {\n              var segments = pointsToCurve(points);\n              var path = new Path(options);\n              path.segments.push.apply(path.segments, segments);\n\n              return path;\n          }\n      };\n\n      Path.fromArc = function fromArc (arc, options) {\n          var path = new Path(options);\n          var startAngle = arc.startAngle;\n          var start = arc.pointAt(startAngle);\n          path.moveTo(start.x, start.y);\n          path.arc(startAngle, arc.endAngle, arc.radiusX, arc.radiusY, arc.anticlockwise);\n          return path;\n      };\n\n      Object.defineProperties( Path.prototype, prototypeAccessors );\n\n      return Path;\n  }(paintable(measurable(Element$1))));\n\n  var MultiPath = (function (superclass) {\n      function MultiPath(options) {\n          superclass.call(this, options);\n          this.paths = new GeometryElementsArray();\n          this.paths.addObserver(this);\n\n          if (!defined(this.options.stroke)) {\n              this.stroke('#000');\n          }\n      }\n\n      if ( superclass ) MultiPath.__proto__ = superclass;\n      MultiPath.prototype = Object.create( superclass && superclass.prototype );\n      MultiPath.prototype.constructor = MultiPath;\n\n      var prototypeAccessors$1 = { nodeType: { configurable: true } };\n\n      MultiPath.parse = function parse (str, options) {\n          var instance = new MultiPath(options);\n          return parsePath(instance, str);\n      };\n\n      MultiPath.prototype.toString = function toString (digits) {\n          var paths = this.paths;\n          var output = '';\n\n          if (paths.length > 0) {\n              var result = [];\n\n              for (var i = 0; i < paths.length; i++) {\n                  result.push(paths[i].toString(digits));\n              }\n\n              output = result.join(SPACE);\n          }\n\n          return output;\n      };\n\n      prototypeAccessors$1.nodeType.get = function () {\n          return 'MultiPath';\n      };\n\n      MultiPath.prototype.moveTo = function moveTo (x, y) {\n          var path = new Path$1();\n          path.moveTo(x, y);\n\n          this.paths.push(path);\n\n          return this;\n      };\n\n      MultiPath.prototype.lineTo = function lineTo (x, y) {\n          if (this.paths.length > 0) {\n              last(this.paths).lineTo(x, y);\n          }\n\n          return this;\n      };\n\n      MultiPath.prototype.curveTo = function curveTo (controlOut, controlIn, point) {\n          if (this.paths.length > 0) {\n              last(this.paths).curveTo(controlOut, controlIn, point);\n          }\n\n          return this;\n      };\n\n      MultiPath.prototype.arc = function arc (startAngle, endAngle, radiusX, radiusY, anticlockwise) {\n          if (this.paths.length > 0) {\n              last(this.paths).arc(startAngle, endAngle, radiusX, radiusY, anticlockwise);\n          }\n\n          return this;\n      };\n\n      MultiPath.prototype.arcTo = function arcTo (end, rx, ry, largeArc, swipe, rotation) {\n          if (this.paths.length > 0) {\n              last(this.paths).arcTo(end, rx, ry, largeArc, swipe, rotation);\n          }\n\n          return this;\n      };\n\n      MultiPath.prototype.close = function close () {\n          if (this.paths.length > 0) {\n              last(this.paths).close();\n          }\n\n          return this;\n      };\n\n      MultiPath.prototype._bbox = function _bbox (matrix) {\n          return elementsBoundingBox(this.paths, true, matrix);\n      };\n\n      MultiPath.prototype.rawBBox = function rawBBox () {\n          return elementsBoundingBox(this.paths, false);\n      };\n\n      MultiPath.prototype._containsPoint = function _containsPoint (point) {\n          var paths = this.paths;\n\n          for (var idx = 0; idx < paths.length; idx++) {\n              if (paths[idx]._containsPoint(point)) {\n                  return true;\n              }\n          }\n          return false;\n      };\n\n      MultiPath.prototype._isOnPath = function _isOnPath (point) {\n          var paths = this.paths;\n          var width = this.options.stroke.width;\n\n          for (var idx = 0; idx < paths.length; idx++) {\n              if (paths[idx]._isOnPath(point, width)) {\n                  return true;\n              }\n          }\n          return false;\n      };\n\n      MultiPath.prototype._clippedBBox = function _clippedBBox (transformation) {\n          return elementsClippedBoundingBox(this.paths, this.currentTransform(transformation));\n      };\n\n      Object.defineProperties( MultiPath.prototype, prototypeAccessors$1 );\n\n      return MultiPath;\n  }(paintable(measurable(Element$1))));\n\n  var DEFAULT_STROKE = \"#000\";\n\n  var Arc = (function (superclass) {\n      function Arc(geometry, options) {\n          if ( geometry === void 0 ) geometry = new Arc$1();\n          if ( options === void 0 ) options = {};\n\n          superclass.call(this, options);\n\n          this.geometry(geometry);\n\n          if (!defined(this.options.stroke)) {\n              this.stroke(DEFAULT_STROKE);\n          }\n      }\n\n      if ( superclass ) Arc.__proto__ = superclass;\n      Arc.prototype = Object.create( superclass && superclass.prototype );\n      Arc.prototype.constructor = Arc;\n\n      var prototypeAccessors = { nodeType: { configurable: true } };\n\n      prototypeAccessors.nodeType.get = function () {\n          return \"Arc\";\n      };\n\n      Arc.prototype._bbox = function _bbox (matrix) {\n          return this._geometry.bbox(matrix);\n      };\n\n      Arc.prototype.rawBBox = function rawBBox () {\n          return this.geometry().bbox();\n      };\n\n      Arc.prototype.toPath = function toPath () {\n          var path = new Path$1();\n          var curvePoints = this.geometry().curvePoints();\n\n          if (curvePoints.length > 0) {\n              path.moveTo(curvePoints[0].x, curvePoints[0].y);\n\n              for (var i = 1; i < curvePoints.length; i += 3) {\n                  path.curveTo(curvePoints[i], curvePoints[i + 1], curvePoints[i + 2]);\n              }\n          }\n\n          return path;\n      };\n\n      Arc.prototype._containsPoint = function _containsPoint (point) {\n          return this.geometry().containsPoint(point);\n      };\n\n      Arc.prototype._isOnPath = function _isOnPath (point) {\n          return this.geometry()._isOnPath(point, this.options.stroke.width / 2);\n      };\n\n      Object.defineProperties( Arc.prototype, prototypeAccessors );\n\n      return Arc;\n  }(paintable(measurable(withGeometry(Element$1)))));\n\n  var DEFAULT_FONT = \"12px sans-serif\";\n  var DEFAULT_FILL = \"#000\";\n\n  var Text = (function (superclass) {\n      function Text(content, position, options) {\n          if ( position === void 0 ) position = new Point$1();\n          if ( options === void 0 ) options = {};\n\n          superclass.call(this, options);\n\n          this.content(content);\n          this.position(position);\n\n          if (!this.options.font) {\n              this.options.font = DEFAULT_FONT;\n          }\n\n          if (!defined(this.options.fill)) {\n              this.fill(DEFAULT_FILL);\n          }\n      }\n\n      if ( superclass ) Text.__proto__ = superclass;\n      Text.prototype = Object.create( superclass && superclass.prototype );\n      Text.prototype.constructor = Text;\n\n      var prototypeAccessors = { nodeType: { configurable: true } };\n\n      prototypeAccessors.nodeType.get = function () {\n          return \"Text\";\n      };\n\n      Text.prototype.content = function content (value) {\n          if (defined(value)) {\n              this.options.set(\"content\", value);\n              return this;\n          }\n\n          return this.options.get(\"content\");\n      };\n\n      Text.prototype.measure = function measure () {\n          var metrics = measureText(this.content(), {\n              font: this.options.get(\"font\")\n          });\n\n          return metrics;\n      };\n\n      Text.prototype.rect = function rect () {\n          var size = this.measure();\n          var pos = this.position().clone();\n          return new Rect$1(pos, [ size.width, size.height ]);\n      };\n\n      Text.prototype.bbox = function bbox (transformation) {\n          var combinedMatrix = toMatrix(this.currentTransform(transformation));\n          return this.rect().bbox(combinedMatrix);\n      };\n\n      Text.prototype.rawBBox = function rawBBox () {\n          return this.rect().bbox();\n      };\n\n      Text.prototype._containsPoint = function _containsPoint (point) {\n          return this.rect().containsPoint(point);\n      };\n\n      Object.defineProperties( Text.prototype, prototypeAccessors );\n\n      return Text;\n  }(paintable(withPoints(Element$1, [ \"position\" ]))));\n\n  var Image$1 = (function (superclass) {\n      function Image(src, rect, options) {\n          if ( rect === void 0 ) rect = new Rect$1();\n          if ( options === void 0 ) options = {};\n\n          superclass.call(this, options);\n\n          this.src(src);\n          this.rect(rect);\n      }\n\n      if ( superclass ) Image.__proto__ = superclass;\n      Image.prototype = Object.create( superclass && superclass.prototype );\n      Image.prototype.constructor = Image;\n\n      var prototypeAccessors = { nodeType: { configurable: true } };\n\n      prototypeAccessors.nodeType.get = function () {\n          return \"Image\";\n      };\n\n      Image.prototype.src = function src (value) {\n          if (defined(value)) {\n              this.options.set(\"src\", value);\n              return this;\n          }\n\n          return this.options.get(\"src\");\n      };\n\n      Image.prototype.bbox = function bbox (transformation) {\n          var combinedMatrix = toMatrix(this.currentTransform(transformation));\n          return this._rect.bbox(combinedMatrix);\n      };\n\n      Image.prototype.rawBBox = function rawBBox () {\n          return this._rect.bbox();\n      };\n\n      Image.prototype._containsPoint = function _containsPoint (point) {\n          return this._rect.containsPoint(point);\n      };\n\n      Image.prototype._hasFill = function _hasFill () {\n          return this.src();\n      };\n\n      Object.defineProperties( Image.prototype, prototypeAccessors );\n\n      return Image;\n  }(withGeometry(Element$1, [ \"rect\" ])));\n\n  var traversable = function (TBase, childrenField) { return (\n      (function (TBase) {\n          function anonymous () {\n              TBase.apply(this, arguments);\n          }\n\n          if ( TBase ) anonymous.__proto__ = TBase;\n          anonymous.prototype = Object.create( TBase && TBase.prototype );\n          anonymous.prototype.constructor = anonymous;\n\n          anonymous.prototype.traverse = function traverse (callback) {\n              var children = this[childrenField];\n\n              for (var i = 0; i < children.length; i++) {\n                  var child = children[i];\n\n                  if (child.traverse) {\n                      child.traverse(callback);\n                  } else {\n                      callback(child);\n                  }\n              }\n\n              return this;\n          };\n\n          return anonymous;\n      }(TBase))\n  ); };\n\n  var Group$1 = (function (superclass) {\n      function Group(options) {\n          superclass.call(this, options);\n          this.children = [];\n      }\n\n      if ( superclass ) Group.__proto__ = superclass;\n      Group.prototype = Object.create( superclass && superclass.prototype );\n      Group.prototype.constructor = Group;\n\n      var prototypeAccessors = { nodeType: { configurable: true } };\n\n      prototypeAccessors.nodeType.get = function () {\n          return \"Group\";\n      };\n\n      Group.prototype.childrenChange = function childrenChange (action, items, index) {\n          this.trigger(\"childrenChange\",{\n              action: action,\n              items: items,\n              index: index\n          });\n      };\n\n      Group.prototype.append = function append$1 () {\n          append(this.children, arguments);\n          this._reparent(arguments, this);\n\n          this.childrenChange(\"add\", arguments);\n\n          return this;\n      };\n\n      Group.prototype.insert = function insert (index, element) {\n          this.children.splice(index, 0, element);\n          element.parent = this;\n\n          this.childrenChange(\"add\", [ element ], index);\n\n          return this;\n      };\n\n      Group.prototype.insertAt = function insertAt (element, index) {\n          return this.insert(index, element);\n      };\n\n      Group.prototype.remove = function remove (element) {\n          var index = this.children.indexOf(element);\n          if (index >= 0) {\n              this.children.splice(index, 1);\n              element.parent = null;\n              this.childrenChange(\"remove\", [ element ], index);\n          }\n\n          return this;\n      };\n\n      Group.prototype.removeAt = function removeAt (index) {\n          if (0 <= index && index < this.children.length) {\n              var element = this.children[index];\n              this.children.splice(index, 1);\n              element.parent = null;\n              this.childrenChange(\"remove\", [ element ], index);\n          }\n\n          return this;\n      };\n\n      Group.prototype.clear = function clear () {\n          var items = this.children;\n          this.children = [];\n          this._reparent(items, null);\n\n          this.childrenChange(\"remove\", items, 0);\n\n          return this;\n      };\n\n      Group.prototype.bbox = function bbox (transformation) {\n          return elementsBoundingBox(this.children, true, this.currentTransform(transformation));\n      };\n\n      Group.prototype.rawBBox = function rawBBox () {\n          return elementsBoundingBox(this.children, false);\n      };\n\n      Group.prototype._clippedBBox = function _clippedBBox (transformation) {\n          return elementsClippedBoundingBox(this.children, this.currentTransform(transformation));\n      };\n\n      Group.prototype.currentTransform = function currentTransform (transformation) {\n          return Element$1.prototype.currentTransform.call(this, transformation) || null;\n      };\n\n      Group.prototype.containsPoint = function containsPoint (point, parentTransform) {\n          if (this.visible()) {\n              var children = this.children;\n              var transform = this.currentTransform(parentTransform);\n              for (var idx = 0; idx < children.length; idx++) {\n                  if (children[idx].containsPoint(point, transform)) {\n                      return true;\n                  }\n              }\n          }\n          return false;\n      };\n\n      Group.prototype._reparent = function _reparent (elements, newParent) {\n          var this$1$1 = this;\n\n          for (var i = 0; i < elements.length; i++) {\n              var child = elements[i];\n              var parent = child.parent;\n              if (parent && parent !== this$1$1 && parent.remove) {\n                  parent.remove(child);\n              }\n\n              child.parent = newParent;\n          }\n      };\n\n      Object.defineProperties( Group.prototype, prototypeAccessors );\n\n      return Group;\n  }(traversable(Element$1, \"children\")));\n\n  function translateToPoint(point, bbox, element) {\n      var transofrm = element.transform() || transform();\n      var matrix = transofrm.matrix();\n      matrix.e += point.x - bbox.origin.x;\n      matrix.f += point.y - bbox.origin.y;\n\n      transofrm.matrix(matrix);\n      element.transform(transofrm);\n  }\n\n  function alignStart(size, rect, align, axis, sizeField) {\n      var start;\n      if (align === \"start\") {\n          start = rect.origin[axis];\n      } else if (align === \"end\") {\n          start = rect.origin[axis] + rect.size[sizeField] - size;\n      } else {\n          start = rect.origin[axis] + (rect.size[sizeField] - size) / 2;\n      }\n\n      return start;\n  }\n\n  function alignStartReverse(size, rect, align, axis, sizeField) {\n      var start;\n      if (align === \"start\") {\n          start = rect.origin[axis] + rect.size[sizeField] - size;\n      } else if (align === \"end\") {\n          start = rect.origin[axis];\n      } else {\n          start = rect.origin[axis] + (rect.size[sizeField] - size) / 2;\n      }\n\n      return start;\n  }\n\n  var DEFAULT_OPTIONS = {\n      alignContent: \"start\",\n      justifyContent: \"start\",\n      alignItems: \"start\",\n      spacing: 0,\n      orientation: \"horizontal\",\n      lineSpacing: 0,\n      wrap: true,\n      revers: false\n  };\n\n  var forEach = function (elements, callback) {\n      elements.forEach(callback);\n  };\n\n  var forEachReverse = function (elements, callback) {\n      var length = elements.length;\n\n      for (var idx = length - 1; idx >= 0; idx--) {\n          callback(elements[idx], idx);\n      }\n  };\n\n  var Layout$1 = (function (Group) {\n      function Layout(rect, options) {\n          Group.call(this, Object.assign({}, DEFAULT_OPTIONS, options));\n          this._rect = rect;\n          this._fieldMap = {};\n      }\n\n      if ( Group ) Layout.__proto__ = Group;\n      Layout.prototype = Object.create( Group && Group.prototype );\n      Layout.prototype.constructor = Layout;\n\n      Layout.prototype.rect = function rect (value) {\n          if (value) {\n              this._rect = value;\n              return this;\n          }\n\n          return this._rect;\n      };\n\n      Layout.prototype._initMap = function _initMap () {\n          var options = this.options;\n          var fieldMap = this._fieldMap;\n          if (options.orientation === \"horizontal\") {\n              fieldMap.sizeField = \"width\";\n              fieldMap.groupsSizeField = \"height\";\n              fieldMap.groupAxis = \"x\";\n              fieldMap.groupsAxis = \"y\";\n          } else {\n              fieldMap.sizeField = \"height\";\n              fieldMap.groupsSizeField = \"width\";\n              fieldMap.groupAxis = \"y\";\n              fieldMap.groupsAxis = \"x\";\n          }\n\n          if (options.reverse) {\n              this.forEach = forEachReverse;\n              this.justifyAlign = alignStartReverse;\n          } else {\n              this.forEach = forEach;\n              this.justifyAlign = alignStart;\n          }\n      };\n\n      Layout.prototype.reflow = function reflow () {\n          var this$1$1 = this;\n\n          if (!this._rect || this.children.length === 0) {\n              return;\n          }\n          this._initMap();\n\n          if (this.options.transform) {\n              this.transform(null);\n          }\n\n          var options = this.options;\n          var rect = this._rect;\n          var ref = this._initGroups();\n          var groups = ref.groups;\n          var groupsSize = ref.groupsSize;\n          var ref$1 = this._fieldMap;\n          var sizeField = ref$1.sizeField;\n          var groupsSizeField = ref$1.groupsSizeField;\n          var groupAxis = ref$1.groupAxis;\n          var groupsAxis = ref$1.groupsAxis;\n          var groupOrigin = new Point$1();\n          var elementOrigin = new Point$1();\n          var size = new Size();\n          var groupStart = alignStart(groupsSize, rect, options.alignContent, groupsAxis, groupsSizeField);\n          var elementStart, group, groupBox;\n\n          var arrangeElements = function (bbox, idx) {\n              var element = group.elements[idx];\n\n              elementOrigin[groupAxis] = elementStart;\n              elementOrigin[groupsAxis] = alignStart(bbox.size[groupsSizeField], groupBox, options.alignItems, groupsAxis, groupsSizeField);\n              translateToPoint(elementOrigin, bbox, element);\n              elementStart += bbox.size[sizeField] + options.spacing;\n          };\n\n          for (var groupIdx = 0; groupIdx < groups.length; groupIdx++) {\n              group = groups[groupIdx];\n              groupOrigin[groupAxis] = elementStart = this$1$1.justifyAlign(group.size, rect, options.justifyContent, groupAxis, sizeField);\n              groupOrigin[groupsAxis] = groupStart;\n              size[sizeField] = group.size;\n              size[groupsSizeField] = group.lineSize;\n              groupBox = new Rect$1(groupOrigin, size);\n              this$1$1.forEach(group.bboxes, arrangeElements);\n\n              groupStart += group.lineSize + options.lineSpacing;\n          }\n\n          if (!options.wrap && group.size > rect.size[sizeField]) {\n              var scale = rect.size[sizeField] / groupBox.size[sizeField];\n              var scaledStart = groupBox.topLeft().scale(scale, scale);\n              var scaledSize = groupBox.size[groupsSizeField] * scale;\n              var newStart = alignStart(scaledSize, rect, options.alignContent, groupsAxis, groupsSizeField);\n              var transform$1 = transform();\n              if (groupAxis === \"x\") {\n                  transform$1.translate(rect.origin.x - scaledStart.x, newStart - scaledStart.y);\n              } else {\n                  transform$1.translate(newStart - scaledStart.x, rect.origin.y - scaledStart.y);\n              }\n              transform$1.scale(scale, scale);\n\n              this.transform(transform$1);\n          }\n      };\n\n      Layout.prototype._initGroups = function _initGroups () {\n          var this$1$1 = this;\n\n          var ref = this;\n          var options = ref.options;\n          var children = ref.children;\n          var lineSpacing = options.lineSpacing;\n          var wrap = options.wrap;\n          var spacing = options.spacing;\n          var sizeField = this._fieldMap.sizeField;\n          var group = this._newGroup();\n          var groups = [];\n          var addGroup = function() {\n              groups.push(group);\n              groupsSize += group.lineSize + lineSpacing;\n          };\n          var groupsSize = -lineSpacing;\n\n          for (var idx = 0; idx < children.length; idx++) {\n              var element = children[idx];\n              var bbox = children[idx].clippedBBox();\n              if (element.visible() && bbox) {\n                  if (wrap && group.size + bbox.size[sizeField] + spacing > this$1$1._rect.size[sizeField]) {\n                      if (group.bboxes.length === 0) {\n                          this$1$1._addToGroup(group, bbox, element);\n                          addGroup();\n                          group = this$1$1._newGroup();\n                      } else {\n                          addGroup();\n                          group = this$1$1._newGroup();\n                          this$1$1._addToGroup(group, bbox, element);\n                      }\n                  } else {\n                      this$1$1._addToGroup(group, bbox, element);\n                  }\n              }\n          }\n\n          if (group.bboxes.length) {\n              addGroup();\n          }\n\n          return {\n              groups: groups,\n              groupsSize: groupsSize\n          };\n      };\n\n      Layout.prototype._addToGroup = function _addToGroup (group, bbox, element) {\n          group.size += bbox.size[this._fieldMap.sizeField] + this.options.spacing;\n          group.lineSize = Math.max(bbox.size[this._fieldMap.groupsSizeField], group.lineSize);\n          group.bboxes.push(bbox);\n          group.elements.push(element);\n      };\n\n      Layout.prototype._newGroup = function _newGroup () {\n          return {\n              lineSize: 0,\n              size: -this.options.spacing,\n              bboxes: [],\n              elements: []\n          };\n      };\n\n      return Layout;\n  }(Group$1));\n\n  var Rect = (function (superclass) {\n      function Rect(geometry, options) {\n          if ( geometry === void 0 ) geometry = new Rect$1();\n          if ( options === void 0 ) options = {};\n\n          superclass.call(this, options);\n\n          this.geometry(geometry);\n\n          if (!defined(this.options.stroke)) {\n              this.stroke(\"#000\");\n          }\n      }\n\n      if ( superclass ) Rect.__proto__ = superclass;\n      Rect.prototype = Object.create( superclass && superclass.prototype );\n      Rect.prototype.constructor = Rect;\n\n      var prototypeAccessors = { nodeType: { configurable: true } };\n\n      prototypeAccessors.nodeType.get = function () {\n          return \"Rect\";\n      };\n\n      Rect.prototype._bbox = function _bbox (matrix) {\n          return this._geometry.bbox(matrix);\n      };\n\n      Rect.prototype.rawBBox = function rawBBox () {\n          return this._geometry.bbox();\n      };\n\n      Rect.prototype._containsPoint = function _containsPoint (point) {\n          return this._geometry.containsPoint(point);\n      };\n\n      Rect.prototype._isOnPath = function _isOnPath (point) {\n          return this.geometry()._isOnPath(point, this.options.stroke.width / 2);\n      };\n\n      Object.defineProperties( Rect.prototype, prototypeAccessors );\n\n      return Rect;\n  }(paintable(measurable(withGeometry(Element$1)))));\n\n  function alignElements(elements, rect, alignment, axis, sizeField) {\n      for (var idx = 0; idx < elements.length; idx++) {\n          var bbox = elements[idx].clippedBBox();\n          if (bbox) {\n              var point = bbox.origin.clone();\n              point[axis] = alignStart(bbox.size[sizeField], rect, alignment || \"start\", axis, sizeField);\n              translateToPoint(point, bbox, elements[idx]);\n          }\n      }\n  }\n\n  function align(elements, rect, alignment) {\n      alignElements(elements, rect, alignment, \"x\", \"width\");\n  }\n\n  function vAlign(elements, rect, alignment) {\n      alignElements(elements, rect, alignment, \"y\", \"height\");\n  }\n\n  function stackElements(elements, stackAxis, otherAxis, sizeField) {\n      if (elements.length > 1) {\n          var origin = new Point$1();\n          var previousBBox = elements[0].bbox;\n\n          for (var idx = 1; idx < elements.length; idx++) {\n              var element = elements[idx].element;\n              var bbox = elements[idx].bbox;\n              origin[stackAxis] = previousBBox.origin[stackAxis] + previousBBox.size[sizeField];\n              origin[otherAxis] = bbox.origin[otherAxis];\n              translateToPoint(origin, bbox, element);\n              bbox.origin[stackAxis] = origin[stackAxis];\n              previousBBox = bbox;\n          }\n      }\n  }\n\n  function createStackElements(elements) {\n      var stackElements = [];\n\n      for (var idx = 0; idx < elements.length; idx++) {\n          var element = elements[idx];\n          var bbox = element.clippedBBox();\n          if (bbox) {\n              stackElements.push({\n                  element: element,\n                  bbox: bbox\n              });\n          }\n      }\n\n      return stackElements;\n  }\n\n  function stack(elements) {\n      stackElements(createStackElements(elements), \"x\", \"y\", \"width\");\n  }\n\n  function vStack(elements) {\n      stackElements(createStackElements(elements), \"y\", \"x\", \"height\");\n  }\n\n  function getStacks(elements, rect, sizeField) {\n      var maxSize = rect.size[sizeField];\n      var stacks = [];\n      var stack = [];\n      var stackSize = 0;\n      var element, bbox;\n\n      var addElementToStack = function() {\n          stack.push({\n              element: element,\n              bbox: bbox\n          });\n      };\n\n      for (var idx = 0; idx < elements.length; idx++) {\n          element = elements[idx];\n\n          bbox = element.clippedBBox();\n          if (bbox) {\n              var size = bbox.size[sizeField];\n              if (stackSize + size > maxSize) {\n                  if (stack.length) {\n                      stacks.push(stack);\n                      stack = [];\n                      addElementToStack();\n                      stackSize = size;\n                  } else {\n                      addElementToStack();\n                      stacks.push(stack);\n                      stack = [];\n                      stackSize = 0;\n                  }\n              } else {\n                  addElementToStack();\n                  stackSize += size;\n              }\n          }\n      }\n\n      if (stack.length) {\n          stacks.push(stack);\n      }\n\n      return stacks;\n  }\n\n  function wrapElements(elements, rect, axis, otherAxis, sizeField) {\n      var stacks = getStacks(elements, rect, sizeField);\n      var origin = rect.origin.clone();\n      var result = [];\n\n      for (var idx = 0; idx < stacks.length; idx++) {\n          var stack = stacks[idx];\n          var startElement = stack[0];\n          origin[otherAxis] = startElement.bbox.origin[otherAxis];\n          translateToPoint(origin, startElement.bbox, startElement.element);\n          startElement.bbox.origin[axis] = origin[axis];\n          stackElements(stack, axis, otherAxis, sizeField);\n          result.push([]);\n          for (var elementIdx = 0; elementIdx < stack.length; elementIdx++) {\n              result[idx].push(stack[elementIdx].element);\n          }\n      }\n      return result;\n  }\n\n  function wrap(elements, rect) {\n      return wrapElements(elements, rect, \"x\", \"y\", \"width\");\n  }\n\n  function vWrap(elements, rect) {\n      return wrapElements(elements, rect, \"y\", \"x\", \"height\");\n  }\n\n  function fit(element, rect) {\n      var bbox = element.clippedBBox();\n      if (bbox) {\n          var elementSize = bbox.size;\n          var rectSize = rect.size;\n          if (rectSize.width < elementSize.width || rectSize.height < elementSize.height) {\n              var scale = Math.min(rectSize.width / elementSize.width, rectSize.height / elementSize.height);\n              var transform$1 = element.transform() || transform();\n              transform$1.scale(scale, scale);\n              element.transform(transform$1);\n          }\n      }\n  }\n\n  var StopsArray = (function (ElementsArray) {\n      function StopsArray () {\n          ElementsArray.apply(this, arguments);\n      }\n\n      if ( ElementsArray ) StopsArray.__proto__ = ElementsArray;\n      StopsArray.prototype = Object.create( ElementsArray && ElementsArray.prototype );\n      StopsArray.prototype.constructor = StopsArray;\n\n      StopsArray.prototype._change = function _change () {\n          this.optionsChange({\n              field: \"stops\"\n          });\n      };\n\n      return StopsArray;\n  }(ElementsArray));\n\n  function optionsAccessor(name) {\n      return function(value) {\n          if (defined(value)) {\n              this.options.set(name, value);\n              return this;\n          }\n\n          return this.options.get(name);\n      };\n  }\n\n  function defineOptionsAccessors(fn, names) {\n      for (var i = 0; i < names.length; i++) {\n          fn[names[i]] = optionsAccessor(names[i]);\n      }\n  }\n\n  var withOptions = function (TBase, names) {\n      var result = (function (TBase) {\n          function result () {\n              TBase.apply(this, arguments);\n          }if ( TBase ) result.__proto__ = TBase;\n          result.prototype = Object.create( TBase && TBase.prototype );\n          result.prototype.constructor = result;\n\n          \n\n          return result;\n      }(TBase));\n      defineOptionsAccessors(result.prototype, names);\n\n      return result;\n  };\n\n  var options = [ \"offset\", \"color\", \"opacity\" ];\n\n  var GradientStop = (function (superclass) {\n      function GradientStop(offset, color, opacity) {\n          superclass.call(this);\n\n          this.options = new OptionsStore({\n              offset: offset,\n              color: color,\n              opacity: defined(opacity) ? opacity : 1\n          });\n\n          this.options.addObserver(this);\n      }\n\n      if ( superclass ) GradientStop.__proto__ = superclass;\n      GradientStop.prototype = Object.create( superclass && superclass.prototype );\n      GradientStop.prototype.constructor = GradientStop;\n\n      GradientStop.create = function create (arg) {\n          if (defined(arg)) {\n              var stop;\n              if (arg instanceof GradientStop) {\n                  stop = arg;\n              } else if (arg.length > 1) {\n                  stop = new GradientStop(arg[0], arg[1], arg[2]);\n              } else {\n                  stop = new GradientStop(arg.offset, arg.color, arg.opacity);\n              }\n\n              return stop;\n          }\n      };\n\n      return GradientStop;\n  }(withOptions(HasObservers, options)));\n\n  var Gradient = (function (HasObservers) {\n      function Gradient(options) {\n          if ( options === void 0 ) options = {};\n\n          HasObservers.call(this);\n\n          this.stops = new StopsArray(this._createStops(options.stops));\n          this.stops.addObserver(this);\n          this._userSpace = options.userSpace;\n          this.id = definitionId();\n      }\n\n      if ( HasObservers ) Gradient.__proto__ = HasObservers;\n      Gradient.prototype = Object.create( HasObservers && HasObservers.prototype );\n      Gradient.prototype.constructor = Gradient;\n\n      var prototypeAccessors = { nodeType: { configurable: true } };\n\n      prototypeAccessors.nodeType.get = function () {\n          return \"Gradient\";\n      };\n\n      Gradient.prototype.userSpace = function userSpace (value) {\n          if (defined(value)) {\n              this._userSpace = value;\n              this.optionsChange();\n              return this;\n          }\n\n          return this._userSpace;\n      };\n\n      Gradient.prototype._createStops = function _createStops (stops) {\n          if ( stops === void 0 ) stops = [];\n\n          var result = [];\n          for (var idx = 0; idx < stops.length; idx++) {\n              result.push(GradientStop.create(stops[idx]));\n          }\n\n          return result;\n      };\n\n      Gradient.prototype.addStop = function addStop (offset, color, opacity) {\n          this.stops.push(new GradientStop(offset, color, opacity));\n      };\n\n      Gradient.prototype.removeStop = function removeStop (stop) {\n          var index = this.stops.indexOf(stop);\n          if (index >= 0) {\n              this.stops.splice(index, 1);\n          }\n      };\n\n      Gradient.prototype.optionsChange = function optionsChange (e) {\n          this.trigger(\"optionsChange\", {\n              field: \"gradient\" + (e ? \".\" + e.field : \"\"),\n              value: this\n          });\n      };\n\n      Gradient.prototype.geometryChange = function geometryChange () {\n          this.optionsChange();\n      };\n\n      Object.defineProperties( Gradient.prototype, prototypeAccessors );\n\n      return Gradient;\n  }(HasObservers));\n\n  var points = [ \"start\", \"end\" ];\n\n  var LinearGradient = (function (superclass) {\n      function LinearGradient(options) {\n          if ( options === void 0 ) options = {};\n\n          superclass.call(this, options);\n\n          this.start(options.start || new Point$1());\n          this.end(options.end || new Point$1(1, 0));\n      }\n\n      if ( superclass ) LinearGradient.__proto__ = superclass;\n      LinearGradient.prototype = Object.create( superclass && superclass.prototype );\n      LinearGradient.prototype.constructor = LinearGradient;\n\n      return LinearGradient;\n  }(withPoints(Gradient, points)));\n\n  var RadialGradient = (function (superclass) {\n      function RadialGradient(options) {\n          if ( options === void 0 ) options = {};\n\n          superclass.call(this, options);\n\n          this.center(options.center || new Point$1());\n          this._radius = defined(options.radius) ? options.radius : 1;\n          this._fallbackFill = options.fallbackFill;\n      }\n\n      if ( superclass ) RadialGradient.__proto__ = superclass;\n      RadialGradient.prototype = Object.create( superclass && superclass.prototype );\n      RadialGradient.prototype.constructor = RadialGradient;\n\n      RadialGradient.prototype.radius = function radius (value) {\n          if (defined(value)) {\n              this._radius = value;\n              this.geometryChange();\n              return this;\n          }\n\n          return this._radius;\n      };\n\n      RadialGradient.prototype.fallbackFill = function fallbackFill (value) {\n          if (defined(value)) {\n              this._fallbackFill = value;\n              this.optionsChange();\n              return this;\n          }\n\n          return this._fallbackFill;\n      };\n\n      return RadialGradient;\n  }(withPoints(Gradient, [ \"center\" ])));\n\n  var defaultColor = \"#aba4a6\";\r\n  var defaultLine = { width: 2, gap: 18 };\r\n  var defaultDot = { radius: 10, gap: 10 };\r\n  var defaultGrid = { size: 18, gap: 2 };\r\n\r\n  var Pattern = (function (Group) {\n      function Pattern(options) {\r\n          Group.call(this);\r\n\r\n          var width = options.width;\n          var height = options.height;\r\n          this._size = Size.create([width, height]);\r\n          this.id = definitionId();\r\n      }\n\n      if ( Group ) Pattern.__proto__ = Group;\n      Pattern.prototype = Object.create( Group && Group.prototype );\n      Pattern.prototype.constructor = Pattern;\n\n      var prototypeAccessors = { nodeType: { configurable: true } };\r\n\r\n      prototypeAccessors.nodeType.get = function () {\r\n          return PATTERN;\r\n      };\n\n      Pattern.prototype.size = function size (value) {\r\n          if (value) {\r\n              this._size = Size.create(value);\r\n              return this;\r\n          }\r\n\r\n          return this._size;\r\n      };\n\n      Object.defineProperties( Pattern.prototype, prototypeAccessors );\n\n      return Pattern;\n  }(Group$1));\r\n\r\n  var drawBackground = function (pattern, color, size) {\r\n      if (color) {\r\n          pattern.append(\r\n              new Rect(new Rect$1([0, 0], size), { fill: { color: color }, stroke: null })\r\n          );\r\n      }\r\n  };\r\n\r\n  function dotsPattern(options) {\n      if ( options === void 0 ) options = {};\n\r\n      var gap = options.gap; if ( gap === void 0 ) gap = defaultDot.gap;\n      var radius = options.radius; if ( radius === void 0 ) radius = defaultDot.radius;\n      var color = options.color; if ( color === void 0 ) color = defaultColor;\n      var background = options.background;\r\n      var shapeOptions = { fill: { color: color }, stroke: null };\r\n      var size = 4 * radius + 2 * gap;\r\n      var yC2 = 3 * radius + 1.5 * gap;\r\n      var center1 = [size / 2, radius + 1/2 * gap];\r\n      var center2 = [0, yC2];\r\n      var center3 = [size, yC2];\r\n\r\n      var pattern = new Pattern({ width: size, height: size });\r\n\r\n      drawBackground(pattern, background, [size, size]);\r\n\r\n      pattern.append(\r\n          new Circle$1(new Circle$2(center1, radius), shapeOptions),\r\n          new Circle$1(new Circle$2(center2, radius), shapeOptions),\r\n          new Circle$1(new Circle$2(center3, radius), shapeOptions)\r\n      );\r\n\r\n      return pattern;\r\n  };\r\n\r\n  function verticalStripesPattern(options) {\n      if ( options === void 0 ) options = {};\n\r\n      var gap = options.gap; if ( gap === void 0 ) gap = defaultLine.gap;\n      var width = options.width; if ( width === void 0 ) width = defaultLine.width;\n      var color = options.color; if ( color === void 0 ) color = defaultColor;\n      var background = options.background;\r\n      var size = width + gap;\r\n      var shapeOptions = { fill: null, stroke: { color: color, width: width / 2 } };\r\n      var pattern = new Pattern({ width: size, height: size });\r\n\r\n      drawBackground(pattern, background, [size, size]);\r\n\r\n      var xStart = width / 4;\r\n      var xEnd = size - width / 4;\r\n\r\n      var startLine = new Path$1(shapeOptions);\r\n      startLine.moveTo(xStart, 0).lineTo(xStart, size);\r\n\r\n      var endLine = new Path$1(shapeOptions);\r\n      endLine.moveTo(xEnd, 0).lineTo(xEnd, size);\r\n\r\n      pattern.append(startLine, endLine);\r\n\r\n      return pattern;\r\n  };\r\n\r\n  function crosshatchPattern(options) {\n      if ( options === void 0 ) options = {};\n\r\n      var gap = options.gap; if ( gap === void 0 ) gap = defaultLine.gap;\n      var width = options.width; if ( width === void 0 ) width = defaultLine.width;\n      var color = options.color; if ( color === void 0 ) color = defaultColor;\n      var background = options.background;\r\n      var size = Math.sqrt(2) * (width + gap);\r\n      var shapeOptions = { fill: null, stroke: { color: color, width: width } };\r\n      var pattern = new Pattern({ width: size, height: size });\r\n\r\n      drawBackground(pattern, background, [size, size]);\r\n\r\n      var line1 = new Path$1(shapeOptions);\r\n      line1.moveTo(0, 0).lineTo(size, size);\r\n\r\n      var line2 = new Path$1(shapeOptions);\r\n      line2.moveTo(size, 0).lineTo(0, size);\r\n\r\n      pattern.append(line1, line2);\r\n\r\n      return pattern;\r\n  };\r\n\r\n  function diagonalStripesPattern(options) {\n      if ( options === void 0 ) options = {};\n\r\n      var gap = options.gap; if ( gap === void 0 ) gap = defaultLine.gap;\n      var width = options.width; if ( width === void 0 ) width = defaultLine.width;\n      var color = options.color; if ( color === void 0 ) color = defaultColor;\n      var background = options.background;\r\n      var size = Math.sqrt(2) * (width + gap);\r\n      var shapeOptions = { fill: null, stroke: { color: color, width: width, lineCap: 'square' } };\r\n      var pattern = new Pattern({ width: size, height: size });\r\n      \r\n      drawBackground(pattern, background, [size, size]);\r\n\r\n      var line1 = new Path$1(shapeOptions);\r\n      line1.moveTo(0, size / 2).lineTo(size / 2, 0);\r\n\r\n      var line2 = new Path$1(shapeOptions);\r\n      line2.moveTo(size / 2, size).lineTo(size, size / 2);\r\n\r\n      pattern.append(line1, line2);\r\n\r\n      return pattern;\r\n  };\r\n\r\n  function gridPattern(options) {\n      if ( options === void 0 ) options = {};\n\r\n      var gap = options.gap; if ( gap === void 0 ) gap = defaultGrid.gap;\n      var squareSize = options.size; if ( squareSize === void 0 ) squareSize = defaultGrid.size;\n      var color = options.color; if ( color === void 0 ) color = defaultColor;\n      var background = options.background;\r\n      var size = squareSize + gap;\r\n      var halfGap = gap / 2;\r\n      var shapeOptions = { fill: { color: color }, stroke: null };\r\n      var pattern = new Pattern({ width: size, height: size });\r\n\r\n      drawBackground(pattern, background, [size, size]);\r\n\r\n      var rect = new Rect(new Rect$1([halfGap, halfGap], [squareSize, squareSize]), shapeOptions);\r\n      pattern.append(rect);\r\n\r\n      return pattern;\r\n  };\n\n  function swing(position) {\n      return 0.5 - Math.cos(position * Math.PI) / 2;\n  }\n\n  function linear(position) {\n      return position;\n  }\n\n  function easeOutElastic(position, time, start, diff) {\n      var s = 1.70158,\n          p = 0,\n          a = diff;\n\n      if (position === 0) {\n          return start;\n      }\n\n      if (position === 1) {\n          return start + diff;\n      }\n\n      if (!p) {\n          p = 0.5;\n      }\n\n      if (a < Math.abs(diff)) {\n          a = diff;\n          s = p / 4;\n      } else {\n          s = p / (2 * Math.PI) * Math.asin(diff / a);\n      }\n\n      return a * Math.pow(2, -10 * position) *\n             Math.sin((Number(position) - s) * (1.1 * Math.PI) / p) + diff + start;\n  }\n\n  var easingFunctions = /*#__PURE__*/Object.freeze({\n      __proto__: null,\n      easeOutElastic: easeOutElastic,\n      linear: linear,\n      swing: swing\n  });\n\n  var instance$2;\n\n  var AnimationFactory = (function (Class) {\n      function AnimationFactory() {\n          Class.call(this);\n\n          this._items = [];\n      }\n\n      if ( Class ) AnimationFactory.__proto__ = Class;\n      AnimationFactory.prototype = Object.create( Class && Class.prototype );\n      AnimationFactory.prototype.constructor = AnimationFactory;\n\n      var staticAccessors = { current: { configurable: true } };\n\n      staticAccessors.current.get = function () {\n          if (!instance$2) {\n              instance$2 = new AnimationFactory();\n          }\n\n          return instance$2;\n      };\n\n      AnimationFactory.prototype.register = function register (name, type) {\n          this._items.push({\n              name: name,\n              type: type\n          });\n      };\n\n      AnimationFactory.prototype.create = function create (element, options) {\n          var items = this._items;\n          var match;\n\n          if (options && options.type) {\n              var type = options.type.toLowerCase();\n              for (var i = 0; i < items.length; i++) {\n                  if (items[i].name.toLowerCase() === type) {\n                      match = items[i];\n                      break;\n                  }\n              }\n          }\n\n          if (match) {\n              return new match.type(element, options);\n          }\n      };\n\n      Object.defineProperties( AnimationFactory, staticAccessors );\n\n      return AnimationFactory;\n  }(Class));\n\n  var Animation = (function (Class) {\n      function Animation(element, options) {\n          Class.call(this);\n\n          this.options = Object.assign({}, this.options, options);\n          this.element = element;\n      }\n\n      if ( Class ) Animation.__proto__ = Class;\n      Animation.prototype = Object.create( Class && Class.prototype );\n      Animation.prototype.constructor = Animation;\n\n      var prototypeAccessors = { options: { configurable: true } };\n\n      Animation.create = function create (type, element, options) {\n          return AnimationFactory.current.create(type, element, options);\n      };\n\n      prototypeAccessors.options.get = function () {\n          return this._options || {\n              duration: 500,\n              easing: \"swing\"\n          };\n      };\n\n      prototypeAccessors.options.set = function (value) {\n          this._options = value;\n      };\n\n      Animation.prototype.setup = function setup () {};\n      Animation.prototype.step = function step () {};\n\n      Animation.prototype.play = function play () {\n          var this$1$1 = this;\n\n          var options = this.options;\n          var duration = options.duration;\n          var delay = options.delay; if ( delay === void 0 ) delay = 0;\n          var easing = easingFunctions[options.easing];\n          var start = now() + delay;\n          var finish = start + duration;\n\n          if (duration === 0) {\n              this.step(1);\n              this.abort();\n          } else {\n              setTimeout(function () {\n                  var loop = function () {\n                      if (this$1$1._stopped) {\n                          return;\n                      }\n\n                      var wallTime = now();\n\n                      var time = limitValue(wallTime - start, 0, duration);\n                      var position = time / duration;\n                      var easingPosition = easing(position, time, 0, 1, duration);\n\n                      this$1$1.step(easingPosition);\n\n                      if (wallTime < finish) {\n                          animationFrame(loop);\n                      } else {\n                          this$1$1.abort();\n                      }\n                  };\n\n                  loop();\n              }, delay);\n          }\n      };\n\n      Animation.prototype.abort = function abort () {\n          this._stopped = true;\n      };\n\n      Animation.prototype.destroy = function destroy () {\n          this.abort();\n      };\n\n      Object.defineProperties( Animation.prototype, prototypeAccessors );\n\n      return Animation;\n  }(Class));\n\n  var instance$1;\n\n  var PathParser = (function (Class) {\n      function PathParser () {\n          Class.apply(this, arguments);\n      }\n\n      if ( Class ) PathParser.__proto__ = Class;\n      PathParser.prototype = Object.create( Class && Class.prototype );\n      PathParser.prototype.constructor = PathParser;\n\n      var staticAccessors = { current: { configurable: true } };\n\n      staticAccessors.current.get = function () {\n          if (!instance$1) {\n              instance$1 = new PathParser();\n          }\n\n          return instance$1;\n      };\n\n      PathParser.prototype.parse = function parse (str, options) {\n          var multiPath = new MultiPath(options);\n          return parsePath(multiPath, str);\n      };\n\n      Object.defineProperties( PathParser, staticAccessors );\n\n      return PathParser;\n  }(Class));\n\n  var BaseNode = (function (Class) {\n      function BaseNode(srcElement) {\n          Class.call(this);\n\n          this.childNodes = [];\n          this.parent = null;\n\n          if (srcElement) {\n              this.srcElement = srcElement;\n              this.observe();\n          }\n      }\n\n      if ( Class ) BaseNode.__proto__ = Class;\n      BaseNode.prototype = Object.create( Class && Class.prototype );\n      BaseNode.prototype.constructor = BaseNode;\n\n      BaseNode.prototype.destroy = function destroy () {\n          var this$1$1 = this;\n\n          if (this.srcElement) {\n              this.srcElement.removeObserver(this);\n          }\n\n          var children = this.childNodes;\n          for (var i = 0; i < children.length; i++) {\n              this$1$1.childNodes[i].destroy();\n          }\n\n          this.parent = null;\n      };\n\n      BaseNode.prototype.load = function load () {};\n\n      BaseNode.prototype.observe = function observe () {\n          if (this.srcElement) {\n              this.srcElement.addObserver(this);\n          }\n      };\n\n      BaseNode.prototype.append = function append (node) {\n          this.childNodes.push(node);\n          node.parent = this;\n      };\n\n      BaseNode.prototype.insertAt = function insertAt (node, pos) {\n          this.childNodes.splice(pos, 0, node);\n          node.parent = this;\n      };\n\n      BaseNode.prototype.remove = function remove (index, count) {\n          var this$1$1 = this;\n\n          var end = index + count;\n          for (var i = index; i < end; i++) {\n              this$1$1.childNodes[i].removeSelf();\n          }\n          this.childNodes.splice(index, count);\n      };\n\n      BaseNode.prototype.removeSelf = function removeSelf () {\n          this.clear();\n          this.destroy();\n      };\n\n      BaseNode.prototype.clear = function clear () {\n          this.remove(0, this.childNodes.length);\n      };\n\n      BaseNode.prototype.invalidate = function invalidate () {\n          if (this.parent) {\n              this.parent.invalidate();\n          }\n      };\n\n      BaseNode.prototype.geometryChange = function geometryChange () {\n          this.invalidate();\n      };\n\n      BaseNode.prototype.optionsChange = function optionsChange () {\n          this.invalidate();\n      };\n\n      BaseNode.prototype.childrenChange = function childrenChange (e) {\n          if (e.action === \"add\") {\n              this.load(e.items, e.index);\n          } else if (e.action === \"remove\") {\n              this.remove(e.index, e.items.length);\n          }\n\n          this.invalidate();\n      };\n\n      return BaseNode;\n  }(Class));\n\n  var events = [\n      \"click\",\n      \"mouseenter\",\n      \"mouseleave\",\n      \"mousemove\",\n      \"resize\"\n  ];\n\n  var Surface$3 = (function (Observable) {\n      function Surface(element, options) {\n          Observable.call(this);\n\n          this.options = Object.assign({}, options);\n          this.element = element;\n          this.element._kendoExportVisual = this.exportVisual.bind(this);\n\n          this._click = this._handler(\"click\");\n          this._mouseenter = this._handler(\"mouseenter\");\n          this._mouseleave = this._handler(\"mouseleave\");\n          this._mousemove = this._handler(\"mousemove\");\n\n          this._visual = new Group$1();\n\n          elementSize(element, this.options);\n\n          this.bind(events, this.options);\n\n          this._enableTracking();\n      }\n\n      if ( Observable ) Surface.__proto__ = Observable;\n      Surface.prototype = Object.create( Observable && Observable.prototype );\n      Surface.prototype.constructor = Surface;\n\n      Surface.prototype.draw = function draw (element) {\n          this._visual.children.push(element);\n      };\n\n      Surface.prototype.clear = function clear () {\n          this._visual.children = [];\n      };\n\n      Surface.prototype.destroy = function destroy () {\n          this._visual = null;\n          this.element._kendoExportVisual = null;\n          this.unbind();\n      };\n\n      Surface.prototype.eventTarget = function eventTarget (e) {\n          var this$1$1 = this;\n\n          var domNode = eventElement(e);\n          var node;\n\n          while (!node && domNode) {\n              node = domNode._kendoNode;\n              if (domNode === this$1$1.element) {\n                  break;\n              }\n\n              domNode = domNode.parentElement;\n          }\n\n          if (node) {\n              return node.srcElement;\n          }\n      };\n\n      Surface.prototype.exportVisual = function exportVisual () {\n          return this._visual;\n      };\n\n      Surface.prototype.getSize = function getSize () {\n          return elementSize(this.element);\n      };\n\n      Surface.prototype.currentSize = function currentSize (size) {\n          if (size) {\n              this._size = size;\n          } else {\n              return this._size;\n          }\n      };\n\n      Surface.prototype.setSize = function setSize (size) {\n          elementSize(this.element, size);\n\n          this.currentSize(size);\n          this._resize();\n      };\n\n      Surface.prototype.resize = function resize (force) {\n          var size = this.getSize();\n          var currentSize = this.currentSize();\n\n          if (force || (size.width > 0 || size.height > 0) && (!currentSize || size.width !== currentSize.width || size.height !== currentSize.height)) {\n              this.currentSize(size);\n              this._resize(size, force);\n              this.trigger(\"resize\", size);\n          }\n      };\n\n      Surface.prototype.size = function size (value) {\n          if (!value) {\n              return this.getSize();\n          }\n\n          this.setSize(value);\n      };\n\n      Surface.prototype.suspendTracking = function suspendTracking () {\n          this._suspendedTracking = true;\n      };\n\n      Surface.prototype.resumeTracking = function resumeTracking () {\n          this._suspendedTracking = false;\n      };\n\n      Surface.prototype._enableTracking = function _enableTracking () {};\n\n      Surface.prototype._resize = function _resize () {};\n\n      Surface.prototype._handler = function _handler (eventName) {\n          var this$1$1 = this;\n\n          return function (e) {\n              var node = this$1$1.eventTarget(e);\n              if (node && !this$1$1._suspendedTracking) {\n                  this$1$1.trigger(eventName, {\n                      element: node,\n                      originalEvent: e,\n                      type: eventName\n                  });\n              }\n          };\n      };\n\n      Surface.prototype._elementOffset = function _elementOffset () {\n          var element = this.element;\n          var padding = elementPadding(element);\n          var ref = elementOffset(element);\n          var left = ref.left;\n          var top = ref.top;\n\n          return {\n              left: left + padding.left,\n              top: top + padding.top\n          };\n      };\n\n      Surface.prototype._surfacePoint = function _surfacePoint (e) {\n          var offset = this._elementOffset();\n          var coord = eventCoordinates(e);\n          var x = coord.x - offset.left;\n          var y = coord.y - offset.top;\n\n          var inverseTransform = elementScale(this.element).invert();\n          var point = new Point$1(\n              x,\n              y\n          ).transform(inverseTransform);\n\n          return point;\n      };\n\n      return Surface;\n  }(Observable));\n\n  function renderAttr(name, value) {\n      return (defined(value) && value !== null) ? (\" \" + name + \"=\\\"\" + value + \"\\\" \") : \"\";\n  }\n\n  function renderAllAttr(attrs) {\n      var output = \"\";\n      for (var i = 0; i < attrs.length; i++) {\n          output += renderAttr(attrs[i][0], attrs[i][1]);\n      }\n\n      return output;\n  }\n\n  function renderStyle(attrs) {\n      var output = \"\";\n      for (var i = 0; i < attrs.length; i++) {\n          var value = attrs[i][1];\n          if (defined(value)) {\n              output += attrs[i][0] + \":\" + value + \";\";\n          }\n      }\n\n      if (output !== \"\") {\n          return output;\n      }\n  }\n\n  var NODE_MAP$1 = {};\n\n  var setStyle = function (element, styleString) {\r\n      var styles = kendo_common_cmn_chunk_js.p(styleString);\r\n      Object.keys(styles).forEach(function (key) {\r\n          element.style[key] = styles[key];\r\n      });\r\n  };\r\n\r\n  var styleAttr = 'data-style';\r\n  var replaceStyleAttr = function (html) { return (html || '').replace(/\\sstyle=/g, ' ' + styleAttr + '='); };\r\n  var restoreStyleAttr = function (container) {\r\n      Array.from(container.querySelectorAll('[' + styleAttr +']')).forEach(function (element) {\r\n          var styleString = element.getAttribute(styleAttr);\r\n          element.removeAttribute(styleAttr);\r\n          setStyle(element, styleString);\r\n      });\r\n  };\r\n\r\n  var setInnerHTML = function (container, html) {\r\n      container.innerHTML = replaceStyleAttr(html);\r\n      restoreStyleAttr(container);\r\n  };\n\n  var SVG_NS = \"http://www.w3.org/2000/svg\";\n  var NONE = \"none\";\n  var POINT_DIGITS = 3;\n\n  var renderSVG = function(container, svg) {\n      setInnerHTML(container, svg);\n  };\n\n  if (typeof document !== \"undefined\") {\n      var testFragment = \"<svg xmlns='\" + SVG_NS + \"'></svg>\";\n      var testContainer = document.createElement(\"div\");\n      var hasParser = typeof DOMParser !== \"undefined\";\n\n      testContainer.innerHTML = testFragment;\n\n      if (hasParser && testContainer.firstChild.namespaceURI !== SVG_NS) {\n          renderSVG = function(container, svg) {\n              var parser = new DOMParser();\n              var chartDoc = parser.parseFromString(replaceStyleAttr(svg), \"text/xml\");\n              restoreStyleAttr(chartDoc);\n              var importedDoc = document.adoptNode(chartDoc.documentElement);\n\n              container.innerHTML = \"\";\n              container.appendChild(importedDoc);\n          };\n      }\n  }\n\n  var renderSVG$1 = renderSVG;\n\n  var TRANSFORM = \"transform\";\n  var DefinitionMap = {\n      clip: \"clip-path\",\n      fill: \"fill\"\n  };\n\n  function isDefinition(type, value) {\n      return type === \"clip\" || (type === \"fill\" && (!value || value.nodeType === \"Gradient\" || value.nodeType === PATTERN));\n  }\n\n  function baseUrl() {\n      var base = document.getElementsByTagName(\"base\")[0];\n      var href = document.location.href;\n      var url = \"\";\n\n      if (base && !(support$1.browser || {}).msie) {\n          var hashIndex = href.indexOf(\"#\");\n          if (hashIndex !== -1) {\n              href = href.substring(0, hashIndex);\n          }\n\n          url = href;\n      }\n\n      return url;\n  }\n\n  var Node$1 = (function (BaseNode) {\n      function Node(srcElement, options) {\n          BaseNode.call(this, srcElement);\n          this.definitions = {};\n\n          this.options = options;\n      }\n\n      if ( BaseNode ) Node.__proto__ = BaseNode;\n      Node.prototype = Object.create( BaseNode && BaseNode.prototype );\n      Node.prototype.constructor = Node;\n\n      Node.prototype.destroy = function destroy () {\n          if (this.element) {\n              this.element._kendoNode = null;\n              this.element = null;\n          }\n\n          this.clearDefinitions();\n          BaseNode.prototype.destroy.call(this);\n      };\n\n      Node.prototype.load = function load (elements, pos) {\n          var this$1$1 = this;\n\n          for (var i = 0; i < elements.length; i++) {\n              var srcElement = elements[i];\n              var children = srcElement.children;\n\n              var childNode = new NODE_MAP$1[srcElement.nodeType](srcElement, this$1$1.options);\n\n              if (defined(pos)) {\n                  this$1$1.insertAt(childNode, pos);\n              } else {\n                  this$1$1.append(childNode);\n              }\n\n              childNode.createDefinitions();\n\n              if (children && children.length > 0) {\n                  childNode.load(children);\n              }\n\n              var element = this$1$1.element;\n              if (element) {\n                  childNode.attachTo(element, pos);\n              }\n          }\n      };\n\n      Node.prototype.root = function root () {\n          var root = this;\n\n          while (root.parent) {\n              root = root.parent;\n          }\n\n          return root;\n      };\n\n      Node.prototype.attachTo = function attachTo (domElement, pos) {\n          var container = document.createElement(\"div\");\n          renderSVG$1(container,\n              \"<svg xmlns='\" + SVG_NS + \"' version='1.1'>\" +\n                  this.render() +\n              \"</svg>\"\n          );\n\n          var element = container.firstChild.firstChild;\n          if (element) {\n              if (defined(pos)) {\n                  domElement.insertBefore(element, domElement.childNodes[pos] || null);\n              } else {\n                  domElement.appendChild(element);\n              }\n              this.setElement(element);\n          }\n      };\n\n      Node.prototype.setElement = function setElement (element) {\n          if (this.element) {\n              this.element._kendoNode = null;\n          }\n\n          this.element = element;\n          this.element._kendoNode = this;\n\n          var nodes = this.childNodes;\n          for (var i = 0; i < nodes.length; i++) {\n              var childElement = element.childNodes[i];\n              nodes[i].setElement(childElement);\n          }\n      };\n\n      Node.prototype.clear = function clear () {\n          this.clearDefinitions();\n\n          if (this.element) {\n              this.element.innerHTML = \"\";\n          }\n\n          var children = this.childNodes;\n          for (var i = 0; i < children.length; i++) {\n              children[i].destroy();\n          }\n\n          this.childNodes = [];\n      };\n\n      Node.prototype.removeSelf = function removeSelf () {\n          if (this.element) {\n              var parentNode = this.element.parentNode;\n              if (parentNode) {\n                  parentNode.removeChild(this.element);\n              }\n              this.element = null;\n          }\n\n          BaseNode.prototype.removeSelf.call(this);\n      };\n\n      Node.prototype.template = function template () {\n          return this.renderChildren();\n      };\n\n      Node.prototype.render = function render () {\n          return this.template();\n      };\n\n      Node.prototype.renderChildren = function renderChildren () {\n          var nodes = this.childNodes;\n          var output = \"\";\n\n          for (var i = 0; i < nodes.length; i++) {\n              output += nodes[i].render();\n          }\n\n          return output;\n      };\n\n      Node.prototype.optionsChange = function optionsChange (e) {\n          var field = e.field;\n          var value = e.value;\n\n          if (field === \"visible\") {\n              this.css(\"display\", value ? \"\" : NONE);\n          } else if (DefinitionMap[field] && isDefinition(field, value)) {\n              this.updateDefinition(field, value);\n          } else if (field === \"opacity\") {\n              this.attr(\"opacity\", value);\n          } else if (field === \"cursor\") {\n              this.css(\"cursor\", value);\n          } else if (field === \"id\") {\n              if (value) {\n                  this.attr(\"id\", value);\n              } else {\n                  this.removeAttr(\"id\");\n              }\n          }\n\n          BaseNode.prototype.optionsChange.call(this, e);\n      };\n\n      Node.prototype.accessibilityOptionsChange = function accessibilityOptionsChange (e) {\n          var field = e.field;\n          var value = e.value;\n\n\n          if (field === \"role\") {\n              if (value) {\n                  this.attr(\"role\", value);\n              } else {\n                  this.removeAttr(\"role\");\n              }\n          } else if (field === \"ariaLabel\") {\n              if (value) {\n                  this.attr(\"aria-label\", htmlEncode(value));\n              } else {\n                  this.removeAttr(\"aria-label\");\n              }\n          } else if (field === \"ariaRoleDescription\") {\n              if (value) {\n                  this.attr(\"aria-roledescription\", htmlEncode(value));\n              } else {\n                  this.removeAttr(\"aria-roledescription\");\n              }\n          } else if (field === \"ariaChecked\") {\n              if (defined(value)) {\n                  this.attr(\"aria-checked\", value);\n              } else {\n                  this.removeAttr(\"aria-checked\");\n              }\n          } else if (field === \"className\") {\n              this.className(value);\n          }\n      };\n\n      Node.prototype.attr = function attr (name, value) {\n          if (this.element) {\n              this.element.setAttribute(name, value);\n          }\n      };\n\n      Node.prototype.allAttr = function allAttr (attrs) {\n          var this$1$1 = this;\n\n          for (var i = 0; i < attrs.length; i++) {\n              this$1$1.attr(attrs[i][0], attrs[i][1]);\n          }\n      };\n\n      Node.prototype.toggleAttr = function toggleAttr (name, value) {\n          if (value) {\n              this.attr(name, value);\n          } else {\n              this.removeAttr(name);\n          }\n      };\n\n      Node.prototype.css = function css (name, value) {\n          if (this.element) {\n              this.element.style[name] = value;\n          }\n      };\n\n      Node.prototype.allCss = function allCss (styles) {\n          var this$1$1 = this;\n\n          for (var i = 0; i < styles.length; i++) {\n              this$1$1.css(styles[i][0], styles[i][1]);\n          }\n      };\n\n      Node.prototype.className = function className (value) {\n          var this$1$1 = this;\n\n          if (this.element) {\n              (ref = this.element.classList).remove.apply(ref, this.element.classList);\n              value.split(\" \").forEach(function (item) {\n                  this$1$1.element.classList.add(item);\n              });\n          }\n          var ref;\n      };\n\n      Node.prototype.removeAttr = function removeAttr (name) {\n          if (this.element) {\n              this.element.removeAttribute(name);\n          }\n      };\n\n      Node.prototype.mapTransform = function mapTransform (transform) {\n          var attrs = [];\n          if (transform) {\n              attrs.push([\n                  TRANSFORM,\n                  \"matrix(\" + transform.matrix().toString(6) + \")\"\n              ]);\n          }\n\n          return attrs;\n      };\n\n      Node.prototype.renderTransform = function renderTransform () {\n          return renderAllAttr(\n              this.mapTransform(this.srcElement.transform())\n          );\n      };\n\n      Node.prototype.transformChange = function transformChange (value) {\n          if (value) {\n              this.allAttr(this.mapTransform(value));\n          } else {\n              this.removeAttr(TRANSFORM);\n          }\n      };\n\n      Node.prototype.mapStyle = function mapStyle () {\n          var options = this.srcElement.options;\n          var style = [ [ \"cursor\", options.cursor ] ];\n\n          if (options.visible === false) {\n              style.push([ \"display\", NONE ]);\n          }\n\n          return style;\n      };\n\n      Node.prototype.renderStyle = function renderStyle$1 () {\n          return renderAttr(\"style\", renderStyle(this.mapStyle(true)));\n      };\n\n      Node.prototype.renderOpacity = function renderOpacity () {\n          return renderAttr(\"opacity\", this.srcElement.options.opacity);\n      };\n\n      Node.prototype.renderId = function renderId () {\n          return renderAttr(\"id\", this.srcElement.options.id);\n      };\n\n      Node.prototype.renderClassName = function renderClassName () {\n          return renderAttr(\"class\", this.srcElement.options.className);\n      };\n\n      Node.prototype.renderRole = function renderRole () {\n          return renderAttr(\"role\", this.srcElement.options.role);\n      };\n\n      Node.prototype.renderAriaLabel = function renderAriaLabel () {\n          var value = this.srcElement.options.ariaLabel;\n          if (value) {\n              value = htmlEncode(value);\n          }\n          return renderAttr(\"aria-label\", value);\n      };\n\n      Node.prototype.renderAriaRoleDescription = function renderAriaRoleDescription () {\n          var value = this.srcElement.options.ariaRoleDescription;\n          if (value) {\n              value = htmlEncode(value);\n          }\n          return renderAttr(\"aria-roledescription\", value);\n      };\n\n      Node.prototype.renderAriaChecked = function renderAriaChecked () {\n          return renderAttr(\"aria-checked\", this.srcElement.options.ariaChecked);\n      };\n\n      Node.prototype.createDefinitions = function createDefinitions () {\n          var srcElement = this.srcElement;\n          var definitions = this.definitions;\n          if (srcElement) {\n              var options = srcElement.options;\n              var hasDefinitions;\n\n              for (var field in DefinitionMap) {\n                  var definition = options.get(field);\n                  if (definition && isDefinition(field, definition)) {\n                      definitions[field] = definition;\n                      hasDefinitions = true;\n                  }\n              }\n              if (hasDefinitions) {\n                  this.definitionChange({\n                      action: \"add\",\n                      definitions: definitions\n                  });\n              }\n          }\n      };\n\n      Node.prototype.definitionChange = function definitionChange (e) {\n          if (this.parent) {\n              this.parent.definitionChange(e);\n          }\n      };\n\n      Node.prototype.updateDefinition = function updateDefinition (type, value) {\n          var definitions = this.definitions;\n          var current = definitions[type];\n          var attr = DefinitionMap[type];\n          var definition = {};\n          if (current) {\n              definition[type] = current;\n              this.definitionChange({\n                  action: \"remove\",\n                  definitions: definition\n              });\n              delete definitions[type];\n          }\n\n          if (!value) {\n              if (current) {\n                  this.removeAttr(attr);\n              }\n          } else {\n              definition[type] = value;\n              this.definitionChange({\n                  action: \"add\",\n                  definitions: definition\n              });\n              definitions[type] = value;\n              this.attr(attr, this.refUrl(value.id));\n          }\n      };\n\n      Node.prototype.clearDefinitions = function clearDefinitions () {\n          var definitions = this.definitions;\n\n          this.definitionChange({\n              action: \"remove\",\n              definitions: definitions\n          });\n          this.definitions = {};\n      };\n\n      Node.prototype.renderDefinitions = function renderDefinitions () {\n          return renderAllAttr(this.mapDefinitions());\n      };\n\n      Node.prototype.mapDefinitions = function mapDefinitions () {\n          var this$1$1 = this;\n\n          var definitions = this.definitions;\n          var attrs = [];\n\n          for (var field in definitions) {\n              attrs.push([ DefinitionMap[field], this$1$1.refUrl(definitions[field].id) ]);\n          }\n\n          return attrs;\n      };\n\n      Node.prototype.refUrl = function refUrl (id) {\n          var skipBaseHref = (this.options || {}).skipBaseHref;\n          var baseHref = this.baseUrl().replace(/'/g, \"\\\\'\");\n          var base = skipBaseHref ? '' : baseHref;\n          return (\"url(\" + base + \"#\" + id + \")\");\n      };\n\n      Node.prototype.baseUrl = function baseUrl$1 () {\n          return baseUrl();\n      };\n\n      return Node;\n  }(BaseNode));\n\n  var GradientStopNode = (function (Node) {\n      function GradientStopNode () {\n          Node.apply(this, arguments);\n      }\n\n      if ( Node ) GradientStopNode.__proto__ = Node;\n      GradientStopNode.prototype = Object.create( Node && Node.prototype );\n      GradientStopNode.prototype.constructor = GradientStopNode;\n\n      GradientStopNode.prototype.template = function template () {\n          return (\"<stop \" + (this.renderOffset()) + \" \" + (this.renderStyle()) + \" />\");\n      };\n\n      GradientStopNode.prototype.renderOffset = function renderOffset () {\n          return renderAttr(\"offset\", this.srcElement.offset());\n      };\n\n      GradientStopNode.prototype.mapStyle = function mapStyle () {\n          var srcElement = this.srcElement;\n          return [\n              [ \"stop-color\", srcElement.color() ],\n              [ \"stop-opacity\", srcElement.opacity() ]\n          ];\n      };\n\n      GradientStopNode.prototype.optionsChange = function optionsChange (e) {\n          if (e.field === \"offset\") {\n              this.attr(e.field, e.value);\n          } else if (e.field === \"color\" || e.field === \"opacity\") {\n              this.css(\"stop-\" + e.field, e.value);\n          }\n      };\n\n      return GradientStopNode;\n  }(Node$1));\n\n  var GradientNode = (function (Node) {\n      function GradientNode(srcElement) {\n          Node.call(this, srcElement);\n\n          this.id = srcElement.id;\n\n          this.loadStops();\n      }\n\n      if ( Node ) GradientNode.__proto__ = Node;\n      GradientNode.prototype = Object.create( Node && Node.prototype );\n      GradientNode.prototype.constructor = GradientNode;\n\n      GradientNode.prototype.loadStops = function loadStops () {\n          var this$1$1 = this;\n\n          var stops = this.srcElement.stops;\n          var element = this.element;\n\n          for (var idx = 0; idx < stops.length; idx++) {\n              var stopNode = new GradientStopNode(stops[idx]);\n              this$1$1.append(stopNode);\n              if (element) {\n                  stopNode.attachTo(element);\n              }\n          }\n      };\n\n      GradientNode.prototype.optionsChange = function optionsChange (e) {\n          if (e.field === \"gradient.stops\") {\n              BaseNode.prototype.clear.call(this);\n              this.loadStops();\n          } else if (e.field === \"gradient\") {\n              this.allAttr(this.mapCoordinates());\n          }\n      };\n\n      GradientNode.prototype.renderCoordinates = function renderCoordinates () {\n          return renderAllAttr(this.mapCoordinates());\n      };\n\n      GradientNode.prototype.mapSpace = function mapSpace () {\n          return [ \"gradientUnits\", this.srcElement.userSpace() ? \"userSpaceOnUse\" : \"objectBoundingBox\" ];\n      };\n\n      return GradientNode;\n  }(Node$1));\n\n  var LinearGradientNode = (function (GradientNode) {\n      function LinearGradientNode () {\n          GradientNode.apply(this, arguments);\n      }\n\n      if ( GradientNode ) LinearGradientNode.__proto__ = GradientNode;\n      LinearGradientNode.prototype = Object.create( GradientNode && GradientNode.prototype );\n      LinearGradientNode.prototype.constructor = LinearGradientNode;\n\n      LinearGradientNode.prototype.template = function template () {\n          return (\"<linearGradient id='\" + (this.id) + \"' \" + (this.renderCoordinates()) + \">\" + (this.renderChildren()) + \"</linearGradient>\");\n      };\n\n      LinearGradientNode.prototype.mapCoordinates = function mapCoordinates () {\n          var srcElement = this.srcElement;\n          var start = srcElement.start();\n          var end = srcElement.end();\n          var attrs = [\n              [ \"x1\", start.x ],\n              [ \"y1\", start.y ],\n              [ \"x2\", end.x ],\n              [ \"y2\", end.y ],\n              this.mapSpace()\n          ];\n\n          return attrs;\n      };\n\n      return LinearGradientNode;\n  }(GradientNode));\n\n  var RadialGradientNode = (function (GradientNode) {\n      function RadialGradientNode () {\n          GradientNode.apply(this, arguments);\n      }\n\n      if ( GradientNode ) RadialGradientNode.__proto__ = GradientNode;\n      RadialGradientNode.prototype = Object.create( GradientNode && GradientNode.prototype );\n      RadialGradientNode.prototype.constructor = RadialGradientNode;\n\n      RadialGradientNode.prototype.template = function template () {\n          return (\"<radialGradient id='\" + (this.id) + \"' \" + (this.renderCoordinates()) + \">\" + (this.renderChildren()) + \"</radialGradient>\");\n      };\n\n      RadialGradientNode.prototype.mapCoordinates = function mapCoordinates () {\n          var srcElement = this.srcElement;\n          var center = srcElement.center();\n          var radius = srcElement.radius();\n          var attrs = [\n              [ \"cx\", center.x ],\n              [ \"cy\", center.y ],\n              [ \"r\", radius ],\n              this.mapSpace()\n          ];\n          return attrs;\n      };\n\n      return RadialGradientNode;\n  }(GradientNode));\n\n  var PatternNode = (function (Node) {\n      function PatternNode(pattern) {\n          Node.call(this, pattern);\n\n          this.id = pattern.id;\n          this.load(pattern.children);\n      }\n\n      if ( Node ) PatternNode.__proto__ = Node;\n      PatternNode.prototype = Object.create( Node && Node.prototype );\n      PatternNode.prototype.constructor = PatternNode;\n\n      PatternNode.prototype.template = function template () {\n          var width = this.srcElement.size().getWidth();\n          var height = this.srcElement.size().getHeight();\n\n          return \"<pattern id='\" + (this.srcElement.id) + \"' width='\" + width + \"' height='\" + height + \"' patternUnits='userSpaceOnUse'>\" +\n                      \"\" + (this.renderChildren()) +\n                  \"</pattern>\";\n      };\n\n      return PatternNode;\n  }(Node$1));\n\n  var ClipNode = (function (Node) {\n      function ClipNode(srcElement) {\n          Node.call(this);\n\n          this.srcElement = srcElement;\n          this.id = srcElement.id;\n\n          this.load([ srcElement ]);\n      }\n\n      if ( Node ) ClipNode.__proto__ = Node;\n      ClipNode.prototype = Object.create( Node && Node.prototype );\n      ClipNode.prototype.constructor = ClipNode;\n\n      ClipNode.prototype.renderClipRule = function renderClipRule () {\n          return renderAttr(\"clip-rule\", \"evenodd\");\n      };\n      ClipNode.prototype.template = function template () {\n          return (\"<clipPath \" + (this.renderClipRule()) + \" id='\" + (this.id) + \"'>\" + (this.renderChildren()) + \"</clipPath>\");\n      };\n\n      return ClipNode;\n  }(Node$1));\n\n  var DefinitionNode = (function (Node) {\n      function DefinitionNode() {\n          Node.call(this);\n          this.definitionMap = {};\n      }\n\n      if ( Node ) DefinitionNode.__proto__ = Node;\n      DefinitionNode.prototype = Object.create( Node && Node.prototype );\n      DefinitionNode.prototype.constructor = DefinitionNode;\n\n      DefinitionNode.prototype.attachTo = function attachTo (domElement) {\n          this.element = domElement;\n      };\n\n      DefinitionNode.prototype.template = function template () {\n          return (\"<defs>\" + (this.renderChildren()) + \"</defs>\");\n      };\n\n      DefinitionNode.prototype.definitionChange = function definitionChange (e) {\n          var definitions = e.definitions;\n          var action = e.action;\n\n          if (action === \"add\") {\n              this.addDefinitions(definitions);\n          } else if (action === \"remove\") {\n              this.removeDefinitions(definitions);\n          }\n      };\n\n      DefinitionNode.prototype.createDefinition = function createDefinition (type, item) {\n          var nodeType;\n          if (type === \"clip\") {\n              nodeType = ClipNode;\n          } else if (type === \"fill\") {\n              if (item instanceof LinearGradient) {\n                  nodeType = LinearGradientNode;\n              } else if (item instanceof RadialGradient) {\n                  nodeType = RadialGradientNode;\n              } else if (item.nodeType === PATTERN) {\n                  nodeType = PatternNode;\n              }\n          }\n          return new nodeType(item);\n      };\n\n      DefinitionNode.prototype.addDefinitions = function addDefinitions (definitions) {\n          var this$1$1 = this;\n\n          for (var field in definitions) {\n              this$1$1.addDefinition(field, definitions[field]);\n          }\n      };\n\n      DefinitionNode.prototype.addDefinition = function addDefinition (type, srcElement) {\n          var ref = this;\n          var element = ref.element;\n          var definitionMap = ref.definitionMap;\n          var id = srcElement.id;\n          var mapItem = definitionMap[id];\n          if (!mapItem) {\n              var node = this.createDefinition(type, srcElement);\n              definitionMap[id] = {\n                  element: node,\n                  count: 1\n              };\n              this.append(node);\n              if (element) {\n                  node.attachTo(this.element);\n              }\n          } else {\n              mapItem.count++;\n          }\n      };\n\n      DefinitionNode.prototype.removeDefinitions = function removeDefinitions (definitions) {\n          var this$1$1 = this;\n\n          for (var field in definitions) {\n              this$1$1.removeDefinition(definitions[field]);\n          }\n      };\n\n      DefinitionNode.prototype.removeDefinition = function removeDefinition (srcElement) {\n          var definitionMap = this.definitionMap;\n          var id = srcElement.id;\n          var mapItem = definitionMap[id];\n\n          if (mapItem) {\n              mapItem.count--;\n              if (mapItem.count === 0) {\n                  this.remove(this.childNodes.indexOf(mapItem.element), 1);\n                  delete definitionMap[id];\n              }\n          }\n      };\n\n      return DefinitionNode;\n  }(Node$1));\n\n  var RootNode$1 = (function (Node) {\n      function RootNode(options) {\n          Node.call(this);\n          this.options = options;\n          this.defs = new DefinitionNode();\n      }\n\n      if ( Node ) RootNode.__proto__ = Node;\n      RootNode.prototype = Object.create( Node && Node.prototype );\n      RootNode.prototype.constructor = RootNode;\n\n      RootNode.prototype.attachTo = function attachTo (domElement) {\n          this.element = domElement;\n          this.defs.attachTo(domElement.firstElementChild);\n      };\n\n      RootNode.prototype.clear = function clear () {\n          BaseNode.prototype.clear.call(this);\n      };\n\n      RootNode.prototype.template = function template () {\n          return this.defs.render() + this.renderChildren();\n      };\n\n      RootNode.prototype.definitionChange = function definitionChange (e) {\n          this.defs.definitionChange(e);\n      };\n\n      return RootNode;\n  }(Node$1));\n\n  var ATTRIBUTE_MAP = {\n      \"fill.opacity\": \"fill-opacity\",\n      \"stroke.color\": \"stroke\",\n      \"stroke.width\": \"stroke-width\",\n      \"stroke.opacity\": \"stroke-opacity\"\n  };\n\n  var PathNode$1 = (function (Node) {\n      function PathNode () {\n          Node.apply(this, arguments);\n      }\n\n      if ( Node ) PathNode.__proto__ = Node;\n      PathNode.prototype = Object.create( Node && Node.prototype );\n      PathNode.prototype.constructor = PathNode;\n\n      PathNode.prototype.geometryChange = function geometryChange () {\n          this.attr(\"d\", this.renderData());\n          this.invalidate();\n      };\n\n      PathNode.prototype.optionsChange = function optionsChange (e) {\n          switch (e.field) {\n          case \"fill\":\n              if (e.value) {\n                  this.allAttr(this.mapFill(e.value));\n              } else {\n                  this.removeAttr(\"fill\");\n              }\n              break;\n\n          case \"fill.color\":\n              this.allAttr(this.mapFill({ color: e.value }));\n              break;\n\n          case \"stroke\":\n              if (e.value) {\n                  this.allAttr(this.mapStroke(e.value));\n              } else {\n                  this.removeAttr(\"stroke\");\n              }\n              break;\n\n          case \"transform\":\n              this.transformChange(e.value);\n              break;\n\n          default:\n              var name = ATTRIBUTE_MAP[e.field];\n              if (name) {\n                  this.attr(name, e.value);\n              }\n              break;\n          }\n\n          this.accessibilityOptionsChange(e);\n\n          Node.prototype.optionsChange.call(this, e);\n      };\n\n      PathNode.prototype.content = function content () {\n          if (this.element) {\n              this.element.textContent = this.srcElement.content();\n          }\n      };\n\n      PathNode.prototype.renderData = function renderData () {\n          return this.srcElement.toString(POINT_DIGITS) || undefined;\n      };\n\n      PathNode.prototype.mapStroke = function mapStroke (stroke) {\n          var attrs = [];\n\n          if (stroke && !isTransparent(stroke.color)) {\n              attrs.push([ \"stroke\", stroke.color ]);\n              attrs.push([ \"stroke-width\", stroke.width ]);\n              attrs.push([ \"stroke-linecap\", this.renderLinecap(stroke) ]);\n              attrs.push([ \"stroke-linejoin\", stroke.lineJoin ]);\n\n              if (defined(stroke.opacity)) {\n                  attrs.push([ \"stroke-opacity\", stroke.opacity ]);\n              }\n\n              if (defined(stroke.dashType)) {\n                  attrs.push([ \"stroke-dasharray\", this.renderDashType(stroke) ]);\n              }\n          } else {\n              attrs.push([ \"stroke\", NONE ]);\n          }\n\n          return attrs;\n      };\n\n      PathNode.prototype.renderStroke = function renderStroke () {\n          return renderAllAttr(\n              this.mapStroke(this.srcElement.options.stroke)\n          );\n      };\n\n      PathNode.prototype.renderDashType = function renderDashType (stroke) {\n          var dashType = stroke.dashType;\n          var width = stroke.width; if ( width === void 0 ) width = 1;\n\n          if (dashType && dashType !== SOLID) {\n              var dashArray = DASH_ARRAYS[dashType.toLowerCase()];\n              var result = [];\n\n              for (var i = 0; i < dashArray.length; i++) {\n                  result.push(dashArray[i] * width);\n              }\n\n              return result.join(\" \");\n          }\n      };\n\n      PathNode.prototype.renderLinecap = function renderLinecap (stroke) {\n          var dashType = stroke.dashType;\n          var lineCap = stroke.lineCap;\n\n          return (dashType && dashType !== SOLID) ? BUTT : lineCap;\n      };\n\n      PathNode.prototype.mapFill = function mapFill (fill) {\n          var attrs = [];\n          if (!(fill && (fill.nodeType === \"Gradient\" || fill.nodeType === PATTERN))) {\n              if (fill && !isTransparent(fill.color)) {\n                  attrs.push([ \"fill\", fill.color ]);\n\n                  if (defined(fill.opacity)) {\n                      attrs.push([ \"fill-opacity\", fill.opacity ]);\n                  }\n              } else {\n                  attrs.push([ \"fill\", NONE ]);\n              }\n          }\n\n          return attrs;\n      };\n\n      PathNode.prototype.renderFill = function renderFill () {\n          return renderAllAttr(\n              this.mapFill(this.srcElement.options.fill)\n          );\n      };\n\n      PathNode.prototype.template = function template () {\n          return \"<path \" + (this.renderId()) + \" \" + (this.renderStyle()) + \" \" + (this.renderOpacity()) + \" \" + (renderAttr('d', this.renderData())) +\n                  \"\" + (this.renderStroke()) + (this.renderFill()) + (this.renderDefinitions()) + (this.renderTransform()) +\n                  (this.renderClassName()) + \" \" + (this.renderRole()) +\n                  (this.renderAriaLabel()) + \" \" + (this.renderAriaRoleDescription()) +\n                  (this.renderAriaChecked()) + \" ></path>\";\n      };\n\n      return PathNode;\n  }(Node$1));\n\n  var ArcNode$1 = (function (PathNode) {\n      function ArcNode () {\n          PathNode.apply(this, arguments);\n      }\n\n      if ( PathNode ) ArcNode.__proto__ = PathNode;\n      ArcNode.prototype = Object.create( PathNode && PathNode.prototype );\n      ArcNode.prototype.constructor = ArcNode;\n\n      ArcNode.prototype.renderData = function renderData () {\n          return this.srcElement.toPath().toString(POINT_DIGITS);\n      };\n\n      return ArcNode;\n  }(PathNode$1));\n\n  var CircleNode$1 = (function (PathNode) {\n      function CircleNode () {\n          PathNode.apply(this, arguments);\n      }\n\n      if ( PathNode ) CircleNode.__proto__ = PathNode;\n      CircleNode.prototype = Object.create( PathNode && PathNode.prototype );\n      CircleNode.prototype.constructor = CircleNode;\n\n      CircleNode.prototype.geometryChange = function geometryChange () {\n          var center = this.center();\n          this.attr(\"cx\", center.x);\n          this.attr(\"cy\", center.y);\n          this.attr(\"r\", this.radius());\n          this.invalidate();\n      };\n\n      CircleNode.prototype.center = function center () {\n          return this.srcElement.geometry().center;\n      };\n\n      CircleNode.prototype.radius = function radius () {\n          return this.srcElement.geometry().radius;\n      };\n\n      CircleNode.prototype.template = function template () {\n          return \"<circle \" + (this.renderId()) + \" \" + (this.renderStyle()) + \" \" + (this.renderOpacity()) +\n                      \"cx='\" + (this.center().x) + \"' cy='\" + (this.center().y) + \"' r='\" + (this.radius()) + \"'\" +\n                      (this.renderStroke()) + \" \" + (this.renderFill()) + \" \" + (this.renderDefinitions()) +\n                      (this.renderClassName()) + \" \" + (this.renderRole()) +\n                      (this.renderAriaLabel()) + \" \" + (this.renderAriaRoleDescription()) +\n                      (this.renderAriaChecked()) + \" \" + (this.renderTransform()) + \" ></circle>\";\n      };\n\n      return CircleNode;\n  }(PathNode$1));\n\n  var GroupNode$1 = (function (Node) {\n      function GroupNode () {\n          Node.apply(this, arguments);\n      }\n\n      if ( Node ) GroupNode.__proto__ = Node;\n      GroupNode.prototype = Object.create( Node && Node.prototype );\n      GroupNode.prototype.constructor = GroupNode;\n\n      GroupNode.prototype.template = function template () {\n          return (\"<g\" + (this.renderId() + \n              this.renderTransform() + \n              this.renderClassName() + \n              this.renderStyle() + \n              this.renderOpacity() + \n              this.renderRole() + \n              this.renderAriaLabel() + \n              this.renderAriaRoleDescription() + \n              this.renderAriaChecked() +\n              this.renderDefinitions()) + \">\" + (this.renderChildren()) + \"</g>\");\n      };\n\n      GroupNode.prototype.optionsChange = function optionsChange (e) {\n          var field = e.field;\n          var value = e.value;\n\n          if (field === \"transform\") {\n              this.transformChange(value);\n          }\n\n          this.accessibilityOptionsChange(e);\n\n          Node.prototype.optionsChange.call(this, e);\n      };\n\n      return GroupNode;\n  }(Node$1));\n\n  var ImageNode$1 = (function (PathNode) {\n      function ImageNode () {\n          PathNode.apply(this, arguments);\n      }\n\n      if ( PathNode ) ImageNode.__proto__ = PathNode;\n      ImageNode.prototype = Object.create( PathNode && PathNode.prototype );\n      ImageNode.prototype.constructor = ImageNode;\n\n      ImageNode.prototype.geometryChange = function geometryChange () {\n          this.allAttr(this.mapPosition());\n          this.invalidate();\n      };\n\n      ImageNode.prototype.optionsChange = function optionsChange (e) {\n          if (e.field === \"src\") {\n              this.allAttr(this.mapSource());\n          }\n\n          PathNode.prototype.optionsChange.call(this, e);\n      };\n\n      ImageNode.prototype.mapPosition = function mapPosition () {\n          var rect = this.srcElement.rect();\n          var tl = rect.topLeft();\n\n          return [\n              [ \"x\", tl.x ],\n              [ \"y\", tl.y ],\n              [ \"width\", rect.width() + \"px\" ],\n              [ \"height\", rect.height() + \"px\" ]\n          ];\n      };\n\n      ImageNode.prototype.renderPosition = function renderPosition () {\n          return renderAllAttr(this.mapPosition());\n      };\n\n      ImageNode.prototype.mapSource = function mapSource (encode) {\n          var src = this.srcElement.src();\n\n          if (encode) {\n              src = htmlEncode(src);\n          }\n\n          return [ [ \"xlink:href\", src ] ];\n      };\n\n      ImageNode.prototype.renderSource = function renderSource () {\n          return renderAllAttr(this.mapSource(true));\n      };\n\n      ImageNode.prototype.template = function template () {\n          return \"<image preserveAspectRatio='none' \" + (this.renderId()) + \" \" + (this.renderStyle()) + \" \" + (this.renderTransform()) + \" \" + (this.renderOpacity()) +\n                 (this.renderPosition()) + \" \" + (this.renderSource()) + \" \" + (this.renderDefinitions()) +\n                 (this.renderClassName()) + \" \" + (this.renderRole()) +\n                  (this.renderAriaLabel()) + \" \" + (this.renderAriaRoleDescription()) +\n                  (this.renderAriaChecked()) + \" >\" +\n                 \"</image>\";\n      };\n\n      return ImageNode;\n  }(PathNode$1));\n\n  var MultiPathNode$1 = (function (PathNode) {\n      function MultiPathNode () {\n          PathNode.apply(this, arguments);\n      }\n\n      if ( PathNode ) MultiPathNode.__proto__ = PathNode;\n      MultiPathNode.prototype = Object.create( PathNode && PathNode.prototype );\n      MultiPathNode.prototype.constructor = MultiPathNode;\n\n      MultiPathNode.prototype.renderData = function renderData () {\n          return this.srcElement.toString(POINT_DIGITS) || 'undefined';\n      };\n\n      return MultiPathNode;\n  }(PathNode$1));\n\n  var RectNode$1 = (function (PathNode) {\n      function RectNode () {\n          PathNode.apply(this, arguments);\n      }\n\n      if ( PathNode ) RectNode.__proto__ = PathNode;\n      RectNode.prototype = Object.create( PathNode && PathNode.prototype );\n      RectNode.prototype.constructor = RectNode;\n\n      RectNode.prototype.geometryChange = function geometryChange () {\n          var geometry = this.srcElement.geometry();\n          this.attr(\"x\", geometry.origin.x);\n          this.attr(\"y\", geometry.origin.y);\n          this.attr(\"width\", geometry.size.width);\n          this.attr(\"height\", geometry.size.height);\n          this.attr(\"rx\", geometry.cornerRadius[0]);\n          this.attr(\"ry\", geometry.cornerRadius[1]);\n          this.invalidate();\n      };\n\n      RectNode.prototype.size = function size () {\n          return this.srcElement.geometry().size;\n      };\n\n      RectNode.prototype.origin = function origin () {\n          return this.srcElement.geometry().origin;\n      };\n\n      RectNode.prototype.rx = function rx () {\n          return this.srcElement.geometry().cornerRadius[0];\n      };\n\n      RectNode.prototype.ry = function ry () {\n          return this.srcElement.geometry().cornerRadius[1];\n      };\n\n      RectNode.prototype.template = function template () {\n          return \"<rect \" + (this.renderId()) + \" \" + (this.renderStyle()) + \" \" + (this.renderOpacity()) + \" x='\" + (this.origin().x) + \"' y='\" + (this.origin().y) + \"' \" +\n                      \"rx='\" + (this.rx()) + \"' ry='\" + (this.ry()) + \"' \" +\n                      \"width='\" + (this.size().width) + \"' height='\" + (this.size().height) + \"' \" + (this.renderStroke()) + \" \" +\n                      (this.renderFill()) + \" \" + (this.renderDefinitions()) + \" \" + (this.renderTransform()) +\n                      (this.renderClassName()) + \" \" + (this.renderRole()) +\n                      (this.renderAriaLabel()) + \" \" + (this.renderAriaRoleDescription()) +\n                      (this.renderAriaChecked()) + \" />\";\n      };\n\n      return RectNode;\n  }(PathNode$1));\n\n  var ENTITY_REGEX = /&(?:[a-zA-Z]+|#\\d+);/g;\n\n  function decodeEntities(text) {\n      if (!text || typeof text !== \"string\" || !ENTITY_REGEX.test(text)) {\n          return text;\n      }\n\n      var element = decodeEntities._element;\n      ENTITY_REGEX.lastIndex = 0;\n\n      return text.replace(ENTITY_REGEX, function (match) {\n          element.innerHTML = match;\n\n          return element.textContent || element.innerText;\n      });\n  }\n\n  if (typeof document !== \"undefined\") {\n      decodeEntities._element = document.createElement(\"span\");\n  }\n\n  var TextNode$1 = (function (PathNode) {\n      function TextNode () {\n          PathNode.apply(this, arguments);\n      }\n\n      if ( PathNode ) TextNode.__proto__ = PathNode;\n      TextNode.prototype = Object.create( PathNode && PathNode.prototype );\n      TextNode.prototype.constructor = TextNode;\n\n      TextNode.prototype.geometryChange = function geometryChange () {\n          var pos = this.pos();\n          this.attr(\"x\", pos.x);\n          this.attr(\"y\", pos.y);\n          this.invalidate();\n      };\n\n      TextNode.prototype.optionsChange = function optionsChange (e) {\n          if (e.field === \"font\") {\n              this.attr(\"style\", renderStyle(this.mapStyle()));\n              this.geometryChange();\n          } else if (e.field === \"content\") {\n              PathNode.prototype.content.call(this, this.srcElement.content());\n          }\n\n          PathNode.prototype.optionsChange.call(this, e);\n      };\n\n      TextNode.prototype.mapStyle = function mapStyle (encode) {\n          var style = PathNode.prototype.mapStyle.call(this, encode);\n          var font = this.srcElement.options.font;\n\n          if (encode) {\n              font = htmlEncode(font);\n          }\n\n          style.push([ \"font\", font ], [ \"white-space\", \"pre\" ]);\n\n          return style;\n      };\n\n      TextNode.prototype.pos = function pos () {\n          var pos = this.srcElement.position();\n          var size = this.srcElement.measure();\n          return pos.clone().setY(pos.y + size.baseline);\n      };\n\n      TextNode.prototype.renderContent = function renderContent () {\n          var content = this.srcElement.content();\n          content = decodeEntities(content);\n          content = htmlEncode(content);\n\n          return normalizeText(content);\n      };\n\n      TextNode.prototype.renderTextAnchor = function renderTextAnchor () {\n          var anchor;\n\n          if ((this.options || {}).rtl && !(support$1.browser.msie || support$1.browser.edge)) {\n              anchor = 'end';\n          }\n\n          return renderAttr(\"text-anchor\", anchor);\n      };\n\n      TextNode.prototype.renderPaintOrder = function renderPaintOrder () {\n          var paintOrder = this.srcElement.options.paintOrder;\n          return paintOrder ? renderAttr(\"paint-order\", paintOrder) : \"\";\n      };\n\n      TextNode.prototype.template = function template () {\n          return \"<text \" + (this.renderId()) + \" \" + (this.renderTextAnchor()) + \" \" + (this.renderStyle()) + \" \" + (this.renderOpacity()) +\n                      \"x='\" + (this.pos().x) + \"' y='\" + (this.pos().y) + \"' \" + (this.renderStroke()) + \" \" + (this.renderTransform()) + \" \" + (this.renderDefinitions()) +\n                      \"\" + (this.renderPaintOrder()) +\n                      \"\" + (this.renderFill()) +\n                      (this.renderClassName()) + \" \" + (this.renderRole()) +\n                      (this.renderAriaLabel()) + \" \" + (this.renderAriaRoleDescription()) +\n                      (this.renderAriaChecked()) + \">\" + (this.renderContent()) + \"</text>\";\n      };\n\n      return TextNode;\n  }(PathNode$1));\n\n  NODE_MAP$1.Arc = ArcNode$1;\n  NODE_MAP$1.Circle = CircleNode$1;\n  NODE_MAP$1.Group = GroupNode$1;\n  NODE_MAP$1.Image = ImageNode$1;\n  NODE_MAP$1.MultiPath = MultiPathNode$1;\n  NODE_MAP$1.Path = PathNode$1;\n  NODE_MAP$1.Rect = RectNode$1;\n  NODE_MAP$1.Text = TextNode$1;\n\n  var RTL = 'rtl';\n\n  function alignToScreen(element) {\n      var ctm;\n\n      try {\n          ctm = element.getScreenCTM ? element.getScreenCTM() : null;\n      } catch (e) { } // eslint-disable-line no-empty\n\n      if (ctm) {\n          var left = - ctm.e % 1;\n          var top = - ctm.f % 1;\n          var style = element.style;\n\n          if (left !== 0 || top !== 0) {\n              style.left = left + \"px\";\n              style.top = top + \"px\";\n          }\n      }\n  }\n\n  var Surface$2 = (function (BaseSurface) {\n      function Surface(element, options) {\n          BaseSurface.call(this, element, options);\n\n          this._root = new RootNode$1(Object.assign({\n              rtl: elementStyles(element, 'direction').direction === RTL\n          }, this.options));\n\n          renderSVG$1(this.element, this._template(''));\n\n          this._rootElement = this.element.firstElementChild;\n          this._rootElement.style.width = '100%';\n          this._rootElement.style.height = '100%';\n          this._rootElement.style.overflow = 'hidden';\n\n          alignToScreen(this._rootElement);\n\n          this._root.attachTo(this._rootElement);\n\n          bindEvents(this.element, {\n              click: this._click,\n              mouseover: this._mouseenter,\n              mouseout: this._mouseleave,\n              mousemove: this._mousemove\n          });\n\n          this.resize();\n      }\n\n      if ( BaseSurface ) Surface.__proto__ = BaseSurface;\n      Surface.prototype = Object.create( BaseSurface && BaseSurface.prototype );\n      Surface.prototype.constructor = Surface;\n\n      var prototypeAccessors = { type: { configurable: true } };\n\n      prototypeAccessors.type.get = function () {\n          return \"svg\";\n      };\n\n      Surface.prototype.destroy = function destroy () {\n          if (this._root) {\n              this._root.destroy();\n              this._root = null;\n              this._rootElement = null;\n              unbindEvents(this.element, {\n                  click: this._click,\n                  mouseover: this._mouseenter,\n                  mouseout: this._mouseleave,\n                  mousemove: this._mousemove\n              });\n          }\n\n          BaseSurface.prototype.destroy.call(this);\n      };\n\n      Surface.prototype.translate = function translate (offset) {\n          var viewBox = (Math.round(offset.x)) + \" \" + (Math.round(offset.y)) + \" \" + (this._size.width) + \" \" + (this._size.height);\n\n          this._offset = offset;\n          this._rootElement.setAttribute(\"viewBox\", viewBox);\n      };\n\n      Surface.prototype.draw = function draw (element) {\n          BaseSurface.prototype.draw.call(this, element);\n          this._root.load([ element ]);\n      };\n\n      Surface.prototype.clear = function clear () {\n          BaseSurface.prototype.clear.call(this);\n          this._root.clear();\n      };\n\n      Surface.prototype.svg = function svg () {\n          return \"<?xml version='1.0' ?>\" + this._template();\n      };\n\n      Surface.prototype.exportVisual = function exportVisual () {\n          var ref = this;\n          var visual = ref._visual;\n          var offset = ref._offset;\n\n          if (offset) {\n              var wrap = new Group$1();\n              wrap.children.push(visual);\n\n              wrap.transform(\n                  transform().translate(-offset.x, -offset.y)\n              );\n\n              visual = wrap;\n          }\n\n          return visual;\n      };\n\n      Surface.prototype._resize = function _resize () {\n          if (this._offset) {\n              this.translate(this._offset);\n          }\n      };\n\n      Surface.prototype._template = function _template (svgStyles) {\n          var styles = typeof svgStyles === 'string' ? svgStyles :\n              \"style='width: 100%; height: 100%; overflow: hidden;' \";\n          return (\"<svg \" + styles + \"xmlns='\" + SVG_NS + \"' xmlns:xlink='http://www.w3.org/1999/xlink' version='1.1'>\" + (this._root.render()) + \"</svg>\");\n      };\n\n      Object.defineProperties( Surface.prototype, prototypeAccessors );\n\n      return Surface;\n  }(Surface$3));\n\n  var NODE_MAP = {};\n\n  var Node = (function (BaseNode) {\n      function Node(srcElement) {\n          BaseNode.call(this, srcElement);\n          if (srcElement) {\n              this.initClip();\n          }\n      }\n\n      if ( BaseNode ) Node.__proto__ = BaseNode;\n      Node.prototype = Object.create( BaseNode && BaseNode.prototype );\n      Node.prototype.constructor = Node;\n\n      Node.prototype.initClip = function initClip () {\n          var clip = this.srcElement.clip();\n          if (clip) {\n              this.clip = clip;\n              clip.addObserver(this);\n          }\n      };\n\n      Node.prototype.clear = function clear () {\n          if (this.srcElement) {\n              this.srcElement.removeObserver(this);\n          }\n\n          this.clearClip();\n\n          BaseNode.prototype.clear.call(this);\n      };\n\n      Node.prototype.clearClip = function clearClip () {\n          if (this.clip) {\n              this.clip.removeObserver(this);\n              delete this.clip;\n          }\n      };\n\n      Node.prototype.setClip = function setClip (ctx) {\n          if (this.clip) {\n              ctx.beginPath();\n\n              var clipNode = new NODE_MAP[this.clip.nodeType](this.clip);\n              clipNode.renderPoints(ctx, this.clip);\n\n              ctx.clip(\"evenodd\");\n          }\n      };\n\n      Node.prototype.optionsChange = function optionsChange (e) {\n          if (e.field === \"clip\") {\n              this.clearClip();\n              this.initClip();\n          }\n\n          BaseNode.prototype.optionsChange.call(this, e);\n      };\n\n      Node.prototype.setTransform = function setTransform (ctx) {\n          if (this.srcElement) {\n              var transform = this.srcElement.transform();\n              if (transform) {\n                  ctx.transform.apply(ctx, transform.matrix().toArray(6));\n              }\n          }\n      };\n\n      Node.prototype.loadElements = function loadElements (elements, pos, cors) {\n          var this$1$1 = this;\n\n          for (var i = 0; i < elements.length; i++) {\n              var srcElement = elements[i];\n              var children = srcElement.children;\n\n              var childNode = new NODE_MAP[srcElement.nodeType](srcElement, cors);\n\n              if (children && children.length > 0) {\n                  childNode.load(children, pos, cors);\n              }\n\n              if (defined(pos)) {\n                  this$1$1.insertAt(childNode, pos);\n              } else {\n                  this$1$1.append(childNode);\n              }\n          }\n      };\n\n      Node.prototype.load = function load (elements, pos, cors) {\n          this.loadElements(elements, pos, cors);\n\n          this.invalidate();\n      };\n\n      Node.prototype.setOpacity = function setOpacity (ctx) {\n          if (this.srcElement) {\n              var opacity = this.srcElement.opacity();\n              if (defined(opacity)) {\n                  this.globalAlpha(ctx, opacity);\n              }\n          }\n      };\n\n      Node.prototype.globalAlpha = function globalAlpha (ctx, value) {\n          var opactity = value;\n          if (opactity && ctx.globalAlpha) {\n              opactity *= ctx.globalAlpha;\n          }\n          ctx.globalAlpha = opactity;\n      };\n\n      Node.prototype.visible = function visible () {\n          var src = this.srcElement;\n          return !src || (src && src.options.visible !== false);\n      };\n\n      return Node;\n  }(BaseNode));\n\n  var GroupNode = (function (superclass) {\n      function GroupNode () {\n          superclass.apply(this, arguments);\n      }\n\n      if ( superclass ) GroupNode.__proto__ = superclass;\n      GroupNode.prototype = Object.create( superclass && superclass.prototype );\n      GroupNode.prototype.constructor = GroupNode;\n\n      GroupNode.prototype.renderTo = function renderTo (ctx) {\n          if (!this.visible()) {\n              return;\n          }\n\n          ctx.save();\n\n          this.setTransform(ctx);\n          this.setClip(ctx);\n          this.setOpacity(ctx);\n\n          var childNodes = this.childNodes;\n          for (var i = 0; i < childNodes.length; i++) {\n              var child = childNodes[i];\n              if (child.visible()) {\n                  child.renderTo(ctx);\n              }\n          }\n\n          ctx.restore();\n      };\n\n      return GroupNode;\n  }(traversable(Node, \"childNodes\")));\n\n  var FRAME_DELAY = 1000 / 60;\n\n  var RootNode = (function (superclass) {\n      function RootNode(canvas, size) {\n          superclass.call(this);\n\n          this.canvas = canvas;\n          this.size = size;\n          this.ctx = canvas.getContext(\"2d\");\n\n          var invalidateHandler = this._invalidate.bind(this);\n          this.invalidate = throttle(function () {\n              animationFrame(invalidateHandler);\n          }, FRAME_DELAY);\n      }\n\n      if ( superclass ) RootNode.__proto__ = superclass;\n      RootNode.prototype = Object.create( superclass && superclass.prototype );\n      RootNode.prototype.constructor = RootNode;\n\n      RootNode.prototype.destroy = function destroy () {\n          superclass.prototype.destroy.call(this);\n          this.canvas = null;\n          this.ctx = null;\n      };\n\n      RootNode.prototype.load = function load (elements, pos, cors) {\n          this.loadElements(elements, pos, cors);\n          this._invalidate();\n      };\n\n      RootNode.prototype._rescale = function _rescale (scale) {\n          var ref = this;\n          var canvas = ref.canvas;\n          var size = ref.size;\n          canvas.width = size.width * scale;\n          canvas.height = size.height * scale;\n          this.ctx.scale(scale, scale);\n      };\n\n      RootNode.prototype._devicePixelRatio = function _devicePixelRatio () {\n          if (typeof window.devicePixelRatio === 'number') {\n              return window.devicePixelRatio;\n          }\n\n          return 1;\n      };\n\n      RootNode.prototype._invalidate = function _invalidate (options) {\n          if (!this.ctx) {\n              return;\n          }\n\n          var fixedScale = options && options.fixedScale;\n          var scale = fixedScale ? 1 : this._devicePixelRatio();\n          this._rescale(scale);\n\n          this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n          this.renderTo(this.ctx);\n      };\n\n      return RootNode;\n  }(traversable(GroupNode, \"childNodes\")));\n\n  var QuadRoot = (function (Class) {\n      function QuadRoot() {\n          Class.call(this);\n\n          this.shapes = [];\n      }\n\n      if ( Class ) QuadRoot.__proto__ = Class;\n      QuadRoot.prototype = Object.create( Class && Class.prototype );\n      QuadRoot.prototype.constructor = QuadRoot;\n\n      QuadRoot.prototype._add = function _add (shape, bbox) {\n          this.shapes.push({\n              bbox: bbox,\n              shape: shape\n          });\n          shape._quadNode = this;\n      };\n\n      QuadRoot.prototype.pointShapes = function pointShapes (point) {\n          var shapes = this.shapes;\n          var length = shapes.length;\n          var result = [];\n          for (var idx = 0; idx < length; idx++) {\n              if (shapes[idx].bbox.containsPoint(point)) {\n                  result.push(shapes[idx].shape);\n              }\n          }\n          return result;\n      };\n\n      QuadRoot.prototype.insert = function insert (shape, bbox) {\n          this._add(shape, bbox);\n      };\n\n      QuadRoot.prototype.remove = function remove (shape) {\n          var shapes = this.shapes;\n          var length = shapes.length;\n\n          for (var idx = 0; idx < length; idx++) {\n              if (shapes[idx].shape === shape) {\n                  shapes.splice(idx, 1);\n                  break;\n              }\n          }\n      };\n\n      return QuadRoot;\n  }(Class));\n\n  var QuadNode = (function (QuadRoot) {\n      function QuadNode(rect) {\n          QuadRoot.call(this);\n          this.children = [];\n          this.rect = rect;\n      }\n\n      if ( QuadRoot ) QuadNode.__proto__ = QuadRoot;\n      QuadNode.prototype = Object.create( QuadRoot && QuadRoot.prototype );\n      QuadNode.prototype.constructor = QuadNode;\n\n      QuadNode.prototype.inBounds = function inBounds (rect) {\n          var nodeRect = this.rect;\n          var nodeBottomRight = nodeRect.bottomRight();\n          var bottomRight = rect.bottomRight();\n          var inBounds = nodeRect.origin.x <= rect.origin.x && nodeRect.origin.y <= rect.origin.y && bottomRight.x <= nodeBottomRight.x &&\n              bottomRight.y <= nodeBottomRight.y;\n          return inBounds;\n      };\n\n      QuadNode.prototype.pointShapes = function pointShapes (point) {\n          var children = this.children;\n          var length = children.length;\n          var result = QuadRoot.prototype.pointShapes.call(this, point);\n          for (var idx = 0; idx < length; idx++) {\n              append(result, children[idx].pointShapes(point));\n          }\n          return result;\n      };\n\n      QuadNode.prototype.insert = function insert (shape, bbox) {\n          var children = this.children;\n          var inserted = false;\n\n          if (this.inBounds(bbox)) {\n              if (this.shapes.length < 4) {\n                  this._add(shape, bbox);\n              } else {\n                  if (!children.length) {\n                      this._initChildren();\n                  }\n\n                  for (var idx = 0; idx < children.length; idx++) {\n                      if (children[idx].insert(shape, bbox)) {\n                          inserted = true;\n                          break;\n                      }\n                  }\n\n                  if (!inserted) {\n                      this._add(shape, bbox);\n                  }\n              }\n              inserted = true;\n          }\n\n          return inserted;\n      };\n\n      QuadNode.prototype._initChildren = function _initChildren () {\n          var ref = this;\n          var rect = ref.rect;\n          var children = ref.children;\n          var center = rect.center();\n          var halfWidth = rect.width() / 2;\n          var halfHeight = rect.height() / 2;\n\n          children.push(\n              new QuadNode(new Rect$1([ rect.origin.x, rect.origin.y ], [ halfWidth, halfHeight ])),\n              new QuadNode(new Rect$1([ center.x, rect.origin.y ], [ halfWidth, halfHeight ])),\n              new QuadNode(new Rect$1([ rect.origin.x, center.y ], [ halfWidth, halfHeight ])),\n              new QuadNode(new Rect$1([ center.x, center.y ], [ halfWidth, halfHeight ]))\n          );\n      };\n\n      return QuadNode;\n  }(QuadRoot));\n\n  var ROOT_SIZE = 3000;\n  var LEVEL_STEP = 10000;\n  var MAX_LEVEL = 75;\n\n  var ShapesQuadTree = (function (Class) {\n      function ShapesQuadTree() {\n          Class.call(this);\n\n          this.initRoots();\n      }\n\n      if ( Class ) ShapesQuadTree.__proto__ = Class;\n      ShapesQuadTree.prototype = Object.create( Class && Class.prototype );\n      ShapesQuadTree.prototype.constructor = ShapesQuadTree;\n\n      ShapesQuadTree.prototype.initRoots = function initRoots () {\n          this.rootMap = {};\n          this.root = new QuadRoot();\n          this.rootElements = [];\n      };\n\n      ShapesQuadTree.prototype.clear = function clear () {\n          var this$1$1 = this;\n\n          var rootElements = this.rootElements;\n          for (var idx = 0; idx < rootElements.length; idx++) {\n              this$1$1.remove(rootElements[idx]);\n          }\n          this.initRoots();\n      };\n\n      ShapesQuadTree.prototype.pointShape = function pointShape (point) {\n          var sectorRoot = ( this.rootMap[ Math.floor( point.x / ROOT_SIZE ) ] || {} )[ Math.floor( point.y / ROOT_SIZE ) ];\n          var result = this.root.pointShapes(point);\n\n          if (sectorRoot) {\n              result = result.concat(sectorRoot.pointShapes(point));\n          }\n\n          this.assignZindex(result);\n\n          result.sort(zIndexComparer);\n          for (var idx = 0; idx < result.length; idx++) {\n              if (result[idx].containsPoint(point)) {\n                  return result[idx];\n              }\n          }\n      };\n\n      ShapesQuadTree.prototype.assignZindex = function assignZindex (elements) {\n          var this$1$1 = this;\n\n          for (var idx = 0; idx < elements.length; idx++) {\n              var element = elements[idx];\n              var zIndex = 0;\n              var levelWeight = Math.pow(LEVEL_STEP, MAX_LEVEL);\n              var parents = [];\n\n              while (element) {\n                  parents.push(element);\n                  element = element.parent;\n              }\n\n              while (parents.length) {\n                  element = parents.pop();\n                  zIndex += ((element.parent ? element.parent.children : this$1$1.rootElements).indexOf(element) + 1) * levelWeight;\n                  levelWeight /= LEVEL_STEP;\n              }\n\n              elements[idx]._zIndex = zIndex;\n          }\n      };\n\n      ShapesQuadTree.prototype.optionsChange = function optionsChange (e) {\n          if (e.field === \"transform\" || e.field === \"stroke.width\") {\n              this.bboxChange(e.element);\n          }\n      };\n\n      ShapesQuadTree.prototype.geometryChange = function geometryChange (e) {\n          this.bboxChange(e.element);\n      };\n\n      ShapesQuadTree.prototype.bboxChange = function bboxChange (element) {\n          var this$1$1 = this;\n\n          if (element.nodeType === \"Group\") {\n              for (var idx = 0; idx < element.children.length; idx++) {\n                  this$1$1.bboxChange(element.children[idx]);\n              }\n          } else {\n              if (element._quadNode) {\n                  element._quadNode.remove(element);\n              }\n              this._insertShape(element);\n          }\n      };\n\n      ShapesQuadTree.prototype.add = function add (elements) {\n          var elementsArray = Array.isArray(elements) ? elements.slice(0) : [ elements ];\n\n          append(this.rootElements, elementsArray);\n          this._insert(elementsArray);\n      };\n\n      ShapesQuadTree.prototype.childrenChange = function childrenChange (e) {\n          var this$1$1 = this;\n\n          if (e.action === \"remove\") {\n              for (var idx = 0; idx < e.items.length; idx++) {\n                  this$1$1.remove(e.items[idx]);\n              }\n          } else {\n              this._insert(Array.prototype.slice.call(e.items, 0));\n          }\n      };\n\n      ShapesQuadTree.prototype._insert = function _insert (elements) {\n          var this$1$1 = this;\n\n          var element;\n\n          while (elements.length > 0) {\n              element = elements.pop();\n              element.addObserver(this$1$1);\n              if (element.nodeType === \"Group\") {\n                  append(elements, element.children);\n              } else {\n                  this$1$1._insertShape(element);\n              }\n          }\n      };\n\n      ShapesQuadTree.prototype._insertShape = function _insertShape (shape) {\n          var bbox = shape.bbox();\n          if (bbox) {\n              var sectors = this.getSectors(bbox);\n              var x = sectors[0][0];\n              var y = sectors[1][0];\n\n              if (this.inRoot(sectors)) {\n                  this.root.insert(shape, bbox);\n              } else {\n                  var rootMap = this.rootMap;\n                  if (!rootMap[x]) {\n                      rootMap[x] = {};\n                  }\n\n                  if (!rootMap[x][y]) {\n                      rootMap[x][y] = new QuadNode(\n                          new Rect$1([ x * ROOT_SIZE, y * ROOT_SIZE ], [ ROOT_SIZE, ROOT_SIZE ])\n                      );\n                  }\n\n                  rootMap[x][y].insert(shape, bbox);\n              }\n          }\n      };\n\n      ShapesQuadTree.prototype.remove = function remove (element) {\n          var this$1$1 = this;\n\n          element.removeObserver(this);\n\n          if (element.nodeType === \"Group\") {\n              var children = element.children;\n              for (var idx = 0; idx < children.length; idx++) {\n                  this$1$1.remove(children[idx]);\n              }\n          } else if (element._quadNode) {\n              element._quadNode.remove(element);\n              delete element._quadNode;\n          }\n      };\n\n      ShapesQuadTree.prototype.inRoot = function inRoot (sectors) {\n          return sectors[0].length > 1 || sectors[1].length > 1;\n      };\n\n      ShapesQuadTree.prototype.getSectors = function getSectors (rect) {\n          var bottomRight = rect.bottomRight();\n          var bottomX = Math.floor(bottomRight.x / ROOT_SIZE);\n          var bottomY = Math.floor(bottomRight.y / ROOT_SIZE);\n          var sectors = [ [], [] ];\n          for (var x = Math.floor(rect.origin.x / ROOT_SIZE); x <= bottomX; x++) {\n              sectors[0].push(x);\n          }\n          for (var y = Math.floor(rect.origin.y / ROOT_SIZE); y <= bottomY; y++) {\n              sectors[1].push(y);\n          }\n          return sectors;\n      };\n\n      return ShapesQuadTree;\n  }(Class));\n\n  function zIndexComparer(x1, x2) {\n      if (x1._zIndex < x2._zIndex) {\n          return 1;\n      }\n      if (x1._zIndex > x2._zIndex) {\n          return -1;\n      }\n\n      return 0;\n  }\n\n  var SurfaceCursor = function SurfaceCursor(surface) {\n      surface.bind(\"mouseenter\", this._mouseenter.bind(this));\n      surface.bind(\"mouseleave\", this._mouseleave.bind(this));\n\n      this.element = surface.element;\n  };\n\n  SurfaceCursor.prototype.clear = function clear () {\n      this._resetCursor();\n  };\n\n  SurfaceCursor.prototype.destroy = function destroy () {\n      this._resetCursor();\n      delete this.element;\n  };\n\n  SurfaceCursor.prototype._mouseenter = function _mouseenter (e) {\n      var cursor = this._shapeCursor(e);\n\n      if (!cursor) {\n          this._resetCursor();\n      } else {\n          if (!this._current) {\n              this._defaultCursor = this._getCursor();\n          }\n\n          this._setCursor(cursor);\n      }\n  };\n\n  SurfaceCursor.prototype._mouseleave = function _mouseleave () {\n      this._resetCursor();\n  };\n\n  SurfaceCursor.prototype._shapeCursor = function _shapeCursor (e) {\n      var shape = e.element;\n\n      while (shape && !defined(shape.options.cursor)) {\n          shape = shape.parent;\n      }\n\n      if (shape) {\n          return shape.options.cursor;\n      }\n  };\n\n  SurfaceCursor.prototype._getCursor = function _getCursor () {\n      if (this.element) {\n          return this.element.style.cursor;\n      }\n  };\n\n  SurfaceCursor.prototype._setCursor = function _setCursor (cursor) {\n      if (this.element) {\n          this.element.style.cursor = cursor;\n          this._current = cursor;\n      }\n  };\n\n  SurfaceCursor.prototype._resetCursor = function _resetCursor () {\n      if (this._current) {\n          this._setCursor(this._defaultCursor || \"\");\n          delete this._current;\n      }\n  };\n\n  function renderPath(ctx, path) {\n      var segments = path.segments;\n\n      if (segments.length === 0) {\n          return;\n      }\n\n      var segment = segments[0];\n      var anchor = segment.anchor();\n      ctx.moveTo(anchor.x, anchor.y);\n\n      for (var i = 1; i < segments.length; i++) {\n          segment = segments[i];\n          anchor = segment.anchor();\n\n          var prevSeg = segments[i - 1];\n          var prevOut = prevSeg.controlOut();\n          var controlIn = segment.controlIn();\n\n          if (prevOut && controlIn) {\n              ctx.bezierCurveTo(prevOut.x, prevOut.y,\n                  controlIn.x, controlIn.y,\n                  anchor.x, anchor.y);\n          } else {\n              ctx.lineTo(anchor.x, anchor.y);\n          }\n      }\n\n      if (path.options.closed) {\n          ctx.closePath();\n      }\n  }\n\n  function addGradientStops(gradient, stops) {\n      for (var idx = 0; idx < stops.length; idx++) {\n          var stop = stops[idx];\n          var color = parseColor$2(stop.color());\n\n          color.a *= stop.opacity();\n\n          gradient.addColorStop(stop.offset(), color.toCssRgba());\n      }\n  }\n\n  var PathNode = (function (Node) {\n      function PathNode () {\n          Node.apply(this, arguments);\n      }\n\n      if ( Node ) PathNode.__proto__ = Node;\n      PathNode.prototype = Object.create( Node && Node.prototype );\n      PathNode.prototype.constructor = PathNode;\n\n      PathNode.prototype.renderTo = function renderTo (ctx) {\n          ctx.save();\n\n          this.setTransform(ctx);\n          this.setClip(ctx);\n          this.setOpacity(ctx);\n\n          ctx.beginPath();\n\n          this.renderPoints(ctx, this.srcElement);\n\n          this.setLineDash(ctx);\n          this.setLineCap(ctx);\n          this.setLineJoin(ctx);\n\n          this.setFill(ctx);\n          this.setStroke(ctx);\n\n          ctx.restore();\n      };\n\n      PathNode.prototype.setFill = function setFill (ctx) {\n          var fill = this.srcElement.options.fill;\n          var hasFill = false;\n\n          if (fill) {\n              if (fill.nodeType === \"Gradient\") {\n                  this.setGradientFill(ctx, fill);\n                  hasFill = true;\n              } else if (fill.nodeType === PATTERN) {\n                  this.setPatternFill(ctx, fill);\n                  hasFill = true;\n              } else if (!isTransparent(fill.color)) {\n                  ctx.fillStyle = fill.color;\n\n                  ctx.save();\n                  this.globalAlpha(ctx, fill.opacity);\n                  ctx.fill();\n                  ctx.restore();\n\n                  hasFill = true;\n              }\n          }\n\n          return hasFill;\n      };\n\n      PathNode.prototype.setGradientFill = function setGradientFill (ctx, fill) {\n          var bbox = this.srcElement.rawBBox();\n          var gradient;\n\n          if (fill instanceof LinearGradient) {\n              var start = fill.start();\n              var end = fill.end();\n              gradient = ctx.createLinearGradient(start.x, start.y, end.x, end.y);\n          } else if (fill instanceof RadialGradient) {\n              var center = fill.center();\n              gradient = ctx.createRadialGradient(center.x, center.y, 0, center.x, center.y, fill.radius());\n          }\n\n          addGradientStops(gradient, fill.stops);\n\n          ctx.save();\n\n          if (!fill.userSpace()) {\n              ctx.transform(bbox.width(), 0, 0, bbox.height(), bbox.origin.x, bbox.origin.y);\n          }\n          ctx.fillStyle = gradient;\n          ctx.fill();\n\n          ctx.restore();\n      };\n\n      PathNode.prototype.setPatternFill = function setPatternFill (ctx, pattern) {\n          var size = pattern.size();\n          var patternCanvas = document.createElement(\"canvas\");\n          var patternContext = patternCanvas.getContext(\"2d\");\n\n          patternCanvas.width = size.getWidth();\n          patternCanvas.height = size.getHeight();\n\n          this.childNodes.length = 0;\n          this.loadElements(pattern.children);\n\n          var childNodes = this.childNodes;\n          for (var i = 0; i < childNodes.length; i++) {\n              var child = childNodes[i];\n              child.renderTo(patternContext);\n          }\n\n          ctx.save();\n          ctx.fillStyle = ctx.createPattern(patternCanvas, \"repeat\");\n          ctx.fill();\n          ctx.restore();\n      };\n\n      PathNode.prototype.setStroke = function setStroke (ctx) {\n          var stroke = this.srcElement.options.stroke;\n          if (stroke && !isTransparent(stroke.color) && stroke.width > 0) {\n              ctx.strokeStyle = stroke.color;\n              ctx.lineWidth = valueOrDefault(stroke.width, 1);\n              ctx.lineJoin = valueOrDefault(stroke.lineJoin, ctx.lineJoin);\n\n              ctx.save();\n              this.globalAlpha(ctx, stroke.opacity);\n              ctx.stroke();\n              ctx.restore();\n\n              return true;\n          }\n      };\n\n      PathNode.prototype.dashType = function dashType () {\n          var stroke = this.srcElement.options.stroke;\n          if (stroke && stroke.dashType) {\n              return stroke.dashType.toLowerCase();\n          }\n      };\n\n      PathNode.prototype.setLineDash = function setLineDash (ctx) {\n          var dashType = this.dashType();\n          if (dashType && dashType !== SOLID) {\n              var dashArray = DASH_ARRAYS[dashType];\n              if (ctx.setLineDash) {\n                  ctx.setLineDash(dashArray);\n              } else {\n                  ctx.mozDash = dashArray;\n                  ctx.webkitLineDash = dashArray;\n              }\n          }\n      };\n\n      PathNode.prototype.setLineCap = function setLineCap (ctx) {\n          var dashType = this.dashType();\n          var stroke = this.srcElement.options.stroke;\n          if (dashType && dashType !== SOLID) {\n              ctx.lineCap = BUTT;\n          } else if (stroke && stroke.lineCap) {\n              ctx.lineCap = stroke.lineCap;\n          }\n      };\n\n      PathNode.prototype.setLineJoin = function setLineJoin (ctx) {\n          var stroke = this.srcElement.options.stroke;\n          if (stroke && stroke.lineJoin) {\n              ctx.lineJoin = stroke.lineJoin;\n          }\n      };\n\n      PathNode.prototype.renderPoints = function renderPoints (ctx, path) {\n          renderPath(ctx, path);\n      };\n\n      return PathNode;\n  }(Node));\n\n  var ArcNode = (function (PathNode) {\n      function ArcNode () {\n          PathNode.apply(this, arguments);\n      }\n\n      if ( PathNode ) ArcNode.__proto__ = PathNode;\n      ArcNode.prototype = Object.create( PathNode && PathNode.prototype );\n      ArcNode.prototype.constructor = ArcNode;\n\n      ArcNode.prototype.renderPoints = function renderPoints (ctx) {\n          var path = this.srcElement.toPath();\n          renderPath(ctx, path);\n      };\n\n      return ArcNode;\n  }(PathNode));\n\n  var CircleNode = (function (PathNode) {\n      function CircleNode () {\n          PathNode.apply(this, arguments);\n      }\n\n      if ( PathNode ) CircleNode.__proto__ = PathNode;\n      CircleNode.prototype = Object.create( PathNode && PathNode.prototype );\n      CircleNode.prototype.constructor = CircleNode;\n\n      CircleNode.prototype.renderPoints = function renderPoints (ctx) {\n          var ref = this.srcElement.geometry();\n          var center = ref.center;\n          var radius = ref.radius;\n\n          ctx.arc(center.x, center.y, radius, 0, Math.PI * 2);\n      };\n\n      return CircleNode;\n  }(PathNode));\n\n  var ImageNode = (function (PathNode) {\n      function ImageNode(srcElement, cors) {\n          PathNode.call(this, srcElement);\n\n          this.onLoad = this.onLoad.bind(this);\n          this.onError = this.onError.bind(this);\n\n          this.loading = createPromise();\n\n          var img = this.img = new Image();\n          var src = srcElement.src();\n\n          if (cors && !(/^data:/i.test(src))) {\n              img.crossOrigin = cors;\n          }\n\n          if (src) {\n              img.src = src;\n          }\n\n          if (img.complete) {\n              this.onLoad();\n          } else {\n              img.onload = this.onLoad;\n              img.onerror = this.onError;\n          }\n      }\n\n      if ( PathNode ) ImageNode.__proto__ = PathNode;\n      ImageNode.prototype = Object.create( PathNode && PathNode.prototype );\n      ImageNode.prototype.constructor = ImageNode;\n\n      ImageNode.prototype.renderTo = function renderTo (ctx) {\n          if (this.loading.state() === \"resolved\") {\n              ctx.save();\n\n              this.setTransform(ctx);\n              this.setClip(ctx);\n\n              this.drawImage(ctx);\n\n              ctx.restore();\n          }\n      };\n\n      ImageNode.prototype.optionsChange = function optionsChange (e) {\n          if (e.field === \"src\") {\n              this.loading = createPromise();\n              this.img.src = this.srcElement.src();\n          } else {\n              PathNode.prototype.optionsChange.call(this, e);\n          }\n      };\n\n      ImageNode.prototype.onLoad = function onLoad () {\n          this.loading.resolve();\n          this.invalidate();\n      };\n\n      ImageNode.prototype.onError = function onError () {\n          this.loading.reject(new Error(\n              \"Unable to load image '\" + this.img.src +\n              \"'. Check for connectivity and verify CORS headers.\"\n          ));\n      };\n\n      ImageNode.prototype.drawImage = function drawImage (ctx) {\n          var rect = this.srcElement.rect();\n          var topLeft = rect.topLeft();\n\n          ctx.drawImage(\n              this.img, topLeft.x, topLeft.y, rect.width(), rect.height()\n          );\n      };\n\n      return ImageNode;\n  }(PathNode));\n\n  var MultiPathNode = (function (PathNode) {\n      function MultiPathNode () {\n          PathNode.apply(this, arguments);\n      }\n\n      if ( PathNode ) MultiPathNode.__proto__ = PathNode;\n      MultiPathNode.prototype = Object.create( PathNode && PathNode.prototype );\n      MultiPathNode.prototype.constructor = MultiPathNode;\n\n      MultiPathNode.prototype.renderPoints = function renderPoints (ctx) {\n          var paths = this.srcElement.paths;\n          for (var i = 0; i < paths.length; i++) {\n              renderPath(ctx, paths[i]);\n          }\n      };\n\n      return MultiPathNode;\n  }(PathNode));\n\n  var RectNode = (function (PathNode) {\n      function RectNode () {\n          PathNode.apply(this, arguments);\n      }\n\n      if ( PathNode ) RectNode.__proto__ = PathNode;\n      RectNode.prototype = Object.create( PathNode && PathNode.prototype );\n      RectNode.prototype.constructor = RectNode;\n\n      RectNode.prototype.renderPoints = function renderPoints (ctx) {\n          var geometry = this.srcElement.geometry();\n          var ref = geometry.cornerRadius;\n          var rx = ref[0];\n          var ry = ref[1];\n\n          if (rx === 0 && ry === 0) {\n              var origin = geometry.origin;\n              var size = geometry.size;\n              ctx.rect(origin.x, origin.y, size.width, size.height);\n          } else {\n              PathNode.prototype.renderPoints.call(this, ctx, Path$1.fromRect(geometry));\n          }\n      };\n\n      return RectNode;\n  }(PathNode));\n\n  var TextNode = (function (PathNode) {\n      function TextNode () {\n          PathNode.apply(this, arguments);\n      }\n\n      if ( PathNode ) TextNode.__proto__ = PathNode;\n      TextNode.prototype = Object.create( PathNode && PathNode.prototype );\n      TextNode.prototype.constructor = TextNode;\n\n      TextNode.prototype.renderTo = function renderTo (ctx) {\n          var text = this.srcElement;\n          var pos = text.position();\n          var size = text.measure();\n\n          ctx.save();\n\n          this.setTransform(ctx);\n          this.setClip(ctx);\n          this.setOpacity(ctx);\n\n          ctx.beginPath();\n\n          ctx.font = text.options.font;\n          ctx.textAlign = 'left';\n\n          if (text.options.paintOrder === 'stroke') {\n              this.stroke(ctx, text, pos, size);\n              this.fill(ctx, text, pos, size);\n          } else {\n              this.fill(ctx, text, pos, size);\n              this.stroke(ctx, text, pos, size);\n          }\n\n          ctx.restore();\n      };\n\n      TextNode.prototype.stroke = function stroke (ctx, text, pos, size) {\n          if (this.setStroke(ctx)) {\n              this.setLineDash(ctx);\n              ctx.strokeText(text.content(), pos.x, pos.y + size.baseline);\n          }\n      };\n\n      TextNode.prototype.fill = function fill (ctx, text, pos, size) {\n          if (this.setFill(ctx)) {\n              ctx.fillText(text.content(), pos.x, pos.y + size.baseline);\n          }\n      };\n\n      return TextNode;\n  }(PathNode));\n\n  NODE_MAP.Arc = ArcNode;\n  NODE_MAP.Circle = CircleNode;\n  NODE_MAP.Group = GroupNode;\n  NODE_MAP.Image = ImageNode;\n  NODE_MAP.MultiPath = MultiPathNode;\n  NODE_MAP.Path = PathNode;\n  NODE_MAP.Rect = RectNode;\n  NODE_MAP.Text = TextNode;\n\n\n  var Surface$1 = (function (BaseSurface) {\n      function Surface(element, options) {\n          BaseSurface.call(this, element, options);\n\n          this.element.innerHTML = this._template(this);\n\n          var canvas = this.element.firstElementChild;\n          canvas.style.width = '100%';\n          canvas.style.height = '100%';\n\n          var size = elementSize(element);\n\n          canvas.width = size.width;\n          canvas.height = size.height;\n\n          this._rootElement = canvas;\n\n          this._root = new RootNode(canvas, size);\n\n          this._mouseTrackHandler = this._trackMouse.bind(this);\n\n          bindEvents(this.element, {\n              click: this._mouseTrackHandler,\n              mousemove: this._mouseTrackHandler\n          });\n      }\n\n      if ( BaseSurface ) Surface.__proto__ = BaseSurface;\n      Surface.prototype = Object.create( BaseSurface && BaseSurface.prototype );\n      Surface.prototype.constructor = Surface;\n\n      var prototypeAccessors = { type: { configurable: true } };\n\n      prototypeAccessors.type.get = function () {\n          return \"canvas\";\n      };\n\n      Surface.prototype.destroy = function destroy () {\n          BaseSurface.prototype.destroy.call(this);\n\n          if (this._root) {\n              this._root.destroy();\n              this._root = null;\n          }\n\n          if (this._searchTree) {\n              this._searchTree.clear();\n              delete this._searchTree;\n          }\n\n          if (this._cursor) {\n              this._cursor.destroy();\n              delete this._cursor;\n          }\n\n          unbindEvents(this.element, {\n              click: this._mouseTrackHandler,\n              mousemove: this._mouseTrackHandler\n          });\n      };\n\n      Surface.prototype.draw = function draw (element) {\n          BaseSurface.prototype.draw.call(this, element);\n          this._root.load([ element ], undefined, this.options.cors);\n\n          if (this._searchTree) {\n              this._searchTree.add([ element ]);\n          }\n      };\n\n      Surface.prototype.clear = function clear () {\n          BaseSurface.prototype.clear.call(this);\n          this._root.clear();\n\n          if (this._searchTree) {\n              this._searchTree.clear();\n          }\n\n          if (this._cursor) {\n              this._cursor.clear();\n          }\n      };\n\n      Surface.prototype.eventTarget = function eventTarget (e) {\n          if (this._searchTree) {\n              var point = this._surfacePoint(e);\n              var shape = this._searchTree.pointShape(point);\n              return shape;\n          }\n      };\n\n      Surface.prototype.image = function image () {\n          var ref = this;\n          var root = ref._root;\n          var rootElement = ref._rootElement;\n          var loadingStates = [];\n\n          root.traverse(function (childNode) {\n              if (childNode.loading) {\n                  loadingStates.push(childNode.loading);\n              }\n          });\n\n          var promise = createPromise();\n          var resolveDataURL = function () {\n              root._invalidate({ fixedScale: true });\n\n              try {\n                  var data = rootElement.toDataURL();\n                  promise.resolve(data);\n              } catch (e) {\n                  promise.reject(e);\n              }\n          };\n\n          promiseAll(loadingStates).then(resolveDataURL, resolveDataURL);\n\n          return promise;\n      };\n\n      Surface.prototype.suspendTracking = function suspendTracking () {\n          BaseSurface.prototype.suspendTracking.call(this);\n          if (this._searchTree) {\n              this._searchTree.clear();\n              delete this._searchTree;\n          }\n      };\n\n      Surface.prototype.resumeTracking = function resumeTracking () {\n          BaseSurface.prototype.resumeTracking.call(this);\n          if (!this._searchTree) {\n              this._searchTree = new ShapesQuadTree();\n\n              var childNodes = this._root.childNodes;\n              var rootElements = [];\n              for (var idx = 0; idx < childNodes.length; idx++) {\n                  rootElements.push(childNodes[idx].srcElement);\n              }\n              this._searchTree.add(rootElements);\n          }\n      };\n\n      Surface.prototype._resize = function _resize () {\n          this._rootElement.width = this._size.width;\n          this._rootElement.height = this._size.height;\n\n          this._root.size = this._size;\n          this._root.invalidate();\n      };\n\n      Surface.prototype._template = function _template () {\n          return \"<canvas></canvas>\";\n      };\n\n      Surface.prototype._enableTracking = function _enableTracking () {\n          this._searchTree = new ShapesQuadTree();\n          this._cursor = new SurfaceCursor(this);\n\n          BaseSurface.prototype._enableTracking.call(this);\n      };\n\n      Surface.prototype._trackMouse = function _trackMouse (e) {\n          if (this._suspendedTracking) {\n              return;\n          }\n\n          var shape = this.eventTarget(e);\n\n          if (e.type !== \"click\") {\n              var currentShape = this._currentShape;\n              if (currentShape && currentShape !== shape) {\n                  this.trigger(\"mouseleave\", {\n                      element: currentShape,\n                      originalEvent: e,\n                      type: \"mouseleave\"\n                  });\n              }\n\n              if (shape && currentShape !== shape) {\n                  this.trigger(\"mouseenter\", {\n                      element: shape,\n                      originalEvent: e,\n                      type: \"mouseenter\"\n                  });\n              }\n\n              this.trigger(\"mousemove\", {\n                  element: shape,\n                  originalEvent: e,\n                  type: \"mousemove\"\n              });\n\n              this._currentShape = shape;\n          } else if (shape) {\n              this.trigger(\"click\", {\n                  element: shape,\n                  originalEvent: e,\n                  type: \"click\"\n              });\n          }\n      };\n\n      Object.defineProperties( Surface.prototype, prototypeAccessors );\n\n      return Surface;\n  }(Surface$3));\n\n  var instance;\n  var support;\n\n  var hasDocument = function () { return typeof document !== \"undefined\"; };\n\n  var supportsCanvas = function () { return hasDocument() &&\n      document.createElement(\"canvas\").getContext; };\n\n  var supportsSVG = function () { return hasDocument() &&\n      document.implementation.hasFeature(\"http://www.w3.org/TR/SVG11/feature#BasicStructure\", \"1.1\"); };\n\n  var SurfaceFactory = (function (Class) {\n      function SurfaceFactory() {\n          Class.call(this);\n\n          this._items = [ {\n              name: \"svg\",\n              type: Surface$2\n          }, {\n              name: \"canvas\",\n              type: Surface$1\n          } ];\n      }\n\n      if ( Class ) SurfaceFactory.__proto__ = Class;\n      SurfaceFactory.prototype = Object.create( Class && Class.prototype );\n      SurfaceFactory.prototype.constructor = SurfaceFactory;\n\n      var staticAccessors = { support: { configurable: true },current: { configurable: true } };\n\n      staticAccessors.support.get = function () {\n          if (!support) {\n              support = {\n                  canvas: supportsCanvas(),\n                  svg: supportsSVG()\n              };\n          }\n\n          return support;\n      };\n\n      staticAccessors.current.get = function () {\n          if (!instance) {\n              instance = new SurfaceFactory();\n          }\n\n          return instance;\n      };\n\n      SurfaceFactory.prototype.create = function create (element, options) {\n          var items = this._items;\n          var match = items[0];\n\n          if (options && options.type) {\n              var preferred = options.type.toLowerCase();\n              for (var i = 0; i < items.length; i++) {\n                  if (items[i].name === preferred) {\n                      match = items[i];\n                      break;\n                  }\n              }\n          }\n\n          if (match) {\n              return new match.type(element, options);\n          }\n\n          logToConsole(\n              \"Warning: Unable to create Kendo UI Drawing Surface. Possible causes:\\n\" +\n              \"- The browser does not support SVG and Canvas. User agent: \" + (navigator.userAgent));\n      };\n\n      Object.defineProperties( SurfaceFactory, staticAccessors );\n\n      return SurfaceFactory;\n  }(Class));\n\n  var Surface = (function (BaseSurface) {\n      function Surface () {\n          BaseSurface.apply(this, arguments);\n      }\n\n      if ( BaseSurface ) Surface.__proto__ = BaseSurface;\n      Surface.prototype = Object.create( BaseSurface && BaseSurface.prototype );\n      Surface.prototype.constructor = Surface;\n\n      var staticAccessors = { support: { configurable: true } };\n\n      staticAccessors.support.get = function () {\n          return SurfaceFactory.support;\n      };\n\n      Surface.create = function create (element, options) {\n          return SurfaceFactory.current.create(element, options);\n      };\n\n      Object.defineProperties( Surface, staticAccessors );\n\n      return Surface;\n  }(Surface$3));\n\n  function exportGroup(group) {\n      var root = new RootNode$1({\n          skipBaseHref: true\n      });\n      var bbox = group.clippedBBox();\n      var rootGroup = group;\n\n      if (bbox) {\n          var origin = bbox.getOrigin();\n          var exportRoot = new Group$1();\n          exportRoot.transform(transform().translate(-origin.x, -origin.y));\n          exportRoot.children.push(group);\n          rootGroup = exportRoot;\n      }\n\n      root.load([ rootGroup ]);\n\n      var svg = \"<?xml version='1.0' ?><svg xmlns='\" + SVG_NS + \"' xmlns:xlink='http://www.w3.org/1999/xlink' version='1.1'>\" + (root.render()) + \"</svg>\";\n\n      root.destroy();\n\n      return svg;\n  }\n\n  var svg = /*#__PURE__*/Object.freeze({\n      __proto__: null,\n      ArcNode: ArcNode$1,\n      CircleNode: CircleNode$1,\n      ClipNode: ClipNode,\n      DefinitionNode: DefinitionNode,\n      GradientStopNode: GradientStopNode,\n      GroupNode: GroupNode$1,\n      ImageNode: ImageNode$1,\n      LinearGradientNode: LinearGradientNode,\n      MultiPathNode: MultiPathNode$1,\n      Node: Node$1,\n      PathNode: PathNode$1,\n      RadialGradientNode: RadialGradientNode,\n      RectNode: RectNode$1,\n      RootNode: RootNode$1,\n      Surface: Surface$2,\n      TextNode: TextNode$1,\n      exportGroup: exportGroup\n  });\n\n  var canvas = /*#__PURE__*/Object.freeze({\n      __proto__: null,\n      ArcNode: ArcNode,\n      CircleNode: CircleNode,\n      GroupNode: GroupNode,\n      ImageNode: ImageNode,\n      MultiPathNode: MultiPathNode,\n      Node: Node,\n      PathNode: PathNode,\n      RectNode: RectNode,\n      RootNode: RootNode,\n      Surface: Surface$1,\n      TextNode: TextNode\n  });\n\n  function exportImage(group, options) {\n      var defaults = {\n          width: \"800px\", height: \"600px\",\n          cors: \"Anonymous\"\n      };\n\n      var exportRoot = group;\n      var bbox = group.clippedBBox();\n\n\n      if (bbox) {\n          var origin = bbox.getOrigin();\n          exportRoot = new Group$1();\n          exportRoot.transform(transform().translate(-origin.x, -origin.y));\n          exportRoot.children.push(group);\n\n          var size = bbox.getSize();\n          defaults.width = size.width + \"px\";\n          defaults.height = size.height + \"px\";\n      }\n\n      var surfaceOptions = Object.assign(defaults, options);\n\n      var container = document.createElement(\"div\");\n      var style = container.style;\n\n      style.display = \"none\";\n      style.width = surfaceOptions.width;\n      style.height = surfaceOptions.height;\n      document.body.appendChild(container);\n\n      var surface = new Surface$1(container, surfaceOptions);\n      surface.suspendTracking();\n      surface.draw(exportRoot);\n\n      var promise = surface.image();\n      var destroy = function () {\n          surface.destroy();\n          document.body.removeChild(container);\n      };\n      promise.then(destroy, destroy);\n\n      return promise;\n  }\n\n  function exportSVG(group, options) {\n      var svg = exportGroup(group);\n\n      if (!options || !options.raw) {\n          svg = \"data:image/svg+xml;base64,\" + encodeBase64(svg);\n      }\n\n      return createPromise().resolve(svg);\n  }\n\n  var drawing = /*#__PURE__*/Object.freeze({\n      __proto__: null,\n      Animation: Animation,\n      AnimationFactory: AnimationFactory,\n      Arc: Arc,\n      BaseNode: BaseNode,\n      Circle: Circle$1,\n      Element: Element$1,\n      Gradient: Gradient,\n      GradientStop: GradientStop,\n      Group: Group$1,\n      HasObservers: HasObservers,\n      Image: Image$1,\n      Layout: Layout$1,\n      LinearGradient: LinearGradient,\n      MultiPath: MultiPath,\n      OptionsStore: OptionsStore,\n      Path: Path$1,\n      PathParser: PathParser,\n      Pattern: Pattern,\n      QuadNode: QuadNode,\n      RadialGradient: RadialGradient,\n      Rect: Rect,\n      ShapesQuadTree: ShapesQuadTree,\n      Surface: Surface,\n      SurfaceFactory: SurfaceFactory,\n      Text: Text,\n      align: align,\n      canvas: canvas,\n      crosshatchPattern: crosshatchPattern,\n      diagonalStripesPattern: diagonalStripesPattern,\n      dotsPattern: dotsPattern,\n      exportImage: exportImage,\n      exportSVG: exportSVG,\n      fit: fit,\n      gridPattern: gridPattern,\n      parsePath: parsePath,\n      stack: stack,\n      svg: svg,\n      util: util,\n      vAlign: vAlign,\n      vStack: vStack,\n      vWrap: vWrap,\n      verticalStripesPattern: verticalStripesPattern,\n      wrap: wrap\n  });\n\n  /* eslint-disable no-multi-spaces, key-spacing, indent, camelcase, space-before-blocks, eqeqeq, brace-style */\n  /* eslint-disable space-infix-ops, space-before-function-paren, array-bracket-spacing, object-curly-spacing */\n  /* eslint-disable no-nested-ternary, max-params, default-case, no-else-return, no-empty */\n  /* eslint-disable no-param-reassign, no-var, block-scoped-var */\n\n  // XXX: remove this junk (assume `true`) when we no longer have to support IE < 10\n  // IE 9 (at least compatibility) reports having Uint8Array but the request response does not contain ArrayBuffer which results in missing table head error\n  var HAS_TYPED_ARRAYS = typeof Uint8Array !== 'undefined' && support$1.browser && (!support$1.browser.msie || support$1.browser.version > 9);\n\n  var BASE64 = (function(){\n      var keyStr = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n      return {\n          decode: function(str) {\n              var input = str.replace(/[^A-Za-z0-9\\+\\/\\=]/g, \"\"), i = 0, n = input.length, output = [];\n\n              while (i < n) {\n                  var enc1 = keyStr.indexOf(input.charAt(i++));\n                  var enc2 = keyStr.indexOf(input.charAt(i++));\n                  var enc3 = keyStr.indexOf(input.charAt(i++));\n                  var enc4 = keyStr.indexOf(input.charAt(i++));\n\n                  var chr1 = (enc1 << 2) | (enc2 >>> 4);\n                  var chr2 = ((enc2 & 15) << 4) | (enc3 >>> 2);\n                  var chr3 = ((enc3 & 3) << 6) | enc4;\n\n                  output.push(chr1);\n                  if (enc3 != 64) {\n                      output.push(chr2);\n                  }\n                  if (enc4 != 64) {\n                      output.push(chr3);\n                  }\n              }\n\n              return output;\n          },\n          encode: function(bytes) {\n              var i = 0, n = bytes.length;\n              var output = \"\";\n\n              while (i < n) {\n                  var chr1 = bytes[i++];\n                  var chr2 = bytes[i++];\n                  var chr3 = bytes[i++];\n\n                  var enc1 = chr1 >>> 2;\n                  var enc2 = ((chr1 & 3) << 4) | (chr2 >>> 4);\n                  var enc3 = ((chr2 & 15) << 2) | (chr3 >>> 6);\n                  var enc4 = chr3 & 63;\n\n                  if (i - n == 2) {\n                      enc3 = enc4 = 64;\n                  } else if (i - n == 1) {\n                      enc4 = 64;\n                  }\n\n                  output += keyStr.charAt(enc1) + keyStr.charAt(enc2) + keyStr.charAt(enc3) + keyStr.charAt(enc4);\n              }\n              return output;\n          }\n      };\n  }());\n\n  function BinaryStream(data) {\n      var offset = 0, length = 0;\n      if (data == null) {\n          data = HAS_TYPED_ARRAYS ? new Uint8Array(256) : [];\n      } else {\n          length = data.length;\n      }\n\n      var ensure = HAS_TYPED_ARRAYS ? function(len) {\n          if (len >= data.length) {\n              var tmp = new Uint8Array(Math.max(len + 256, data.length * 2));\n              tmp.set(data, 0);\n              data = tmp;\n          }\n      } : function() {};\n\n      var get = HAS_TYPED_ARRAYS ? function() {\n          return new Uint8Array(data.buffer, 0, length);\n      } : function() {\n          return data;\n      };\n\n      var write = HAS_TYPED_ARRAYS ? function(bytes) {\n          if (typeof bytes == \"string\") {\n              return writeString(bytes);\n          }\n          var len = bytes.length;\n          ensure(offset + len);\n          data.set(bytes, offset);\n          offset += len;\n          if (offset > length) {\n              length = offset;\n          }\n      } : function(bytes) {\n          if (typeof bytes == \"string\") {\n              return writeString(bytes);\n          }\n          for (var i = 0; i < bytes.length; ++i) {\n              writeByte(bytes[i]);\n          }\n      };\n\n      var slice = HAS_TYPED_ARRAYS ? function(start, length) {\n          if (data.buffer.slice) {\n              return new Uint8Array(data.buffer.slice(start, start + length));\n          } else {\n              // IE10\n              var x = new Uint8Array(length);\n              x.set(new Uint8Array(data.buffer, start, length));\n              return x;\n          }\n      } : function(start, length) {\n          return data.slice(start, start + length);\n      };\n\n      function eof() {\n          return offset >= length;\n      }\n      function readByte() {\n          return offset < length ? data[offset++] : 0;\n      }\n      function writeByte(b) {\n          ensure(offset);\n          data[offset++] = b & 0xFF;\n          if (offset > length) {\n              length = offset;\n          }\n      }\n      function readShort() {\n          return (readByte() << 8) | readByte();\n      }\n      function writeShort(w) {\n          writeByte(w >> 8);\n          writeByte(w);\n      }\n      function readShort_() {\n          var w = readShort();\n          return w >= 0x8000 ? w - 0x10000 : w;\n      }\n      function writeShort_(w) {\n          writeShort(w < 0 ? w + 0x10000 : w);\n      }\n      function readLong() {\n          return (readShort() * 0x10000) + readShort();\n      }\n      function writeLong(w) {\n          writeShort((w >>> 16) & 0xFFFF);\n          writeShort(w & 0xFFFF);\n      }\n      function readLong_() {\n          var w = readLong();\n          return w >= 0x80000000 ? w - 0x100000000 : w;\n      }\n      function writeLong_(w) {\n          writeLong(w < 0 ? w + 0x100000000 : w);\n      }\n      function readFixed() {\n          return readLong() / 0x10000;\n      }\n      function writeFixed(f) {\n          writeLong(Math.round(f * 0x10000));\n      }\n      function readFixed_() {\n          return readLong_() / 0x10000;\n      }\n      function writeFixed_(f) {\n          writeLong_(Math.round(f * 0x10000));\n      }\n      function read(len) {\n          return times(len, readByte);\n      }\n      function readString(len) {\n          return String.fromCharCode.apply(String, read(len));\n      }\n      function writeString(str) {\n          for (var i = 0; i < str.length; ++i) {\n              writeByte(str.charCodeAt(i));\n          }\n      }\n      function times(n, reader) {\n          for (var ret = new Array(n), i = 0; i < n; ++i) {\n              ret[i] = reader();\n          }\n          return ret;\n      }\n\n      var stream = {\n          eof         : eof,\n          readByte    : readByte,\n          writeByte   : writeByte,\n          readShort   : readShort,\n          writeShort  : writeShort,\n          readLong    : readLong,\n          writeLong   : writeLong,\n          readFixed   : readFixed,\n          writeFixed  : writeFixed,\n\n          // signed numbers.\n          readShort_  : readShort_,\n          writeShort_ : writeShort_,\n          readLong_   : readLong_,\n          writeLong_  : writeLong_,\n          readFixed_  : readFixed_,\n          writeFixed_ : writeFixed_,\n\n          read        : read,\n          write       : write,\n          readString  : readString,\n          writeString : writeString,\n\n          times       : times,\n          get         : get,\n          slice       : slice,\n\n          offset: function(pos) {\n              if (pos != null) {\n                  offset = pos;\n                  return stream;\n              }\n              return offset;\n          },\n\n          skip: function(nbytes) {\n              offset += nbytes;\n          },\n\n          toString: function() {\n              throw new Error(\"FIX CALLER.  BinaryStream is no longer convertible to string!\");\n          },\n\n          length: function() { return length; },\n\n          saveExcursion: function(f) {\n              var pos = offset;\n              try {\n                  return f();\n              } finally {\n                  offset = pos;\n              }\n          },\n\n          writeBase64: function(base64) {\n              if (window.atob) {\n                  writeString(window.atob(base64));\n              } else {\n                  write(BASE64.decode(base64));\n              }\n          },\n          base64: function() {\n              return BASE64.encode(get());\n          }\n      };\n\n      return stream;\n  }\n\n  function ucs2decode(string) {\n      var output = [],\n          counter = 0,\n          length = string.length,\n          value,\n          extra;\n      while (counter < length) {\n          value = string.charCodeAt(counter++);\n          if (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n              // high surrogate, and there is a next character\n              extra = string.charCodeAt(counter++);\n              if ((extra & 0xFC00) == 0xDC00) { // low surrogate\n                  output.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n              } else {\n                  // unmatched surrogate; only append this code unit, in case the next\n                  // code unit is the high surrogate of a surrogate pair\n                  output.push(value);\n                  counter--;\n              }\n          } else {\n              output.push(value);\n          }\n      }\n      return output;\n  }\n\n  function ucs2encode(array) {\n      return array.map(function(value){\n          var output = \"\";\n          if (value > 0xFFFF) {\n              value -= 0x10000;\n              output += String.fromCharCode(value >>> 10 & 0x3FF | 0xD800);\n              value = 0xDC00 | value & 0x3FF;\n          }\n          output += String.fromCharCode(value);\n          return output;\n      }).join(\"\");\n  }\n\n  function atobUint8Array(base64) {\n      var data = window.atob(base64);\n      var result = new Uint8Array(data.length);\n\n      for (var idx = 0; idx < data.length; idx++) {\n          result[idx] = data.charCodeAt(idx);\n      }\n\n      return result;\n  }\n\n  function createUint8Array(data) {\n      var result = new Uint8Array(data.length);\n\n      for (var idx = 0; idx < data.length; idx++) {\n          result[idx] = data[idx];\n      }\n\n      return result;\n  }\n\n  function base64ToUint8Array(base64) {\n      if (window.atob) {\n          return atobUint8Array(base64);\n      }\n\n      return createUint8Array(BASE64.decode(base64));\n  }\n\n  /* eslint-disable no-multi-spaces, key-spacing, indent, camelcase, space-before-blocks, eqeqeq, brace-style */\n  /* eslint-disable space-infix-ops, space-before-function-paren, array-bracket-spacing, object-curly-spacing */\n  /* eslint-disable no-nested-ternary, max-params, default-case, no-else-return, no-empty */\n  /* eslint-disable no-param-reassign, no-var, block-scoped-var */\n\n\n  function hasOwnProperty$2(obj, key) {\n      return Object.prototype.hasOwnProperty.call(obj, key);\n  }\n\n  function sortedKeys(obj) {\n      return Object.keys(obj).sort(function(a, b){ return a - b; }).map(parseFloat);\n  }\n\n  ///\n  var Directory = function Directory(data) {\n      this.raw = data;\n      this.scalerType = data.readLong();\n      this.tableCount = data.readShort();\n      this.searchRange = data.readShort();\n      this.entrySelector = data.readShort();\n      this.rangeShift = data.readShort();\n\n      var tables = this.tables = {};\n      for (var i = 0; i < this.tableCount; ++i) {\n          var entry = {\n              tag  : data.readString(4),\n              checksum : data.readLong(),\n              offset   : data.readLong(),\n              length   : data.readLong()\n          };\n          tables[entry.tag] = entry;\n      }\n  };\n\n  Directory.prototype.readTable = function readTable (name, Ctor) {\n      var def = this.tables[name];\n      if (!def) {\n          throw new Error(\"Table \" + name + \" not found in directory\");\n      }\n      return (this[name] = def.table = new Ctor(this, def));\n  };\n\n  Directory.prototype.render = function render (tables) {\n          var this$1$1 = this;\n\n      var tableCount = Object.keys(tables).length;\n\n      var maxpow2 = Math.pow(2, Math.floor(Math.log(tableCount) / Math.LN2));\n      var searchRange = maxpow2 * 16;\n      var entrySelector = Math.floor(Math.log(maxpow2) / Math.LN2);\n      var rangeShift = tableCount * 16 - searchRange;\n\n      var out = BinaryStream();\n      out.writeLong(this.scalerType);\n      out.writeShort(tableCount);\n      out.writeShort(searchRange);\n      out.writeShort(entrySelector);\n      out.writeShort(rangeShift);\n\n      var directoryLength = tableCount * 16;\n      var offset = out.offset() + directoryLength;\n      var headOffset = null;\n      var tableData = BinaryStream();\n\n      for (var tag in tables) {\n          if (hasOwnProperty$2(tables, tag)) {\n              var table = tables[tag];\n\n              out.writeString(tag);\n              out.writeLong(this$1$1.checksum(table));\n              out.writeLong(offset);\n              out.writeLong(table.length);\n\n              tableData.write(table);\n              if (tag == \"head\") {\n                  headOffset = offset;\n              }\n              offset += table.length;\n\n              while (offset % 4) {\n                  tableData.writeByte(0);\n                  offset++;\n              }\n          }\n      }\n\n      out.write(tableData.get());\n      var sum = this.checksum(out.get());\n      var adjustment = 0xB1B0AFBA - sum;\n\n      out.offset(headOffset + 8);\n      out.writeLong(adjustment);\n      return out.get();\n  };\n\n  Directory.prototype.checksum = function checksum (data) {\n      data = BinaryStream(data);\n      var sum = 0;\n      while (!data.eof()) {\n          sum += data.readLong();\n      }\n      return sum & 0xFFFFFFFF;\n  };\n\n  var Table = function Table(file, def) {\n      this.definition = def;\n      this.length = def.length;\n      this.offset = def.offset;\n      this.file = file;\n      this.rawData = file.raw;\n      this.parse(file.raw);\n  };\n\n  Table.prototype.raw = function raw () {\n      return this.rawData.slice(this.offset, this.length);\n  };\n\n  Table.prototype.parse = function parse () {};\n\n  var HeadTable = (function (Table) {\n      function HeadTable () {\n          Table.apply(this, arguments);\n      }\n\n      if ( Table ) HeadTable.__proto__ = Table;\n      HeadTable.prototype = Object.create( Table && Table.prototype );\n      HeadTable.prototype.constructor = HeadTable;\n\n      HeadTable.prototype.parse = function parse (data) {\n          data.offset(this.offset);\n          this.version             = data.readLong();\n          this.revision            = data.readLong();\n          this.checkSumAdjustment  = data.readLong();\n          this.magicNumber         = data.readLong();\n          this.flags               = data.readShort();\n          this.unitsPerEm          = data.readShort();\n          this.created             = data.read(8);\n          this.modified            = data.read(8);\n\n          this.xMin = data.readShort_();\n          this.yMin = data.readShort_();\n          this.xMax = data.readShort_();\n          this.yMax = data.readShort_();\n\n          this.macStyle           = data.readShort();\n          this.lowestRecPPEM      = data.readShort();\n          this.fontDirectionHint  = data.readShort_();\n          this.indexToLocFormat   = data.readShort_();\n          this.glyphDataFormat    = data.readShort_();\n      };\n\n      HeadTable.prototype.render = function render (indexToLocFormat) {\n          var out = BinaryStream();\n          out.writeLong(this.version);\n          out.writeLong(this.revision);\n          out.writeLong(0);       // checksum adjustment; shall be computed later\n          out.writeLong(this.magicNumber);\n          out.writeShort(this.flags);\n          out.writeShort(this.unitsPerEm);\n          out.write(this.created);\n          out.write(this.modified);\n          out.writeShort_(this.xMin);\n          out.writeShort_(this.yMin);\n          out.writeShort_(this.xMax);\n          out.writeShort_(this.yMax);\n          out.writeShort(this.macStyle);\n          out.writeShort(this.lowestRecPPEM);\n          out.writeShort_(this.fontDirectionHint);\n          out.writeShort_(indexToLocFormat); // this will depend on the `loca` table\n          out.writeShort_(this.glyphDataFormat);\n          return out.get();\n      };\n\n      return HeadTable;\n  }(Table));\n\n  var LocaTable = (function (Table) {\n      function LocaTable () {\n          Table.apply(this, arguments);\n      }\n\n      if ( Table ) LocaTable.__proto__ = Table;\n      LocaTable.prototype = Object.create( Table && Table.prototype );\n      LocaTable.prototype.constructor = LocaTable;\n\n      LocaTable.prototype.parse = function parse (data) {\n          data.offset(this.offset);\n          var format = this.file.head.indexToLocFormat;\n          if (format === 0) {\n              this.offsets = data.times(this.length / 2, function(){\n                  return 2 * data.readShort();\n              });\n          } else {\n              this.offsets = data.times(this.length / 4, data.readLong);\n          }\n      };\n\n      LocaTable.prototype.offsetOf = function offsetOf (id) {\n          return this.offsets[id];\n      };\n\n      LocaTable.prototype.lengthOf = function lengthOf (id) {\n          return this.offsets[id + 1] - this.offsets[id];\n      };\n\n      LocaTable.prototype.render = function render (offsets) {\n          var out = BinaryStream();\n          var needsLongFormat = offsets[offsets.length - 1] > 0xFFFF;\n          for (var i = 0; i < offsets.length; ++i) {\n              if (needsLongFormat) {\n                  out.writeLong(offsets[i]);\n              } else {\n                  out.writeShort(offsets[i] / 2);\n              }\n          }\n          return {\n              format: needsLongFormat ? 1 : 0,\n              table: out.get()\n          };\n      };\n\n      return LocaTable;\n  }(Table));\n\n  var HheaTable = (function (Table) {\n      function HheaTable () {\n          Table.apply(this, arguments);\n      }\n\n      if ( Table ) HheaTable.__proto__ = Table;\n      HheaTable.prototype = Object.create( Table && Table.prototype );\n      HheaTable.prototype.constructor = HheaTable;\n\n      HheaTable.prototype.parse = function parse (data) {\n          data.offset(this.offset);\n\n          this.version              = data.readLong();\n          this.ascent               = data.readShort_();\n          this.descent              = data.readShort_();\n          this.lineGap              = data.readShort_();\n          this.advanceWidthMax      = data.readShort();\n          this.minLeftSideBearing   = data.readShort_();\n          this.minRightSideBearing  = data.readShort_();\n          this.xMaxExtent           = data.readShort_();\n          this.caretSlopeRise       = data.readShort_();\n          this.caretSlopeRun        = data.readShort_();\n          this.caretOffset          = data.readShort_();\n\n          data.skip(4 * 2);       // reserved\n\n          this.metricDataFormat     = data.readShort_();\n          this.numOfLongHorMetrics  = data.readShort();\n      };\n\n      HheaTable.prototype.render = function render (ids) {\n          var out = BinaryStream();\n          out.writeLong(this.version);\n          out.writeShort_(this.ascent);\n          out.writeShort_(this.descent);\n          out.writeShort_(this.lineGap);\n          out.writeShort(this.advanceWidthMax);\n          out.writeShort_(this.minLeftSideBearing);\n          out.writeShort_(this.minRightSideBearing);\n          out.writeShort_(this.xMaxExtent);\n          out.writeShort_(this.caretSlopeRise);\n          out.writeShort_(this.caretSlopeRun);\n          out.writeShort_(this.caretOffset);\n\n          out.write([ 0, 0, 0, 0, 0, 0, 0, 0 ]); // reserved bytes\n\n          out.writeShort_(this.metricDataFormat);\n          out.writeShort(ids.length);\n          return out.get();\n      };\n\n      return HheaTable;\n  }(Table));\n\n  var MaxpTable = (function (Table) {\n      function MaxpTable () {\n          Table.apply(this, arguments);\n      }\n\n      if ( Table ) MaxpTable.__proto__ = Table;\n      MaxpTable.prototype = Object.create( Table && Table.prototype );\n      MaxpTable.prototype.constructor = MaxpTable;\n\n      MaxpTable.prototype.parse = function parse (data) {\n          data.offset(this.offset);\n          this.version = data.readLong();\n          this.numGlyphs = data.readShort();\n          this.maxPoints = data.readShort();\n          this.maxContours = data.readShort();\n          this.maxComponentPoints = data.readShort();\n          this.maxComponentContours = data.readShort();\n          this.maxZones = data.readShort();\n          this.maxTwilightPoints = data.readShort();\n          this.maxStorage = data.readShort();\n          this.maxFunctionDefs = data.readShort();\n          this.maxInstructionDefs = data.readShort();\n          this.maxStackElements = data.readShort();\n          this.maxSizeOfInstructions = data.readShort();\n          this.maxComponentElements = data.readShort();\n          this.maxComponentDepth = data.readShort();\n      };\n\n      MaxpTable.prototype.render = function render (glyphIds) {\n          var out = BinaryStream();\n          out.writeLong(this.version);\n          out.writeShort(glyphIds.length);\n          out.writeShort(this.maxPoints);\n          out.writeShort(this.maxContours);\n          out.writeShort(this.maxComponentPoints);\n          out.writeShort(this.maxComponentContours);\n          out.writeShort(this.maxZones);\n          out.writeShort(this.maxTwilightPoints);\n          out.writeShort(this.maxStorage);\n          out.writeShort(this.maxFunctionDefs);\n          out.writeShort(this.maxInstructionDefs);\n          out.writeShort(this.maxStackElements);\n          out.writeShort(this.maxSizeOfInstructions);\n          out.writeShort(this.maxComponentElements);\n          out.writeShort(this.maxComponentDepth);\n          return out.get();\n      };\n\n      return MaxpTable;\n  }(Table));\n\n  var HmtxTable = (function (Table) {\n      function HmtxTable () {\n          Table.apply(this, arguments);\n      }\n\n      if ( Table ) HmtxTable.__proto__ = Table;\n      HmtxTable.prototype = Object.create( Table && Table.prototype );\n      HmtxTable.prototype.constructor = HmtxTable;\n\n      HmtxTable.prototype.parse = function parse (data) {\n          data.offset(this.offset);\n          var dir = this.file, hhea = dir.hhea;\n          this.metrics = data.times(hhea.numOfLongHorMetrics, function(){\n              return {\n                  advance: data.readShort(),\n                  lsb: data.readShort_()\n              };\n          });\n          var lsbCount = dir.maxp.numGlyphs - dir.hhea.numOfLongHorMetrics;\n          this.leftSideBearings = data.times(lsbCount, data.readShort_);\n      };\n\n      HmtxTable.prototype.forGlyph = function forGlyph (id) {\n          var metrics = this.metrics;\n          var n = metrics.length;\n          if (id < n) {\n              return metrics[id];\n          }\n          return {\n              advance: metrics[n - 1].advance,\n              lsb: this.leftSideBearings[id - n]\n          };\n      };\n\n      HmtxTable.prototype.render = function render (glyphIds) {\n          var this$1$1 = this;\n\n          var out = BinaryStream();\n          for (var i = 0; i < glyphIds.length; ++i) {\n              var m = this$1$1.forGlyph(glyphIds[i]);\n              out.writeShort(m.advance);\n              out.writeShort_(m.lsb);\n          }\n          return out.get();\n      };\n\n      return HmtxTable;\n  }(Table));\n\n  var GlyfTable = (function(){\n      var SimpleGlyph = function SimpleGlyph(raw) {\n          this.raw = raw;\n      };\n\n      var prototypeAccessors = { compound: { configurable: true } };\n\n      prototypeAccessors.compound.get = function () {\n          return false;\n      };\n\n      SimpleGlyph.prototype.render = function render () {\n          return this.raw.get();\n      };\n\n      Object.defineProperties( SimpleGlyph.prototype, prototypeAccessors );\n\n      var ARG_1_AND_2_ARE_WORDS     = 0x0001;\n      var WE_HAVE_A_SCALE           = 0x0008;\n      var MORE_COMPONENTS           = 0x0020;\n      var WE_HAVE_AN_X_AND_Y_SCALE  = 0x0040;\n      var WE_HAVE_A_TWO_BY_TWO      = 0x0080;\n      //var WE_HAVE_INSTRUCTIONS      = 0x0100;\n\n      var CompoundGlyph = function CompoundGlyph(data) {\n          this.raw = data;\n          var ids = this.glyphIds = [];\n          var offsets = this.idOffsets = [];\n          while (true) {      // eslint-disable-line no-constant-condition\n              var flags = data.readShort();\n              offsets.push(data.offset());\n              ids.push(data.readShort());\n\n              if (!(flags & MORE_COMPONENTS)) {\n                  break;\n              }\n\n              data.skip(flags & ARG_1_AND_2_ARE_WORDS ? 4 : 2);\n\n              if (flags & WE_HAVE_A_TWO_BY_TWO) {\n                  data.skip(8);\n              } else if (flags & WE_HAVE_AN_X_AND_Y_SCALE) {\n                  data.skip(4);\n              } else if (flags & WE_HAVE_A_SCALE) {\n                  data.skip(2);\n              }\n          }\n      };\n\n      var prototypeAccessors$1 = { compound: { configurable: true } };\n\n      prototypeAccessors$1.compound.get = function () {\n          return true;\n      };\n\n      CompoundGlyph.prototype.render = function render (old2new) {\n              var this$1$1 = this;\n\n          var out = BinaryStream(this.raw.get());\n          for (var i = 0; i < this.glyphIds.length; ++i) {\n              var id = this$1$1.glyphIds[i];\n              out.offset(this$1$1.idOffsets[i]);\n              out.writeShort(old2new[id]);\n          }\n          return out.get();\n      };\n\n      Object.defineProperties( CompoundGlyph.prototype, prototypeAccessors$1 );\n\n      return (function (Table) {\n          function anonymous () {\n              Table.apply(this, arguments);\n          }\n\n          if ( Table ) anonymous.__proto__ = Table;\n          anonymous.prototype = Object.create( Table && Table.prototype );\n          anonymous.prototype.constructor = anonymous;\n\n          anonymous.prototype.parse = function parse () {\n              this.cache = {};\n          };\n\n          anonymous.prototype.glyphFor = function glyphFor (id) {\n              var cache = this.cache;\n              if (hasOwnProperty$2(cache, id)) {\n                  return cache[id];\n              }\n\n              var loca = this.file.loca;\n              var length = loca.lengthOf(id);\n\n              if (length === 0) {\n                  return (cache[id] = null);\n              }\n\n              var data = this.rawData;\n              var offset = this.offset + loca.offsetOf(id);\n              var raw = BinaryStream(data.slice(offset, length));\n\n              var numberOfContours = raw.readShort_();\n              var xMin = raw.readShort_();\n              var yMin = raw.readShort_();\n              var xMax = raw.readShort_();\n              var yMax = raw.readShort_();\n\n              var glyph = cache[id] = numberOfContours < 0 ? new CompoundGlyph(raw) : new SimpleGlyph(raw);\n\n              glyph.numberOfContours = numberOfContours;\n              glyph.xMin = xMin;\n              glyph.yMin = yMin;\n              glyph.xMax = xMax;\n              glyph.yMax = yMax;\n\n              return glyph;\n          };\n\n          anonymous.prototype.render = function render (glyphs, oldIds, old2new) {\n              var out = BinaryStream(), offsets = [];\n              for (var i = 0; i < oldIds.length; ++i) {\n                  var id = oldIds[i];\n                  var glyph = glyphs[id];\n                  if (out.offset() % 2) {\n                      out.writeByte(0);\n                  }\n                  offsets.push(out.offset());\n                  if (glyph) {\n                      out.write(glyph.render(old2new));\n                  }\n              }\n              if (out.offset() % 2) {\n                  out.writeByte(0);\n              }\n              offsets.push(out.offset());\n              return {\n                  table: out.get(),\n                  offsets: offsets\n              };\n          };\n\n          return anonymous;\n      }(Table));\n  }());\n\n  var NameTable = (function(){\n      var NameEntry = function NameEntry(text, entry) {\n          this.text = text;\n          this.length = text.length;\n          this.platformID = entry.platformID;\n          this.platformSpecificID = entry.platformSpecificID;\n          this.languageID = entry.languageID;\n          this.nameID = entry.nameID;\n      };\n\n      return (function (Table) {\n          function anonymous () {\n              Table.apply(this, arguments);\n          }\n\n          if ( Table ) anonymous.__proto__ = Table;\n          anonymous.prototype = Object.create( Table && Table.prototype );\n          anonymous.prototype.constructor = anonymous;\n\n          anonymous.prototype.parse = function parse (data) {\n              data.offset(this.offset);\n              data.readShort();   // format\n              var count = data.readShort();\n              var stringOffset = this.offset + data.readShort();\n              var nameRecords = data.times(count, function(){\n                  return {\n                      platformID         : data.readShort(),\n                      platformSpecificID : data.readShort(),\n                      languageID         : data.readShort(),\n                      nameID             : data.readShort(),\n                      length             : data.readShort(),\n                      offset             : data.readShort() + stringOffset\n                  };\n              });\n              var strings = this.strings = {};\n              for (var i = 0; i < nameRecords.length; ++i) {\n                  var rec = nameRecords[i];\n                  data.offset(rec.offset);\n                  var text = data.readString(rec.length);\n                  if (!strings[rec.nameID]) {\n                      strings[rec.nameID] = [];\n                  }\n                  strings[rec.nameID].push(new NameEntry(text, rec));\n              }\n              this.postscriptEntry = strings[6][0];\n              this.postscriptName = this.postscriptEntry.text.replace(/[^\\x20-\\x7F]/g, \"\");\n          };\n\n          anonymous.prototype.render = function render (psName) {\n              var this$1$1 = this;\n\n              var strings = this.strings;\n              var strCount = 0;\n              for (var i in strings) {\n                  if (hasOwnProperty$2(strings, i)) {\n                      strCount += strings[i].length;\n                  }\n              }\n              var out = BinaryStream();\n              var strTable = BinaryStream();\n\n              out.writeShort(0);  // format\n              out.writeShort(strCount);\n              out.writeShort(6 + 12 * strCount); // stringOffset\n\n              for (i in strings) {\n                  if (hasOwnProperty$2(strings, i)) {\n                      var list = i == 6 ? [\n                          new NameEntry(psName, this$1$1.postscriptEntry)\n                      ] : strings[i];\n                      for (var j = 0; j < list.length; ++j) {\n                          var str = list[j];\n                          out.writeShort(str.platformID);\n                          out.writeShort(str.platformSpecificID);\n                          out.writeShort(str.languageID);\n                          out.writeShort(str.nameID);\n                          out.writeShort(str.length);\n                          out.writeShort(strTable.offset());\n\n                          strTable.writeString(str.text);\n                      }\n                  }\n              }\n\n              out.write(strTable.get());\n\n              return out.get();\n          };\n\n          return anonymous;\n      }(Table));\n  })();\n\n  var PostTable = (function(){\n      var POSTSCRIPT_GLYPHS = \".notdef .null nonmarkingreturn space exclam quotedbl numbersign dollar percent ampersand quotesingle parenleft parenright asterisk plus comma hyphen period slash zero one two three four five six seven eight nine colon semicolon less equal greater question at A B C D E F G H I J K L M N O P Q R S T U V W X Y Z bracketleft backslash bracketright asciicircum underscore grave a b c d e f g h i j k l m n o p q r s t u v w x y z braceleft bar braceright asciitilde Adieresis Aring Ccedilla Eacute Ntilde Odieresis Udieresis aacute agrave acircumflex adieresis atilde aring ccedilla eacute egrave ecircumflex edieresis iacute igrave icircumflex idieresis ntilde oacute ograve ocircumflex odieresis otilde uacute ugrave ucircumflex udieresis dagger degree cent sterling section bullet paragraph germandbls registered copyright trademark acute dieresis notequal AE Oslash infinity plusminus lessequal greaterequal yen mu partialdiff summation product pi integral ordfeminine ordmasculine Omega ae oslash questiondown exclamdown logicalnot radical florin approxequal Delta guillemotleft guillemotright ellipsis nonbreakingspace Agrave Atilde Otilde OE oe endash emdash quotedblleft quotedblright quoteleft quoteright divide lozenge ydieresis Ydieresis fraction currency guilsinglleft guilsinglright fi fl daggerdbl periodcentered quotesinglbase quotedblbase perthousand Acircumflex Ecircumflex Aacute Edieresis Egrave Iacute Icircumflex Idieresis Igrave Oacute Ocircumflex apple Ograve Uacute Ucircumflex Ugrave dotlessi circumflex tilde macron breve dotaccent ring cedilla hungarumlaut ogonek caron Lslash lslash Scaron scaron Zcaron zcaron brokenbar Eth eth Yacute yacute Thorn thorn minus multiply onesuperior twosuperior threesuperior onehalf onequarter threequarters franc Gbreve gbreve Idotaccent Scedilla scedilla Cacute cacute Ccaron ccaron dcroat\".split(/\\s+/g);\n\n      return (function (Table) {\n          function anonymous () {\n              Table.apply(this, arguments);\n          }\n\n          if ( Table ) anonymous.__proto__ = Table;\n          anonymous.prototype = Object.create( Table && Table.prototype );\n          anonymous.prototype.constructor = anonymous;\n\n          anonymous.prototype.parse = function parse (data) {\n              var this$1$1 = this;\n\n              data.offset(this.offset);\n\n              this.format = data.readLong();\n              this.italicAngle = data.readFixed_();\n              this.underlinePosition = data.readShort_();\n              this.underlineThickness = data.readShort_();\n              this.isFixedPitch = data.readLong();\n              this.minMemType42 = data.readLong();\n              this.maxMemType42 = data.readLong();\n              this.minMemType1 = data.readLong();\n              this.maxMemType1 = data.readLong();\n\n              var numberOfGlyphs;\n\n              switch (this.format) {\n                case 0x00010000:\n                case 0x00030000:\n                  break;\n\n                case 0x00020000:\n                  numberOfGlyphs = data.readShort();\n                  this.glyphNameIndex = data.times(numberOfGlyphs, data.readShort);\n                  this.names = [];\n                  var limit = this.offset + this.length;\n                  while (data.offset() < limit) {\n                      this$1$1.names.push(data.readString(data.readByte()));\n                  }\n                  break;\n\n                case 0x00025000:\n                  numberOfGlyphs = data.readShort();\n                  this.offsets = data.read(numberOfGlyphs);\n                  break;\n\n                case 0x00040000:\n                  this.map = data.times(this.file.maxp.numGlyphs, data.readShort);\n                  break;\n              }\n          };\n\n          anonymous.prototype.glyphFor = function glyphFor (code) {\n              switch (this.format) {\n                case 0x00010000:\n                  return POSTSCRIPT_GLYPHS[code] || \".notdef\";\n\n                case 0x00020000:\n                  var index = this.glyphNameIndex[code];\n                  if (index < POSTSCRIPT_GLYPHS.length) {\n                      return POSTSCRIPT_GLYPHS[index];\n                  }\n                  return this.names[index - POSTSCRIPT_GLYPHS.length] || \".notdef\";\n\n                case 0x00025000:\n\n                case 0x00030000:\n                  return \".notdef\";\n\n                case 0x00040000:\n                  return this.map[code] || 0xFFFF;\n              }\n          };\n\n          anonymous.prototype.render = function render (mapping) {\n              var this$1$1 = this;\n\n              if (this.format == 0x00030000) {\n                  return this.raw();\n              }\n\n              // keep original header, but set format to 2.0\n              var out = BinaryStream(this.rawData.slice(this.offset, 32));\n              out.writeLong(0x00020000);\n              out.offset(32);\n\n              var indexes = [];\n              var strings = [];\n\n              for (var i = 0; i < mapping.length; ++i) {\n                  var id = mapping[i];\n                  var post = this$1$1.glyphFor(id);\n                  var index = POSTSCRIPT_GLYPHS.indexOf(post);\n                  if (index >= 0) {\n                      indexes.push(index);\n                  } else {\n                      indexes.push(POSTSCRIPT_GLYPHS.length + strings.length);\n                      strings.push(post);\n                  }\n              }\n\n              out.writeShort(mapping.length);\n\n              for (i = 0; i < indexes.length; ++i) {\n                  out.writeShort(indexes[i]);\n              }\n\n              for (i = 0; i < strings.length; ++i) {\n                  out.writeByte(strings[i].length);\n                  out.writeString(strings[i]);\n              }\n\n              return out.get();\n          };\n\n          return anonymous;\n      }(Table));\n  })();\n\n  var CmapTable = (function(){\n      var CmapEntry = function CmapEntry(data, offset, codeMap) {\n          var self = this;\n          self.platformID = data.readShort();\n          self.platformSpecificID = data.readShort();\n          self.offset = offset + data.readLong();\n\n          data.saveExcursion(function(){\n              var code;\n              data.offset(self.offset);\n              self.format = data.readShort();\n\n              switch (self.format) {\n              case 0:\n                  self.length = data.readShort();\n                  self.language = data.readShort();\n                  for (var i = 0; i < 256; ++i) {\n                      codeMap[i] = data.readByte();\n                  }\n                  break;\n\n              case 4:\n                  self.length = data.readShort();\n                  self.language = data.readShort();\n                  var segCount = data.readShort() / 2;\n\n                  data.skip(6);   // searchRange, entrySelector, rangeShift\n                  var endCode = data.times(segCount, data.readShort);\n                  data.skip(2);   // reserved pad\n                  var startCode = data.times(segCount, data.readShort);\n                  var idDelta = data.times(segCount, data.readShort_);\n                  var idRangeOffset = data.times(segCount, data.readShort);\n\n                  var count = (self.length + self.offset - data.offset()) / 2;\n                  var glyphIds = data.times(count, data.readShort);\n\n                  for (i = 0; i < segCount; ++i) {\n                      var start = startCode[i], end = endCode[i];\n                      for (code = start; code <= end; ++code) {\n                          var glyphId;\n                          if (idRangeOffset[i] === 0) {\n                              glyphId = code + idDelta[i];\n                          } else {\n                              ///\n                              // When non-zero, idRangeOffset contains for each segment the byte offset of the Glyph ID\n                              // into the glyphIds table, from the *current* `i` cell of idRangeOffset.  In other words,\n                              // this offset spans from the first into the second array.  This works, because the arrays\n                              // are consecutive in the TTF file:\n                              //\n                              // [ ...idRangeOffset... ][ ...glyphIds... ]\n                              //   ...... 48 ......   .... ID ....\n                              //          ^----- 48 bytes -----^\n                              //\n                              // (but I can't stop wondering why is it not just a plain index, possibly incremented by 1\n                              // so that we can have that special `zero` value.)\n                              //\n                              // The elements of idRangeOffset are even numbers, because both arrays contain 16-bit words,\n                              // yet the offset is in bytes.  That is why we divide it by 2.  Then we subtract the\n                              // remaining segments (segCount-i), and add the code-start offset, to which we need to add\n                              // the corresponding delta to get the actual glyph ID.\n                              ///\n                              var index = idRangeOffset[i] / 2 - (segCount - i) + (code - start);\n                              glyphId = glyphIds[index] || 0;\n                              if (glyphId !== 0) {\n                                  glyphId += idDelta[i];\n                              }\n                          }\n                          codeMap[code] = glyphId & 0xFFFF;\n                      }\n                  }\n                  break;\n\n              case 6:\n                  self.length = data.readShort();\n                  self.language = data.readShort();\n                  code = data.readShort();\n                  var length = data.readShort();\n                  while (length-- > 0) {\n                      codeMap[code++] = data.readShort();\n                  }\n                  break;\n\n              case 12:\n                  data.readShort(); // reserved\n                  self.length = data.readLong();\n                  self.language = data.readLong();\n                  var ngroups = data.readLong();\n                  while (ngroups-- > 0) {\n                      code = data.readLong();\n                      var endCharCode = data.readLong();\n                      var glyphCode = data.readLong();\n                      while (code <= endCharCode) {\n                          codeMap[code++] = glyphCode++;\n                      }\n                  }\n                  break;\n\n              default:\n                  if (window.console) {\n                      window.console.error(\"Unhandled CMAP format: \" + self.format);\n                  }\n              }\n          });\n      };\n\n      function renderCharmap(ncid2ogid, ogid2ngid) {\n          var codes = sortedKeys(ncid2ogid);\n          var startCodes = [];\n          var endCodes = [];\n          var last = null;\n          var diff = null;\n\n          function new_gid(charcode) {\n              return ogid2ngid[ncid2ogid[charcode]];\n          }\n\n          for (var i = 0; i < codes.length; ++i) {\n              var code = codes[i];\n              var gid = new_gid(code);\n              var delta = gid - code;\n              if (last == null || delta !== diff) {\n                  if (last) {\n                      endCodes.push(last);\n                  }\n                  startCodes.push(code);\n                  diff = delta;\n              }\n              last = code;\n          }\n\n          if (last) {\n              endCodes.push(last);\n          }\n          endCodes.push(0xFFFF);\n          startCodes.push(0xFFFF);\n\n          var segCount = startCodes.length;\n          var segCountX2 = segCount * 2;\n          var searchRange = 2 * Math.pow(2, Math.floor(Math.log(segCount) / Math.LN2));\n          var entrySelector = Math.log(searchRange / 2) / Math.LN2;\n          var rangeShift = segCountX2 - searchRange;\n\n          var deltas = [];\n          var rangeOffsets = [];\n          var glyphIds = [];\n\n          for (i = 0; i < segCount; ++i) {\n              var startCode = startCodes[i];\n              var endCode = endCodes[i];\n              if (startCode == 0xFFFF) {\n                  deltas.push(0);\n                  rangeOffsets.push(0);\n                  break;\n              }\n              var startGlyph = new_gid(startCode);\n              if (startCode - startGlyph >= 0x8000) {\n                  deltas.push(0);\n                  rangeOffsets.push(2 * (glyphIds.length + segCount - i));\n                  for (var j = startCode; j <= endCode; ++j) {\n                      glyphIds.push(new_gid(j));\n                  }\n              } else {\n                  deltas.push(startGlyph - startCode);\n                  rangeOffsets.push(0);\n              }\n          }\n\n          var out = BinaryStream();\n\n          out.writeShort(3);      // platformID\n          out.writeShort(1);      // platformSpecificID\n          out.writeLong(12);      // offset\n          out.writeShort(4);      // format\n          out.writeShort(16 + segCount * 8 + glyphIds.length * 2); // length\n          out.writeShort(0);      // language\n          out.writeShort(segCountX2);\n          out.writeShort(searchRange);\n          out.writeShort(entrySelector);\n          out.writeShort(rangeShift);\n\n          endCodes.forEach(out.writeShort);\n          out.writeShort(0);      // reserved pad\n          startCodes.forEach(out.writeShort);\n          deltas.forEach(out.writeShort_);\n          rangeOffsets.forEach(out.writeShort);\n          glyphIds.forEach(out.writeShort);\n\n          return out.get();\n      }\n\n      return (function (Table) {\n          function anonymous () {\n              Table.apply(this, arguments);\n          }\n\n          if ( Table ) anonymous.__proto__ = Table;\n          anonymous.prototype = Object.create( Table && Table.prototype );\n          anonymous.prototype.constructor = anonymous;\n\n          anonymous.prototype.parse = function parse (data) {\n              var self = this;\n              var offset = self.offset;\n              data.offset(offset);\n              self.codeMap = {};\n              self.version = data.readShort();\n              var tableCount = data.readShort();\n              self.tables = data.times(tableCount, function(){\n                  return new CmapEntry(data, offset, self.codeMap);\n              });\n          };\n\n          anonymous.render = function render (ncid2ogid, ogid2ngid) {\n              var out = BinaryStream();\n              out.writeShort(0);  // version\n              out.writeShort(1);  // tableCount\n              out.write(renderCharmap(ncid2ogid, ogid2ngid));\n              return out.get();\n          };\n\n          return anonymous;\n      }(Table));\n\n  })();\n\n  var OS2Table = (function (Table) {\n      function OS2Table () {\n          Table.apply(this, arguments);\n      }\n\n      if ( Table ) OS2Table.__proto__ = Table;\n      OS2Table.prototype = Object.create( Table && Table.prototype );\n      OS2Table.prototype.constructor = OS2Table;\n\n      OS2Table.prototype.parse = function parse (data) {\n          data.offset(this.offset);\n          this.version = data.readShort();\n          this.averageCharWidth = data.readShort_();\n          this.weightClass = data.readShort();\n          this.widthClass = data.readShort();\n          this.type = data.readShort();\n          this.ySubscriptXSize = data.readShort_();\n          this.ySubscriptYSize = data.readShort_();\n          this.ySubscriptXOffset = data.readShort_();\n          this.ySubscriptYOffset = data.readShort_();\n          this.ySuperscriptXSize = data.readShort_();\n          this.ySuperscriptYSize = data.readShort_();\n          this.ySuperscriptXOffset = data.readShort_();\n          this.ySuperscriptYOffset = data.readShort_();\n          this.yStrikeoutSize = data.readShort_();\n          this.yStrikeoutPosition = data.readShort_();\n          this.familyClass = data.readShort_();\n\n          this.panose = data.times(10, data.readByte);\n          this.charRange = data.times(4, data.readLong);\n\n          this.vendorID = data.readString(4);\n          this.selection = data.readShort();\n          this.firstCharIndex = data.readShort();\n          this.lastCharIndex = data.readShort();\n\n          if (this.version > 0) {\n              this.ascent = data.readShort_();\n              this.descent = data.readShort_();\n              this.lineGap = data.readShort_();\n              this.winAscent = data.readShort();\n              this.winDescent = data.readShort();\n              this.codePageRange = data.times(2, data.readLong);\n\n              if (this.version > 1) {\n                  this.xHeight = data.readShort();\n                  this.capHeight = data.readShort();\n                  this.defaultChar = data.readShort();\n                  this.breakChar = data.readShort();\n                  this.maxContext = data.readShort();\n              }\n          }\n      };\n\n      OS2Table.prototype.render = function render () {\n          return this.raw();\n      };\n\n      return OS2Table;\n  }(Table));\n\n  var subsetTag = 100000;\n\n  function nextSubsetTag() {\n      var ret = \"\", n = String(subsetTag);\n      for (var i = 0; i < n.length; ++i) {\n          ret += String.fromCharCode(n.charCodeAt(i) - 48 + 65);\n      }\n      ++subsetTag;\n      return ret;\n  }\n\n  var Subfont = function Subfont(font) {\n      this.font = font;\n      this.subset = {};\n      this.unicodes = {};\n      this.ogid2ngid = { 0: 0 };\n      this.ngid2ogid = { 0: 0 };\n      this.ncid2ogid = {};\n      this.next = this.firstChar = 1;\n      this.nextGid = 1;\n      this.psName = nextSubsetTag() + \"+\" + this.font.psName;\n  };\n\n  Subfont.prototype.use = function use (ch) {\n      var self = this;\n      if (typeof ch == \"string\") {\n          return ucs2decode(ch).reduce(function(ret, code){\n              return ret + String.fromCharCode(self.use(code));\n          }, \"\");\n      }\n      var code = self.unicodes[ch];\n      if (!code) {\n          code = self.next++;\n          self.subset[code] = ch;\n          self.unicodes[ch] = code;\n\n          // generate new GID (glyph ID) and maintain newGID ->\n          // oldGID and back mappings\n          var old_gid = self.font.cmap.codeMap[ch];\n          if (old_gid) {\n              self.ncid2ogid[code] = old_gid;\n              if (self.ogid2ngid[old_gid] == null) {\n                  var new_gid = self.nextGid++;\n                  self.ogid2ngid[old_gid] = new_gid;\n                  self.ngid2ogid[new_gid] = old_gid;\n              }\n          }\n      }\n      return code;\n  };\n\n  Subfont.prototype.encodeText = function encodeText (text) {\n      return this.use(text);\n  };\n\n  Subfont.prototype.glyphIds = function glyphIds () {\n      return sortedKeys(this.ogid2ngid);\n  };\n\n  Subfont.prototype.glyphsFor = function glyphsFor (glyphIds, result) {\n          var this$1$1 = this;\n\n      if (!result) {\n          result = {};\n      }\n      for (var i = 0; i < glyphIds.length; ++i) {\n          var id = glyphIds[i];\n          if (!result[id]) {\n              var glyph = result[id] = this$1$1.font.glyf.glyphFor(id);\n              if (glyph && glyph.compound) {\n                  this$1$1.glyphsFor(glyph.glyphIds, result);\n              }\n          }\n      }\n      return result;\n  };\n\n  Subfont.prototype.render = function render () {\n          var this$1$1 = this;\n\n      var glyphs = this.glyphsFor(this.glyphIds());\n\n      // add missing sub-glyphs\n      for (var old_gid in glyphs) {\n          if (hasOwnProperty$2(glyphs, old_gid)) {\n              old_gid = parseInt(old_gid, 10);\n              if (this$1$1.ogid2ngid[old_gid] == null) {\n                  var new_gid = this$1$1.nextGid++;\n                  this$1$1.ogid2ngid[old_gid] = new_gid;\n                  this$1$1.ngid2ogid[new_gid] = old_gid;\n              }\n          }\n      }\n\n      // must obtain old_gid_ids in an order matching sorted\n      // new_gid_ids\n      var new_gid_ids = sortedKeys(this.ngid2ogid);\n      var old_gid_ids = new_gid_ids.map(function(id){\n          return this.ngid2ogid[id];\n      }, this);\n\n      var font = this.font;\n      var glyf = font.glyf.render(glyphs, old_gid_ids, this.ogid2ngid);\n      var loca = font.loca.render(glyf.offsets);\n\n      this.lastChar = this.next - 1;\n\n      var tables = {\n          \"cmap\" : CmapTable.render(this.ncid2ogid, this.ogid2ngid),\n          \"glyf\" : glyf.table,\n          \"loca\" : loca.table,\n          \"hmtx\" : font.hmtx.render(old_gid_ids),\n          \"hhea\" : font.hhea.render(old_gid_ids),\n          \"maxp\" : font.maxp.render(old_gid_ids),\n          \"post\" : font.post.render(old_gid_ids),\n          \"name\" : font.name.render(this.psName),\n          \"head\" : font.head.render(loca.format),\n          \"OS/2\" : font.os2.render()\n      };\n\n      return this.font.directory.render(tables);\n  };\n\n  Subfont.prototype.cidToGidMap = function cidToGidMap () {\n          var this$1$1 = this;\n\n      var out = BinaryStream(), len = 0;\n      for (var cid = this.firstChar; cid < this.next; ++cid) {\n          while (len < cid) {\n              out.writeShort(0);\n              len++;\n          }\n          var old_gid = this$1$1.ncid2ogid[cid];\n          if (old_gid) {\n              var new_gid = this$1$1.ogid2ngid[old_gid];\n              out.writeShort(new_gid);\n          } else {\n              out.writeShort(0);\n          }\n          len++;\n      }\n      return out.get();\n  };\n\n  var TTFFont = function TTFFont(rawData, name) {\n      var self = this;\n      var data = self.contents = BinaryStream(rawData);\n      if (data.readString(4) == \"ttcf\") {\n          var offset;\n          var parse = function() {\n              data.offset(offset);\n              self.parse();\n          };\n          if (!name) {\n              throw new Error(\"Must specify a name for TTC files\");\n          }\n          data.readLong();    // version\n          var numFonts = data.readLong();\n          for (var i = 0; i < numFonts; ++i) {\n              offset = data.readLong();\n              data.saveExcursion(parse);\n              if (self.psName == name) {\n                  return;\n              }\n          }\n          throw new Error(\"Font \" + name + \" not found in collection\");\n      } else {\n          data.offset(0);\n          self.parse();\n      }\n  };\n\n  TTFFont.prototype.parse = function parse () {\n      var dir = this.directory = new Directory(this.contents);\n\n      this.head = dir.readTable(\"head\", HeadTable);\n      this.loca = dir.readTable(\"loca\", LocaTable);\n      this.hhea = dir.readTable(\"hhea\", HheaTable);\n      this.maxp = dir.readTable(\"maxp\", MaxpTable);\n      this.hmtx = dir.readTable(\"hmtx\", HmtxTable);\n      this.glyf = dir.readTable(\"glyf\", GlyfTable);\n      this.name = dir.readTable(\"name\", NameTable);\n      this.post = dir.readTable(\"post\", PostTable);\n      this.cmap = dir.readTable(\"cmap\", CmapTable);\n      this.os2  = dir.readTable(\"OS/2\", OS2Table);\n\n      this.psName = this.name.postscriptName;\n      this.ascent = this.os2.ascent || this.hhea.ascent;\n      this.descent = this.os2.descent || this.hhea.descent;\n      this.lineGap = this.os2.lineGap || this.hhea.lineGap;\n      this.scale = 1000 / this.head.unitsPerEm;\n  };\n\n  TTFFont.prototype.widthOfGlyph = function widthOfGlyph (glyph) {\n      return this.hmtx.forGlyph(glyph).advance * this.scale;\n  };\n\n  TTFFont.prototype.makeSubset = function makeSubset () {\n      return new Subfont(this);\n  };\n\n  var deflate = kendo_pakoEsm_cmn_chunk_js.d;\n\n  function supportsDeflate() {\n      return true;\n  }\n\n  /* eslint-disable no-multi-spaces, key-spacing, indent, camelcase, space-before-blocks, eqeqeq, brace-style */\n  /* eslint-disable space-infix-ops, space-before-function-paren, array-bracket-spacing, object-curly-spacing */\n  /* eslint-disable no-nested-ternary, max-params, default-case, no-else-return, no-empty */\n  /* eslint-disable no-param-reassign, no-var, block-scoped-var */\n\n\n  var browser$1 = support$1.browser;\n  var NL = \"\\n\";\n\n  var RESOURCE_COUNTER = 0;\n  var PATTERN_COUNTER = 0;\n\n  var PAPER_SIZE = {\n      a0        : [ 2383.94 , 3370.39 ],\n      a1        : [ 1683.78 , 2383.94 ],\n      a2        : [ 1190.55 , 1683.78 ],\n      a3        : [ 841.89  , 1190.55 ],\n      a4        : [ 595.28  , 841.89  ],\n      a5        : [ 419.53  , 595.28  ],\n      a6        : [ 297.64  , 419.53  ],\n      a7        : [ 209.76  , 297.64  ],\n      a8        : [ 147.40  , 209.76  ],\n      a9        : [ 104.88  , 147.40  ],\n      a10       : [ 73.70   , 104.88  ],\n      b0        : [ 2834.65 , 4008.19 ],\n      b1        : [ 2004.09 , 2834.65 ],\n      b2        : [ 1417.32 , 2004.09 ],\n      b3        : [ 1000.63 , 1417.32 ],\n      b4        : [ 708.66  , 1000.63 ],\n      b5        : [ 498.90  , 708.66  ],\n      b6        : [ 354.33  , 498.90  ],\n      b7        : [ 249.45  , 354.33  ],\n      b8        : [ 175.75  , 249.45  ],\n      b9        : [ 124.72  , 175.75  ],\n      b10       : [ 87.87   , 124.72  ],\n      c0        : [ 2599.37 , 3676.54 ],\n      c1        : [ 1836.85 , 2599.37 ],\n      c2        : [ 1298.27 , 1836.85 ],\n      c3        : [ 918.43  , 1298.27 ],\n      c4        : [ 649.13  , 918.43  ],\n      c5        : [ 459.21  , 649.13  ],\n      c6        : [ 323.15  , 459.21  ],\n      c7        : [ 229.61  , 323.15  ],\n      c8        : [ 161.57  , 229.61  ],\n      c9        : [ 113.39  , 161.57  ],\n      c10       : [ 79.37   , 113.39  ],\n      executive : [ 521.86  , 756.00  ],\n      folio     : [ 612.00  , 936.00  ],\n      legal     : [ 612.00  , 1008.00 ],\n      letter    : [ 612.00  , 792.00  ],\n      tabloid   : [ 792.00  , 1224.00 ]\n  };\n\n  function makeOutput() {\n      var indentLevel = 0, output = BinaryStream();\n      function out() {\n          var arguments$1 = arguments;\n\n          for (var i = 0; i < arguments.length; ++i) {\n              var x = arguments$1[i];\n              if (x === undefined) {\n                  throw new Error(\"Cannot output undefined to PDF\");\n              }\n              else if (x instanceof PDFValue) {\n                  x.beforeRender(out);\n                  x.render(out);\n              }\n              else if (isArray(x)) {\n                  renderArray(x, out);\n              }\n              else if (isDate(x)) {\n                  renderDate(x, out);\n              }\n              else if (typeof x == \"number\") {\n                  if (isNaN(x)) {\n                      throw new Error(\"Cannot output NaN to PDF\");\n                  }\n                  // make sure it doesn't end up in exponent notation\n                  var num = x.toFixed(7);\n                  if (num.indexOf(\".\") >= 0) {\n                      num = num.replace(/\\.?0+$/, \"\");\n                  }\n                  if (num == \"-0\") {\n                      num = \"0\";\n                  }\n                  output.writeString(num);\n              }\n              else if (/string|boolean/.test(typeof x)) {\n                  output.writeString(String(x));\n              }\n              else if (typeof x.get == \"function\") {\n                  output.write(x.get());\n              }\n              else if (typeof x == \"object\") {\n                  if (!x) {\n                      output.writeString(\"null\");\n                  } else {\n                      out(new PDFDictionary(x));\n                  }\n              }\n          }\n      }\n      out.writeData = function(data) {\n          output.write(data);\n      };\n      out.withIndent = function(f) {\n          ++indentLevel;\n          f(out);\n          --indentLevel;\n      };\n      out.indent = function() {\n          out(NL, pad(\"\", indentLevel * 2, \"  \"));\n          out.apply(null, arguments);\n      };\n      out.offset = function() {\n          return output.offset();\n      };\n      out.toString = function() {\n          throw new Error(\"FIX CALLER\");\n      };\n      out.get = function() {\n          return output.get();\n      };\n      out.stream = function() {\n          return output;\n      };\n      return out;\n  }\n\n  function wrapObject(value, id) {\n      var beforeRender = value.beforeRender;\n      var renderValue = value.render;\n\n      value.beforeRender = function(){};\n\n      value.render = function(out) {\n          out(id, \" 0 R\");\n      };\n\n      value.renderFull = function(out) {\n          value._offset = out.offset();\n          out(id, \" 0 obj \");\n          beforeRender.call(value, out);\n          renderValue.call(value, out);\n          out(\" endobj\");\n      };\n  }\n\n  function getPaperOptions(getOption) {\n      if (typeof getOption != \"function\") {\n          var options = getOption;\n          getOption = function(key, def) {\n              return key in options ? options[key] : def;\n          };\n      }\n      var paperSize = getOption(\"paperSize\", PAPER_SIZE.a4);\n      if (!paperSize) {\n          return {};\n      }\n      if (typeof paperSize == \"string\") {\n          paperSize = PAPER_SIZE[paperSize.toLowerCase()];\n          if (paperSize == null) {\n              throw new Error(\"Unknown paper size\");\n          }\n      }\n\n      paperSize[0] = unitsToPoints(paperSize[0]);\n      paperSize[1] = unitsToPoints(paperSize[1]);\n\n      if (getOption(\"landscape\", false)) {\n          paperSize = [\n              Math.max(paperSize[0], paperSize[1]),\n              Math.min(paperSize[0], paperSize[1])\n          ];\n      }\n\n      var margin = getOption(\"margin\");\n      if (margin) {\n          if (typeof margin == \"string\" || typeof margin == \"number\") {\n              margin = unitsToPoints(margin, 0);\n              margin = { left: margin, top: margin, right: margin, bottom: margin };\n          } else {\n              margin = {\n                  left   : unitsToPoints(margin.left, 0),\n                  top    : unitsToPoints(margin.top, 0),\n                  right  : unitsToPoints(margin.right, 0),\n                  bottom : unitsToPoints(margin.bottom, 0)\n              };\n          }\n          if (getOption(\"addMargin\")) {\n              paperSize[0] += margin.left + margin.right;\n              paperSize[1] += margin.top + margin.bottom;\n          }\n      }\n      return { paperSize: paperSize, margin: margin };\n  }\n\n  var FONT_CACHE = {\n      \"Times-Roman\"           : true,\n      \"Times-Bold\"            : true,\n      \"Times-Italic\"          : true,\n      \"Times-BoldItalic\"      : true,\n      \"Helvetica\"             : true,\n      \"Helvetica-Bold\"        : true,\n      \"Helvetica-Oblique\"     : true,\n      \"Helvetica-BoldOblique\" : true,\n      \"Courier\"               : true,\n      \"Courier-Bold\"          : true,\n      \"Courier-Oblique\"       : true,\n      \"Courier-BoldOblique\"   : true,\n      \"Symbol\"                : true,\n      \"ZapfDingbats\"          : true\n  };\n\n  function loadBinary(url, cont) {\n      // IE throws Accesss denied error for Data URIs\n      var m;\n      if (browser$1.msie && (m = /^data:.*?;base64,/i.exec(url))) {\n          cont(base64ToUint8Array(url.substr(m[0].length)));\n          return;\n      }\n\n      function error() {\n          if (window.console) {\n              if (window.console.error) {\n                  window.console.error(\"Cannot load URL: %s\", url);\n              } else {\n                  window.console.log(\"Cannot load URL: %s\", url);\n              }\n          }\n          cont(null);\n      }\n      var req = new XMLHttpRequest();\n      req.open('GET', url, true);\n      if (HAS_TYPED_ARRAYS) {\n          req.responseType = \"arraybuffer\";\n      }\n      req.onload = function() {\n          if (req.status == 200 || req.status == 304) {\n              if (HAS_TYPED_ARRAYS) {\n                  cont(new Uint8Array(req.response));\n              } else {\n                  cont(new window.VBArray(req.responseBody).toArray()); // IE9 only\n              }\n          } else {\n              error();\n          }\n      };\n      req.onerror = error;\n      req.send(null);\n  }\n\n  function loadFont(url, cont) {\n      var font = FONT_CACHE[url];\n      if (font) {\n          cont(font);\n      } else {\n          loadBinary(url, function(data){\n              if (data == null) {\n                  throw new Error(\"Cannot load font from \" + url);\n              } else {\n                  var font = new TTFFont(data);\n                  FONT_CACHE[url] = font;\n                  cont(font);\n              }\n          });\n      }\n  }\n\n  var IMAGE_CACHE$1 = {};\n\n  function clearImageCache() {\n      IMAGE_CACHE$1 = {};\n  }\n\n  function loadImage(url, size, cont, options) {\n      var img = IMAGE_CACHE$1[url], bloburl, blob;\n      if (img) {\n          cont(img);\n      } else {\n          img = new Image();\n          if (!(/^data:/i.test(url))) {\n              img.crossOrigin = \"Anonymous\";\n          }\n          if (HAS_TYPED_ARRAYS && !(/^data:/i.test(url))) {\n              // IE10 fails to load images from another domain even when the server sends the\n              // proper CORS headers.  a XHR, however, will be able to load the data.\n              // http://stackoverflow.com/a/19734516/154985\n              //\n              // On the other hand, it's worth doing it this way for all browsers which support\n              // responseType = \"blob\" (HAS_TYPED_ARRAYS will be true), because we can inspect the\n              // mime type and if it's a JPEG (very common case) we can save a lot of time in\n              // _load below.\n              var xhr = new XMLHttpRequest();\n              xhr.onload = function() {\n                  blob = xhr.response;\n                  if (browser$1.mozilla && blob.type == \"image/svg+xml\") {\n                      // Firefox won't render SVGs that don't contain width and height attributes.\n                      var reader = new FileReader();\n                      reader.onload = function() {\n                          var doc = new window.DOMParser().parseFromString(this.result, \"image/svg+xml\");\n                          var svg = doc.documentElement;\n                          if (svg.getAttribute(\"width\") && svg.getAttribute(\"height\")) {\n                              // we're good, continue with the existing blob.\n                              bloburl = URL.createObjectURL(blob);\n                              _load(bloburl);\n                          } else {\n                              svg.setAttribute(\"width\", size.width);\n                              svg.setAttribute(\"height\", size.height);\n                              var xml = new window.XMLSerializer().serializeToString(svg);\n                              var dataURL = \"data:image/svg+xml;base64,\" + (encodeBase64(xml));\n                              _load(dataURL);\n                          }\n                      };\n                      reader.readAsText(blob);\n                  } else {\n                      bloburl = URL.createObjectURL(blob);\n                      _load(bloburl);\n                  }\n              };\n              xhr.onerror = _onerror;\n              xhr.open(\"GET\", url, true);\n              xhr.responseType = \"blob\";\n              xhr.send();\n          } else {\n              _load(url);\n          }\n      }\n\n      function _load(url) {\n          img.src = url;\n          if (img.complete && !browser$1.msie) {\n              // IE, bless its little heart, says img.complete == true even though the image is\n              // not loaded (width=0), therefore we must go the onload route (ticket 929635).\n              _onload.call(img);\n          } else {\n              img.onload = _onload;\n              img.onerror = _onerror;\n          }\n      }\n\n      function _trycanvas() {\n          if (!size) {\n              size = { width: img.width, height: img.height };\n          }\n\n          var canvas = document.createElement(\"canvas\");\n          canvas.width = size.width;\n          canvas.height = size.height;\n\n          var ctx = canvas.getContext(\"2d\");\n          ctx.drawImage(img, 0, 0, size.width, size.height);\n\n          var imgdata;\n          try {\n              imgdata = ctx.getImageData(0, 0, size.width, size.height);\n          } catch (ex) {\n              // it tainted the canvas -- can't draw it.\n              _onerror();\n              return;\n          } finally {\n              if (bloburl) {\n                  URL.revokeObjectURL(bloburl);\n              }\n          }\n\n          // in case it contains transparency, we must separate rgb data from the alpha\n          // channel and create a PDFRawImage image with opacity.  otherwise we can use a\n          // PDFJpegImage.\n          //\n          // to do this in one step, we create the rgb and alpha streams anyway, even if\n          // we might end up not using them if hasAlpha remains false.\n\n          var hasAlpha = false, rgb = BinaryStream(), alpha = BinaryStream();\n          var rawbytes = imgdata.data;\n          var i = 0;\n          while (i < rawbytes.length) {\n              rgb.writeByte(rawbytes[i++]);\n              rgb.writeByte(rawbytes[i++]);\n              rgb.writeByte(rawbytes[i++]);\n              var a = rawbytes[i++];\n              if (a < 255) {\n                  hasAlpha = true;\n              }\n              alpha.writeByte(a);\n          }\n\n          if (hasAlpha || options.keepPNG) {\n              img = new PDFRawImage(size.width, size.height, rgb, alpha);\n          } else {\n              // no transparency, encode as JPEG.\n              var data = canvas.toDataURL(\"image/jpeg\", options.jpegQuality);\n              data = data.substr(data.indexOf(\";base64,\") + 8);\n\n              var stream = BinaryStream();\n              stream.writeBase64(data);\n              img = new PDFJpegImage(stream);\n          }\n\n          cont(IMAGE_CACHE$1[url] = img);\n      }\n\n      function _onerror() {\n          cont(IMAGE_CACHE$1[url] = \"ERROR\");\n      }\n\n      function _onload() {\n          if (size) {\n              var svg = (blob && blob.type === 'image/svg+xml') || (\n                /^data:image\\/svg\\+xml;/i.test(this.src.substring(0, 19))\n              );\n\n              var upscale = size.width >= img.width || size.height >= img.height;\n\n              // Use the original image if requested size is bigger than the source,\n              // unless it's an SVG that can be upscaled.\n              if (!svg && upscale) {\n                  size = null;\n              }\n          }\n          if (!size && blob && /^image\\/jpe?g$/i.test(blob.type)) {\n              // If we know we got a JPEG, we can skip the process of rendering it to a\n              // canvas, getting the pixel data, searching for transparency we know we won't\n              // find, getting back a data URI and then decoding the BASE64 to finally get the\n              // binary we already have.  Also, we avoid downgrading the image quality, with\n              // the possible drawback of making a bigger PDF; still, seems legit.\n              //\n              // Besides saving a lot of work, this also reuses the buffer memory\n              // (BinaryStream does not create a copy), potentially saving some GC cycles.\n              var reader = new FileReader();\n              reader.onload = function() {\n                  try {\n                      var img = new PDFJpegImage(BinaryStream(new Uint8Array(this.result)));\n                      URL.revokeObjectURL(bloburl);\n                      cont(IMAGE_CACHE$1[url] = img);\n                  } catch (ex) {\n                      // if there's an error parsing the JPEG stream, it could be due to a\n                      // misconfigured server (improper content-type:\n                      // https://github.com/telerik/kendo-ui-core/issues/4184).  If that's the case,\n                      // the canvas will still be able to draw it.\n                      _trycanvas();\n                  }\n              };\n              reader.readAsArrayBuffer(blob);\n          } else {\n              _trycanvas();\n          }\n      }\n  }\n\n  function manyLoader(loadOne) {\n      return function(urls, callback) {\n          var n = urls.length, i = n;\n          if (n === 0) {\n              return callback();\n          }\n          function next() {\n              if (--n === 0) {\n                  callback();\n              }\n          }\n          while (i-- > 0) {\n              loadOne(urls[i], next);\n          }\n      };\n  }\n\n  var loadFonts = manyLoader(loadFont);\n  var loadImages = function(images, callback, options) {\n      options = Object.assign({\n          jpegQuality : 0.92,\n          keepPNG     : false\n      }, options);\n      var urls = Object.keys(images), n = urls.length;\n      if (n === 0) {\n          return callback();\n      }\n      function next() {\n          if (--n === 0) {\n              callback();\n          }\n      }\n      urls.forEach(function(url){\n          loadImage(url, images[url], next, options);\n      });\n  };\n\n  var PDFDocument = function PDFDocument (options) {\n      var self = this;\n      var out = makeOutput();\n      var objcount = 0;\n      var objects = [];\n\n      function getOption(name, defval) {\n          return (options && options[name] != null) ? options[name] : defval;\n      }\n\n      self.getOption = getOption;\n\n      self.attach = function(value) {\n          if (objects.indexOf(value) < 0) {\n              wrapObject(value, ++objcount);\n              objects.push(value);\n          }\n          return value;\n      };\n\n      self.pages = [];\n\n      self.FONTS = {};\n      self.PATTERNS = {};\n      self.IMAGES = {};\n      self.GRAD_COL_FUNCTIONS = {}; // cache for color gradient functions\n      self.GRAD_OPC_FUNCTIONS = {}; // cache for opacity gradient functions\n      self.GRAD_COL = {}; // cache for whole color gradient objects\n      self.GRAD_OPC = {}; // cache for whole opacity gradient objects\n\n      var catalog = self.attach(new PDFCatalog());\n      var pageTree = self.attach(new PDFPageTree());\n\n      if (getOption(\"autoPrint\")) {\n          var nameTree = {};\n          nameTree.JavaScript = new PDFDictionary({ Names: [\n              new PDFString(\"JS\"), self.attach(new PDFDictionary({\n                  S: _(\"JavaScript\"),\n                  JS: new PDFString(\"print(true);\")\n              }))\n          ] });\n          catalog.props.Names = new PDFDictionary(nameTree);\n      }\n\n      catalog.setPages(pageTree);\n\n      var info = self.attach(new PDFDictionary({\n          Producer : new PDFString(getOption(\"producer\", \"Kendo UI PDF Generator\"), true), // XXX: kendo.version?\n          Title    : new PDFString(getOption(\"title\", \"\"), true),\n          Author   : new PDFString(getOption(\"author\", \"\"), true),\n          Subject  : new PDFString(getOption(\"subject\", \"\"), true),\n          Keywords : new PDFString(getOption(\"keywords\", \"\"), true),\n          Creator  : new PDFString(getOption(\"creator\", \"Kendo UI PDF Generator\"), true),\n          CreationDate : getOption(\"date\", new Date())\n      }));\n\n      self.addPage = function(options) {\n          var paperOptions  = getPaperOptions(function(name, defval){\n              return (options && options[name] != null) ? options[name] : defval;\n          });\n          var paperSize = paperOptions.paperSize;\n          var margin    = paperOptions.margin;\n          var contentWidth  = paperSize[0];\n          var contentHeight = paperSize[1];\n          if (margin) {\n              contentWidth -= margin.left + margin.right;\n              contentHeight -= margin.top + margin.bottom;\n          }\n          var content = new PDFStream(makeOutput(), null, true);\n          var props = {\n              Contents : self.attach(content),\n              Parent   : pageTree,\n              MediaBox : [ 0, 0, paperSize[0], paperSize[1] ]\n          };\n          var page = new PDFPage(self, props);\n          page._content = content;\n          pageTree.addPage(self.attach(page));\n\n          // canvas-like coord. system.  (0,0) is upper-left.\n          // text must be vertically mirorred before drawing.\n          page.transform(1, 0, 0, -1, 0, paperSize[1]);\n\n          if (margin) {\n              page.translate(margin.left, margin.top);\n              // XXX: clip to right/bottom margin.  Make this optional?\n              page.rect(0, 0, contentWidth, contentHeight);\n              page.clip();\n          }\n\n          self.pages.push(page);\n          return page;\n      };\n\n      self.render = function() {\n          var i;\n          /// file header\n          out(\"%PDF-1.4\", NL, \"%\\xc2\\xc1\\xda\\xcf\\xce\", NL, NL);\n\n          /// file body\n          for (i = 0; i < objects.length; ++i) {\n              objects[i].renderFull(out);\n              out(NL, NL);\n          }\n\n          /// cross-reference table\n          var xrefOffset = out.offset();\n          out(\"xref\", NL, 0, \" \", objects.length + 1, NL);\n          out(\"0000000000 65535 f \", NL);\n          for (i = 0; i < objects.length; ++i) {\n              out(zeropad(objects[i]._offset, 10), \" 00000 n \", NL);\n          }\n          out(NL);\n\n          /// trailer\n          out(\"trailer\", NL);\n          out(new PDFDictionary({\n              Size: objects.length + 1,\n              Root: catalog,\n              Info: info\n          }), NL, NL);\n\n          /// end\n          out(\"startxref\", NL, xrefOffset, NL);\n          out(\"%%EOF\", NL);\n\n          return out.stream().offset(0);\n      };\n\n      self.loadFonts = loadFonts;\n      self.loadImages = loadImages;\n  };\n\n  PDFDocument.prototype.getFont = function getFont (url) {\n      var font = this.FONTS[url];\n      if (!font) {\n          font = FONT_CACHE[url];\n          if (!font) {\n              throw new Error(\"Font \" + url + \" has not been loaded\");\n          }\n          if (font === true) {\n              font = this.attach(new PDFStandardFont(url));\n          } else {\n              font = this.attach(new PDFFont(this, font));\n          }\n          this.FONTS[url] = font;\n      }\n      return font;\n  };\n\n  PDFDocument.prototype.getPattern = function getPattern (fill, page, drawPattern) {\n      var pattern = this.PATTERNS[fill.id];\n      if (!pattern) {\n          pattern = this.attach(new PDFPattern(fill, page, drawPattern));\n          this.PATTERNS[fill.id] = pattern;\n      }\n      return pattern;\n  };\n\n  PDFDocument.prototype.getImage = function getImage (url) {\n      var img = this.IMAGES[url];\n      if (!img) {\n          img = IMAGE_CACHE$1[url];\n          if (!img) {\n              throw new Error(\"Image \" + url + \" has not been loaded\");\n          }\n          if (img === \"ERROR\") {\n              return null;\n          }\n          img = this.IMAGES[url] = this.attach(img.asStream(this));\n      }\n      return img;\n  };\n\n  PDFDocument.prototype.getOpacityGS = function getOpacityGS (opacity, forStroke) {\n      var id = parseFloat(opacity).toFixed(3);\n      opacity = parseFloat(id);\n      id += forStroke ? \"S\" : \"F\";\n      var cache = this._opacityGSCache || (this._opacityGSCache = {});\n      var gs = cache[id];\n      if (!gs) {\n          var props = {\n              Type: _(\"ExtGState\")\n          };\n          if (forStroke) {\n              props.CA = opacity;\n          } else {\n              props.ca = opacity;\n          }\n          gs = this.attach(new PDFDictionary(props));\n          gs._resourceName = _(\"GS\" + (++RESOURCE_COUNTER));\n          cache[id] = gs;\n      }\n      return gs;\n  };\n\n  PDFDocument.prototype.dict = function dict (props) {\n      return new PDFDictionary(props);\n  };\n\n  PDFDocument.prototype.name = function name (str) {\n      return _(str);\n  };\n\n  PDFDocument.prototype.stream = function stream (props, content) {\n      return new PDFStream(content, props);\n  };\n\n  /* -----[ utils ]----- */\n\n  function pad(str, len, ch) {\n      while (str.length < len) {\n          str = ch + str;\n      }\n      return str;\n  }\n\n  function zeropad(n, len) {\n      return pad(String(n), len, \"0\");\n  }\n\n  function hasOwnProperty$1(obj, key) {\n      return Object.prototype.hasOwnProperty.call(obj, key);\n  }\n\n  var isArray = Array.isArray || function(obj) {\n      return obj instanceof Array;\n  };\n\n  function isDate(obj) {\n      return obj instanceof Date;\n  }\n\n  function renderArray(a, out) {\n      out(\"[\");\n      if (a.length > 0) {\n          out.withIndent(function(){\n              for (var i = 0; i < a.length; ++i) {\n                  if (i > 0 && i % 8 === 0) {\n                      out.indent(a[i]);\n                  } else {\n                      out(\" \", a[i]);\n                  }\n              }\n          });\n          //out.indent();\n      }\n      out(\" ]\");\n  }\n\n  function renderDate(date, out) {\n      out(\"(D:\",\n          zeropad(date.getUTCFullYear(), 4),\n          zeropad(date.getUTCMonth() + 1, 2),\n          zeropad(date.getUTCDate(), 2),\n          zeropad(date.getUTCHours(), 2),\n          zeropad(date.getUTCMinutes(), 2),\n          zeropad(date.getUTCSeconds(), 2),\n          \"Z)\");\n  }\n\n  function mm2pt(mm) {\n      return mm * (72/25.4);\n  }\n\n  function cm2pt(cm) {\n      return mm2pt(cm * 10);\n  }\n\n  function in2pt(inch)  {\n      return inch * 72;\n  }\n\n\n  function unitsToPoints(x, def) {\n      if (typeof x == \"number\") {\n          return x;\n      }\n      if (typeof x == \"string\") {\n          var m;\n          m = /^\\s*([0-9.]+)\\s*(mm|cm|in|pt)\\s*$/.exec(x);\n          if (m) {\n              var num = parseFloat(m[1]);\n              if (!isNaN(num)) {\n                  if (m[2] == \"pt\") {\n                      return num;\n                  }\n                  return {\n                      \"mm\": mm2pt,\n                      \"cm\": cm2pt,\n                      \"in\": in2pt\n                  }[m[2]](num);\n              }\n          }\n      }\n      if (def != null) {\n          return def;\n      }\n      throw new Error(\"Can't parse unit: \" + x);\n  }\n\n  /* -----[ PDF basic objects ]----- */\n\n  var PDFValue = function PDFValue () {};\n\n  PDFValue.prototype.beforeRender = function beforeRender () {};\n\n  var PDFString = (function (PDFValue) {\n      function PDFString(value, utf16be) {\n          PDFValue.call(this);\n          this.value = value;\n          this.utf16be = Boolean(utf16be);\n      }\n\n      if ( PDFValue ) PDFString.__proto__ = PDFValue;\n      PDFString.prototype = Object.create( PDFValue && PDFValue.prototype );\n      PDFString.prototype.constructor = PDFString;\n\n      PDFString.prototype.render = function render (out) {\n          var txt = this.value;\n          if (this.utf16be) {\n              txt = BOM + encodeUTF16BE(txt);\n              txt = txt.replace(/([\\(\\)\\\\])/g, \"\\\\$1\");\n              out(\"(\", txt, \")\");\n          } else {\n              // out.writeString truncates charcodes to 8 bits and\n              // 0x128 & 0xFF is 40, the code for open paren.\n              // therefore we need to do the chopping here to make\n              // sure we backslash all cases.\n              var data = [ 40 ]; // open PDF string '('\n              for (var i = 0; i < txt.length; ++i) {\n                  var code = txt.charCodeAt(i) & 0xFF;\n                  if (code == 40 || code == 41 || code == 92) {\n                      // backslash before (, ) and \\\n                      data.push(92);\n                  }\n                  data.push(code);\n              }\n              data.push(41);  // ')' close PDF string\n              out.writeData(data);\n          }\n      };\n\n      PDFString.prototype.toString = function toString () {\n          return this.value;\n      };\n\n      return PDFString;\n  }(PDFValue));\n\n  var PDFHexString = (function (PDFString) {\n      function PDFHexString(value) {\n          PDFString.call(this, value);\n          this.value = value;\n      }\n\n      if ( PDFString ) PDFHexString.__proto__ = PDFString;\n      PDFHexString.prototype = Object.create( PDFString && PDFString.prototype );\n      PDFHexString.prototype.constructor = PDFHexString;\n\n      PDFHexString.prototype.render = function render (out) {\n          var this$1$1 = this;\n\n          out(\"<\");\n          for (var i = 0; i < this.value.length; ++i) {\n              out(zeropad(this$1$1.value.charCodeAt(i).toString(16), 4));\n          }\n          out(\">\");\n      };\n\n      return PDFHexString;\n  }(PDFString));\n\n  /// names\n  var PDFName = (function (PDFValue) {\n      function PDFName(name) {\n          PDFValue.call(this);\n          this.name = name;\n      }\n\n      if ( PDFValue ) PDFName.__proto__ = PDFValue;\n      PDFName.prototype = Object.create( PDFValue && PDFValue.prototype );\n      PDFName.prototype.constructor = PDFName;\n\n      PDFName.get = function get (name) {\n          return _(name);\n      };\n\n      PDFName.prototype.render = function render (out) {\n          out(\"/\" + this.escape());\n      };\n\n      PDFName.prototype.escape = function escape () {\n          return this.name.replace(/[^\\x21-\\x7E]/g, function(c){\n              return \"#\" + zeropad(c.charCodeAt(0).toString(16), 2);\n          });\n      };\n\n      PDFName.prototype.toString = function toString () {\n          return this.name;\n      };\n\n      return PDFName;\n  }(PDFValue));\n\n  function _(name) {\n      return new PDFName(name);\n  }\n\n  /// dictionary\n\n  var PDFDictionary = (function (PDFValue) {\n      function PDFDictionary(props) {\n          PDFValue.call(this);\n          this.props = props;\n      }\n\n      if ( PDFValue ) PDFDictionary.__proto__ = PDFValue;\n      PDFDictionary.prototype = Object.create( PDFValue && PDFValue.prototype );\n      PDFDictionary.prototype.constructor = PDFDictionary;\n\n      PDFDictionary.prototype.render = function render (out) {\n          var props = this.props, empty = true;\n          out(\"<<\");\n          out.withIndent(function(){\n              for (var i in props) {\n                  if (hasOwnProperty$1(props, i) && !/^_/.test(i)) {\n                      empty = false;\n                      out.indent(_(i), \" \", props[i]);\n                  }\n              }\n          });\n          if (!empty) {\n              out.indent();\n          }\n          out(\">>\");\n      };\n\n      return PDFDictionary;\n  }(PDFValue));\n\n  /// streams\n\n  var PDFStream = (function (PDFValue) {\n      function PDFStream(data, props, compress) {\n          PDFValue.call(this);\n          if (typeof data == \"string\") {\n              var tmp = BinaryStream();\n              tmp.write(data);\n              data = tmp;\n          }\n          this.data = data;\n          this.props = props || {};\n          this.compress = compress;\n      }\n\n      if ( PDFValue ) PDFStream.__proto__ = PDFValue;\n      PDFStream.prototype = Object.create( PDFValue && PDFValue.prototype );\n      PDFStream.prototype.constructor = PDFStream;\n\n      PDFStream.prototype.render = function render (out) {\n          var data = this.data.get(), props = this.props;\n          if (this.compress && supportsDeflate()) {\n              if (!props.Filter) {\n                  props.Filter = [];\n              } else if (!(props.Filter instanceof Array)) {\n                  props.Filter = [ props.Filter ];\n              }\n              props.Filter.unshift(_(\"FlateDecode\"));\n              data = deflate(data);\n          }\n          props.Length = data.length;\n          out(new PDFDictionary(props), \" stream\", NL);\n          out.writeData(data);\n          out(NL, \"endstream\");\n      };\n\n      return PDFStream;\n  }(PDFValue));\n\n  /// catalog\n\n  var PDFCatalog = (function (PDFDictionary) {\n      function PDFCatalog() {\n          PDFDictionary.call(this, {\n              Type: _(\"Catalog\")\n          });\n      }\n\n      if ( PDFDictionary ) PDFCatalog.__proto__ = PDFDictionary;\n      PDFCatalog.prototype = Object.create( PDFDictionary && PDFDictionary.prototype );\n      PDFCatalog.prototype.constructor = PDFCatalog;\n\n      PDFCatalog.prototype.setPages = function setPages (pagesObj) {\n          this.props.Pages = pagesObj;\n      };\n\n      return PDFCatalog;\n  }(PDFDictionary));\n\n  /// page tree\n\n  var PDFPageTree = (function (PDFDictionary) {\n      function PDFPageTree() {\n          PDFDictionary.call(this, {\n              Type  : _(\"Pages\"),\n              Kids  : [],\n              Count : 0\n          });\n      }\n\n      if ( PDFDictionary ) PDFPageTree.__proto__ = PDFDictionary;\n      PDFPageTree.prototype = Object.create( PDFDictionary && PDFDictionary.prototype );\n      PDFPageTree.prototype.constructor = PDFPageTree;\n\n      PDFPageTree.prototype.addPage = function addPage (pageObj) {\n          this.props.Kids.push(pageObj);\n          this.props.Count++;\n      };\n\n      return PDFPageTree;\n  }(PDFDictionary));\n\n  /// images\n\n  // JPEG\n\n  var SOF_CODES = [0xc0, 0xc1, 0xc2, 0xc3, 0xc5, 0xc6, 0xc7, 0xc9, 0xca, 0xcb, 0xcd, 0xce, 0xcf];\n\n  var PDFJpegImage = function PDFJpegImage(data) {\n      // we must determine the correct color space.  we'll parse a bit\n      // of the JPEG stream for this, it's still better than going\n      // through the canvas.\n      // https://github.com/telerik/kendo-ui-core/issues/2845\n      data.offset(0);\n      var width, height, colorSpace, bitsPerComponent;\n      var soi = data.readShort();\n      if (soi != 0xFFD8) {\n          // XXX: do we have some better options here?\n          throw new Error(\"Invalid JPEG image\");\n      }\n      while (!data.eof()) {\n          var ff = data.readByte();\n          if (ff != 0xFF) {\n              throw new Error(\"Invalid JPEG image\");\n          }\n          var marker = data.readByte();\n          var length = data.readShort();\n          if (SOF_CODES.indexOf(marker) >= 0) {\n              // \"start of frame\" marker\n              bitsPerComponent = data.readByte();\n              height = data.readShort();\n              width = data.readShort();\n              colorSpace = data.readByte();\n              break;\n          }\n          data.skip(length - 2);\n      }\n\n      if (colorSpace == null) {\n          throw new Error(\"Invalid JPEG image\");\n      }\n\n      var props = {\n          Type         : _(\"XObject\"),\n          Subtype      : _(\"Image\"),\n          Width        : width,\n          Height       : height,\n          BitsPerComponent : bitsPerComponent,\n          Filter       : _(\"DCTDecode\")\n      };\n\n      switch (colorSpace) {\n      case 1:\n          props.ColorSpace = _(\"DeviceGray\");\n          break;\n      case 3:\n          props.ColorSpace = _(\"DeviceRGB\");\n          break;\n      case 4:\n          props.ColorSpace = _(\"DeviceCMYK\");\n          props.Decode = [ 1, 0, 1, 0, 1, 0, 1, 0 ]; // invert colors\n          break;\n      }\n\n      this.asStream = function() {\n          data.offset(0);\n          var stream = new PDFStream(data, props);\n          stream._resourceName = _(\"I\" + (++RESOURCE_COUNTER));\n          return stream;\n      };\n  };\n\n  // PDFRawImage will be used for images with transparency (PNG)\n\n  var PDFRawImage = function PDFRawImage(width, height, rgb, alpha) {\n      this.asStream = function(pdf) {\n          var mask = new PDFStream(alpha, {\n              Type         : _(\"XObject\"),\n              Subtype      : _(\"Image\"),\n              Width        : width,\n              Height       : height,\n              BitsPerComponent : 8,\n              ColorSpace   : _(\"DeviceGray\")\n          }, true);\n          var stream = new PDFStream(rgb, {\n              Type         : _(\"XObject\"),\n              Subtype      : _(\"Image\"),\n              Width        : width,\n              Height       : height,\n              BitsPerComponent : 8,\n              ColorSpace   : _(\"DeviceRGB\"),\n              SMask        : pdf.attach(mask)\n          }, true);\n          stream._resourceName = _(\"I\" + (++RESOURCE_COUNTER));\n          return stream;\n      };\n  };\n\n  var PDFPattern = (function (PDFDictionary) {\n      function PDFPattern(fill, curPage, drawPattern) {\n          var ref = fill.size();\n          var width = ref.width;\n          var height = ref.height;\n          var page = new PDFPage(curPage._pdf, {});\n          page._content = new PDFStream(makeOutput(), null, true);\n\n          drawPattern(fill, page, {});\n\n          curPage._xResources = Object.assign(curPage._xResources, page._xResources);\n          curPage._fontResources = Object.assign(curPage._fontResources, page._fontResources);\n          curPage._gsResources = Object.assign(curPage._gsResources, page._gsResources);\n\n          PDFDictionary.call(this, {\n              Type: _(\"Pattern\"),\n              PatternType: 1,\n              PaintType: 1,\n              TilingType: 1,\n              BBox: [0 , 0, width, height],\n              XStep: width,\n              YStep: height,\n              Matrix: [1, 0, 0, -1, 0, height],\n              Resources: {\n                  ExtGState: new PDFDictionary(page._gsResources),\n                  XObject: new PDFDictionary(page._xResources),\n                  Font: new PDFDictionary(page._fontResources)\n              }\n          });\n          this._resourceName = _(\"P\" + (++PATTERN_COUNTER));\n          this.data = page._content.data;\n          this.compress = true;\n      }\n\n      if ( PDFDictionary ) PDFPattern.__proto__ = PDFDictionary;\n      PDFPattern.prototype = Object.create( PDFDictionary && PDFDictionary.prototype );\n      PDFPattern.prototype.constructor = PDFPattern;\n\n      PDFPattern.prototype.render = function render (out) {\n          PDFStream.prototype.render.call(this, out);\n      };\n\n      return PDFPattern;\n  }(PDFDictionary));\n\n  /// standard fonts\n\n  var PDFStandardFont = (function (PDFDictionary) {\n      function PDFStandardFont(name){\n          PDFDictionary.call(this, {\n              Type     : _(\"Font\"),\n              Subtype  : _(\"Type1\"),\n              BaseFont : _(name)\n          });\n\n          this._resourceName = _(\"F\" + (++RESOURCE_COUNTER));\n      }\n\n      if ( PDFDictionary ) PDFStandardFont.__proto__ = PDFDictionary;\n      PDFStandardFont.prototype = Object.create( PDFDictionary && PDFDictionary.prototype );\n      PDFStandardFont.prototype.constructor = PDFStandardFont;\n\n      PDFStandardFont.prototype.encodeText = function encodeText (str) {\n          return new PDFString(String(str));\n      };\n\n      return PDFStandardFont;\n  }(PDFDictionary));\n\n  /// TTF fonts\n\n  var PDFFont = (function (PDFDictionary) {\n      function PDFFont(pdf, font, props){\n          PDFDictionary.call(this, {});\n\n          props = this.props;\n          props.Type = _(\"Font\");\n          props.Subtype = _(\"Type0\");\n          props.Encoding = _(\"Identity-H\");\n\n          this._pdf = pdf;\n          this._font = font;\n          this._sub = font.makeSubset();\n          this._resourceName = _(\"F\" + (++RESOURCE_COUNTER));\n\n          var head = font.head;\n\n          this.name = font.psName;\n          var scale = this.scale = font.scale;\n          this.bbox = [\n              head.xMin * scale,\n              head.yMin * scale,\n              head.xMax * scale,\n              head.yMax * scale\n          ];\n\n          this.italicAngle = font.post.italicAngle;\n          this.ascent = font.ascent * scale;\n          this.descent = font.descent * scale;\n          this.lineGap = font.lineGap * scale;\n          this.capHeight = font.os2.capHeight || this.ascent;\n          this.xHeight = font.os2.xHeight || 0;\n          this.stemV = 0;\n\n          this.familyClass = (font.os2.familyClass || 0) >> 8;\n          this.isSerif = this.familyClass >= 1 && this.familyClass <= 7;\n          this.isScript = this.familyClass == 10;\n\n          this.flags = ((font.post.isFixedPitch ? 1 : 0) |\n                      (this.isSerif ? 1 << 1 : 0) |\n                      (this.isScript ? 1 << 3 : 0) |\n                      (this.italicAngle !== 0 ? 1 << 6 : 0) |\n                      (1 << 5));\n          }\n\n      if ( PDFDictionary ) PDFFont.__proto__ = PDFDictionary;\n      PDFFont.prototype = Object.create( PDFDictionary && PDFDictionary.prototype );\n      PDFFont.prototype.constructor = PDFFont;\n\n          PDFFont.prototype.encodeText = function encodeText (text) {\n              return new PDFHexString(this._sub.encodeText(String(text)));\n          };\n\n          PDFFont.prototype.getTextWidth = function getTextWidth (fontSize, text) {\n              var this$1$1 = this;\n\n              var width = 0, codeMap = this._font.cmap.codeMap;\n              for (var i = 0; i < text.length; ++i) {\n                  var glyphId = codeMap[text.charCodeAt(i)];\n                  width += this$1$1._font.widthOfGlyph(glyphId || 0);\n              }\n              return width * fontSize / 1000;\n          };\n\n          PDFFont.prototype.beforeRender = function beforeRender () {\n              var self = this;\n              var sub = self._sub;\n\n              // write the TTF data\n              var data = sub.render();\n              var fontStream = new PDFStream(BinaryStream(data), {\n                  Length1: data.length\n              }, true);\n\n              var descriptor = self._pdf.attach(new PDFDictionary({\n                  Type         : _(\"FontDescriptor\"),\n                  FontName     : _(self._sub.psName),\n                  FontBBox     : self.bbox,\n                  Flags        : self.flags,\n                  StemV        : self.stemV,\n                  ItalicAngle  : self.italicAngle,\n                  Ascent       : self.ascent,\n                  Descent      : self.descent,\n                  CapHeight    : self.capHeight,\n                  XHeight      : self.xHeight,\n                  FontFile2    : self._pdf.attach(fontStream)\n              }));\n\n              var cmap = sub.ncid2ogid;\n              var firstChar = sub.firstChar;\n              var lastChar = sub.lastChar;\n              var charWidths = [];\n              (function loop(i, chunk){\n                  if (i <= lastChar) {\n                      var gid = cmap[i];\n                      if (gid == null) {\n                          loop(i + 1);\n                      } else {\n                          if (!chunk) {\n                              charWidths.push(i, chunk = []);\n                          }\n                          chunk.push(self._font.widthOfGlyph(gid));\n                          loop(i + 1, chunk);\n                      }\n                  }\n              })(firstChar);\n\n              // As if two dictionaries weren't enough, we need another\n              // one, the \"descendant font\".  Only that one can be of\n              // Subtype CIDFontType2.  PDF is the X11 of document\n              // formats: portable but full of legacy that nobody cares\n              // about anymore.\n\n              var descendant = new PDFDictionary({\n                  Type: _(\"Font\"),\n                  Subtype: _(\"CIDFontType2\"),\n                  BaseFont: _(self._sub.psName),\n                  CIDSystemInfo: new PDFDictionary({\n                      Registry   : new PDFString(\"Adobe\"),\n                      Ordering   : new PDFString(\"Identity\"),\n                      Supplement : 0\n                  }),\n                  FontDescriptor: descriptor,\n                  FirstChar: firstChar,\n                  LastChar: lastChar,\n                  DW: Math.round(self._font.widthOfGlyph(0)),\n                  W: charWidths,\n                  CIDToGIDMap: self._pdf.attach(self._makeCidToGidMap())\n              });\n\n              var dict = self.props;\n              dict.BaseFont = _(self._sub.psName);\n              dict.DescendantFonts = [ self._pdf.attach(descendant) ];\n\n              // Compute the ToUnicode map so that apps can extract\n              // meaningful text from the PDF.\n              var unimap = new PDFToUnicodeCmap(firstChar, lastChar, sub.subset);\n              var unimapStream = new PDFStream(makeOutput(), null, true);\n              unimapStream.data(unimap);\n              dict.ToUnicode = self._pdf.attach(unimapStream);\n          };\n\n          PDFFont.prototype._makeCidToGidMap = function _makeCidToGidMap () {\n              return new PDFStream(BinaryStream(this._sub.cidToGidMap()), null, true);\n          };\n\n      return PDFFont;\n  }(PDFDictionary));\n\n  var PDFToUnicodeCmap = (function (PDFValue) {\n      function PDFToUnicodeCmap(firstChar, lastChar, map){\n          PDFValue.call(this);\n          this.firstChar = firstChar;\n          this.lastChar = lastChar;\n          this.map = map;\n      }\n\n      if ( PDFValue ) PDFToUnicodeCmap.__proto__ = PDFValue;\n      PDFToUnicodeCmap.prototype = Object.create( PDFValue && PDFValue.prototype );\n      PDFToUnicodeCmap.prototype.constructor = PDFToUnicodeCmap;\n\n      PDFToUnicodeCmap.prototype.render = function render (out) {\n          out.indent(\"/CIDInit /ProcSet findresource begin\");\n          out.indent(\"12 dict begin\");\n          out.indent(\"begincmap\");\n          out.indent(\"/CIDSystemInfo <<\");\n          out.indent(\"  /Registry (Adobe)\");\n          out.indent(\"  /Ordering (UCS)\");\n          out.indent(\"  /Supplement 0\");\n          out.indent(\">> def\");\n          out.indent(\"/CMapName /Adobe-Identity-UCS def\");\n          out.indent(\"/CMapType 2 def\");\n          out.indent(\"1 begincodespacerange\");\n          out.indent(\"  <0000><ffff>\");\n          out.indent(\"endcodespacerange\");\n\n          var self = this;\n          out.indent(self.lastChar - self.firstChar + 1, \" beginbfchar\");\n          out.withIndent(function(){\n              for (var code = self.firstChar; code <= self.lastChar; ++code) {\n                  var unicode = self.map[code];\n                  var str = ucs2encode([ unicode ]);\n                  out.indent(\"<\", zeropad(code.toString(16), 4), \">\", \"<\");\n                  for (var i = 0; i < str.length; ++i) {\n                      out(zeropad(str.charCodeAt(i).toString(16), 4));\n                  }\n                  out(\">\");\n              }\n          });\n          out.indent(\"endbfchar\");\n\n          out.indent(\"endcmap\");\n          out.indent(\"CMapName currentdict /CMap defineresource pop\");\n          out.indent(\"end\");\n          out.indent(\"end\");\n      };\n\n      return PDFToUnicodeCmap;\n  }(PDFValue));\n\n  /// gradients\n\n  function makeHash(a) {\n      return a.map(function(x){\n          return isArray(x) ? makeHash(x)\n              : typeof x == \"number\" ? (Math.round(x * 1000) / 1000).toFixed(3)\n              : x;\n      }).join(\" \");\n  }\n\n  function cacheColorGradientFunction(pdf, r1, g1, b1, r2, g2, b2) {\n      var hash = makeHash([ r1, g1, b1, r2, g2, b2 ]);\n      var func = pdf.GRAD_COL_FUNCTIONS[hash];\n      if (!func) {\n          func = pdf.GRAD_COL_FUNCTIONS[hash] = pdf.attach(new PDFDictionary({\n              FunctionType: 2,\n              Domain: [ 0, 1 ],\n              Range: [ 0, 1, 0, 1, 0, 1 ],\n              N: 1,\n              C0: [ r1 , g1 , b1 ],\n              C1: [ r2 , g2 , b2 ]\n          }));\n      }\n      return func;\n  }\n\n  function cacheOpacityGradientFunction(pdf, a1, a2) {\n      var hash = makeHash([ a1, a2 ]);\n      var func = pdf.GRAD_OPC_FUNCTIONS[hash];\n      if (!func) {\n          func = pdf.GRAD_OPC_FUNCTIONS[hash] = pdf.attach(new PDFDictionary({\n              FunctionType: 2,\n              Domain: [ 0, 1 ],\n              Range: [ 0, 1 ],\n              N: 1,\n              C0: [ a1 ],\n              C1: [ a2 ]\n          }));\n      }\n      return func;\n  }\n\n  function makeGradientFunctions(pdf, stops) {\n      var hasAlpha = false;\n      var opacities = [];\n      var colors = [];\n      var offsets = [];\n      var encode = [];\n      var i, prev, cur, prevColor, curColor;\n      for (i = 1; i < stops.length; ++i) {\n          prev = stops[i - 1];\n          cur = stops[i];\n          prevColor = prev.color;\n          curColor = cur.color;\n          colors.push(cacheColorGradientFunction(\n              pdf,\n              prevColor.r, prevColor.g, prevColor.b,\n              curColor.r,  curColor.g,  curColor.b\n          ));\n          if (prevColor.a < 1 || curColor.a < 1) {\n              hasAlpha = true;\n          }\n          offsets.push(cur.offset);\n          encode.push(0, 1);\n      }\n      if (hasAlpha) {\n          for (i = 1; i < stops.length; ++i) {\n              prev = stops[i - 1];\n              cur = stops[i];\n              prevColor = prev.color;\n              curColor = cur.color;\n              opacities.push(cacheOpacityGradientFunction(\n                  pdf, prevColor.a, curColor.a\n              ));\n          }\n      }\n      offsets.pop();\n      return {\n          hasAlpha  : hasAlpha,\n          colors    : assemble(colors),\n          opacities : hasAlpha ? assemble(opacities) : null\n      };\n      function assemble(funcs) {\n          if (funcs.length == 1) {\n              return funcs[0];\n          }\n          return {\n              FunctionType: 3,\n              Functions: funcs,\n              Domain: [ 0, 1 ],\n              Bounds: offsets,\n              Encode: encode\n          };\n      }\n  }\n\n  function cacheColorGradient(pdf, isRadial, stops, coords, funcs, box) {\n      var shading, hash;\n      // if box is given then we have user-space coordinates, which\n      // means the gradient is designed for a certain position/size\n      // on page.  caching won't do any good.\n      if (!box) {\n          var a = [ isRadial ].concat(coords);\n          stops.forEach(function(x){\n              a.push(x.offset, x.color.r, x.color.g, x.color.b);\n          });\n          hash = makeHash(a);\n          shading = pdf.GRAD_COL[hash];\n      }\n      if (!shading) {\n          shading = new PDFDictionary({\n              Type: _(\"Shading\"),\n              ShadingType: isRadial ? 3 : 2,\n              ColorSpace: _(\"DeviceRGB\"),\n              Coords: coords,\n              Domain: [ 0, 1 ],\n              Function: funcs,\n              Extend: [ true, true ]\n          });\n          pdf.attach(shading);\n          shading._resourceName = \"S\" + (++RESOURCE_COUNTER);\n          if (hash) {\n              pdf.GRAD_COL[hash] = shading;\n          }\n      }\n      return shading;\n  }\n\n  function cacheOpacityGradient(pdf, isRadial, stops, coords, funcs, box) {\n      var opacity, hash;\n      // if box is given then we have user-space coordinates, which\n      // means the gradient is designed for a certain position/size\n      // on page.  caching won't do any good.\n      if (!box) {\n          var a = [ isRadial ].concat(coords);\n          stops.forEach(function(x){\n              a.push(x.offset, x.color.a);\n          });\n          hash = makeHash(a);\n          opacity = pdf.GRAD_OPC[hash];\n      }\n      if (!opacity) {\n          opacity = new PDFDictionary({\n              Type: _(\"ExtGState\"),\n              AIS: false,\n              CA: 1,\n              ca: 1,\n              SMask: {\n                  Type: _(\"Mask\"),\n                  S: _(\"Luminosity\"),\n                  G: pdf.attach(new PDFStream(\"/a0 gs /s0 sh\", {\n                      Type: _(\"XObject\"),\n                      Subtype: _(\"Form\"),\n                      FormType: 1,\n                      BBox: (box ? [\n                          box.left, box.top + box.height, box.left + box.width, box.top\n                      ] : [ 0, 1, 1, 0 ]),\n                      Group: {\n                          Type: _(\"Group\"),\n                          S: _(\"Transparency\"),\n                          CS: _(\"DeviceGray\"),\n                          I: true\n                      },\n                      Resources: {\n                          ExtGState: {\n                              a0: { CA: 1, ca: 1 }\n                          },\n                          Shading: {\n                              s0: {\n                                  ColorSpace: _(\"DeviceGray\"),\n                                  Coords: coords,\n                                  Domain: [ 0, 1 ],\n                                  ShadingType: isRadial ? 3 : 2,\n                                  Function: funcs,\n                                  Extend: [ true, true ]\n                              }\n                          }\n                      }\n                  }))\n              }\n          });\n          pdf.attach(opacity);\n          opacity._resourceName = \"O\" + (++RESOURCE_COUNTER);\n          if (hash) {\n              pdf.GRAD_OPC[hash] = opacity;\n          }\n      }\n      return opacity;\n  }\n\n  function cacheGradient(pdf, gradient, box) {\n      var isRadial = gradient.type == \"radial\";\n      var funcs = makeGradientFunctions(pdf, gradient.stops);\n      var coords = isRadial ? [\n          gradient.start.x , gradient.start.y , gradient.start.r,\n          gradient.end.x   , gradient.end.y   , gradient.end.r\n      ] : [\n          gradient.start.x , gradient.start.y,\n          gradient.end.x   , gradient.end.y\n      ];\n      var shading = cacheColorGradient(\n          pdf, isRadial, gradient.stops, coords, funcs.colors, gradient.userSpace && box\n      );\n      var opacity = funcs.hasAlpha ? cacheOpacityGradient(\n          pdf, isRadial, gradient.stops, coords, funcs.opacities, gradient.userSpace && box\n      ) : null;\n      return {\n          hasAlpha: funcs.hasAlpha,\n          shading: shading,\n          opacity: opacity\n      };\n  }\n\n  /// page object\n\n  var PDFPage = (function (PDFDictionary) {\n      function PDFPage(pdf, props){\n          PDFDictionary.call(this, props);\n\n          this._pdf = pdf;\n          this._rcount = 0;\n          this._textMode = false;\n          this._fontResources = {};\n          this._gsResources = {};\n          this._xResources = {};\n          this._patResources = {};\n          this._shResources = {};\n          this._opacity = 1;\n          this._matrix = [ 1, 0, 0, 1, 0, 0 ];\n          this._annotations = [];\n\n          this._font = null;\n          this._fontSize = null;\n\n          this._contextStack = [];\n\n          props = this.props;\n          props.Type = _(\"Page\");\n          props.ProcSet = [\n              _(\"PDF\"),\n              _(\"Text\"),\n              _(\"ImageB\"),\n              _(\"ImageC\"),\n              _(\"ImageI\")\n          ];\n          props.Resources = new PDFDictionary({\n              Font      : new PDFDictionary(this._fontResources),\n              ExtGState : new PDFDictionary(this._gsResources),\n              XObject   : new PDFDictionary(this._xResources),\n              Pattern   : new PDFDictionary(this._patResources),\n              Shading   : new PDFDictionary(this._shResources)\n          });\n          props.Annots = this._annotations;\n      }\n\n      if ( PDFDictionary ) PDFPage.__proto__ = PDFDictionary;\n      PDFPage.prototype = Object.create( PDFDictionary && PDFDictionary.prototype );\n      PDFPage.prototype.constructor = PDFPage;\n\n      PDFPage.prototype._out = function _out () {\n          this._content.data.apply(null, arguments);\n      };\n\n      PDFPage.prototype.transform = function transform (a, b, c, d, e, f) {\n          if (!isIdentityMatrix(arguments)) {\n              this._matrix = mmul$1(arguments, this._matrix);\n              this._out(a, \" \", b, \" \", c, \" \", d, \" \", e, \" \", f, \" cm\");\n              // XXX: debug\n              // this._out(\" % current matrix: \", this._matrix);\n              this._out(NL);\n          }\n      };\n\n      PDFPage.prototype.translate = function translate (dx, dy) {\n          this.transform(1, 0, 0, 1, dx, dy);\n      };\n\n      PDFPage.prototype.scale = function scale (sx, sy) {\n          this.transform(sx, 0, 0, sy, 0, 0);\n      };\n\n      PDFPage.prototype.rotate = function rotate (angle) {\n          var cos = Math.cos(angle), sin = Math.sin(angle);\n          this.transform(cos, sin, -sin, cos, 0, 0);\n      };\n\n      PDFPage.prototype.beginText = function beginText () {\n          this._textMode = true;\n          this._out(\"BT\", NL);\n      };\n\n      PDFPage.prototype.endText = function endText () {\n          this._textMode = false;\n          this._out(\"ET\", NL);\n      };\n\n      PDFPage.prototype._requireTextMode = function _requireTextMode () {\n          if (!this._textMode) {\n              throw new Error(\"Text mode required; call page.beginText() first\");\n          }\n      };\n\n      PDFPage.prototype._requireFont = function _requireFont () {\n          if (!this._font) {\n              throw new Error(\"No font selected; call page.setFont() first\");\n          }\n      };\n\n      PDFPage.prototype.setFont = function setFont (font, size) {\n          this._requireTextMode();\n          if (font == null) {\n              font = this._font;\n          } else if (!(font instanceof PDFFont)) {\n              font = this._pdf.getFont(font);\n          }\n          if (size == null) {\n              size = this._fontSize;\n          }\n          this._fontResources[font._resourceName] = font;\n          this._font = font;\n          this._fontSize = size;\n          this._out(font._resourceName, \" \", size, \" Tf\", NL);\n      };\n\n      PDFPage.prototype.setTextLeading = function setTextLeading (size) {\n          this._requireTextMode();\n          this._out(size, \" TL\", NL);\n      };\n\n      PDFPage.prototype.setTextRenderingMode = function setTextRenderingMode (mode) {\n          this._requireTextMode();\n          this._out(mode, \" Tr\", NL);\n      };\n\n      PDFPage.prototype.showText = function showText (text, requestedWidth) {\n          this._requireFont();\n          if (text.length > 1 && requestedWidth && this._font instanceof PDFFont) {\n              var outputWidth = this._font.getTextWidth(this._fontSize, text);\n              var scale = requestedWidth / outputWidth * 100;\n              this._out(scale, \" Tz \");\n          }\n          this._out(this._font.encodeText(text), \" Tj\", NL);\n      };\n\n      PDFPage.prototype.showTextNL = function showTextNL (text) {\n          this._requireFont();\n          this._out(this._font.encodeText(text), \" '\", NL);\n      };\n\n      PDFPage.prototype.addLink = function addLink (uri, box) {\n          var ll = this._toPage({ x: box.left, y: box.bottom });\n          var ur = this._toPage({ x: box.right, y: box.top });\n          this._annotations.push(new PDFDictionary({\n              Type    : _(\"Annot\"),\n              Subtype : _(\"Link\"),\n              Rect    : [ ll.x, ll.y, ur.x, ur.y ],\n              Border  : [ 0, 0, 0 ],\n              A       : new PDFDictionary({\n                  Type : _(\"Action\"),\n                  S    : _(\"URI\"),\n                  URI  : new PDFString(uri)\n              })\n          }));\n      };\n\n      PDFPage.prototype.setStrokeColor = function setStrokeColor (r, g, b) {\n          this._out(r, \" \", g, \" \", b, \" RG\", NL);\n      };\n\n      PDFPage.prototype.setOpacity = function setOpacity (opacity) {\n          this.setFillOpacity(opacity);\n          this.setStrokeOpacity(opacity);\n          this._opacity *= opacity;\n      };\n\n      PDFPage.prototype.setStrokeOpacity = function setStrokeOpacity (opacity) {\n          if (opacity < 1) {\n              var gs = this._pdf.getOpacityGS(this._opacity * opacity, true);\n              this._gsResources[gs._resourceName] = gs;\n              this._out(gs._resourceName, \" gs\", NL);\n          }\n      };\n\n      PDFPage.prototype.setFillColor = function setFillColor (r, g, b) {\n          this._out(r, \" \", g, \" \", b, \" rg\", NL);\n      };\n\n      PDFPage.prototype.pattern = function pattern (fill, box, drawPattern) {\n          var pattern = this._pdf.getPattern(fill, this, drawPattern);\n          this._patResources[pattern._resourceName] = pattern;\n\n          this._out(\"/Pattern cs\", NL);\n          this._out(pattern._resourceName, \" scn\", NL);\n\n          this.rect(box.left, box.top, box.width, box.height);\n          this.fill();\n      };\n\n      PDFPage.prototype.setFillOpacity = function setFillOpacity (opacity) {\n          if (opacity < 1) {\n              var gs = this._pdf.getOpacityGS(this._opacity * opacity, false);\n              this._gsResources[gs._resourceName] = gs;\n              this._out(gs._resourceName, \" gs\", NL);\n          }\n      };\n\n      PDFPage.prototype.gradient = function gradient (gradient$1, box) {\n          this.save();\n          this.rect(box.left, box.top, box.width, box.height);\n          this.clip();\n          if (!gradient$1.userSpace) {\n              this.transform(box.width, 0, 0, box.height, box.left, box.top);\n          }\n          var g = cacheGradient(this._pdf, gradient$1, box);\n          var sname = g.shading._resourceName, oname;\n          this._shResources[sname] = g.shading;\n          if (g.hasAlpha) {\n              oname = g.opacity._resourceName;\n              this._gsResources[oname] = g.opacity;\n              this._out(\"/\" + oname + \" gs \");\n          }\n          this._out(\"/\" + sname + \" sh\", NL);\n          this.restore();\n      };\n\n      PDFPage.prototype.setDashPattern = function setDashPattern (dashArray, dashPhase) {\n          this._out(dashArray, \" \", dashPhase, \" d\", NL);\n      };\n\n      PDFPage.prototype.setLineWidth = function setLineWidth (width) {\n          this._out(width, \" w\", NL);\n      };\n\n      PDFPage.prototype.setLineCap = function setLineCap (lineCap) {\n          this._out(lineCap, \" J\", NL);\n      };\n\n      PDFPage.prototype.setLineJoin = function setLineJoin (lineJoin) {\n          this._out(lineJoin, \" j\", NL);\n      };\n\n      PDFPage.prototype.setMitterLimit = function setMitterLimit (mitterLimit) {\n          this._out(mitterLimit, \" M\", NL);\n      };\n\n      PDFPage.prototype.save = function save () {\n          this._contextStack.push(this._context());\n          this._out(\"q\", NL);\n      };\n\n      PDFPage.prototype.restore = function restore () {\n          this._out(\"Q\", NL);\n          this._context(this._contextStack.pop());\n      };\n\n\n      // paths\n      PDFPage.prototype.moveTo = function moveTo (x, y) {\n          this._out(x, \" \", y, \" m\", NL);\n      };\n\n      PDFPage.prototype.lineTo = function lineTo (x, y) {\n          this._out(x, \" \", y, \" l\", NL);\n      };\n\n      PDFPage.prototype.bezier = function bezier (x1, y1, x2, y2, x3, y3) {\n          this._out(x1, \" \", y1, \" \", x2, \" \", y2, \" \", x3, \" \", y3, \" c\", NL);\n      };\n\n      PDFPage.prototype.bezier1 = function bezier1 (x1, y1, x3, y3) {\n          this._out(x1, \" \", y1, \" \", x3, \" \", y3, \" y\", NL);\n      };\n\n      PDFPage.prototype.bezier2 = function bezier2 (x2, y2, x3, y3) {\n          this._out(x2, \" \", y2, \" \", x3, \" \", y3, \" v\", NL);\n      };\n\n      PDFPage.prototype.close = function close () {\n          this._out(\"h\", NL);\n      };\n\n      PDFPage.prototype.rect = function rect (x, y, w, h) {\n          this._out(x, \" \", y, \" \", w, \" \", h, \" re\", NL);\n      };\n\n      PDFPage.prototype.ellipse = function ellipse (x, y, rx, ry) {\n          function _X(v) { return x + v; }\n          function _Y(v) { return y + v; }\n\n          // how to get to the \"magic number\" is explained here:\n          // http://www.whizkidtech.redprince.net/bezier/circle/kappa/\n          var k = 0.5522847498307936;\n\n          this.moveTo(_X(0), _Y(ry));\n          this.bezier(\n              _X(rx * k) , _Y(ry),\n              _X(rx)     , _Y(ry * k),\n              _X(rx)     , _Y(0)\n          );\n          this.bezier(\n              _X(rx)     , _Y(-ry * k),\n              _X(rx * k) , _Y(-ry),\n              _X(0)      , _Y(-ry)\n          );\n          this.bezier(\n              _X(-rx * k) , _Y(-ry),\n              _X(-rx)     , _Y(-ry * k),\n              _X(-rx)     , _Y(0)\n          );\n          this.bezier(\n              _X(-rx)     , _Y(ry * k),\n              _X(-rx * k) , _Y(ry),\n              _X(0)       , _Y(ry)\n          );\n      };\n\n      PDFPage.prototype.circle = function circle (x, y, r) {\n          this.ellipse(x, y, r, r);\n      };\n\n      PDFPage.prototype.stroke = function stroke () {\n          this._out(\"S\", NL);\n      };\n\n      PDFPage.prototype.nop = function nop () {\n          this._out(\"n\", NL);\n      };\n\n      PDFPage.prototype.clip = function clip () {\n          this._out(\"W n\", NL);\n      };\n\n      PDFPage.prototype.clipStroke = function clipStroke () {\n          this._out(\"W S\", NL);\n      };\n\n      PDFPage.prototype.closeStroke = function closeStroke () {\n          this._out(\"s\", NL);\n      };\n\n      PDFPage.prototype.fill = function fill () {\n          this._out(\"f\", NL);\n      };\n\n      PDFPage.prototype.fillStroke = function fillStroke () {\n          this._out(\"B\", NL);\n      };\n\n      PDFPage.prototype.drawImage = function drawImage (url) {\n          var img = this._pdf.getImage(url);\n          if (img) { // the result can be null for a cross-domain image\n              this._xResources[img._resourceName] = img;\n              this._out(img._resourceName, \" Do\", NL);\n          }\n      };\n\n      PDFPage.prototype.comment = function comment (txt) {\n          var self = this;\n          txt.split(/\\r?\\n/g).forEach(function(line){\n              self._out(\"% \", line, NL);\n          });\n      };\n\n      // internal\n      PDFPage.prototype._context = function _context (val) {\n          if (val != null) {\n              this._opacity = val.opacity;\n              this._matrix = val.matrix;\n          } else {\n              return {\n                  opacity: this._opacity,\n                  matrix: this._matrix\n              };\n          }\n      };\n\n      PDFPage.prototype._toPage = function _toPage (p) {\n          var m = this._matrix;\n          var a = m[0], b = m[1], c = m[2], d = m[3], e = m[4], f = m[5];\n          return {\n              x: a*p.x + c*p.y + e,\n              y: b*p.x + d*p.y + f\n          };\n      };\n\n      return PDFPage;\n  }(PDFDictionary));\n\n  function unquote(str) {\n      return str.replace(/^\\s*(['\"])(.*)\\1\\s*$/, \"$2\");\n  }\n\n  function parseFontDef(fontdef) {\n      // XXX: this is very crude for now and buggy.  Proper parsing is quite involved.\n      var rx = /^\\s*((normal|italic)\\s+)?((normal|small-caps)\\s+)?((normal|bold|\\d+)\\s+)?(([0-9.]+)(px|pt))(\\/(([0-9.]+)(px|pt)|normal))?\\s+(.*?)\\s*$/i;\n      var m = rx.exec(fontdef);\n      if (!m) {\n          return { fontSize: 12, fontFamily: \"sans-serif\" };\n      }\n      var fontSize = m[8] ? parseInt(m[8], 10) : 12;\n      return {\n          italic     : m[2] && m[2].toLowerCase() == \"italic\",\n          variant    : m[4],\n          bold       : m[6] && /bold|700/i.test(m[6]),\n          fontSize   : fontSize,\n          lineHeight : m[12] ? m[12] == \"normal\" ? fontSize : parseInt(m[12], 10) : null,\n          fontFamily : m[14].split(/\\s*,\\s*/g).map(unquote)\n      };\n  }\n\n  function getFontURL$1(style) {\n      function mkFamily(name) {\n          if (style.bold) {\n              name += \"|bold\";\n          }\n          if (style.italic) {\n              name += \"|italic\";\n          }\n          return name.toLowerCase();\n      }\n      var fontFamily = style.fontFamily;\n      var name, url;\n      if (fontFamily instanceof Array) {\n          for (var i = 0; i < fontFamily.length; ++i) {\n              name = mkFamily(fontFamily[i]);\n              url = FONT_MAPPINGS[name];\n              if (url) {\n                  break;\n              }\n          }\n      } else {\n          url = FONT_MAPPINGS[fontFamily.toLowerCase()];\n      }\n      while (typeof url == \"function\") {\n          url = url();\n      }\n      if (!url) {\n          url = \"Times-Roman\";\n      }\n      return url;\n  }\n\n  var FONT_MAPPINGS = {\n      \"serif\"                    : \"Times-Roman\",\n      \"serif|bold\"               : \"Times-Bold\",\n      \"serif|italic\"             : \"Times-Italic\",\n      \"serif|bold|italic\"        : \"Times-BoldItalic\",\n      \"sans-serif\"               : \"Helvetica\",\n      \"sans-serif|bold\"          : \"Helvetica-Bold\",\n      \"sans-serif|italic\"        : \"Helvetica-Oblique\",\n      \"sans-serif|bold|italic\"   : \"Helvetica-BoldOblique\",\n      \"monospace\"                : \"Courier\",\n      \"monospace|bold\"           : \"Courier-Bold\",\n      \"monospace|italic\"         : \"Courier-Oblique\",\n      \"monospace|bold|italic\"    : \"Courier-BoldOblique\",\n      \"zapfdingbats\"             : \"ZapfDingbats\",\n      \"zapfdingbats|bold\"        : \"ZapfDingbats\",\n      \"zapfdingbats|italic\"      : \"ZapfDingbats\",\n      \"zapfdingbats|bold|italic\" : \"ZapfDingbats\"\n  };\n\n  function fontAlias(alias, name) {\n      alias = alias.toLowerCase();\n      FONT_MAPPINGS[alias] = function() {\n          return FONT_MAPPINGS[name];\n      };\n      FONT_MAPPINGS[alias + \"|bold\"] = function() {\n          return FONT_MAPPINGS[name + \"|bold\"];\n      };\n      FONT_MAPPINGS[alias + \"|italic\"] = function() {\n          return FONT_MAPPINGS[name + \"|italic\"];\n      };\n      FONT_MAPPINGS[alias + \"|bold|italic\"] = function() {\n          return FONT_MAPPINGS[name + \"|bold|italic\"];\n      };\n  }\n\n  // Let's define some common names to an appropriate replacement.\n  // These are overridable via pdf.defineFont, should the user want to\n  // include the proper versions.\n\n  fontAlias(\"Times New Roman\" , \"serif\");\n  fontAlias(\"Courier New\"     , \"monospace\");\n  fontAlias(\"Arial\"           , \"sans-serif\");\n  fontAlias(\"Helvetica\"       , \"sans-serif\");\n  fontAlias(\"Verdana\"         , \"sans-serif\");\n  fontAlias(\"Tahoma\"          , \"sans-serif\");\n  fontAlias(\"Georgia\"         , \"sans-serif\");\n  fontAlias(\"Monaco\"          , \"monospace\");\n  fontAlias(\"Andale Mono\"     , \"monospace\");\n\n  function defineFont(name, url) {\n      if (arguments.length == 1) {\n          for (var i in name) {\n              if (hasOwnProperty$1(name, i)) {\n                  defineFont(i, name[i]);\n              }\n          }\n      } else {\n          name = name.toLowerCase();\n          FONT_MAPPINGS[name] = url;\n\n          // special handling for DejaVu fonts: if they get defined,\n          // let them also replace the default families, for good\n          // Unicode support out of the box.\n          switch (name) {\n            case \"dejavu sans\"               : FONT_MAPPINGS[\"sans-serif\"]              = url; break;\n            case \"dejavu sans|bold\"          : FONT_MAPPINGS[\"sans-serif|bold\"]         = url; break;\n            case \"dejavu sans|italic\"        : FONT_MAPPINGS[\"sans-serif|italic\"]       = url; break;\n            case \"dejavu sans|bold|italic\"   : FONT_MAPPINGS[\"sans-serif|bold|italic\"]  = url; break;\n            case \"dejavu serif\"              : FONT_MAPPINGS[\"serif\"]                   = url; break;\n            case \"dejavu serif|bold\"         : FONT_MAPPINGS[\"serif|bold\"]              = url; break;\n            case \"dejavu serif|italic\"       : FONT_MAPPINGS[\"serif|italic\"]            = url; break;\n            case \"dejavu serif|bold|italic\"  : FONT_MAPPINGS[\"serif|bold|italic\"]       = url; break;\n            case \"dejavu mono\"               : FONT_MAPPINGS[\"monospace\"]               = url; break;\n            case \"dejavu mono|bold\"          : FONT_MAPPINGS[\"monospace|bold\"]          = url; break;\n            case \"dejavu mono|italic\"        : FONT_MAPPINGS[\"monospace|italic\"]        = url; break;\n            case \"dejavu mono|bold|italic\"   : FONT_MAPPINGS[\"monospace|bold|italic\"]   = url; break;\n          }\n      }\n  }\n\n  function mmul$1(a, b) {\n      var a1 = a[0], b1 = a[1], c1 = a[2], d1 = a[3], e1 = a[4], f1 = a[5];\n      var a2 = b[0], b2 = b[1], c2 = b[2], d2 = b[3], e2 = b[4], f2 = b[5];\n      return [\n          a1*a2 + b1*c2,          a1*b2 + b1*d2,\n          c1*a2 + d1*c2,          c1*b2 + d1*d2,\n          e1*a2 + f1*c2 + e2,     e1*b2 + f1*d2 + f2\n      ];\n  }\n\n  function isIdentityMatrix(m) {\n      return m[0] === 1 && m[1] === 0 && m[2] === 0 && m[3] === 1 && m[4] === 0 && m[5] === 0;\n  }\n\n  var TEXT_RENDERING_MODE$1 = {\n      fill           : 0,\n      stroke         : 1,\n      fillAndStroke  : 2,\n      invisible      : 3,\n      fillAndClip    : 4,\n      strokeAndClip  : 5,\n      fillStrokeClip : 6,\n      clip           : 7\n  };\n\n  /* eslint-disable no-multi-spaces, key-spacing, indent, camelcase, space-before-blocks, eqeqeq, brace-style */\n  /* eslint-disable space-infix-ops, space-before-function-paren, array-bracket-spacing, object-curly-spacing */\n  /* eslint-disable no-nested-ternary, max-params, default-case, no-else-return, no-empty */\n  /* eslint-disable no-param-reassign, no-var, block-scoped-var */\n\n\n  var DEFAULT_IMAGE_DPI = 300;\n  var TEXT_RENDERING_MODE = TEXT_RENDERING_MODE$1;\n\n  var DASH_PATTERNS = {\n      dash           : [ 4 ],\n      dashDot        : [ 4, 2, 1, 2 ],\n      dot            : [ 1, 2 ],\n      longDash       : [ 8, 2 ],\n      longDashDot    : [ 8, 2, 1, 2 ],\n      longDashDotDot : [ 8, 2, 1, 2, 1, 2 ],\n      solid          : []\n  };\n\n  var LINE_CAP = {\n      butt   : 0,\n      round  : 1,\n      square : 2\n  };\n\n  var LINE_JOIN = {\n      miter : 0,\n      round : 1,\n      bevel : 2\n  };\n\n  function render(group, callback) {\n      var fonts = [], images = {}, options = group.options;\n\n      function getOption(name, defval, hash) {\n          if (!hash) {\n              hash = options;\n          }\n          if (hash.pdf && hash.pdf[name] != null) {\n              return hash.pdf[name];\n          }\n          return defval;\n      }\n\n      var multiPage = getOption(\"multiPage\");\n      var imgDPI = getOption(\"imgDPI\", DEFAULT_IMAGE_DPI);\n\n      clearImageCache();\n\n      var handlers = {\n          Image: function(element) {\n              var url = element.src();\n              var size = element.bbox().size;\n              if (imgDPI) {\n                  var prev = images[url];\n                  size = {\n                    width: Math.ceil(size.width * imgDPI / 72),\n                    height: Math.ceil(size.height * imgDPI / 72)\n                  };\n\n                  if (prev) {\n                    size.width = Math.max(prev.width, size.width);\n                    size.height = Math.max(prev.height, size.height);\n                  }\n              }\n\n              images[url] = size;\n          },\n          Text: function(element) {\n              var style = parseFontDef(element.options.font);\n              var url = getFontURL$1(style);\n              if (fonts.indexOf(url) < 0) {\n                  fonts.push(url);\n              }\n          }\n      };\n\n      group.traverse(function(element) {\n          dispatch(handlers, element);\n\n          var fill = element.fill && element.fill();\n          if (fill instanceof Pattern) {\n              fill.traverse(function(child) {\n                  dispatch(handlers, child);\n              });\n          }\n      });\n\n      function doIt() {\n          if (--count > 0) {\n              return;\n          }\n\n          var pdf = new (PDFDocument)({\n              producer  : getOption(\"producer\"),\n              title     : getOption(\"title\"),\n              author    : getOption(\"author\"),\n              subject   : getOption(\"subject\"),\n              keywords  : getOption(\"keywords\"),\n              creator   : getOption(\"creator\"),\n              date      : getOption(\"date\"),\n\n              autoPrint : getOption(\"autoPrint\")\n          });\n\n          function drawPage(group) {\n              var options = group.options;\n\n              var tmp = optimize(group);\n              var bbox = tmp.bbox;\n              group = tmp.root;\n              // var tmp, bbox;\n\n              var paperSize = getOption(\"paperSize\", getOption(\"paperSize\", \"auto\"), options), addMargin = false;\n              if (paperSize == \"auto\") {\n                  if (bbox) {\n                      var size = bbox.getSize();\n                      paperSize = [ size.width, size.height ];\n                      addMargin = true;\n                      var origin = bbox.getOrigin();\n                      tmp = new Group$1();\n                      tmp.transform(new Matrix(1, 0, 0, 1, -origin.x, -origin.y));\n                      tmp.append(group);\n                      group = tmp;\n                  }\n                  else {\n                      paperSize = \"A4\";\n                  }\n              }\n\n              var page;\n              page = pdf.addPage({\n                  paperSize : paperSize,\n                  margin    : getOption(\"margin\", getOption(\"margin\"), options),\n                  addMargin : addMargin,\n                  landscape : getOption(\"landscape\", getOption(\"landscape\", false), options)\n              });\n              drawElement(group, page, pdf);\n          }\n\n          if (multiPage) {\n              group.children.forEach(drawPage);\n          } else {\n              drawPage(group);\n          }\n\n          callback(pdf.render(), pdf);\n      }\n\n      var count = 2;\n      loadFonts(fonts, doIt);\n      loadImages(images, doIt, {\n          jpegQuality : getOption(\"jpegQuality\", 0.92),\n          keepPNG     : getOption(\"keepPNG\", false)\n      });\n  }\n\n  function toDataURL(group, callback) {\n      render(group, function(data){\n          callback(\"data:application/pdf;base64,\" + data.base64());\n      });\n  }\n\n  function toBlob(group, callback) {\n      render(group, function(data){\n          callback(new window.Blob([ data.get() ], { type: \"application/pdf\" }));\n      });\n  }\n\n  function saveAs(group, filename, proxy, callback) {\n      // XXX: Safari has Blob, but does not support the download attribute\n      //      so we'd end up converting to dataURL and using the proxy anyway.\n      if (window.Blob && !support$1.browser.safari) {\n          toBlob(group, function(blob){\n              saveAs$1({ dataURI: blob, fileName: filename });\n              if (callback) {\n                  callback(blob);\n              }\n          });\n      } else {\n          toDataURL(group, function(dataURL){\n              saveAs$1({ dataURI: dataURL, fileName: filename, proxyURL: proxy });\n              if (callback) {\n                  callback(dataURL);\n              }\n          });\n      }\n  }\n\n  function dispatch(handlers, element) {\n      var handler = handlers[element.nodeType];\n      if (handler) {\n          return handler.call.apply(handler, arguments);\n      }\n      return element;\n  }\n\n  function drawElement(element, page, pdf) {\n      if (element.options._pdfDebug) {\n          page.comment(\"BEGIN: \" + element.options._pdfDebug);\n      }\n\n      var transform = element.transform();\n      var opacity = element.opacity();\n\n      page.save();\n\n      if (opacity != null && opacity < 1) {\n          page.setOpacity(opacity);\n      }\n\n      setStrokeOptions(element, page, pdf);\n      setFillOptions(element, page, pdf);\n\n      if (transform) {\n          var m = transform.matrix();\n          page.transform(m.a, m.b, m.c, m.d, m.e, m.f);\n      }\n\n      setClipping$1(element, page, pdf);\n\n      dispatch({\n          Path      : drawPath,\n          MultiPath : drawMultiPath,\n          Circle    : drawCircle,\n          Arc       : drawArc,\n          Text      : drawText$1,\n          Image     : drawImage,\n          Group     : drawGroup,\n          Rect      : drawRect\n      }, element, page, pdf);\n\n      page.restore();\n\n      if (element.options._pdfDebug) {\n          page.comment(\"END: \" + element.options._pdfDebug);\n      }\n  }\n\n  function setStrokeOptions(element, page) {\n      var stroke = element.stroke && element.stroke();\n      if (!stroke) {\n          return;\n      }\n\n      var color = stroke.color;\n      if (color) {\n          color = parseColor$1(color);\n          if (color == null) {\n              return; // no stroke\n          }\n          page.setStrokeColor(color.r, color.g, color.b);\n          if (color.a != 1) {\n              page.setStrokeOpacity(color.a);\n          }\n      }\n\n      var width = stroke.width;\n      if (width != null) {\n          if (width === 0) {\n              return; // no stroke\n          }\n          page.setLineWidth(width);\n      }\n\n      var dashType = stroke.dashType;\n      if (dashType) {\n          page.setDashPattern(DASH_PATTERNS[dashType], 0);\n      }\n\n      var lineCap = stroke.lineCap;\n      if (lineCap) {\n          page.setLineCap(LINE_CAP[lineCap]);\n      }\n\n      var lineJoin = stroke.lineJoin;\n      if (lineJoin) {\n          page.setLineJoin(LINE_JOIN[lineJoin]);\n      }\n\n      var opacity = stroke.opacity;\n      if (opacity != null) {\n          page.setStrokeOpacity(opacity);\n      }\n  }\n\n  function setFillOptions(element, page) {\n      var fill = element.fill && element.fill();\n      if (!fill) {\n          return;\n      }\n\n      if (fill instanceof Gradient || fill instanceof Pattern) {\n          return;\n      }\n\n      var color = fill.color;\n      if (color) {\n          color = parseColor$1(color);\n          if (color == null) {\n              return; // no fill\n          }\n          page.setFillColor(color.r, color.g, color.b);\n          if (color.a != 1) {\n              page.setFillOpacity(color.a);\n          }\n      }\n\n      var opacity = fill.opacity;\n      if (opacity != null) {\n          page.setFillOpacity(opacity);\n      }\n  }\n\n  function setClipping$1(element, page, pdf) {\n      // XXX: only Path supported at the moment.\n      var clip = element.clip();\n      if (clip) {\n          _drawPath(clip, page, pdf);\n          page.clip();\n          // page.setStrokeColor(Math.random(), Math.random(), Math.random());\n          // page.setLineWidth(1);\n          // page.stroke();\n      }\n  }\n\n  function shouldDraw(thing) {\n      return (thing &&\n              (thing instanceof Gradient ||\n              thing instanceof Pattern ||\n               (thing.color && !/^(none|transparent)$/i.test(thing.color) &&\n                (thing.width == null || thing.width > 0) &&\n                (thing.opacity == null || thing.opacity > 0))));\n  }\n\n  function maybeGradient(element, page, pdf, stroke) {\n      var fill = element.fill();\n      if (fill instanceof Gradient) {\n          if (stroke) {\n              page.clipStroke();\n          } else {\n              page.clip();\n          }\n          var isRadial = fill instanceof RadialGradient;\n          var start, end;\n          if (isRadial) {\n              start = { x: fill.center().x , y: fill.center().y , r: 0 };\n              end   = { x: fill.center().x , y: fill.center().y , r: fill.radius() };\n          } else {\n              start = { x: fill.start().x , y: fill.start().y };\n              end   = { x: fill.end().x   , y: fill.end().y   };\n          }\n\n          var stops = fill.stops.elements().map(function(stop){\n              var offset = stop.offset();\n              if (/%$/.test(offset)) {\n                  offset = parseFloat(offset) / 100;\n              } else {\n                  offset = parseFloat(offset);\n              }\n              var color = parseColor$1(stop.color());\n              color.a *= stop.opacity();\n              return {\n                  offset: offset,\n                  color: color\n              };\n          });\n\n          // Duplicats first and last stop to fix\n          // https://github.com/telerik/kendo-ui-core/issues/1782\n          stops.unshift(stops[0]);\n          stops.push(stops[stops.length - 1]);\n\n          var gradient = {\n              userSpace : fill.userSpace(),\n              type      : isRadial ? \"radial\" : \"linear\",\n              start     : start,\n              end       : end,\n              stops     : stops\n          };\n          var box = element.rawBBox();\n          var tl = box.topLeft(), size = box.getSize();\n          box = {\n              left   : tl.x,\n              top    : tl.y,\n              width  : size.width,\n              height : size.height\n          };\n          page.gradient(gradient, box);\n          return true;\n      }\n  }\n\n  function maybePattern(element, page, pdf, stroke) {\n      var fill = element.fill();\n      if (fill instanceof Pattern) {\n          if (stroke) {\n              page.clipStroke();\n          } else {\n              page.clip();\n          }\n\n          var box = element.rawBBox();\n          var tl = box.topLeft(), size = box.getSize();\n          var strokeWidth = element.stroke() ? element.stroke().width : 0;\n\n          page.pattern(fill, {\n              left   : tl.x + strokeWidth / 2,\n              top    : tl.y + strokeWidth / 2,\n              width  : size.width - strokeWidth,\n              height : size.height - strokeWidth\n          }, drawPattern);\n          return true;\n      }\n  }\n\n  function maybeFillStroke(element, page, pdf) {\n      if (shouldDraw(element.fill()) && shouldDraw(element.stroke())) {\n          if (!maybeGradient(element, page, pdf, true) && !maybePattern(element, page, pdf, true)) {\n              page.fillStroke();\n          }\n      } else if (shouldDraw(element.fill())) {\n          if (!maybeGradient(element, page, pdf, false) && !maybePattern(element, page, pdf, false)) {\n              page.fill();\n          }\n      } else if (shouldDraw(element.stroke())) {\n          page.stroke();\n      } else {\n          // we should not get here; the path should have been\n          // optimized away.  but let's be prepared.\n          page.nop();\n      }\n  }\n\n  function maybeDrawRect(path, page) {\n      var segments = path.segments;\n      if (segments.length == 4 && path.options.closed) {\n          // detect if this path looks like a rectangle parallel to the axis\n          var a = [];\n          for (var i = 0; i < segments.length; ++i) {\n              if (segments[i].controlIn()) { // has curve?\n                  return false;\n              }\n              a[i] = segments[i].anchor();\n          }\n          // it's a rectangle if the y/x/y/x or x/y/x/y coords of\n          // consecutive points are the same.\n          var isRect = (\n              a[0].y == a[1].y && a[1].x == a[2].x && a[2].y == a[3].y && a[3].x == a[0].x\n          ) || (\n              a[0].x == a[1].x && a[1].y == a[2].y && a[2].x == a[3].x && a[3].y == a[0].y\n          );\n          if (isRect) {\n              // this saves a bunch of instructions in PDF:\n              // moveTo, lineTo, lineTo, lineTo, close -> rect.\n              page.rect(a[0].x, a[0].y,\n                        a[2].x - a[0].x /*width*/,\n                        a[2].y - a[0].y /*height*/);\n              return true;\n          }\n      }\n  }\n\n  function _drawPath(element, page, pdf) {\n      var segments = element.segments;\n      if (segments.length === 0) {\n          return;\n      }\n      if (!maybeDrawRect(element, page, pdf)) {\n          for (var prev, i = 0; i < segments.length; ++i) {\n              var seg = segments[i];\n              var anchor = seg.anchor();\n              if (!prev) {\n                  page.moveTo(anchor.x, anchor.y);\n              } else {\n                  var prevOut = prev.controlOut();\n                  var controlIn = seg.controlIn();\n                  if (prevOut && controlIn) {\n                      page.bezier(\n                          prevOut.x   , prevOut.y,\n                          controlIn.x , controlIn.y,\n                          anchor.x    , anchor.y\n                      );\n                  } else {\n                      page.lineTo(anchor.x, anchor.y);\n                  }\n              }\n              prev = seg;\n          }\n          if (element.options.closed) {\n              page.close();\n          }\n      }\n  }\n\n  function drawPath(element, page, pdf) {\n      _drawPath(element, page, pdf);\n      maybeFillStroke(element, page, pdf);\n  }\n\n  function drawMultiPath(element, page, pdf) {\n      var paths = element.paths;\n      for (var i = 0; i < paths.length; ++i) {\n          _drawPath(paths[i], page, pdf);\n      }\n      maybeFillStroke(element, page, pdf);\n  }\n\n  function drawCircle(element, page, pdf) {\n      var g = element.geometry();\n      page.circle(g.center.x, g.center.y, g.radius);\n      maybeFillStroke(element, page, pdf);\n  }\n\n  function drawArc(element, page, pdf) {\n      var points = element.geometry().curvePoints();\n      page.moveTo(points[0].x, points[0].y);\n      for (var i = 1; i < points.length;) {\n          page.bezier(\n              points[i].x, points[i++].y,\n              points[i].x, points[i++].y,\n              points[i].x, points[i++].y\n          );\n      }\n      maybeFillStroke(element, page, pdf);\n  }\n\n  function drawText$1(element, page) {\n      var style = parseFontDef(element.options.font);\n      var pos = element._position;\n      var mode;\n\n      page.transform(1, 0, 0, -1, pos.x, pos.y + style.fontSize);\n\n      var draw = function (renderMode) {\n          page.beginText();\n          page.setFont(getFontURL$1(style), style.fontSize);\n          page.setTextRenderingMode(renderMode);\n          page.showText(element.content(), element._pdfRect ? element._pdfRect.width() : null);\n      };\n\n      if (element.fill() && element.stroke()) {\n          mode = TEXT_RENDERING_MODE.fillAndStroke;\n          if (element.options.paintOrder === \"stroke\") {\n              draw(TEXT_RENDERING_MODE.stroke);\n              mode = TEXT_RENDERING_MODE.fill;\n          }\n      } else if (element.fill()) {\n          mode = TEXT_RENDERING_MODE.fill;\n      } else if (element.stroke()) {\n          mode = TEXT_RENDERING_MODE.stroke;\n      }\n\n      draw(mode);\n      page.endText();\n  }\n\n  function drawPattern(pattern, page, pdf) {\n      var children = pattern.children;\n      for (var i = 0; i < children.length; ++i) {\n          drawElement(children[i], page, pdf);\n      }\n  }\n\n  function drawGroup(element, page, pdf) {\n      if (element._pdfLink) {\n          page.addLink(element._pdfLink.url, element._pdfLink);\n      }\n      var children = element.children;\n      for (var i = 0; i < children.length; ++i) {\n          drawElement(children[i], page, pdf);\n      }\n  }\n\n  function drawImage(element, page) {\n      var url = element.src();\n      if (!url) {\n          return;\n      }\n\n      var rect = element.rect();\n      var tl = rect.getOrigin();\n      var sz = rect.getSize();\n      page.transform(sz.width, 0, 0, -sz.height, tl.x, tl.y + sz.height);\n      page.drawImage(url);\n  }\n\n  function drawRect(element, page, pdf) {\n      var geometry = element.geometry();\n      var ref = geometry.cornerRadius;\n      var rx = ref[0];\n      var ry = ref[1];\n      if (rx === 0 && ry === 0) {\n          page.rect(geometry.origin.x, geometry.origin.y, geometry.size.width, geometry.size.height);\n          maybeFillStroke(element, page, pdf);\n      } else {\n          drawPath(Path$1.fromRect(geometry, element.options), page, pdf);\n      }\n  }\n\n  function parseColor$1(value) {\n      var color = parseColor$2(value, true);\n      return color ? color.toRGB() : null;\n  }\n\n  function optimize(root) {\n      var clipbox = false;\n      var matrix = Matrix.unit();\n      var currentBox = null;\n      var changed;\n      do {\n          changed = false;\n          root = opt(root);\n      } while (root && changed);\n      return { root: root, bbox: currentBox };\n\n      function change(newShape) {\n          changed = true;\n          return newShape;\n      }\n\n      function visible(shape) {\n          return (shape.visible() && shape.opacity() > 0 &&\n                  ( shouldDraw(shape.fill()) ||\n                    shouldDraw(shape.stroke()) ));\n      }\n\n      function optArray(a) {\n          var b = [];\n          for (var i = 0; i < a.length; ++i) {\n              var el = opt(a[i]);\n              if (el != null) {\n                  b.push(el);\n              }\n          }\n          return b;\n      }\n\n      function withClipping(shape, f) {\n          var saveclipbox = clipbox;\n          var savematrix = matrix;\n\n          if (shape.transform()) {\n              matrix = matrix.multiplyCopy(shape.transform().matrix());\n          }\n\n          var clip = shape.clip();\n          if (clip && typeof clip.bbox === 'function') {\n              clip = clip.bbox();\n              if (clip) {\n                  clip = clip.bbox(matrix);\n                  clipbox = clipbox ? Rect$1.intersect(clipbox, clip) : clip;\n              }\n          }\n\n          try {\n              return f();\n          }\n          finally {\n              clipbox = saveclipbox;\n              matrix = savematrix;\n          }\n      }\n\n      function inClipbox(shape) {\n          if (clipbox == null) {\n              return false;\n          }\n\n          var box = shape.rawBBox();\n          if (box) {\n              box = box.bbox(matrix);\n          }\n\n          if (clipbox && box) {\n              box = Rect$1.intersect(box, clipbox);\n          }\n          return box;\n      }\n\n      function opt(shape) {\n          return withClipping(shape, function(){\n              if (!(shape instanceof Group$1 || shape instanceof MultiPath)) {\n                  var box = inClipbox(shape);\n                  if (!box) {\n                      return change(null);\n                  }\n                  currentBox = currentBox ? Rect$1.union(currentBox, box) : box;\n              }\n              return dispatch({\n                  Path: function(shape) {\n                      if (shape.segments.length === 0 || !visible(shape)) {\n                          return change(null);\n                      }\n                      return shape;\n                  },\n                  MultiPath: function(shape) {\n                      if (!visible(shape)) {\n                          return change(null);\n                      }\n                      var el = new MultiPath(shape.options);\n                      el.paths = optArray(shape.paths);\n                      if (el.paths.length === 0) {\n                          return change(null);\n                      }\n                      return el;\n                  },\n                  Circle: function(shape) {\n                      if (!visible(shape)) {\n                          return change(null);\n                      }\n                      return shape;\n                  },\n                  Arc: function(shape) {\n                      if (!visible(shape)) {\n                          return change(null);\n                      }\n                      return shape;\n                  },\n                  Text: function(shape) {\n                      if (!/\\S/.test(shape.content()) || !visible(shape)) {\n                          return change(null);\n                      }\n                      return shape;\n                  },\n                  Image: function(shape) {\n                      if (!(shape.visible() && shape.opacity() > 0)) {\n                          return change(null);\n                      }\n                      return shape;\n                  },\n                  Group: function(shape) {\n                      if (!(shape.visible() && shape.opacity() > 0)) {\n                          return change(null);\n                      }\n                      var el = new Group$1(shape.options);\n                      el.children = optArray(shape.children);\n                      el._pdfLink = shape._pdfLink;\n                      if (shape !== root && el.children.length === 0 && !shape._pdfLink) {\n                          return change(null);\n                      }\n                      return el;\n                  },\n                  Rect: function(shape) {\n                      if (!visible(shape)) {\n                          return change(null);\n                      }\n                      return shape;\n                  }\n              }, shape);\n          });\n      }\n  }\n\n  function exportPDF(group, options) {\n      var promise = createPromise();\n\n      for (var i in options) {\n          if (i == \"margin\" && group.options.pdf && group.options.pdf._ignoreMargin) {\n              // This hackish option is set by the page breaking code in drawDOM.  The idea is\n              // that margin is already taken into account there (that's required to do proper\n              // page breaking) and we don't want to set it again here, as it would double the\n              // top-left margin, and truncate the content on bottom/right.\n              continue;\n          }\n          group.options.set(\"pdf.\" + i, options[i]);\n      }\n\n      toDataURL(group, promise.resolve);\n\n      return promise;\n  }\n\n  // XXX: the duplication is in order to keep exportPDF return a data\n  // URI, which is what previous versions do.  Currently only IE9 does\n  // not support Blob, IMO we should switch to Blob by default\n  // everywhere.\n  function exportPDFToBlob(group, options) {\n      var promise = createPromise();\n\n      for (var i in options) {\n          if (i == \"margin\" && group.options.pdf && group.options.pdf._ignoreMargin) {\n              // This hackish option is set by the page breaking code in drawDOM.  The idea is\n              // that margin is already taken into account there (that's required to do proper\n              // page breaking) and we don't want to set it again here, as it would double the\n              // top-left margin, and truncate the content on bottom/right.\n              continue;\n          }\n          group.options.set(\"pdf.\" + i, options[i]);\n      }\n\n      if (window.Blob && !support$1.browser.safari) {\n          toBlob(group, promise.resolve);\n      } else {\n          toDataURL(group, promise.resolve);\n      }\n\n      return promise;\n  }\n\n  var pdf = /*#__PURE__*/Object.freeze({\n      __proto__: null,\n      BinaryStream: BinaryStream,\n      Document: PDFDocument,\n      TEXT_RENDERING_MODE: TEXT_RENDERING_MODE$1,\n      clearImageCache: clearImageCache,\n      defineFont: defineFont,\n      exportPDF: exportPDF,\n      exportPDFToBlob: exportPDFToBlob,\n      getFontURL: getFontURL$1,\n      getPaperOptions: getPaperOptions,\n      loadFonts: loadFonts,\n      loadImages: loadImages,\n      parseFontDef: parseFontDef,\n      render: render,\n      saveAs: saveAs,\n      toBlob: toBlob,\n      toDataURL: toDataURL\n  });\n\n  /* eslint-disable no-multi-spaces, key-spacing, indent, camelcase, space-before-blocks, eqeqeq, brace-style */\n  /* eslint-disable space-infix-ops, space-before-function-paren, array-bracket-spacing, object-curly-spacing */\n  /* eslint-disable no-nested-ternary, max-params, default-case, no-else-return, no-empty, yoda */\n  /* eslint-disable no-param-reassign, no-var, block-scoped-var */\n\n\n  var browser = support$1.browser || {};\n  /*\n\n    XXX: to test:\n\n    - cloneNodes function:\n      - drawing document containing canvas with page breaking\n      - drawing document with named radio <input>-s (should not clear selection)\n      - IE9/IE10 don't support el.dataset; do they copy user data?\n\n    - repeating table headers/footers on page breaking\n\n    - forceBreak, keepTogether\n\n    - avoidLinks\n\n   */\n\n  /* -----[ local vars ]----- */\n\n  function slice(thing) {\n      return Array.prototype.slice.call(thing);\n  }\n\n  var KENDO_PSEUDO_ELEMENT = \"KENDO-PSEUDO-ELEMENT\";\n  var KENDO_BULLET_TYPE = 'data-kendo-bullet-type';\n\n  var IMAGE_CACHE = {};\n\n  var nodeInfo = {};\n  nodeInfo._root = nodeInfo;\n\n  /* -----[ Custom Text node to speed up rendering in PDF ]----- */\n\n  var inBrowser = typeof window !== 'undefined';\n  var microsoft = inBrowser ? browser.msie || browser.edge : false;\n\n  var TextRect = (function (Text) {\n    function TextRect(str, rect, options) {\n          Text.call(this, str, rect.getOrigin(), options);\n          this._pdfRect = rect;\n      }\n\n    if ( Text ) TextRect.__proto__ = Text;\n    TextRect.prototype = Object.create( Text && Text.prototype );\n    TextRect.prototype.constructor = TextRect;\n      TextRect.prototype.rect = function rect () {\n          // this is the crux of it: we can avoid a call to\n          // measure(), which is what the base class does, since we\n          // already know the rect.  measure() is s-l-o-w.\n          return this._pdfRect;\n      };\n      TextRect.prototype.rawBBox = function rawBBox () {\n          // also let's avoid creating a new rectangle.\n          return this._pdfRect;\n      };\n\n    return TextRect;\n  }(Text));\n\n  function addClass(el, cls) {\n      if (el.classList) {\n          el.classList.add(cls);\n      } else {\n          el.className += \" \" + cls;\n      }\n  }\n\n  function removeClass(el, cls) {\n      if (el.classList) {\n          el.classList.remove(cls);\n      } else {\n          el.className = el.className.split(/\\s+/).reduce(function(a, word){\n              if (word != cls) {\n                  a.push(word);\n              }\n              return a;\n          }, []).join(\" \");\n      }\n  }\n\n  function setCSS(el, styles) {\n      Object.keys(styles).forEach(function(key){\n          el.style[key] = styles[key];\n      });\n  }\n\n  var matches = typeof Element !== \"undefined\" && Element.prototype && (function(p){\n      if (p.matches) {\n          return function(el, selector) { return el.matches(selector); };\n      }\n      if (p.webkitMatchesSelector) {\n          return function(el, selector) { return el.webkitMatchesSelector(selector); };\n      }\n      if (p.mozMatchesSelector) {\n          return function(el, selector) { return el.mozMatchesSelector(selector); };\n      }\n      if (p.msMatchesSelector) {\n          return function(el, selector) { return el.msMatchesSelector(selector); };\n      }\n      return function(s) {\n  \treturn [].indexOf.call(document.querySelectorAll(s), this) !== -1;\n      };\n  })(Element.prototype);\n\n  function closest(el, selector) {\n      if (el.closest) {\n          return el.closest(selector);\n      }\n      // IE: stringifying rather than simply comparing with `document`,\n      // which is not iframe-proof and fails in editor export —\n      // https://github.com/telerik/kendo/issues/6721\n      while (el && !/^\\[object (?:HTML)?Document\\]$/.test(String(el))) {\n          if (el.nodeType == 1 /* Element */ && matches(el, selector)) {\n              return el;\n          }\n          el = el.parentNode;\n      }\n  }\n\n  // clone nodes ourselves, so that we redraw <canvas> (DOM or\n  // jQuery clone will not)\n  var cloneNodes = (function($){\n      if ($) {\n          // if we have Kendo and jQuery, use this version as it will\n          // maintain proper links between cloned element and Kendo\n          // widgets (i.e. it clones jQuery data(), which isn't the same\n          // as element's data attributes).\n          // https://github.com/telerik/kendo-ui-core/issues/2750\n          return function cloneNodes(el) {\n              var clone = el.cloneNode(false);\n              if (el.nodeType == 1 /* Element */) {\n                  var $el = $(el), $clone = $(clone), i;\n                  var data = $el.data();\n                  for (i in data) {\n                      $clone.data(i, data[i]);\n                  }\n                  if (/^canvas$/i.test(el.tagName)) {\n                      clone.getContext(\"2d\").drawImage(el, 0, 0);\n                  } else if (/^(?:input|select|textarea|option)$/i.test(el.tagName)) {\n                      // drop the name attributes so that we don't affect the selection of the\n                      // original nodes (i.e. checked status of radio buttons) when we insert our copy\n                      // into the DOM.  https://github.com/telerik/kendo/issues/5409\n                      clone.removeAttribute(\"id\");\n                      clone.removeAttribute(\"name\");\n                      if (!/^textarea$/i.test(el.tagName)) {\n                          clone.value = el.value;\n                      }\n                      clone.checked = el.checked;\n                      clone.selected = el.selected;\n                  }\n\n                  if (el._kendoExportVisual) {\n                      clone._kendoExportVisual = el._kendoExportVisual;\n                  }\n\n                  for (i = el.firstChild; i; i = i.nextSibling) {\n                      clone.appendChild(cloneNodes(i));\n                  }\n              }\n              return clone;\n          };\n      } else {\n          // the no-jQuery version\n          return function cloneNodes(el) {\n              var clone = (function dive(node){\n                  var clone = node.cloneNode(false);\n                  if (node._kendoExportVisual) {\n                      clone._kendoExportVisual = node._kendoExportVisual;\n                  }\n                  for (var i = node.firstChild; i; i = i.nextSibling) {\n                      clone.appendChild(dive(i));\n                  }\n                  return clone;\n              })(el);\n\n              // re-draw canvases - https://github.com/telerik/kendo/issues/4872\n              var canvases = el.querySelectorAll(\"canvas\");\n              if (canvases.length) {\n                  slice(clone.querySelectorAll(\"canvas\")).forEach(function (canvas, i) {\n                      canvas.getContext(\"2d\").drawImage(canvases[i], 0, 0);\n                  });\n              }\n\n              // remove \"name\" attributes from <input> elements -\n              // https://github.com/telerik/kendo/issues/5409\n              var orig = el.querySelectorAll(\"input, select, textarea, option\");\n              slice(clone.querySelectorAll(\"input, select, textarea, option\")).forEach(function (el, i) {\n                  el.removeAttribute(\"id\");\n                  el.removeAttribute(\"name\");\n                  if (!/^textarea$/i.test(el.tagName)) {\n                      el.value = orig[i].value;\n                  }\n                  el.checked = orig[i].checked;\n                  el.selected = orig[i].selected;\n              });\n\n              return clone;\n          };\n      }\n  })(typeof window !== \"undefined\" && window.kendo && window.kendo.jQuery);\n\n  function getXY(thing) {\n      if (typeof thing == \"number\") {\n          return { x: thing, y: thing };\n      }\n      if (Array.isArray(thing)) {\n          return { x: thing[0], y: thing[1] };\n      }\n      return { x: thing.x, y: thing.y };\n  }\n\n  function drawDOM(element, options) {\n      if (!options) {\n          options = {};\n      }\n      var promise = createPromise();\n\n      if (!element) {\n          return promise.reject(\"No element to export\");\n      }\n\n      if (typeof window.getComputedStyle != \"function\") {\n          throw new Error(\"window.getComputedStyle is missing.  You are using an unsupported browser, or running in IE8 compatibility mode.  Drawing HTML is supported in Chrome, Firefox, Safari and IE9+.\");\n      }\n\n      defineFont(getFontFaces(element.ownerDocument));\n\n      var scale = getXY(options.scale || 1);\n\n      function doOne(element) {\n          var group = new Group$1();\n\n          // translate to start of page\n          var pos = element.getBoundingClientRect();\n          setTransform(group, [\n              scale.x,\n              0,\n              0,\n              scale.y,\n              (-pos.left * scale.x),\n              (-pos.top * scale.y)\n          ]);\n\n          nodeInfo._clipbox = false;\n          nodeInfo._matrix = Matrix.unit();\n          nodeInfo._stackingContext = {\n              element: element,\n              group: group\n          };\n\n          if (options.avoidLinks === true) {\n              nodeInfo._avoidLinks = \"a\";\n          } else {\n              nodeInfo._avoidLinks = options.avoidLinks;\n          }\n\n          addClass(element, \"k-pdf-export\");\n          renderElement(element, group);\n          removeClass(element, \"k-pdf-export\");\n\n          return group;\n      }\n\n      cacheImages([ element ], function(){\n          var forceBreak = options && options.forcePageBreak;\n          var hasPaperSize = options && options.paperSize && options.paperSize != \"auto\";\n          var paperOptions = getPaperOptions(function(key, def){\n              if (key == \"paperSize\") {\n                  // PDF.getPaperOptions croaks on \"auto\", just pass dummy A4 as we might\n                  // still be interested in margins.\n                  return hasPaperSize ? options[key] : \"A4\";\n              }\n              return key in options ? options[key] : def;\n          });\n          var pageWidth = hasPaperSize && paperOptions.paperSize[0];\n          var pageHeight = hasPaperSize && paperOptions.paperSize[1];\n          var margin = options.margin && paperOptions.margin;\n          var hasMargin = Boolean(margin);\n          if (forceBreak || pageHeight) {\n              if (!margin) {\n                  margin = { left: 0, top: 0, right: 0, bottom: 0 };\n              }\n\n              // we want paper size and margin to be unaffected by\n              // scaling in the output, so we have to reverse-scale\n              // before our calculations begin.\n              if (pageWidth)  { pageWidth  /= scale.x; }\n              if (pageHeight) { pageHeight /= scale.y; }\n              margin.left   /= scale.x;\n              margin.right  /= scale.x;\n              margin.top    /= scale.y;\n              margin.bottom /= scale.y;\n\n              var group = new Group$1({\n                  pdf: {\n                      multiPage     : true,\n                      paperSize     : hasPaperSize ? paperOptions.paperSize : \"auto\",\n                      _ignoreMargin : hasMargin // HACK!  see exportPDF in pdf/drawing.js\n                  }\n              });\n              handlePageBreaks(\n                  function(x) {\n                      if (options.progress) {\n                          var canceled = false, pageNum = 0;\n                          (function next(){\n                              if (pageNum < x.pages.length) {\n                                  var page = doOne(x.pages[pageNum]);\n                                  group.append(page);\n                                  options.progress({\n                                      page: page,\n                                      pageNum: ++pageNum,\n                                      totalPages: x.pages.length,\n                                      cancel: function() {\n                                          canceled = true;\n                                      }\n                                  });\n                                  if (!canceled) {\n                                      setTimeout(next);\n                                  } else {\n                                      // XXX: should we also fail() the deferred object?\n                                      x.container.parentNode.removeChild(x.container);\n                                  }\n                              } else {\n                                  x.container.parentNode.removeChild(x.container);\n                                  promise.resolve(group);\n                              }\n                          })();\n                      } else {\n                          x.pages.forEach(function(page){\n                              group.append(doOne(page));\n                          });\n                          x.container.parentNode.removeChild(x.container);\n                          promise.resolve(group);\n                      }\n                  },\n                  element,\n                  forceBreak,\n                  pageWidth ? pageWidth - margin.left - margin.right : null,\n                  pageHeight ? pageHeight - margin.top - margin.bottom : null,\n                  margin,\n                  options\n              );\n          } else {\n              promise.resolve(doOne(element));\n          }\n      });\n\n      function makeTemplate(template$1) {\n          if (template$1 != null) {\n              if (typeof template$1 == \"string\") {\n                  template$1 = template(template$1.replace(/^\\s+|\\s+$/g, \"\"));\n              }\n              if (typeof template$1 == \"function\") {\n                  return function(data) {\n                      var el = template$1(data);\n                      if (el && typeof el == \"string\") {\n                          var div = document.createElement(\"div\");\n                          setInnerHTML(div, el);\n                          el = div.firstElementChild;\n                      }\n                      return el;\n                  };\n              }\n              // assumed DOM element\n              return function() {\n                  return template$1.cloneNode(true);\n              };\n          }\n      }\n\n      function handlePageBreaks(callback, element, forceBreak, pageWidth, pageHeight, margin, options) {\n          var template = makeTemplate(options.template);\n          var doc = element.ownerDocument;\n          var pages = [];\n          var copy = options._destructive ? element : cloneNodes(element);\n          var container = doc.createElement(\"KENDO-PDF-DOCUMENT\");\n          var adjust = 0;\n\n          // make sure <tfoot> elements are at the end (Grid widget\n          // places TFOOT before TBODY, tricking our algorithm to\n          // insert a page break right after the header).\n          // https://github.com/telerik/kendo/issues/4699\n          slice(copy.querySelectorAll(\"tfoot\")).forEach(function(tfoot){\n              tfoot.parentNode.appendChild(tfoot);\n          });\n\n          // remember the index of each LI from an ordered list.\n          // we'll use it to reconstruct the proper numbering.\n          slice(copy.querySelectorAll(\"ol\")).forEach(function(ol){\n              slice(ol.children).forEach(function(li, index){\n                  li.setAttribute(\"kendo-split-index\", index);\n              });\n          });\n\n          setCSS(container, {\n              display   : \"block\",\n              position  : \"absolute\",\n              boxSizing : \"content-box\",\n              left      : \"-10000px\",\n              top       : \"-10000px\"\n          });\n\n          if (pageWidth) {\n              // subtle: if we don't set the width *and* margins here, the layout in this\n              // container will be different from the one in our final page elements, and we'll\n              // split at the wrong places.\n              setCSS(container, {\n                  width        : pageWidth + \"px\",\n                  paddingLeft  : margin.left + \"px\",\n                  paddingRight : margin.right + \"px\"\n              });\n\n              // when the first element has a margin-top (i.e. a <h1>) the page will be\n              // inadvertently enlarged by that number (the browser will report the container's\n              // bounding box top to start at the element's top, rather than including its\n              // margin).  Adding overflow: hidden seems to fix it.\n              //\n              // to understand the difference, try the following snippets in your browser:\n              //\n              // 1. <div style=\"background: yellow\">\n              //      <h1 style=\"margin: 3em\">Foo</h1>\n              //    </div>\n              //\n              // 2. <div style=\"background: yellow; overflow: hidden\">\n              //      <h1 style=\"margin: 3em\">Foo</h1>\n              //    </div>\n              //\n              // this detail is not important when automatic page breaking is not requested, hence\n              // doing it only if pageWidth is defined.\n              setCSS(copy, { overflow: \"hidden\" });\n          }\n\n          element.parentNode.insertBefore(container, element);\n          container.appendChild(copy);\n\n          // With cache disabled, images will still have height zero until their `complete` attribute\n          // is true.  `whenImagesAreActuallyLoaded` will wait for it.\n          if (options.beforePageBreak) {\n              whenImagesAreActuallyLoaded([ container ], function() {\n                  options.beforePageBreak(container, doPageBreak);\n              });\n          } else {\n              whenImagesAreActuallyLoaded([ container ], doPageBreak);\n          }\n\n          function doPageBreak() {\n              if (forceBreak != \"-\" || pageHeight) {\n                  splitElement(copy);\n              }\n\n              {\n                  var page = makePage();\n                  copy.parentNode.insertBefore(page, copy);\n                  page.appendChild(copy);\n              }\n\n              if (template) {\n                  pages.forEach(function(page, i){\n                      var el = template({\n                          element    : page,\n                          pageNum    : i + 1,\n                          totalPages : pages.length\n                      });\n                      if (el) {\n                          page.appendChild(el);\n                      }\n                  });\n              }\n\n              cacheImages(pages, callback.bind(null, { pages: pages, container: container }));\n          }\n\n          function keepTogether(el) {\n              if (options.keepTogether && matches(el, options.keepTogether) && el.offsetHeight <= pageHeight - adjust) {\n                  return true;\n              }\n\n              var tag = el.tagName;\n              if (/^h[1-6]$/i.test(tag) && el.offsetHeight >= pageHeight - adjust) {\n                  return false;\n              }\n\n              return (el.getAttribute(\"data-kendo-chart\") ||\n                      /^(?:img|tr|thead|th|tfoot|iframe|svg|object|canvas|input|textarea|select|video|h[1-6])/i.test(el.tagName));\n          }\n\n          function splitElement(element) {\n              if (element.tagName == \"TABLE\") {\n                  setCSS(element, { tableLayout: \"fixed\" });\n              }\n              if (keepTogether(element)) {\n                  return;\n              }\n              var style = getComputedStyle$1(element);\n              var bottomPadding = parseFloat(getPropertyValue(style, \"padding-bottom\"));\n              var bottomBorder = parseFloat(getPropertyValue(style, \"border-bottom-width\"));\n              var saveAdjust = adjust;\n              adjust += bottomPadding + bottomBorder;\n              var isFirst = true;\n              for (var el = element.firstChild; el; el = el.nextSibling) {\n                  if (el.nodeType == 1 /* Element */) {\n                      isFirst = false;\n                      if (matches(el, forceBreak)) {\n                          breakAtElement(el);\n                          continue;\n                      }\n                      if (!pageHeight) {\n                          // we're in \"manual breaks mode\"\n                          splitElement(el);\n                          continue;\n                      }\n                      if (!/^(?:static|relative)$/.test(getPropertyValue(getComputedStyle$1(el), \"position\"))) {\n                          continue;\n                      }\n                      var fall = fallsOnMargin(el);\n                      if (fall == 1) {\n                          // element starts on next page, break before anyway.\n                          breakAtElement(el);\n                      }\n                      else if (fall) {\n                          // elements ends up on next page, or possibly doesn't fit on a page at\n                          // all.  break before it anyway if it's an <img> or <tr>, otherwise\n                          // attempt to split.\n                          if (keepTogether(el)) {\n                              breakAtElement(el);\n                          } else {\n                              splitElement(el);\n                          }\n                      }\n                      else {\n                          splitElement(el);\n                      }\n                  }\n                  else if (el.nodeType == 3 /* Text */ && pageHeight) {\n                      splitText(el, isFirst);\n                      isFirst = false;\n                  }\n              }\n              adjust = saveAdjust;\n          }\n\n          function firstInParent(el) {\n              var p = el.parentNode, first = p.firstChild;\n              if (el === first) {\n                  return true;\n              }\n              if (el === p.children[0]) {\n                  if (first.nodeType == 7 /* comment */ ||\n                      first.nodeType == 8 /* processing instruction */) {\n                      return true;\n                  }\n                  if (first.nodeType == 3 /* text */) {\n                      // if whitespace only we can probably consider it's first\n                      return !/\\S/.test(first.data);\n                  }\n              }\n              return false;\n          }\n\n          function breakAtElement(el) {\n              if (el.nodeType == 1 && el !== copy && firstInParent(el)) {\n                  return breakAtElement(el.parentNode);\n              }\n              var table, colgroup, thead, grid, gridHead;\n              table = closest(el, \"table\");\n              colgroup = table && table.querySelector(\"colgroup\");\n              if (options.repeatHeaders) {\n                  thead = table && table.querySelector(\"thead\");\n\n                  // If we break page in a Kendo Grid, repeat its header.  This ugly hack is\n                  // necessary because a scrollable grid will keep the header in a separate\n                  // <table> element from its content.\n                  //\n                  // XXX: This is likely to break as soon as the widget HTML is modified.\n                  grid = closest(el, \".k-grid\");\n                  if (grid && grid.querySelector(\".k-auto-scrollable\")) {\n                      gridHead = grid.querySelector(\".k-grid-header\");\n                  }\n              }\n              var page = makePage();\n              var range = doc.createRange();\n              range.setStartBefore(copy);\n              range.setEndBefore(el);\n              page.appendChild(range.extractContents());\n              copy.parentNode.insertBefore(page, copy);\n              preventBulletOnListItem(el.parentNode);\n              if (table) {\n                  table = closest(el, \"table\"); // that's the <table> on next page!\n                  if (options.repeatHeaders && thead) {\n                      table.insertBefore(thead.cloneNode(true), table.firstChild);\n                  }\n                  if (colgroup) {\n                      table.insertBefore(colgroup.cloneNode(true), table.firstChild);\n                  }\n              }\n              if (options.repeatHeaders && gridHead) {\n                  grid = closest(el, \".k-grid\");\n                  grid.insertBefore(gridHead.cloneNode(true), grid.firstChild);\n              }\n          }\n\n          function makePage() {\n              var page = doc.createElement(\"KENDO-PDF-PAGE\");\n              setCSS(page, {\n                  display  : \"block\",\n                  boxSizing: \"content-box\",\n                  width    : pageWidth ? (pageWidth + \"px\") : \"auto\",\n                  padding  : (margin.top + \"px \" +\n                              margin.right + \"px \" +\n                              margin.bottom + \"px \" +\n                              margin.left + \"px\"),\n\n                  // allow absolutely positioned elements to be relative to current page\n                  position : \"relative\",\n\n                  // without the following we might affect layout of subsequent pages\n                  height   : pageHeight ? (pageHeight + \"px\") : \"auto\",\n                  overflow : pageHeight || pageWidth ? \"hidden\" : \"visible\",\n                  clear    : \"both\"\n              });\n\n              // debug\n              // $(\"<div>\").css({\n              //     position  : \"absolute\",\n              //     left      : margin.left,\n              //     top       : margin.top,\n              //     width     : pageWidth,\n              //     height    : pageHeight,\n              //     boxSizing : \"border-box\",\n              //     background: \"rgba(255, 255, 0, 0.5)\"\n              //     //border    : \"1px solid red\"\n              // }).appendTo(page);\n\n              if (options && options.pageClassName) {\n                  page.className = options.pageClassName;\n              }\n              pages.push(page);\n              return page;\n          }\n\n          function fallsOnMargin(thing) {\n              var box = thing.getBoundingClientRect();\n              if (box.width === 0 || box.height === 0) {\n                  // I'd say an element with dimensions zero fits on current page.\n                  return 0;\n              }\n              var top = copy.getBoundingClientRect().top;\n              var available = pageHeight - adjust;\n              return (box.height > available) ? 3\n                  : (box.top - top > available) ? 1\n                  : (box.bottom - top > available) ? 2\n                  : 0;\n          }\n\n          function splitText(node, isFirst) {\n              if (!/\\S/.test(node.data)) {\n                  return;\n              }\n\n              var len = node.data.length;\n              var range = doc.createRange();\n              range.selectNodeContents(node);\n              var fall = fallsOnMargin(range);\n              if (!fall) {\n                  return;     // the whole text fits on current page\n              }\n\n              var nextnode = node;\n              if (fall == 1) {\n                  // starts on next page, break before anyway.\n                  if (isFirst) {\n                      // avoid leaving an empty <p>, <li>, etc. on previous page.\n                      breakAtElement(node.parentNode);\n                  } else {\n                      breakAtElement(node);\n                  }\n              }\n              else {\n                  (function findEOP(min, pos, max) {\n                      range.setEnd(node, pos);\n                      if (min == pos || pos == max) {\n                          return pos;\n                      }\n                      if (fallsOnMargin(range)) {\n                          return findEOP(min, (min + pos) >> 1, pos);\n                      } else {\n                          return findEOP(pos, (pos + max) >> 1, max);\n                      }\n                  })(0, len >> 1, len);\n\n                  if (!/\\S/.test(range.toString()) && isFirst) {\n                      // avoid leaving an empty <p>, <li>, etc. on previous page.\n                      breakAtElement(node.parentNode);\n                  } else {\n                      // This is only needed for IE, but it feels cleaner to do it anyway.  Without\n                      // it, IE will truncate a very long text (playground/pdf-long-text-2.html).\n                      nextnode = node.splitText(range.endOffset);\n\n                      var page = makePage();\n                      range.setStartBefore(copy);\n                      page.appendChild(range.extractContents());\n                      copy.parentNode.insertBefore(page, copy);\n                      preventBulletOnListItem(nextnode.parentNode);\n                  }\n              }\n\n              splitText(nextnode);\n          }\n\n          function preventBulletOnListItem(el) {\n              // set a hint on continued LI elements, to tell the\n              // renderer not to draw the bullet again.\n              // https://github.com/telerik/kendo-ui-core/issues/2732\n              var li = closest(el, \"li\");\n              if (li) {\n                  li.setAttribute(\"kendo-no-bullet\", \"1\");\n                  preventBulletOnListItem(li.parentNode);\n              }\n          }\n      }\n\n      return promise;\n  }\n\n  // This is needed for the Spreadsheet print functionality.  Since\n  // there we only need to draw text, this cuts through the ceremony\n  // of drawDOM/renderElement and renders the text node directly.\n  function drawText(element) {\n      var group = new Group$1();\n      nodeInfo._clipbox = false;\n      nodeInfo._matrix = Matrix.unit();\n      nodeInfo._stackingContext = {\n          element: element,\n          group: group\n      };\n      pushNodeInfo(element, getComputedStyle$1(element), group);\n      if (element.firstChild.nodeType == 3 /* Text */) {\n          // avoid the penalty of renderElement\n          renderText(element, element.firstChild, group);\n      } else {\n          _renderElement(element, group);\n      }\n      popNodeInfo();\n      return group;\n  }\n\n  var parseBackgroundImage = (function(){\n      var tok_linear_gradient  = /^((-webkit-|-moz-|-o-|-ms-)?linear-gradient\\s*)\\(/;\n      //var tok_radial_gradient  = /^((-webkit-|-moz-|-o-|-ms-)?radial-gradient\\s*)\\(/;\n      var tok_percent          = /^([-0-9.]+%)/;\n      var tok_length           = /^([-0-9.]+px)/;\n      var tok_keyword          = /^(left|right|top|bottom|to|center)\\W/;\n      var tok_angle            = /^([-0-9.]+(deg|grad|rad|turn)|0)/;\n      var tok_whitespace       = /^(\\s+)/;\n      var tok_popen            = /^(\\()/;\n      var tok_pclose           = /^(\\))/;\n      var tok_comma            = /^(,)/;\n      var tok_url              = /^(url)\\(/;\n      var tok_content          = /^(.*?)\\)/;\n\n      var cache1 = {}, cache2 = {};\n\n      function parse(input) {\n          var orig = input;\n          if (hasOwnProperty(cache1, orig)) {\n              return cache1[orig];\n          }\n          function skip_ws() {\n              var m = tok_whitespace.exec(input);\n              if (m) {\n                  input = input.substr(m[1].length);\n              }\n          }\n          function read(token) {\n              skip_ws();\n              var m = token.exec(input);\n              if (m) {\n                  input = input.substr(m[1].length);\n                  return m[1];\n              }\n          }\n\n          function read_stop() {\n              var color = parseColor$2(input, true);\n              var length, percent;\n              if (color) {\n                  var match =\n                      /^#[0-9a-f]+/i.exec(input) ||\n                      /^rgba?\\(.*?\\)/i.exec(input) ||\n                      /^..*?\\b/.exec(input); // maybe named color\n                  input = input.substr(match[0].length);\n                  color = color.toRGB();\n                  if (!(length = read(tok_length))) {\n                      percent = read(tok_percent);\n                  }\n                  return { color: color, length: length, percent: percent };\n              }\n          }\n\n          function read_linear_gradient(propName) {\n              var angle;\n              var to1, to2;\n              var stops = [];\n              var reverse = false;\n\n              if (read(tok_popen)) {\n                  // 1. [ <angle> || to <side-or-corner>, ]?\n                  angle = read(tok_angle);\n                  if (angle == \"0\") {\n                      angle = \"0deg\"; // Edge\n                  }\n                  if (angle) {\n                      angle = parseAngle(angle);\n                      read(tok_comma);\n                  }\n                  else {\n                      to1 = read(tok_keyword);\n                      if (to1 == \"to\") {\n                          to1 = read(tok_keyword);\n                      } else if (to1 && /^-/.test(propName)) {\n                          reverse = true;\n                      }\n                      to2 = read(tok_keyword);\n                      read(tok_comma);\n                  }\n\n                  if (/-moz-/.test(propName) && angle == null && to1 == null) {\n                      var x = read(tok_percent), y = read(tok_percent);\n                      reverse = true;\n                      if (x == \"0%\") {\n                          to1 = \"left\";\n                      } else if (x == \"100%\") {\n                          to1 = \"right\";\n                      }\n                      if (y == \"0%\") {\n                          to2 = \"top\";\n                      } else if (y == \"100%\") {\n                          to2 = \"bottom\";\n                      }\n                      read(tok_comma);\n                  }\n\n                  // 2. color stops\n                  while (input && !read(tok_pclose)) {\n                      var stop = read_stop();\n                      if (!stop) {\n                          break;\n                      }\n                      stops.push(stop);\n                      read(tok_comma);\n                  }\n\n                  return {\n                      type    : \"linear\",\n                      angle   : angle,\n                      to      : to1 && to2 ? to1 + \" \" + to2 : to1 ? to1 : to2 ? to2 : null,\n                      stops   : stops,\n                      reverse : reverse\n                  };\n              }\n          }\n\n          function read_url() {\n              if (read(tok_popen)) {\n                  var url = read(tok_content);\n                  url = url.replace(/^['\"]+|[\"']+$/g, \"\");\n                  read(tok_pclose);\n                  return { type: \"url\", url: url };\n              }\n          }\n\n          var tok;\n\n          if ((tok = read(tok_linear_gradient))) {\n              tok = read_linear_gradient(tok);\n          }\n          else if ((tok = read(tok_url))) {\n              tok = read_url();\n          }\n\n          return (cache1[orig] = tok || { type: \"none\" });\n      }\n\n      return function(input) {\n          if (hasOwnProperty(cache2, input)) {\n              return cache2[input];\n          }\n          return (cache2[input] = splitProperty(input).map(parse));\n      };\n  })();\n\n  var splitProperty = (function(){\n      var cache = {};\n      return function(input, separator) {\n          if (!separator) {\n              separator = /^\\s*,\\s*/;\n          }\n\n          var cacheKey = input + separator;\n\n          if (hasOwnProperty(cache, cacheKey)) {\n              return cache[cacheKey];\n          }\n\n          var ret = [];\n          var last = 0, pos = 0;\n          var in_paren = 0;\n          var in_string = false;\n          var m;\n\n          function looking_at(rx) {\n              return (m = rx.exec(input.substr(pos)));\n          }\n\n          function trim(str) {\n              return str.replace(/^\\s+|\\s+$/g, \"\");\n          }\n\n          while (pos < input.length) {\n              if (!in_string && looking_at(/^[\\(\\[\\{]/)) {\n                  in_paren++;\n                  pos++;\n              }\n              else if (!in_string && looking_at(/^[\\)\\]\\}]/)) {\n                  in_paren--;\n                  pos++;\n              }\n              else if (!in_string && looking_at(/^[\\\"\\']/)) {\n                  in_string = m[0];\n                  pos++;\n              }\n              else if (in_string == \"'\" && looking_at(/^\\\\\\'/)) {\n                  pos += 2;\n              }\n              else if (in_string == '\"' && looking_at(/^\\\\\\\"/)) {\n                  pos += 2;\n              }\n              else if (in_string == \"'\" && looking_at(/^\\'/)) {\n                  in_string = false;\n                  pos++;\n              }\n              else if (in_string == '\"' && looking_at(/^\\\"/)) {\n                  in_string = false;\n                  pos++;\n              }\n              else if (looking_at(separator)) {\n                  if (!in_string && !in_paren && pos > last) {\n                      ret.push(trim(input.substring(last, pos)));\n                      last = pos + m[0].length;\n                  }\n                  pos += m[0].length;\n              }\n              else {\n                  pos++;\n              }\n          }\n          if (last < pos) {\n              ret.push(trim(input.substring(last, pos)));\n          }\n          return (cache[cacheKey] = ret);\n      };\n  })();\n\n  var getFontURL = (function(cache){\n      return function(el){\n          // XXX: for IE we get here the whole cssText of the rule,\n          // because the computedStyle.src is empty.  Next time we need\n          // to fix these regexps we better write a CSS parser. :-\\\n          var url = cache[el];\n          if (!url) {\n              var m;\n              if ((m = /url\\((['\"]?)([^'\")]*?)\\1\\)\\s+format\\((['\"]?)truetype\\3\\)/.exec(el))) {\n                  url = cache[el] = m[2];\n              } else if ((m = /url\\((['\"]?)([^'\")]*?\\.ttf)\\1\\)/.exec(el))) {\n                  url = cache[el] = m[2];\n              }\n          }\n          return url;\n      };\n  })(Object.create(null));\n\n  var getFontHeight = (function(cache){\n      return function(font) {\n          var height = cache[font];\n          if (height == null) {\n              height = cache[font] = measureText(\"Mapq\", { font: font }).height;\n          }\n          return height;\n      };\n  })(Object.create(null));\n\n  function getFontFaces(doc) {\n      if (doc == null) {\n          doc = document;\n      }\n      var result = {};\n      for (var i = 0; i < doc.styleSheets.length; ++i) {\n          doStylesheet(doc.styleSheets[i]);\n      }\n      return result;\n      function doStylesheet(ss) {\n          if (ss) {\n              var rules = null;\n              try {\n                  rules = ss.cssRules;\n              } catch (ex) {}\n              if (rules) {\n                  addRules(ss, rules);\n              }\n          }\n      }\n      function findFonts(rule) {\n          var src = getPropertyValue(rule.style, \"src\");\n          if (src) {\n              return splitProperty(src).reduce(function(a, el){\n                  var font = getFontURL(el);\n                  if (font) {\n                      a.push(font);\n                  }\n                  return a;\n              }, []);\n          } else {\n              // Internet Explorer\n              // XXX: this is gross.  should work though for valid CSS.\n              var font = getFontURL(rule.cssText);\n              return font ? [ font ] : [];\n          }\n      }\n      function addRules(styleSheet, rules) {\n          for (var i = 0; i < rules.length; ++i) {\n              var r = rules[i];\n              switch (r.type) {\n                case 3:       // CSSImportRule\n                  doStylesheet(r.styleSheet);\n                  break;\n                case 5:       // CSSFontFaceRule\n                  var style  = r.style;\n                  var family = splitProperty(getPropertyValue(style, \"font-family\"));\n                  var bold   = /^([56789]00|bold)$/i.test(getPropertyValue(style, \"font-weight\"));\n                  var italic = \"italic\" == getPropertyValue(style, \"font-style\");\n                  var src    = findFonts(r);\n                  if (src.length > 0) {\n                      addRule(styleSheet, family, bold, italic, src[0]);\n                  }\n              }\n          }\n      }\n      function addRule(styleSheet, names, bold, italic, url) {\n          // We get full resolved absolute URLs in Chrome, but sadly\n          // not in Firefox.\n          if (!(/^data:/i.test(url))) {\n              if (!(/^[^\\/:]+:\\/\\//.test(url) || /^\\//.test(url))) {\n                  url = String(styleSheet.href).replace(/[^\\/]*$/, \"\") + url;\n              }\n          }\n          names.forEach(function(name){\n              name = name.replace(/^(['\"]?)(.*?)\\1$/, \"$2\"); // it's quoted\n              if (bold) {\n                  name += \"|bold\";\n              }\n              if (italic) {\n                  name += \"|italic\";\n              }\n              result[name] = url;\n          });\n      }\n  }\n\n  function hasOwnProperty(obj, key) {\n      return Object.prototype.hasOwnProperty.call(obj, key);\n  }\n\n  function getCounter(name) {\n      name = \"_counter_\" + name;\n      return nodeInfo[name];\n  }\n\n  function getAllCounters(name) {\n      var values = [], p = nodeInfo;\n      name = \"_counter_\" + name;\n      while (p) {\n          if (hasOwnProperty(p, name)) {\n              values.push(p[name]);\n          }\n          p = Object.getPrototypeOf(p);\n      }\n      return values.reverse();\n  }\n\n  function incCounter(name, inc) {\n      var p = nodeInfo;\n      name = \"_counter_\" + name;\n      while (p && !hasOwnProperty(p, name)) {\n          p = Object.getPrototypeOf(p);\n      }\n      if (!p) {\n          p = nodeInfo._root;\n      }\n      p[name] = (p[name] || 0) + (inc == null ? 1 : inc);\n  }\n\n  function resetCounter(name, val) {\n      name = \"_counter_\" + name;\n      nodeInfo[name] = val == null ? 0 : val;\n  }\n\n  function doCounters(a, f, def) {\n      for (var i = 0; i < a.length;) {\n          var name = a[i++];\n          var val = parseFloat(a[i]);\n          if (isNaN(val)) {\n              f(name, def);\n          } else {\n              f(name, val);\n              ++i;\n          }\n      }\n  }\n\n  function updateCounters(style) {\n      var counterReset = getPropertyValue(style, \"counter-reset\");\n      if (counterReset) {\n          doCounters(splitProperty(counterReset, /^\\s+/), resetCounter, 0);\n      }\n      var counterIncrement = getPropertyValue(style, \"counter-increment\");\n      if (counterIncrement) {\n          doCounters(splitProperty(counterIncrement, /^\\s+/), incCounter, 1);\n      }\n  }\n\n  function parseColor(str, css) {\n      var color = parseColor$2(str, true);\n      if (color) {\n          color = color.toRGB();\n          if (css) {\n              color = color.toCssRgba();\n          } else if (color.a === 0) {\n              color = null;\n          }\n      }\n      return color;\n  }\n\n  function whenImagesAreActuallyLoaded(elements, callback) {\n      var pending = 0;\n      var done = false;\n      elements.forEach(function(el){\n          var images = el.querySelectorAll(\"img\");\n          for (var i = 0; i < images.length; ++i) {\n              var img = images[i];\n              if (!img.complete) {\n                  pending++;\n                  img.onload = img.onerror = next;\n              }\n          }\n      });\n\n      if (!pending) {\n          next();\n      }\n\n      function next() {\n          if (!done && --pending <= 0) {\n              callback();\n              done = true;\n          }\n      }\n  }\n\n  function cacheImages(elements, callback) {\n      var urls = [];\n      function add(url) {\n          if (!IMAGE_CACHE[url]) {\n              IMAGE_CACHE[url] = true;\n              urls.push(url);\n          }\n      }\n\n      elements.forEach(function dive(element){\n          if (/^img$/i.test(element.tagName)) {\n              add(element.src);\n          }\n          parseBackgroundImage(\n              getPropertyValue(\n                  getComputedStyle$1(element), \"background-image\"\n              )\n          ).forEach(function(bg){\n              if (bg.type == \"url\") {\n                  add(bg.url);\n              }\n          });\n\n          if (element.children) {\n              slice(element.children).forEach(dive);\n          }\n      });\n\n      var count = urls.length;\n      function next() {\n          if (--count <= 0) {\n              // Even though we cached them, they simply won't be available immediately in the newly\n              // created DOM.  Previously we'd allow a 10ms timeout, but that's arbitrary and clearly\n              // not working in all cases (https://github.com/telerik/kendo/issues/5399), so this\n              // function will wait for their .complete attribute.\n              whenImagesAreActuallyLoaded(elements, callback);\n          }\n      }\n      if (count === 0) {\n          next();\n      }\n      urls.forEach(function(url){\n          var img = IMAGE_CACHE[url] = new window.Image();\n          if (!(/^data:/i.test(url))) {\n              img.crossOrigin = \"Anonymous\";\n          }\n          img.src = url;\n          if (img.complete) {\n              next();\n          } else {\n              img.onload = next;\n              img.onerror = function() {\n                  IMAGE_CACHE[url] = null;\n                  next();\n              };\n          }\n      });\n  }\n\n  function alphaNumeral(n) {\n      var result = \"\";\n      do {\n          var r = n % 26;\n          result = String.fromCharCode(97 + r) + result;\n          n = Math.floor(n / 26);\n      } while (n > 0);\n      return result;\n  }\n\n  function pushNodeInfo(element, style, group) {\n      nodeInfo = Object.create(nodeInfo);\n      nodeInfo[element.tagName.toLowerCase()] = {\n          element: element,\n          style: style\n      };\n      var decoration = getPropertyValue(style, \"text-decoration\");\n      if (decoration && decoration != \"none\") {\n          var color = getPropertyValue(style, \"text-decoration-color\");\n          decoration.split(/\\s+/g).forEach(function(name){\n              if (!nodeInfo[name]) {\n                  nodeInfo[name] = color;\n                  if (name == \"underline\") {\n                      var offset = getPropertyValue(style, \"text-underline-offset\");\n                      if (offset != \"auto\") {\n                          nodeInfo[\"underline-offset\"] = parseFloat(offset);\n                      }\n                  }\n              }\n          });\n      }\n\n      if (createsStackingContext(style)) {\n          nodeInfo._stackingContext = {\n              element: element,\n              group: group\n          };\n      }\n  }\n\n  function popNodeInfo() {\n      nodeInfo = Object.getPrototypeOf(nodeInfo);\n  }\n\n  function updateClipbox(path) {\n      if (nodeInfo._clipbox != null) {\n          var box = path.bbox(nodeInfo._matrix);\n          if (nodeInfo._clipbox) {\n              nodeInfo._clipbox = Rect$1.intersect(nodeInfo._clipbox, box);\n          } else {\n              nodeInfo._clipbox = box;\n          }\n      }\n  }\n\n  function emptyClipbox() {\n      var cb = nodeInfo._clipbox;\n      if (cb == null) {\n          return true;\n      }\n      if (cb) {\n          return cb.width() === 0 || cb.height() === 0;\n      }\n  }\n\n  function createsStackingContext(style) {\n      function prop(name) { return getPropertyValue(style, name); }\n      if (prop(\"transform\") != \"none\" ||\n          prop(\"position\") != \"static\" ||\n          prop(\"z-index\") != \"auto\" ||\n          prop(\"opacity\") < 1) {\n          return true;\n      }\n  }\n\n  function getComputedStyle$1(element, pseudoElt) {\n      return window.getComputedStyle(element, pseudoElt || null);\n  }\n\n  function getPropertyValue(style, prop, defa) {\n      var val = style.getPropertyValue(prop);\n      if (val == null || val === \"\") {\n          if (browser.webkit) {\n              val = style.getPropertyValue(\"-webkit-\" + prop );\n          } else if (browser.mozilla) {\n              val = style.getPropertyValue(\"-moz-\" + prop );\n          } else if (browser.opera) {\n              val = style.getPropertyValue(\"-o-\" + prop);\n          } else if (microsoft) {\n              val = style.getPropertyValue(\"-ms-\" + prop);\n          }\n      }\n      if (arguments.length > 2 && (val == null || val === \"\")) {\n          return defa;\n      } else {\n          return val;\n      }\n  }\n\n  function pleaseSetPropertyValue(style, prop, value, important) {\n      style.setProperty(prop, value, important);\n      if (browser.webkit) {\n          style.setProperty(\"-webkit-\" + prop, value, important);\n      } else if (browser.mozilla) {\n          style.setProperty(\"-moz-\" + prop, value, important);\n      } else if (browser.opera) {\n          style.setProperty(\"-o-\" + prop, value, important);\n      } else if (microsoft) {\n          style.setProperty(\"-ms-\" + prop, value, important);\n          prop = \"ms\" + prop.replace(/(^|-)([a-z])/g, function(s, p1, p2){\n              return p1 + p2.toUpperCase();\n          });\n          style[prop] = value;\n      }\n  }\n\n  function getBorder(style, side) {\n      side = \"border-\" + side;\n      return {\n          width: parseFloat(getPropertyValue(style, side + \"-width\")),\n          style: getPropertyValue(style, side + \"-style\"),\n          color: parseColor(getPropertyValue(style, side + \"-color\"), true)\n      };\n  }\n\n  function saveStyle(element, func) {\n      var prev = element.style.cssText;\n      var result = func();\n      setStyle(element, prev);\n      return result;\n  }\n\n  function getBorderRadius(style, side) {\n      var r = getPropertyValue(style, \"border-\" + side + \"-radius\").split(/\\s+/g).map(parseFloat);\n      if (r.length == 1) {\n          r.push(r[0]);\n      }\n      return sanitizeRadius({ x: r[0], y: r[1] });\n  }\n\n  function getContentBox(element) {\n      var box = element.getBoundingClientRect();\n      box = innerBox(box, \"border-*-width\", element);\n      box = innerBox(box, \"padding-*\", element);\n      return box;\n  }\n\n  function innerBox(box, prop, element) {\n      var style, wt, wr, wb, wl;\n      if (typeof prop == \"string\") {\n          style = getComputedStyle$1(element);\n          wt = parseFloat(getPropertyValue(style, prop.replace(\"*\", \"top\")));\n          wr = parseFloat(getPropertyValue(style, prop.replace(\"*\", \"right\")));\n          wb = parseFloat(getPropertyValue(style, prop.replace(\"*\", \"bottom\")));\n          wl = parseFloat(getPropertyValue(style, prop.replace(\"*\", \"left\")));\n      }\n      else if (typeof prop == \"number\") {\n          wt = wr = wb = wl = prop;\n      }\n      return {\n          top    : box.top + wt,\n          right  : box.right - wr,\n          bottom : box.bottom - wb,\n          left   : box.left + wl,\n          width  : box.right - box.left - wr - wl,\n          height : box.bottom - box.top - wb - wt\n      };\n  }\n\n  function getTransform(style) {\n      var transform = getPropertyValue(style, \"transform\");\n      if (transform == \"none\") {\n          return null;\n      }\n      var matrix = /^\\s*matrix\\(\\s*(.*?)\\s*\\)\\s*$/.exec(transform);\n      if (matrix) {\n          var origin = getPropertyValue(style, \"transform-origin\");\n          matrix = matrix[1].split(/\\s*,\\s*/g).map(parseFloat);\n          origin = origin.split(/\\s+/g).map(parseFloat);\n          return {\n              matrix: matrix,\n              origin: origin\n          };\n      }\n  }\n\n  function radiansToDegrees(radians) {\n      return ((180 * radians) / Math.PI) % 360;\n  }\n\n  function parseAngle(angle) {\n      var num = parseFloat(angle);\n      if (/grad$/.test(angle)) {\n          return Math.PI * num / 200;\n      }\n      else if (/rad$/.test(angle)) {\n          return num;\n      }\n      else if (/turn$/.test(angle)) {\n          return Math.PI * num * 2;\n      }\n      else if (/deg$/.test(angle)) {\n          return Math.PI * num / 180;\n      }\n  }\n\n  function setTransform(shape, m) {\n      m = new Matrix(m[0], m[1], m[2], m[3], m[4], m[5]);\n      shape.transform(m);\n      return m;\n  }\n\n  function setClipping(shape, clipPath) {\n      shape.clip(clipPath);\n  }\n\n  function addArcToPath(path, x, y, options) {\n      var points = new Arc$1([ x, y ], options).curvePoints(), i = 1;\n      while (i < points.length) {\n          path.curveTo(points[i++], points[i++], points[i++]);\n      }\n  }\n\n  function sanitizeRadius(r) {\n      if (r.x <= 0 || r.y <= 0) {\n          r.x = r.y = 0;\n      }\n      return r;\n  }\n\n  function adjustBorderRadiusForBox(box, rTL, rTR, rBR, rBL) {\n      // adjust border radiuses such that the sum of adjacent\n      // radiuses is not bigger than the length of the side.\n      // seems the correct algorithm is variant (3) from here:\n      // http://www.w3.org/Style/CSS/Tracker/issues/29?changelog\n      var tl_x = Math.max(0, rTL.x), tl_y = Math.max(0, rTL.y);\n      var tr_x = Math.max(0, rTR.x), tr_y = Math.max(0, rTR.y);\n      var br_x = Math.max(0, rBR.x), br_y = Math.max(0, rBR.y);\n      var bl_x = Math.max(0, rBL.x), bl_y = Math.max(0, rBL.y);\n\n      var f = Math.min(\n          box.width / (tl_x + tr_x),\n          box.height / (tr_y + br_y),\n          box.width / (br_x + bl_x),\n          box.height / (bl_y + tl_y)\n      );\n\n      if (f < 1) {\n          tl_x *= f; tl_y *= f;\n          tr_x *= f; tr_y *= f;\n          br_x *= f; br_y *= f;\n          bl_x *= f; bl_y *= f;\n      }\n\n      return {\n          tl: { x: tl_x, y: tl_y },\n          tr: { x: tr_x, y: tr_y },\n          br: { x: br_x, y: br_y },\n          bl: { x: bl_x, y: bl_y }\n      };\n  }\n\n  function elementRoundBox(element, box, type) {\n      var style = getComputedStyle$1(element);\n\n      var rTL = getBorderRadius(style, \"top-left\");\n      var rTR = getBorderRadius(style, \"top-right\");\n      var rBL = getBorderRadius(style, \"bottom-left\");\n      var rBR = getBorderRadius(style, \"bottom-right\");\n\n      if (type == \"padding\" || type == \"content\") {\n          var bt = getBorder(style, \"top\");\n          var br = getBorder(style, \"right\");\n          var bb = getBorder(style, \"bottom\");\n          var bl = getBorder(style, \"left\");\n          rTL.x -= bl.width; rTL.y -= bt.width;\n          rTR.x -= br.width; rTR.y -= bt.width;\n          rBR.x -= br.width; rBR.y -= bb.width;\n          rBL.x -= bl.width; rBL.y -= bb.width;\n          if (type == \"content\") {\n              var pt = parseFloat(getPropertyValue(style, \"padding-top\"));\n              var pr = parseFloat(getPropertyValue(style, \"padding-right\"));\n              var pb = parseFloat(getPropertyValue(style, \"padding-bottom\"));\n              var pl = parseFloat(getPropertyValue(style, \"padding-left\"));\n              rTL.x -= pl; rTL.y -= pt;\n              rTR.x -= pr; rTR.y -= pt;\n              rBR.x -= pr; rBR.y -= pb;\n              rBL.x -= pl; rBL.y -= pb;\n          }\n      }\n\n      if (typeof type == \"number\") {\n          rTL.x -= type; rTL.y -= type;\n          rTR.x -= type; rTR.y -= type;\n          rBR.x -= type; rBR.y -= type;\n          rBL.x -= type; rBL.y -= type;\n      }\n\n      return roundBox(box, rTL, rTR, rBR, rBL);\n  }\n\n  // Create a drawing.Path for a rounded rectangle.  Receives the\n  // bounding box and the border-radiuses in CSS order (top-left,\n  // top-right, bottom-right, bottom-left).  The radiuses must be\n  // objects containing x (horiz. radius) and y (vertical radius).\n  function roundBox(box, rTL0, rTR0, rBR0, rBL0) {\n      var tmp = adjustBorderRadiusForBox(box, rTL0, rTR0, rBR0, rBL0);\n      var rTL = tmp.tl;\n      var rTR = tmp.tr;\n      var rBR = tmp.br;\n      var rBL = tmp.bl;\n      var path = new Path$1({ fill: null, stroke: null });\n      path.moveTo(box.left, box.top + rTL.y);\n      if (rTL.x) {\n          addArcToPath(path, box.left + rTL.x, box.top + rTL.y, {\n              startAngle: -180,\n              endAngle: -90,\n              radiusX: rTL.x,\n              radiusY: rTL.y\n          });\n      }\n      path.lineTo(box.right - rTR.x, box.top);\n      if (rTR.x) {\n          addArcToPath(path, box.right - rTR.x, box.top + rTR.y, {\n              startAngle: -90,\n              endAngle: 0,\n              radiusX: rTR.x,\n              radiusY: rTR.y\n          });\n      }\n      path.lineTo(box.right, box.bottom - rBR.y);\n      if (rBR.x) {\n          addArcToPath(path, box.right - rBR.x, box.bottom - rBR.y, {\n              startAngle: 0,\n              endAngle: 90,\n              radiusX: rBR.x,\n              radiusY: rBR.y\n          });\n      }\n      path.lineTo(box.left + rBL.x, box.bottom);\n      if (rBL.x) {\n          addArcToPath(path, box.left + rBL.x, box.bottom - rBL.y, {\n              startAngle: 90,\n              endAngle: 180,\n              radiusX: rBL.x,\n              radiusY: rBL.y\n          });\n      }\n      return path.close();\n  }\n\n  function formatCounter(val, style) {\n      var str = String(parseFloat(val));\n      switch (style) {\n        case \"decimal-leading-zero\":\n          if (str.length < 2) {\n              str = \"0\" + str;\n          }\n          return str;\n        case \"lower-roman\":\n          return arabicToRoman(val).toLowerCase();\n        case \"upper-roman\":\n          return arabicToRoman(val).toUpperCase();\n        case \"lower-latin\":\n        case \"lower-alpha\":\n          return alphaNumeral(val - 1);\n        case \"upper-latin\":\n        case \"upper-alpha\":\n          return alphaNumeral(val - 1).toUpperCase();\n        default:\n          return str;\n      }\n  }\n\n  function evalPseudoElementContent(element, content) {\n      function displayCounter(name, style, separator) {\n          if (!separator) {\n              return formatCounter(getCounter(name) || 0, style);\n          }\n          separator = separator.replace(/^\\s*([\"'])(.*)\\1\\s*$/, \"$2\");\n          return getAllCounters(name).map(function(val){\n              return formatCounter(val, style);\n          }).join(separator);\n      }\n      var a = splitProperty(content, /^\\s+/);\n      var result = [], m;\n      a.forEach(function(el){\n          var tmp;\n          if ((m = /^\\s*([\"'])(.*)\\1\\s*$/.exec(el))) {\n              result.push(m[2].replace(/\\\\([0-9a-f]{4})/gi, function(s, p){\n                  return String.fromCharCode(parseInt(p, 16));\n              }));\n          }\n          else if ((m = /^\\s*counter\\((.*?)\\)\\s*$/.exec(el))) {\n              tmp = splitProperty(m[1]);\n              result.push(displayCounter(tmp[0], tmp[1]));\n          }\n          else if ((m = /^\\s*counters\\((.*?)\\)\\s*$/.exec(el))) {\n              tmp = splitProperty(m[1]);\n              result.push(displayCounter(tmp[0], tmp[2], tmp[1]));\n          }\n          else if ((m = /^\\s*attr\\((.*?)\\)\\s*$/.exec(el))) {\n              result.push(element.getAttribute(m[1]) || \"\");\n          }\n          else {\n              result.push(el);\n          }\n      });\n      return result.join(\"\");\n  }\n\n  function getCssText(style) {\n      if (style.cssText) {\n          return style.cssText;\n      }\n      // Status: NEW.  Report year: 2002.  Current year: 2014.\n      // Nice played, Mozillians.\n      // https://bugzilla.mozilla.org/show_bug.cgi?id=137687\n      var result = [];\n      for (var i = 0; i < style.length; ++i) {\n          result.push(style[i] + \": \" + getPropertyValue(style, style[i]));\n      }\n      return result.join(\";\\n\");\n  }\n\n  function _renderWithPseudoElements(element, group) {\n      if (element.tagName == KENDO_PSEUDO_ELEMENT) {\n          _renderElement(element, group);\n          return;\n      }\n      var fake = [];\n      function pseudo(kind, place) {\n          var style = getComputedStyle$1(element, kind), content = style.content;\n          updateCounters(style);\n          if (content && content != \"normal\" && content != \"none\" && style.width != \"0px\") {\n              var psel = element.ownerDocument.createElement(KENDO_PSEUDO_ELEMENT);\n              setStyle(psel, getCssText(style));\n              psel.textContent = evalPseudoElementContent(element, content);\n              element.insertBefore(psel, place);\n              fake.push(psel);\n          }\n      }\n      pseudo(\":before\", element.firstChild);\n      pseudo(\":after\", null);\n      if (fake.length > 0) {\n          var saveClass = element.className;\n          element.className += \" kendo-pdf-hide-pseudo-elements\";\n          _renderElement(element, group);\n          element.className = saveClass;\n          fake.forEach(function(el){ element.removeChild(el); });\n      } else {\n          _renderElement(element, group);\n      }\n  }\n\n  function _renderElement(element, group) {\n      var style = getComputedStyle$1(element);\n\n      var top = getBorder(style, \"top\");\n      var right = getBorder(style, \"right\");\n      var bottom = getBorder(style, \"bottom\");\n      var left = getBorder(style, \"left\");\n\n      var rTL0 = getBorderRadius(style, \"top-left\");\n      var rTR0 = getBorderRadius(style, \"top-right\");\n      var rBL0 = getBorderRadius(style, \"bottom-left\");\n      var rBR0 = getBorderRadius(style, \"bottom-right\");\n\n      var dir = getPropertyValue(style, \"direction\");\n\n      var backgroundColor = getPropertyValue(style, \"background-color\");\n      backgroundColor = parseColor(backgroundColor);\n\n      var backgroundImage = parseBackgroundImage( getPropertyValue(style, \"background-image\") );\n      var backgroundRepeat = splitProperty( getPropertyValue(style, \"background-repeat\") );\n      var backgroundPosition = splitProperty( getPropertyValue(style, \"background-position\") );\n      var backgroundOrigin = splitProperty( getPropertyValue(style, \"background-origin\") );\n      var backgroundSize = splitProperty( getPropertyValue(style, \"background-size\") );\n\n      // IE shrinks the text with text-overflow: ellipsis,\n      // apparently because the returned bounding box for the range\n      // is limited to the visible area minus space for the dots,\n      // instead of being the full width of the text.\n      //\n      // https://github.com/telerik/kendo/issues/5232\n      // https://github.com/telerik/kendo-ui-core/issues/1868\n      //\n      // We have to test it here rather than in renderText because\n      // text-overflow: ellipsis could be set on a parent element (not\n      // necessarily the one containing the text); in this case,\n      // getComputedStyle(elementWithTheText) will return \"clip\", not\n      // \"ellipsis\" (which is probably a bug, but oh well...)\n      var textOverflow, saveTextOverflow;\n      if (microsoft) {\n          textOverflow = style.textOverflow;             // computed style\n          if (textOverflow == \"ellipsis\") {\n              saveTextOverflow = element.style.textOverflow; // own style.\n              element.style.textOverflow = \"clip\";\n          }\n      }\n\n      if (browser.msie && browser.version < 10) {\n          // IE9 hacks.  getPropertyValue won't return the correct\n          // value.  Sucks that we have to do it here, I'd prefer to\n          // move it in getPropertyValue, but we don't have the\n          // element.\n          backgroundPosition = splitProperty(element.currentStyle.backgroundPosition);\n      }\n\n      var innerbox = innerBox(element.getBoundingClientRect(), \"border-*-width\", element);\n\n      // CSS \"clip\" property - if present, replace the group with a\n      // new one which is clipped.  This must happen before drawing\n      // the borders and background.\n      (function(){\n          var clip = getPropertyValue(style, \"clip\");\n          var m = /^\\s*rect\\((.*)\\)\\s*$/.exec(clip);\n          if (m) {\n              var a = m[1].split(/[ ,]+/g);\n              var top = a[0] == \"auto\" ? innerbox.top : parseFloat(a[0]) + innerbox.top;\n              var right = a[1] == \"auto\" ? innerbox.right : parseFloat(a[1]) + innerbox.left;\n              var bottom = a[2] == \"auto\" ? innerbox.bottom : parseFloat(a[2]) + innerbox.top;\n              var left = a[3] == \"auto\" ? innerbox.left : parseFloat(a[3]) + innerbox.left;\n              var tmp = new Group$1();\n              var clipPath = new Path$1()\n                  .moveTo(left, top)\n                  .lineTo(right, top)\n                  .lineTo(right, bottom)\n                  .lineTo(left, bottom)\n                  .close();\n              setClipping(tmp, clipPath);\n              group.append(tmp);\n              group = tmp;\n              updateClipbox(clipPath);\n          }\n      })();\n\n      var boxes, i, cells;\n      var display = getPropertyValue(style, \"display\");\n\n      if (display == \"table-row\") {\n          // because of rowspan/colspan, we shouldn't draw background of table row elements on the\n          // box given by its getBoundingClientRect, because if we do we risk overwritting a\n          // previously rendered cell.  https://github.com/telerik/kendo/issues/4881\n          boxes = [];\n          for (i = 0, cells = element.children; i < cells.length; ++i) {\n              boxes.push(cells[i].getBoundingClientRect());\n          }\n      } else {\n          boxes = element.getClientRects();\n          if (boxes.length == 1) {\n              // Workaround the missing borders in Chrome!  getClientRects() boxes contains values\n              // rounded to integer.  getBoundingClientRect() appears to work fine.  We still need\n              // getClientRects() to support cases where there are more boxes (continued inline\n              // elements that might have border/background).\n              boxes = [ element.getBoundingClientRect() ];\n          }\n      }\n\n      // This function workarounds another Chrome bug, where boxes returned for a table with\n      // border-collapse: collapse will overlap the table border.  Our rendering is not perfect in\n      // such case anyway, but with this is better than without it.\n      boxes = adjustBoxes(boxes);\n\n      for (i = 0; i < boxes.length; ++i) {\n          drawOneBox(boxes[i], i === 0, i == boxes.length - 1);\n      }\n\n      // Render links as separate groups.  We can't use boxes returned by element's getClientRects\n      // because if display type is \"inline\" (default for <a>), boxes will not include the height of\n      // images inside.  https://github.com/telerik/kendo-ui-core/issues/3359\n      if (element.tagName == \"A\" && element.href && !/^#?$/.test(element.getAttribute(\"href\"))) {\n          if (!nodeInfo._avoidLinks || !matches(element, nodeInfo._avoidLinks)) {\n              var r = document.createRange();\n              r.selectNodeContents(element);\n              slice(r.getClientRects()).forEach(function(box){\n                  var g = new Group$1();\n                  g._pdfLink = {\n                      url    : element.href,\n                      top    : box.top,\n                      right  : box.right,\n                      bottom : box.bottom,\n                      left   : box.left\n                  };\n                  group.append(g);\n              });\n          }\n      }\n\n      if (boxes.length > 0 && display == \"list-item\" && !element.getAttribute(\"kendo-no-bullet\")) {\n          drawBullet(boxes[0]);\n      }\n\n      // overflow: hidden/auto - if present, replace the group with\n      // a new one clipped by the inner box.\n      (function(){\n          function clipit() {\n              var clipPath = elementRoundBox(element, innerbox, \"padding\");\n              var tmp = new Group$1();\n              setClipping(tmp, clipPath);\n              group.append(tmp);\n              group = tmp;\n              updateClipbox(clipPath);\n          }\n          if (isFormField(element)) {\n              clipit();\n          } else if (/^(hidden|auto|scroll)/.test(getPropertyValue(style, \"overflow\"))) {\n              clipit();\n          } else if (/^(hidden|auto|scroll)/.test(getPropertyValue(style, \"overflow-x\"))) {\n              clipit();\n          } else if (/^(hidden|auto|scroll)/.test(getPropertyValue(style, \"overflow-y\"))) {\n              clipit();\n          }\n      })();\n\n      if (!maybeRenderWidget(element, group) && !maybeRenderBullet(element, group)) {\n          renderContents(element, group);\n      }\n\n      if (microsoft && textOverflow == \"ellipsis\") {\n          element.style.textOverflow = saveTextOverflow;\n      }\n\n      return group; // only utility functions after this line.\n\n      function adjustBoxes(boxes) {\n          if (/^td$/i.test(element.tagName)) {\n              var table = nodeInfo.table;\n              if (table && getPropertyValue(table.style, \"border-collapse\") == \"collapse\") {\n                  var tableBorderLeft = getBorder(table.style, \"left\").width;\n                  var tableBorderTop = getBorder(table.style, \"top\").width;\n                  // check if we need to adjust\n                  if (tableBorderLeft === 0 && tableBorderTop === 0) {\n                      return boxes; // nope\n                  }\n                  var tableBox = table.element.getBoundingClientRect();\n                  var firstCell = table.element.rows[0].cells[0];\n                  var firstCellBox = firstCell.getBoundingClientRect();\n                  if (firstCellBox.top == tableBox.top || firstCellBox.left == tableBox.left) {\n                      return slice(boxes).map(function(box){\n                          return {\n                              left   : box.left + tableBorderLeft,\n                              top    : box.top + tableBorderTop,\n                              right  : box.right + tableBorderLeft,\n                              bottom : box.bottom + tableBorderTop,\n                              height : box.height,\n                              width  : box.width\n                          };\n                      });\n                  }\n              }\n          }\n          return boxes;\n      }\n\n      // this function will be called to draw each border.  it\n      // draws starting at origin and the resulted path must be\n      // translated/rotated to be placed in the proper position.\n      //\n      // arguments are named as if it draws the top border:\n      //\n      //    - `len` the length of the edge\n      //    - `Wtop` the width of the edge (i.e. border-top-width)\n      //    - `Wleft` the width of the left edge (border-left-width)\n      //    - `Wright` the width of the right edge\n      //    - `rl` and `rl` -- the border radius on the left and right\n      //      (objects containing x and y, for horiz/vertical radius)\n      //    - `transform` -- transformation to apply\n      //\n      function drawEdge(color, len, Wtop, Wleft, Wright, rl, rr, transform) {\n          if (Wtop <= 0) {\n              return;\n          }\n\n          var path, edge = new Group$1();\n          setTransform(edge, transform);\n          group.append(edge);\n\n          sanitizeRadius(rl);\n          sanitizeRadius(rr);\n\n          // draw main border.  this is the area without the rounded corners\n          path = new Path$1({\n              fill: { color: color },\n              stroke: null\n          });\n          edge.append(path);\n          path.moveTo(rl.x ? Math.max(rl.x, Wleft) : 0, 0)\n              .lineTo(len - (rr.x ? Math.max(rr.x, Wright) : 0), 0)\n              .lineTo(len - Math.max(rr.x, Wright), Wtop)\n              .lineTo(Math.max(rl.x, Wleft), Wtop)\n              .close();\n\n          if (rl.x) {\n              drawRoundCorner(Wleft, rl, [ -1, 0, 0, 1, rl.x, 0 ]);\n          }\n\n          if (rr.x) {\n              drawRoundCorner(Wright, rr, [ 1, 0, 0, 1, len - rr.x, 0 ]);\n          }\n\n          // draws one round corner, starting at origin (needs to be\n          // translated/rotated to be placed properly).\n          function drawRoundCorner(Wright, r, transform) {\n              var angle = Math.PI/2 * Wright / (Wright + Wtop);\n\n              // not sanitizing this one, because negative values\n              // are useful to fill the box correctly.\n              var ri = {\n                  x: r.x - Wright,\n                  y: r.y - Wtop\n              };\n\n              var path = new Path$1({\n                  fill: { color: color },\n                  stroke: null\n              }).moveTo(0, 0);\n\n              setTransform(path, transform);\n\n              addArcToPath(path, 0, r.y, {\n                  startAngle: -90,\n                  endAngle: -radiansToDegrees(angle),\n                  radiusX: r.x,\n                  radiusY: r.y\n              });\n\n              if (ri.x > 0 && ri.y > 0) {\n                  path.lineTo(ri.x * Math.cos(angle), r.y - ri.y * Math.sin(angle));\n                  addArcToPath(path, 0, r.y, {\n                      startAngle: -radiansToDegrees(angle),\n                      endAngle: -90,\n                      radiusX: ri.x,\n                      radiusY: ri.y,\n                      anticlockwise: true\n                  });\n              }\n              else if (ri.x > 0) {\n                  path.lineTo(ri.x, Wtop)\n                      .lineTo(0, Wtop);\n              }\n              else {\n                  path.lineTo(ri.x, Wtop)\n                      .lineTo(ri.x, 0);\n              }\n\n              edge.append(path.close());\n          }\n      }\n\n      function drawBackground(box) {\n          var background = new Group$1();\n          setClipping(background, roundBox(box, rTL0, rTR0, rBR0, rBL0));\n          group.append(background);\n\n          if (backgroundColor) {\n              var path = new Path$1({\n                  fill: { color: backgroundColor.toCssRgba() },\n                  stroke: null\n              });\n              path.moveTo(box.left, box.top)\n                  .lineTo(box.right, box.top)\n                  .lineTo(box.right, box.bottom)\n                  .lineTo(box.left, box.bottom)\n                  .close();\n              background.append(path);\n          }\n\n          for (var i = backgroundImage.length; --i >= 0;) {\n              drawOneBackground(\n                  background, box,\n                  backgroundImage[i],\n                  backgroundRepeat[i % backgroundRepeat.length],\n                  backgroundPosition[i % backgroundPosition.length],\n                  backgroundOrigin[i % backgroundOrigin.length],\n                  backgroundSize[i % backgroundSize.length]\n              );\n          }\n      }\n\n      function drawOneBackground(group, box, background, backgroundRepeat, backgroundPosition, backgroundOrigin, backgroundSize) {\n          if (!background || (background == \"none\")) {\n              return;\n          }\n\n          if (background.type == \"url\") {\n              var img = IMAGE_CACHE[background.url];\n              if (img && img.width > 0 && img.height > 0) {\n                  drawBackgroundImage(group, box, img.width, img.height, function(group, rect){\n                      group.append(new Image$1(background.url, rect));\n                  });\n              }\n          } else if (background.type == \"linear\") {\n              drawBackgroundImage(group, box, box.width, box.height, gradientRenderer(background));\n          } else {\n              return;\n          }\n\n          function drawBackgroundImage(group, box, img_width, img_height, renderBG) {\n              var aspect_ratio = img_width / img_height, f;\n\n              // for background-origin: border-box the box is already appropriate\n              var orgBox = box;\n              if (backgroundOrigin == \"content-box\") {\n                  orgBox = innerBox(orgBox, \"border-*-width\", element);\n                  orgBox = innerBox(orgBox, \"padding-*\", element);\n              } else if (backgroundOrigin == \"padding-box\") {\n                  orgBox = innerBox(orgBox, \"border-*-width\", element);\n              }\n\n              if (!/^\\s*auto(\\s+auto)?\\s*$/.test(backgroundSize)) {\n                  if (backgroundSize == \"contain\") {\n                      f = Math.min(orgBox.width / img_width,\n                                   orgBox.height / img_height);\n                      img_width *= f;\n                      img_height *= f;\n                  }\n                  else if (backgroundSize == \"cover\") {\n                      f = Math.max(orgBox.width / img_width,\n                                   orgBox.height / img_height);\n                      img_width *= f;\n                      img_height *= f;\n                  }\n                  else {\n                      var size = backgroundSize.split(/\\s+/g);\n                      // compute width\n                      if (/%$/.test(size[0])) {\n                          img_width = orgBox.width * parseFloat(size[0]) / 100;\n                      } else {\n                          img_width = parseFloat(size[0]);\n                      }\n                      // compute height\n                      if (size.length == 1 || size[1] == \"auto\") {\n                          img_height = img_width / aspect_ratio;\n                      } else if (/%$/.test(size[1])) {\n                          img_height = orgBox.height * parseFloat(size[1]) / 100;\n                      } else {\n                          img_height = parseFloat(size[1]);\n                      }\n                  }\n              }\n\n              var pos = String(backgroundPosition);\n\n              // IE sometimes reports single-word positions\n              // https://github.com/telerik/kendo-ui-core/issues/2786\n              //\n              // it seems to switch to percentages when the horizontal\n              // position is not \"center\", therefore we don't handle\n              // multi-word cases here.  All other browsers return\n              // percentages or pixels instead of keywords.  At least\n              // for now...\n              switch (pos) {\n                case \"bottom\" : pos = \"50% 100%\"; break;\n                case \"top\"    : pos = \"50% 0\"; break;\n                case \"left\"   : pos = \"0 50%\"; break;\n                case \"right\"  : pos = \"100% 50%\"; break;\n                case \"center\" : pos = \"50% 50%\"; break;\n              }\n\n              pos = pos.split(/\\s+/);\n              if (pos.length == 1) {\n                  pos[1] = \"50%\";\n              }\n\n              if (/%$/.test(pos[0])) {\n                  pos[0] = parseFloat(pos[0]) / 100 * (orgBox.width - img_width);\n              } else {\n                  pos[0] = parseFloat(pos[0]);\n              }\n              if (/%$/.test(pos[1])) {\n                  pos[1] = parseFloat(pos[1]) / 100 * (orgBox.height - img_height);\n              } else {\n                  pos[1] = parseFloat(pos[1]);\n              }\n\n              var rect = new Rect$1([ orgBox.left + pos[0], orgBox.top + pos[1] ], [ img_width, img_height ]);\n\n              // XXX: background-repeat could be implemented more\n              //      efficiently as a fill pattern (at least for PDF\n              //      output, probably SVG too).\n\n              function rewX() {\n                  while (rect.origin.x > box.left) {\n                      rect.origin.x -= img_width;\n                  }\n              }\n\n              function rewY() {\n                  while (rect.origin.y > box.top) {\n                      rect.origin.y -= img_height;\n                  }\n              }\n\n              function repeatX() {\n                  while (rect.origin.x < box.right) {\n                      renderBG(group, rect.clone());\n                      rect.origin.x += img_width;\n                  }\n              }\n\n              if (backgroundRepeat == \"no-repeat\") {\n                  renderBG(group, rect);\n              }\n              else if (backgroundRepeat == \"repeat-x\") {\n                  rewX();\n                  repeatX();\n              }\n              else if (backgroundRepeat == \"repeat-y\") {\n                  rewY();\n                  while (rect.origin.y < box.bottom) {\n                      renderBG(group, rect.clone());\n                      rect.origin.y += img_height;\n                  }\n              }\n              else if (backgroundRepeat == \"repeat\") {\n                  rewX();\n                  rewY();\n                  var origin = rect.origin.clone();\n                  while (rect.origin.y < box.bottom) {\n                      rect.origin.x = origin.x;\n                      repeatX();\n                      rect.origin.y += img_height;\n                  }\n              }\n          }\n      }\n\n      function drawBullet() {\n          var listStyleType = getPropertyValue(style, \"list-style-type\");\n          if (listStyleType == \"none\") {\n              return;\n          }\n          var listStylePosition = getPropertyValue(style, \"list-style-position\");\n\n          function _drawBullet(f) {\n              saveStyle(element, function(){\n                  element.style.position = \"relative\";\n                  var bullet = element.ownerDocument.createElement(KENDO_PSEUDO_ELEMENT);\n                  bullet.style.position = \"absolute\";\n                  bullet.style.boxSizing = \"border-box\";\n                  if (listStylePosition == \"outside\") {\n                      bullet.style.width = \"6em\";\n                      bullet.style.left = \"-6.8em\";\n                      bullet.style.textAlign = \"right\";\n                  } else {\n                      bullet.style.left = \"0px\";\n                  }\n                  f(bullet);\n                  element.insertBefore(bullet, element.firstChild);\n                  renderElement(bullet, group);\n                  element.removeChild(bullet);\n              });\n          }\n\n          function elementIndex(f) {\n              var a = element.parentNode.children;\n              var k = element.getAttribute(\"kendo-split-index\");\n              if (k != null) {\n                  return f(k|0, a.length);\n              }\n              for (var i = 0; i < a.length; ++i) {\n                  if (a[i] === element) {\n                      return f(i, a.length);\n                  }\n              }\n          }\n\n          switch (listStyleType) {\n            case \"circle\":\n            case \"disc\":\n            case \"square\":\n              _drawBullet(function(bullet){\n                  bullet.innerHTML = '&nbsp;';\n                  bullet.setAttribute(KENDO_BULLET_TYPE, listStyleType);\n              });\n              break;\n\n            case \"decimal\":\n            case \"decimal-leading-zero\":\n              _drawBullet(function(bullet){\n                  elementIndex(function(idx){\n                      ++idx;\n                      if (listStyleType == \"decimal-leading-zero\" && idx < 10) {\n                          idx = \"0\" + idx;\n                      }\n                      bullet.innerHTML = idx + \".\";\n                  });\n              });\n              break;\n\n            case \"lower-roman\":\n            case \"upper-roman\":\n              _drawBullet(function(bullet){\n                  elementIndex(function(idx){\n                      idx = arabicToRoman(idx + 1);\n                      if (listStyleType == \"upper-roman\") {\n                          idx = idx.toUpperCase();\n                      }\n                      bullet.innerHTML = idx + \".\";\n                  });\n              });\n              break;\n\n            case \"lower-latin\":\n            case \"lower-alpha\":\n            case \"upper-latin\":\n            case \"upper-alpha\":\n              _drawBullet(function(bullet){\n                  elementIndex(function(idx){\n                      idx = alphaNumeral(idx);\n                      if (/^upper/i.test(listStyleType)) {\n                          idx = idx.toUpperCase();\n                      }\n                      bullet.innerHTML = idx + \".\";\n                  });\n              });\n              break;\n          }\n      }\n\n      // draws a single border box\n      function drawOneBox(box, isFirst, isLast) {\n          if (box.width === 0 || box.height === 0) {\n              return;\n          }\n\n          drawBackground(box);\n\n          var shouldDrawLeft = (left.width > 0 && ((isFirst && dir == \"ltr\") || (isLast && dir == \"rtl\")));\n          var shouldDrawRight = (right.width > 0 && ((isLast && dir == \"ltr\") || (isFirst && dir == \"rtl\")));\n\n          // The most general case is that the 4 borders have different widths and border\n          // radiuses.  The way that is handled is by drawing 3 Paths for each border: the\n          // straight line, and two round corners which represent half of the entire rounded\n          // corner.  To simplify code those shapes are drawed at origin (by the drawEdge\n          // function), then translated/rotated into the right position.\n          //\n          // However, this leads to poor results due to rounding in the simpler cases where\n          // borders are straight lines.  Therefore we handle a few such cases separately with\n          // straight lines. C^wC^wC^w -- nope, scratch that.  poor rendering was because of a bug\n          // in Chrome (getClientRects() returns rounded integer values rather than exact floats.\n          // web dev is still a ghetto.)\n\n          // first, just in case there is no border...\n          if (top.width === 0 && left.width === 0 && right.width === 0 && bottom.width === 0) {\n              return;\n          }\n\n          // START paint borders\n          // if all borders have equal colors...\n          if (top.color == right.color && top.color == bottom.color && top.color == left.color) {\n\n              // if same widths too, we can draw the whole border by stroking a single path.\n              if (top.width == right.width && top.width == bottom.width && top.width == left.width)\n              {\n                  if (shouldDrawLeft && shouldDrawRight) {\n                      // reduce box by half the border width, so we can draw it by stroking.\n                      box = innerBox(box, top.width/2);\n\n                      // adjust the border radiuses, again by top.width/2, and make the path element.\n                      var path = elementRoundBox(element, box, top.width/2);\n                      path.options.stroke = {\n                          color: top.color,\n                          width: top.width\n                      };\n                      group.append(path);\n                      return;\n                  }\n              }\n          }\n\n          // if border radiuses are zero and widths are at most one pixel, we can again use simple\n          // paths.\n          if (rTL0.x === 0 && rTR0.x === 0 && rBR0.x === 0 && rBL0.x === 0) {\n              // alright, 1.9px will do as well.  the difference in color blending should not be\n              // noticeable.\n              if (top.width < 2 && left.width < 2 && right.width < 2 && bottom.width < 2) {\n                  // top border\n                  if (top.width > 0) {\n                      group.append(\n                          new Path$1({\n                              stroke: { width: top.width, color: top.color }\n                          })\n                              .moveTo(box.left, box.top + top.width/2)\n                              .lineTo(box.right, box.top + top.width/2)\n                      );\n                  }\n\n                  // bottom border\n                  if (bottom.width > 0) {\n                      group.append(\n                          new Path$1({\n                              stroke: { width: bottom.width, color: bottom.color }\n                          })\n                              .moveTo(box.left, box.bottom - bottom.width/2)\n                              .lineTo(box.right, box.bottom - bottom.width/2)\n                      );\n                  }\n\n                  // left border\n                  if (shouldDrawLeft) {\n                      group.append(\n                          new Path$1({\n                              stroke: { width: left.width, color: left.color }\n                          })\n                              .moveTo(box.left + left.width/2, box.top)\n                              .lineTo(box.left + left.width/2, box.bottom)\n                      );\n                  }\n\n                  // right border\n                  if (shouldDrawRight) {\n                      group.append(\n                          new Path$1({\n                              stroke: { width: right.width, color: right.color }\n                          })\n                              .moveTo(box.right - right.width/2, box.top)\n                              .lineTo(box.right - right.width/2, box.bottom)\n                      );\n                  }\n\n                  return;\n              }\n          }\n          // END paint borders\n\n          var tmp = adjustBorderRadiusForBox(box, rTL0, rTR0, rBR0, rBL0);\n          var rTL = tmp.tl;\n          var rTR = tmp.tr;\n          var rBR = tmp.br;\n          var rBL = tmp.bl;\n\n          // top border\n          drawEdge(top.color,\n                   box.width, top.width, left.width, right.width,\n                   rTL, rTR,\n                   [ 1, 0, 0, 1, box.left, box.top ]);\n\n          // bottom border\n          drawEdge(bottom.color,\n                   box.width, bottom.width, right.width, left.width,\n                   rBR, rBL,\n                   [ -1, 0, 0, -1, box.right, box.bottom ]);\n\n          // for left/right borders we need to invert the border-radiuses\n          function inv(p) {\n              return { x: p.y, y: p.x };\n          }\n\n          // left border\n          drawEdge(left.color,\n                   box.height, left.width, bottom.width, top.width,\n                   inv(rBL), inv(rTL),\n                   [ 0, -1, 1, 0, box.left, box.bottom ]);\n\n          // right border\n          drawEdge(right.color,\n                   box.height, right.width, top.width, bottom.width,\n                   inv(rTR), inv(rBR),\n                   [ 0, 1, -1, 0, box.right, box.top ]);\n      }\n  }\n\n  function gradientRenderer(gradient) {\n      return function(group, rect) {\n          var width = rect.width(), height = rect.height();\n\n          switch (gradient.type) {\n            case \"linear\":\n\n              // figure out the angle.\n              var angle = gradient.angle != null ? gradient.angle : Math.PI;\n              switch (gradient.to) {\n                case \"top\":\n                  angle = 0;\n                  break;\n                case \"left\":\n                  angle = -Math.PI / 2;\n                  break;\n                case \"bottom\":\n                  angle = Math.PI;\n                  break;\n                case \"right\":\n                  angle = Math.PI / 2;\n                  break;\n                case \"top left\": case \"left top\":\n                  angle = -Math.atan2(height, width);\n                  break;\n                case \"top right\": case \"right top\":\n                  angle = Math.atan2(height, width);\n                  break;\n                case \"bottom left\": case \"left bottom\":\n                  angle = Math.PI + Math.atan2(height, width);\n                  break;\n                case \"bottom right\": case \"right bottom\":\n                  angle = Math.PI - Math.atan2(height, width);\n                  break;\n              }\n\n              if (gradient.reverse) {\n                  angle -= Math.PI;\n              }\n\n              // limit the angle between 0..2PI\n              angle %= 2 * Math.PI;\n              if (angle < 0) {\n                  angle += 2 * Math.PI;\n              }\n\n              // compute gradient's start/end points.  here len is the length of the gradient line\n              // and x,y is the end point relative to the center of the rectangle in conventional\n              // (math) axis direction.\n\n              // this is the original (unscaled) length of the gradient line.  needed to deal with\n              // absolutely positioned color stops.  formula from the CSS spec:\n              // http://dev.w3.org/csswg/css-images-3/#linear-gradient-syntax\n              var pxlen = Math.abs(width * Math.sin(angle)) + Math.abs(height * Math.cos(angle));\n\n              // The math below is pretty simple, but it took a while to figure out.  We compute x\n              // and y, the *end* of the gradient line.  However, we want to transform them into\n              // element-based coordinates (SVG's gradientUnits=\"objectBoundingBox\").  That means,\n              // x=0 is the left edge, x=1 is the right edge, y=0 is the top edge and y=1 is the\n              // bottom edge.\n              //\n              // A naive approach would use the original angle for these calculations.  Say we'd\n              // like to draw a gradient angled at 45deg in a 100x400 box.  When we use\n              // objectBoundingBox, the renderer will draw it in a 1x1 *square* box, and then\n              // scale that to the desired dimensions.  The 45deg angle will look more like 70deg\n              // after scaling.  SVG (http://www.w3.org/TR/SVG/pservers.html#LinearGradients) says\n              // the following:\n              //\n              //     When gradientUnits=\"objectBoundingBox\" and 'gradientTransform' is the\n              //     identity matrix, the normal of the linear gradient is perpendicular to the\n              //     gradient vector in object bounding box space (i.e., the abstract coordinate\n              //     system where (0,0) is at the top/left of the object bounding box and (1,1) is\n              //     at the bottom/right of the object bounding box). When the object's bounding\n              //     box is not square, the gradient normal which is initially perpendicular to\n              //     the gradient vector within object bounding box space may render\n              //     non-perpendicular relative to the gradient vector in user space. If the\n              //     gradient vector is parallel to one of the axes of the bounding box, the\n              //     gradient normal will remain perpendicular. This transformation is due to\n              //     application of the non-uniform scaling transformation from bounding box space\n              //     to user space.\n              //\n              // which is an extremely long and confusing way to tell what I just said above.\n              //\n              // For this reason we need to apply the reverse scaling to the original angle, so\n              // that when it'll finally be rendered it'll actually be at the desired slope.  Now\n              // I'll let you figure out the math yourself.\n\n              var scaledAngle = Math.atan(width * Math.tan(angle) / height);\n              var sin = Math.sin(scaledAngle), cos = Math.cos(scaledAngle);\n              var len = Math.abs(sin) + Math.abs(cos);\n              var x = len/2 * sin;\n              var y = len/2 * cos;\n\n              // Because of the arctangent, our scaledAngle ends up between -PI/2..PI/2, possibly\n              // losing the intended direction of the gradient.  The following fixes it.\n              if (angle > Math.PI/2 && angle <= 3*Math.PI/2) {\n                  x = -x;\n                  y = -y;\n              }\n\n              // compute the color stops.\n              var implicit = [], right = 0;\n              var stops = gradient.stops.map(function(s, i){\n                  var offset = s.percent;\n                  if (offset) {\n                      offset = parseFloat(offset) / 100;\n                  } else if (s.length) {\n                      offset = parseFloat(s.length) / pxlen;\n                  } else if (i === 0) {\n                      offset = 0;\n                  } else if (i == gradient.stops.length - 1) {\n                      offset = 1;\n                  }\n                  var stop = {\n                      color: s.color.toCssRgba(),\n                      offset: offset\n                  };\n                  if (offset != null) {\n                      right = offset;\n                      // fix implicit offsets\n                      implicit.forEach(function(s, i){\n                          var stop = s.stop;\n                          stop.offset = s.left + (right - s.left) * (i + 1) / (implicit.length + 1);\n                      });\n                      implicit = [];\n                  } else {\n                      implicit.push({ left: right, stop: stop });\n                  }\n                  return stop;\n              });\n\n              var start = [ 0.5 - x, 0.5 + y ];\n              var end = [ 0.5 + x, 0.5 - y ];\n\n              // finally, draw it.\n              group.append(\n                  Path$1.fromRect(rect)\n                      .stroke(null)\n                      .fill(new LinearGradient({\n                          start     : start,\n                          end       : end,\n                          stops     : stops,\n                          userSpace : false\n                      }))\n              );\n              break;\n            case \"radial\":\n              // XXX:\n              if (window.console && window.console.log) {\n                  window.console.log(\"Radial gradients are not yet supported in HTML renderer\");\n              }\n              break;\n          }\n      };\n  }\n\n  function maybeRenderWidget(element, group) {\n      var visual;\n      if (element._kendoExportVisual) {\n          var rect = element.getBoundingClientRect();\n          var size = {\n              width: rect.width,\n              height: rect.height\n          };\n          visual = element._kendoExportVisual(size);\n      } else if (window.kendo && window.kendo.jQuery && element.getAttribute(window.kendo.attr(\"role\"))) {\n          var widget = window.kendo.widgetInstance(window.kendo.jQuery(element));\n          if (widget && (widget.exportDOMVisual || widget.exportVisual)) {\n              if (widget.exportDOMVisual) {\n                  visual = widget.exportDOMVisual();\n              } else {\n                  visual = widget.exportVisual();\n              }\n          }\n      }\n\n      if (!visual) {\n          return false;\n      }\n\n      var wrap = new Group$1();\n      wrap.children.push(visual);\n\n      var bbox = element.getBoundingClientRect();\n      wrap.transform(transform().translate(bbox.left, bbox.top));\n\n      group.append(wrap);\n\n      return true;\n  }\n\n  function maybeRenderBullet(element, group) {\n      var bulletType = element.getAttribute(KENDO_BULLET_TYPE);\n\n      if (!bulletType) {\n          return false;\n      }\n\n      var box = element.getBoundingClientRect();\n      var color = getComputedStyle$1(element).color;\n\n      if (bulletType === 'square') {\n          var rectSize = box.height / 5;\n          group.append(new Rect(new Rect$1([\n              box.right - rectSize,\n              box.top + box.height / 2.1\n          ], [rectSize, rectSize])).fill(color).stroke(color));\n      } else {\n          var radius = box.height / 7;\n          var center = [\n              box.right - radius,\n              box.top + (box.height + radius) / 2\n          ];\n          var circle = new Circle$1(new Circle$2(center, radius));\n          if (bulletType === 'circle') {\n              circle.stroke(color, 0.5);\n          } else {\n              circle.fill(color).stroke(null);\n          }\n          group.append(circle);\n      }\n\n      return true;\n  }\n\n  function renderImage(element, url, group) {\n      var box = getContentBox(element);\n      var rect = new Rect$1([ box.left, box.top ], [ box.width, box.height ]);\n      var image = new Image$1(url, rect);\n      setClipping(image, elementRoundBox(element, box, \"content\"));\n      group.append(image);\n  }\n\n  function zIndexSort(a, b) {\n      var sa = getComputedStyle$1(a);\n      var sb = getComputedStyle$1(b);\n      var za = parseFloat(getPropertyValue(sa, \"z-index\"));\n      var zb = parseFloat(getPropertyValue(sb, \"z-index\"));\n      var pa = getPropertyValue(sa, \"position\");\n      var pb = getPropertyValue(sb, \"position\");\n      if (isNaN(za) && isNaN(zb)) {\n          if ((/static|absolute/.test(pa)) && (/static|absolute/.test(pb))) {\n              return 0;\n          }\n          if (pa == \"static\") {\n              return -1;\n          }\n          if (pb == \"static\") {\n              return 1;\n          }\n          return 0;\n      }\n      if (isNaN(za)) {\n          return zb === 0 ? 0 : zb > 0 ? -1 : 1;\n      }\n      if (isNaN(zb)) {\n          return za === 0 ? 0 : za > 0 ? 1 : -1;\n      }\n      return parseFloat(za) - parseFloat(zb);\n  }\n\n  function isFormField(element) {\n      return /^(?:textarea|select|input)$/i.test(element.tagName);\n  }\n\n  function getSelectedOption(element) {\n      if (element.selectedOptions && element.selectedOptions.length > 0) {\n          return element.selectedOptions[0];\n      }\n      return element.options[element.selectedIndex];\n  }\n\n  function renderCheckbox(element, group) {\n      var style = getComputedStyle$1(element);\n      var color = getPropertyValue(style, \"color\");\n      var box = element.getBoundingClientRect();\n      if (element.type == \"checkbox\") {\n          group.append(\n              Path$1.fromRect(\n                  new Rect$1([ box.left+1, box.top+1 ],\n                               [ box.width-2, box.height-2 ])\n              ).stroke(color, 1)\n          );\n          if (element.checked) {\n              // fill a rectangle inside?  looks kinda ugly.\n              // group.append(\n              //     Path.fromRect(\n              //         new geo.Rect([ box.left+4, box.top+4 ],\n              //                      [ box.width-8, box.height-8])\n              //     ).fill(color).stroke(null)\n              // );\n\n              // let's draw a checkmark instead.  artistic, eh?\n              group.append(\n                  new Path$1()\n                      .stroke(color, 1.2)\n                      .moveTo(box.left + 0.22 * box.width,\n                              box.top + 0.55 * box.height)\n                      .lineTo(box.left + 0.45 * box.width,\n                              box.top + 0.75 * box.height)\n                      .lineTo(box.left + 0.78 * box.width,\n                              box.top + 0.22 * box.width)\n              );\n          }\n      } else {\n          group.append(\n              new Circle$1(\n                  new Circle$2([\n                      (box.left + box.right) / 2,\n                      (box.top + box.bottom) / 2\n                  ], Math.min(box.width-2, box.height-2) / 2)\n              ).stroke(color, 1)\n          );\n          if (element.checked) {\n              group.append(\n                  new Circle$1(\n                      new Circle$2([\n                          (box.left + box.right) / 2,\n                          (box.top + box.bottom) / 2\n                      ], Math.min(box.width-8, box.height-8) / 2)\n                  ).fill(color).stroke(null)\n              );\n          }\n      }\n  }\n\n  function renderFormField(element, group) {\n      var tag = element.tagName.toLowerCase();\n      if (tag == \"input\" && (element.type == \"checkbox\" || element.type == \"radio\")) {\n          return renderCheckbox(element, group);\n      }\n      var p = element.parentNode;\n      var doc = element.ownerDocument;\n      var el = doc.createElement(KENDO_PSEUDO_ELEMENT);\n      var option;\n      setStyle(el, getCssText(getComputedStyle$1(element)));\n      if (tag == \"input\") {\n          el.style.whiteSpace = \"pre\";\n      }\n      if (tag == \"select\" || tag == \"textarea\") {\n          el.style.overflow = \"auto\";\n      }\n      if (tag == \"select\") {\n          if (element.multiple) {\n              for (var i = 0; i < element.options.length; ++i) {\n                  option = doc.createElement(KENDO_PSEUDO_ELEMENT);\n                  setStyle(option, getCssText(getComputedStyle$1(element.options[i])));\n                  option.style.display = \"block\"; // IE9 messes up without this\n                  option.textContent = element.options[i].textContent;\n                  el.appendChild(option);\n              }\n          } else {\n              option = getSelectedOption(element);\n              if (option) {\n                  el.textContent = option.textContent;\n              }\n          }\n      } else {\n          el.textContent = element.value;\n      }\n      p.insertBefore(el, element);\n      el.scrollLeft = element.scrollLeft;\n      el.scrollTop = element.scrollTop;\n\n      // must temporarily hide the original element, otherwise it\n      // may affect layout of the fake element we want to render.\n      element.style.display = \"none\";\n\n      renderContents(el, group);\n      element.style.display = \"\";\n      p.removeChild(el);\n  }\n\n  function serializeSVG(element) {\n      var serializer = new window.XMLSerializer();\n      var xml = serializer.serializeToString(element);\n\n      if (browser.mozilla && !(element.getAttribute(\"width\") && element.getAttribute(\"height\"))) {\n          var doc = new window.DOMParser().parseFromString(xml, \"image/svg+xml\");\n          var svg = doc.documentElement;\n          var box = getContentBox(element);\n          svg.setAttribute(\"width\", box.width);\n          svg.setAttribute(\"height\", box.height);\n          xml = serializer.serializeToString(svg);\n      }\n\n      return xml;\n  }\n\n  function renderContents(element, group) {\n      if (nodeInfo._stackingContext.element === element) {\n          // the group that was set in pushNodeInfo might have\n          // changed due to clipping/transforms, update it here.\n          nodeInfo._stackingContext.group = group;\n      }\n      switch (element.tagName.toLowerCase()) {\n        case \"img\":\n          renderImage(element, element.src, group);\n          break;\n\n        case \"svg\":\n          var xml = serializeSVG(element);\n          var dataURL = \"data:image/svg+xml;base64,\" + (encodeBase64(xml));\n          renderImage(element, dataURL, group);\n          break;\n\n        case \"canvas\":\n          try {\n              renderImage(element, element.toDataURL(\"image/png\"), group);\n          } catch (ex) {\n              // tainted; can't draw it, ignore.\n          }\n          break;\n\n        case \"textarea\":\n        case \"input\":\n        case \"select\":\n          renderFormField(element, group);\n          break;\n\n        default:\n          var children = [], floats = [], positioned = [];\n          for (var i = element.firstChild; i; i = i.nextSibling) {\n              switch (i.nodeType) {\n                case 3:         // Text\n                  if (/\\S/.test(i.data)) {\n                      renderText(element, i, group);\n                  }\n                  break;\n                case 1:         // Element\n                  var style = getComputedStyle$1(i);\n                  var floating = getPropertyValue(style, \"float\");\n                  var position = getPropertyValue(style, \"position\");\n                  if (position != \"static\") {\n                      positioned.push(i);\n                  }\n                  else if (floating != \"none\") {\n                      floats.push(i);\n                  } else {\n                      children.push(i);\n                  }\n                  break;\n              }\n          }\n\n          mergeSort(children, zIndexSort).forEach(function(el){ renderElement(el, group); });\n          mergeSort(floats, zIndexSort).forEach(function(el){ renderElement(el, group); });\n          mergeSort(positioned, zIndexSort).forEach(function(el){ renderElement(el, group); });\n      }\n  }\n\n  function renderText(element, node, group) {\n      if (emptyClipbox()) {\n          return;\n      }\n      var style = getComputedStyle$1(element);\n\n      if (parseFloat(getPropertyValue(style, \"text-indent\")) < -500) {\n          // assume it should not be displayed.  the slider's\n          // draggable handle displays a Drag text for some reason,\n          // having text-indent: -3333px.\n          return;\n      }\n\n      var text = node.data;\n      var start = 0;\n      var end = text.search(/\\S\\s*$/) + 1;\n\n      if (!end) {\n          return; // whitespace-only node\n      }\n\n      var fontSize = getPropertyValue(style, \"font-size\");\n      var lineHeight = getPropertyValue(style, \"line-height\");\n\n      // simply getPropertyValue(\"font\") doesn't work in Firefox :-\\\n      var font = [\n          getPropertyValue(style, \"font-style\"),\n          getPropertyValue(style, \"font-variant\"),\n          getPropertyValue(style, \"font-weight\"),\n          fontSize, // no need for line height here; it breaks layout in FF\n          getPropertyValue(style, \"font-family\")\n      ].join(\" \");\n\n      fontSize = parseFloat(fontSize);\n      lineHeight = parseFloat(lineHeight);\n\n      if (fontSize === 0 || isNaN(fontSize)) {\n          return;\n      }\n\n      var color = getPropertyValue(style, \"color\");\n      var range = element.ownerDocument.createRange();\n      var align = getPropertyValue(style, \"text-align\");\n      var isJustified = align == \"justify\";\n      var columnCount = getPropertyValue(style, \"column-count\", 1);\n      var whiteSpace = getPropertyValue(style, \"white-space\");\n      var textTransform = getPropertyValue(style, \"text-transform\");\n\n      // A line of 500px, with a font of 12px, contains an average of 80 characters, but since we\n      // err, we'd like to guess a bigger number rather than a smaller one.  Multiplying by 5\n      // seems to be a good option.\n      var estimateLineLength = element.getBoundingClientRect().width / fontSize * 5;\n      if (estimateLineLength === 0) {\n          estimateLineLength = 500;\n      }\n\n      // we'll maintain this so we can workaround bugs in Chrome's Range.getClientRects\n      // https://github.com/telerik/kendo/issues/5740\n      var prevLineBottom = null;\n\n      var underline = nodeInfo[\"underline\"];\n      var lineThrough = nodeInfo[\"line-through\"];\n      var overline = nodeInfo[\"overline\"];\n      var underlineOffset = nodeInfo[\"underline-offset\"];\n\n      if (underline) {\n          forEachRect(decorateUnder);\n      }\n\n      // doChunk returns true when all text has been rendered\n      while (!doChunk()) {}\n\n      if (lineThrough || overline) {\n          forEachRect(decorateOver);\n      }\n\n      return;                 // only function declarations after this line\n\n      function forEachRect(callback) {\n          range.selectNode(node);\n          var clientRects = slice(range.getClientRects());\n\n          forEachRect = function (cb) { return clientRects.forEach(cb); };\n          forEachRect(callback);\n      }\n\n      function actuallyGetRangeBoundingRect(range) {\n          // XXX: to be revised when this Chrome bug is fixed:\n          // https://bugs.chromium.org/p/chromium/issues/detail?id=612459\n          if (microsoft || browser.chrome || browser.safari) {\n              // Workaround browser bugs: IE and Chrome would sometimes\n              // return 0 or 1-width rectangles before or after the main\n              // one.  https://github.com/telerik/kendo/issues/4674\n\n              // Actually Chrome 50 got worse, since the rectangles can now have the width of a\n              // full character, making it hard to tell whether it's a bogus rectangle or valid\n              // selection location.  The workaround is to ignore rectangles that fall on the\n              // previous line.  https://github.com/telerik/kendo/issues/5740\n              var rectangles = range.getClientRects(), box = {\n                  top    :  Infinity,\n                  right  : -Infinity,\n                  bottom : -Infinity,\n                  left   :  Infinity\n              }, done = false;\n              for (var i = 0; i < rectangles.length; ++i) {\n                  var b = rectangles[i];\n                  if (b.width <= 1 || b.bottom === prevLineBottom) {\n                      continue;   // bogus rectangle\n                  }\n                  box.left   = Math.min(b.left   , box.left);\n                  box.top    = Math.min(b.top    , box.top);\n                  box.right  = Math.max(b.right  , box.right);\n                  box.bottom = Math.max(b.bottom , box.bottom);\n                  done = true;\n              }\n              if (!done) {\n                  return range.getBoundingClientRect();\n              }\n              box.width = box.right - box.left;\n              box.height = box.bottom - box.top;\n              return box;\n          }\n          return range.getBoundingClientRect();\n      }\n\n      // Render a chunk of text, typically one line (but for justified text we render each word as\n      // a separate Text object, because spacing is variable).  Returns true when it finished the\n      // current node.  After each chunk it updates `start` to just after the last rendered\n      // character.\n      function doChunk() {\n          var origStart = start;\n          var box, pos = text.substr(start).search(/\\S/);\n          start += pos;\n          if (pos < 0 || start >= end) {\n              return true;\n          }\n\n          // Select a single character to determine the height of a line of text.  The box.bottom\n          // will be essential for us to figure out where the next line begins.\n          range.setStart(node, start);\n          range.setEnd(node, start + 1);\n          box = actuallyGetRangeBoundingRect(range);\n\n          // for justified text we must split at each space, because space has variable width.\n          var found = false;\n          if (isJustified || columnCount > 1) {\n              pos = text.substr(start).search(/\\s/);\n              if (pos >= 0) {\n                  // we can only split there if it's on the same line, otherwise we'll fall back\n                  // to the default mechanism (see findEOL below).\n                  range.setEnd(node, start + pos);\n                  var r = actuallyGetRangeBoundingRect(range);\n                  if (r.bottom == box.bottom) {\n                      box = r;\n                      found = true;\n                      start += pos;\n                  }\n              }\n          }\n\n          if (!found) {\n              // This code does three things: (1) it selects one line of text in `range`, (2) it\n              // leaves the bounding rect of that line in `box` and (3) it returns the position\n              // just after the EOL.  We know where the line starts (`start`) but we don't know\n              // where it ends.  To figure this out, we select a piece of text and look at the\n              // bottom of the bounding box.  If it changes, we have more than one line selected\n              // and should retry with a smaller selection.\n              //\n              // To speed things up, we first try to select all text in the node (`start` ->\n              // `end`).  If there's more than one line there, then select only half of it.  And\n              // so on.  When we find a value for `end` that fits in one line, we try increasing\n              // it (also in halves) until we get to the next line.  The algorithm stops when the\n              // right side of the bounding box does not change.\n              //\n              // One more thing to note is that everything happens in a single Text DOM node.\n              // There's no other tags inside it, therefore the left/top coordinates of the\n              // bounding box will not change.\n              pos = (function findEOL(min, eol, max){\n                  range.setEnd(node, eol);\n                  var r = actuallyGetRangeBoundingRect(range);\n                  if (r.bottom != box.bottom && min < eol) {\n                      return findEOL(min, (min + eol) >> 1, eol);\n                  } else if (r.right != box.right) {\n                      box = r;\n                      if (eol < max) {\n                          return findEOL(eol, (eol + max) >> 1, max);\n                      } else {\n                          return eol;\n                      }\n                  } else {\n                      return eol;\n                  }\n              })(start, Math.min(end, start + estimateLineLength), end);\n\n              if (pos == start) {\n                  // if EOL is at the start, then no more text fits on this line.  Skip the\n                  // remainder of this node entirely to avoid a stack overflow.\n                  return true;\n              }\n              start = pos;\n\n              pos = range.toString().search(/\\s+$/);\n              if (pos === 0) {\n                  return false; // whitespace only; we should not get here.\n              }\n              if (pos > 0) {\n                  // eliminate trailing whitespace\n                  range.setEnd(node, range.startOffset + pos);\n                  box = actuallyGetRangeBoundingRect(range);\n              }\n          }\n\n          // another workaround for IE: if we rely on getBoundingClientRect() we'll overlap with the bullet for LI\n          // elements.  Calling getClientRects() and using the *first* rect appears to give us the correct location.\n          // Note: not to be used in Chrome as it randomly returns a zero-width rectangle from the previous line.\n          if (microsoft) {\n              box = range.getClientRects()[0];\n          }\n\n          var str = range.toString();\n          if (!/^(?:pre|pre-wrap)$/i.test(whiteSpace)) {\n              // node with non-significant space -- collapse whitespace.\n              str = str.replace(/\\s+/g, \" \");\n          }\n          else if (/\\t/.test(str)) {\n              // with significant whitespace we need to do something about literal TAB characters.\n              // There's no TAB glyph in a font so they would be rendered in PDF as an empty box,\n              // and the whole text will stretch to fill the original width.  The core PDF lib\n              // does not have sufficient context to deal with it.\n\n              // calculate the starting column here, since we initially discarded any whitespace.\n              var cc = 0;\n              for (pos = origStart; pos < range.startOffset; ++pos) {\n                  var code = text.charCodeAt(pos);\n                  if (code == 9) {\n                      // when we meet a TAB we must round up to the next tab stop.\n                      // in all browsers TABs seem to be 8 characters.\n                      cc += 8 - cc % 8;\n                  } else if (code == 10 || code == 13) {\n                      // just in case we meet a newline we must restart.\n                      cc = 0;\n                  } else {\n                      // ordinary character --> advance one column\n                      cc++;\n                  }\n              }\n\n              // based on starting column, replace any TAB characters in the string we actually\n              // have to display with spaces so that they align to columns multiple of 8.\n              while ((pos = str.search(\"\\t\")) >= 0) {\n                  var indent = \"        \".substr(0, 8 - (cc + pos) % 8);\n                  str = str.substr(0, pos) + indent + str.substr(pos + 1);\n              }\n          }\n\n          if (!found) {\n              prevLineBottom = box.bottom;\n          }\n          drawText(str, box);\n      }\n\n      function drawText(str, box) {\n          // In IE the box height will be approximately lineHeight, while in\n          // other browsers it'll (correctly) be the height of the bounding\n          // box for the current text/font.  Which is to say, IE sucks again.\n          // The only good solution I can think of is to measure the text\n          // ourselves and center the bounding box.\n          if (microsoft && !isNaN(lineHeight)) {\n              var height = getFontHeight(font);\n              var top = (box.top + box.bottom - height) / 2;\n              box = {\n                  top    : top,\n                  right  : box.right,\n                  bottom : top + height,\n                  left   : box.left,\n                  height : height,\n                  width  : box.right - box.left\n              };\n          }\n\n          // var path = new Path({ stroke: { color: \"red\" }});\n          // path.moveTo(box.left, box.top)\n          //     .lineTo(box.right, box.top)\n          //     .lineTo(box.right, box.bottom)\n          //     .lineTo(box.left, box.bottom)\n          //     .close();\n          // group.append(path);\n\n          switch (textTransform) {\n            case \"uppercase\":\n              str = str.toUpperCase();\n              break;\n            case \"lowercase\":\n              str = str.toLowerCase();\n              break;\n            case \"capitalize\":\n              str = str.replace(/(?:^|\\s)\\S/g, function (l) { return l.toUpperCase(); });\n              break;\n          }\n\n          var text = new TextRect(\n              str, new Rect$1([ box.left, box.top ],\n                                [ box.width, box.height ]),\n              {\n                  font: font,\n                  fill: { color: color }\n              }\n          );\n          group.append(text);\n      }\n\n      function drawTextLine(lineWidth, textBox, color, ypos) {\n          if (color) {\n              var path = new Path$1({ stroke: {\n                  width: lineWidth,\n                  color: color\n              }});\n\n              ypos -= lineWidth;\n              path.moveTo(textBox.left, ypos)\n                  .lineTo(textBox.right, ypos);\n              group.append(path);\n          }\n      }\n\n      function decorateOver(box) {\n          var width = fontSize / 12;\n          drawTextLine(width, box, lineThrough, box.bottom - box.height / 2.7);\n          drawTextLine(width, box, overline, box.top);\n      }\n\n      function decorateUnder(box) {\n          var width = fontSize / 12;\n          var underlinePos = box.bottom;\n          if (underlineOffset != null) {\n              underlinePos += underlineOffset;\n          } else {\n              underlinePos += width; // for \"auto\" it seems better to add line width\n          }\n          drawTextLine(width, box, underline, underlinePos);\n      }\n  }\n\n  function groupInStackingContext(element, group, zIndex) {\n      var main;\n      if (zIndex != \"auto\") {\n          // use the current stacking context\n          main = nodeInfo._stackingContext.group;\n          zIndex = parseFloat(zIndex);\n      } else {\n          // normal flow — use given container.  we still have to\n          // figure out where should we insert this element with the\n          // assumption that its z-index is zero, as the group might\n          // already contain elements with higher z-index.\n          main = group;\n          zIndex = 0;\n      }\n      var a = main.children;\n      for (var i = 0; i < a.length; ++i) {\n          if (a[i]._dom_zIndex != null && a[i]._dom_zIndex > zIndex) {\n              break;\n          }\n      }\n\n      var tmp = new Group$1();\n      main.insert(i, tmp);\n      tmp._dom_zIndex = zIndex;\n\n      if (main !== group) {\n          // console.log(\"Placing\", element, \"in\", nodeInfo._stackingContext.element, \"at position\", i, \" / \", a.length);\n          // console.log(a.slice(i+1));\n\n          // if (nodeInfo._matrix) {\n          //     tmp.transform(nodeInfo._matrix);\n          // }\n          if (nodeInfo._clipbox) {\n              var m = nodeInfo._matrix.invert();\n              var r = nodeInfo._clipbox.transformCopy(m);\n              setClipping(tmp, Path$1.fromRect(r));\n              // console.log(r);\n              // tmp.append(Path.fromRect(r));\n              // tmp.append(new Text(element.className || element.id, r.topLeft()));\n          }\n      }\n\n      return tmp;\n  }\n\n  function renderElement(element, container) {\n      var style = getComputedStyle$1(element);\n\n      updateCounters(style);\n\n      if (/^(style|script|link|meta|iframe|col|colgroup)$/i.test(element.tagName)) {\n          return;\n      }\n\n      if (nodeInfo._clipbox == null) {\n          return;\n      }\n\n      var opacity = parseFloat(getPropertyValue(style, \"opacity\"));\n      var visibility = getPropertyValue(style, \"visibility\");\n      var display = getPropertyValue(style, \"display\");\n\n      if (opacity === 0 || visibility == \"hidden\" || display == \"none\") {\n          return;\n      }\n\n      var tr = getTransform(style);\n      var group;\n\n      var zIndex = getPropertyValue(style, \"z-index\");\n      if ((tr || opacity < 1) && zIndex == \"auto\") {\n          zIndex = 0;\n      }\n      group = groupInStackingContext(element, container, zIndex);\n\n      // XXX: remove at some point\n      // group._pdfElement = element;\n      // group.options._pdfDebug = \"\";\n      // if (element.id) {\n      //     group.options._pdfDebug = \"#\" + element.id;\n      // }\n      // if (element.className) {\n      //     group.options._pdfDebug += \".\" + element.className.split(\" \").join(\".\");\n      // }\n\n      if (opacity < 1) {\n          group.opacity(opacity * group.opacity());\n      }\n\n      pushNodeInfo(element, style, group);\n\n      if (!tr) {\n          _renderWithPseudoElements(element, group);\n      }\n      else {\n          saveStyle(element, function(){\n              // must clear transform, so getBoundingClientRect returns correct values.\n              pleaseSetPropertyValue(element.style, \"transform\", \"none\", \"important\");\n\n              // must also clear transitions, so correct values are returned *immediately*\n              pleaseSetPropertyValue(element.style, \"transition\", \"none\", \"important\");\n\n              // the presence of any transform makes it behave like it had position: relative,\n              // because why not.\n              // http://meyerweb.com/eric/thoughts/2011/09/12/un-fixing-fixed-elements-with-css-transforms/\n              if (getPropertyValue(style, \"position\") == \"static\") {\n                  // but only if it's not already positioned. :-/\n                  pleaseSetPropertyValue(element.style, \"position\", \"relative\", \"important\");\n              }\n\n              // must translate to origin before applying the CSS\n              // transformation, then translate back.\n              var bbox = element.getBoundingClientRect();\n              var x = bbox.left + tr.origin[0];\n              var y = bbox.top + tr.origin[1];\n              var m = [ 1, 0, 0, 1, -x, -y ];\n              m = mmul(m, tr.matrix);\n              m = mmul(m, [ 1, 0, 0, 1, x, y ]);\n              m = setTransform(group, m);\n\n              nodeInfo._matrix = nodeInfo._matrix.multiplyCopy(m);\n\n              _renderWithPseudoElements(element, group);\n          });\n      }\n\n      popNodeInfo();\n\n      //drawDebugBox(element.getBoundingClientRect(), container);\n  }\n\n  // function drawDebugBox(box, group, color) {\n  //     var path = Path.fromRect(new geo.Rect([ box.left, box.top ], [ box.width, box.height ]));\n  //     if (color) {\n  //         path.stroke(color);\n  //     }\n  //     group.append(path);\n  // }\n\n  // function dumpTextNode(node) {\n  //     var txt = node.data.replace(/^\\s+/, \"\");\n  //     if (txt.length < 100) {\n  //         console.log(node.data.length + \": |\" + txt);\n  //     } else {\n  //         console.log(node.data.length + \": |\" + txt.substr(0, 50) + \"|...|\" + txt.substr(-50));\n  //     }\n  // }\n\n  function mmul(a, b) {\n      var a1 = a[0], b1 = a[1], c1 = a[2], d1 = a[3], e1 = a[4], f1 = a[5];\n      var a2 = b[0], b2 = b[1], c2 = b[2], d2 = b[3], e2 = b[4], f2 = b[5];\n      return [\n          a1*a2 + b1*c2,          a1*b2 + b1*d2,\n          c1*a2 + d1*c2,          c1*b2 + d1*d2,\n          e1*a2 + f1*c2 + e2,     e1*b2 + f1*d2 + f2\n      ];\n  }\n\n  exports.A = Arc$1;\n  exports.B = normalizeText;\n  exports.C = Color;\n  exports.D = hashKey;\n  exports.E = objectKey;\n  exports.F = TextMetrics;\n  exports.G = Group$1;\n  exports.H = LRUCache;\n  exports.I = Image$1;\n  exports.J = pdf;\n  exports.K = geometry;\n  exports.L = LinearGradient;\n  exports.M = Matrix;\n  exports.N = exportPDF;\n  exports.O = exportImage;\n  exports.P = Point$1;\n  exports.Q = exportSVG;\n  exports.R = Rect$1;\n  exports.S = Segment;\n  exports.T = Text;\n  exports.U = drawDOM;\n  exports.V = getFontFaces;\n  exports.W = Arc;\n  exports.X = limitValue;\n  exports.Y = namedColors;\n  exports.__meta__ = __meta__;\n  exports.a = Class;\n  exports.b = Path$1;\n  exports.c = Animation;\n  exports.d = defined;\n  exports.e = drawing;\n  exports.f = Circle$1;\n  exports.g = Circle$2;\n  exports.h = MultiPath;\n  exports.i = RadialGradient;\n  exports.j = AnimationFactory;\n  exports.k = Layout$1;\n  exports.l = logToConsole;\n  exports.m = measureText;\n  exports.n = Surface;\n  exports.o = throttle;\n  exports.p = parseColor$2;\n  exports.q = Size;\n  exports.r = round;\n  exports.s = support$1;\n  exports.t = transform;\n  exports.u = util;\n  exports.v = deg;\n  exports.w = elementOffset;\n  exports.x = Rect;\n  exports.y = drawText;\n  exports.z = encodeBase64;\n\n}));\n"]}
{"version":3,"sources":["raw-js/kendo.datepicker.js"],"names":["global","factory","exports","module","require","define","amd","globalThis","self","kendo","_globals","Datepicker","this","$","undefined$1","window","ui","html","mediaQuery","Widget","parse","parseDate","keys","support","template","activeElement","_activeElement","DIV","ns","CLICK","UP","mouseAndTouchPresent","applyEventMap","slice","OPEN","CLOSE","CHANGE","DISABLED","READONLY","FOCUSED","SELECTED","STATEDISABLED","HOVEREVENTS","MOUSEDOWN","NAVIGATE","ID","MONTH","ARIA_DISABLED","ARIA_READONLY","ARIA_EXPANDED","ARIA_HIDDEN","ARIA_ACTIVEDESCENDANT","calendar","isInRange","restrictValue","isEqualDatePart","extend","DATE","Date","normalize","options","parseFormats","format","Array","isArray","length","push","inArray","splice","preventDefault","e","DateView","id","that","body","document","div","attr","addClass","renderButtons","_buttons","bigScreenMQL","smallScreenMQL","adaptiveMode","onChange","popup","isFunction","fullscreen","mediaQueryList","matches","omitPopup","dateDiv","appendTo","Popup","name","isRtl","anchor","ActionSheet","adaptive","title","adaptiveTitle","subtitle","adaptiveSubtitle","closeButton","icon","themeColor","actionButtons","focusOnActivate","open","close","_dateViewID","value","prototype","_calendar","size","guid","_content","element","on","_click","bind","Calendar","componentType","messages","_setOptions","getValidCssClass","navigate","_value","_current","start","setOptions","focusOnNav","change","culture","dates","depth","footer","max","min","month","weekNumber","disableDates","old","disabled","destroy","popupHovered","_hovered","setTimeout","_option","toggle","visible","move","key","keyCode","selectIsClicked","ctrlKey","DOWN","ENTER","handled","altKey","ESC","_cell","hasClass","SPACEBAR","_move","current","date","_focus","disabledDate","currentTarget","className","indexOf","trigger","option","DatePicker","init","initialValue","fn","call","readonly","Boolean","enable","is","parents","inputMode","_initialOptions","_wrapper","_createDateView","_createDateViewProxy","dateView","_icon","setAttribute","type","role","autocomplete","_reset","_template","val","_createDateInput","_old","_update","_oldText","_applyCssClasses","label","_label","removeAttr","notify","events","autoAdjust","animation","ARIATemplate","valueType","text","dateInput","weekColumnHeader","fillMode","rounded","autoFill","autoCorrectParts","wrapper","remove","_change","_updateARIA","_dateIcon","off","_editable","disable","_dateInput","toString","_inputLabel","_unwrapFloating","removeClass","_toggleHover","removeAttribute","_keydown","_blur","floatingLabel","labelOptions","isPlainObject","content","floatCheck","_hasDateInput","Label","widget","_navigateCalendarHandler","unbind","_form","_resetHandler","_navigateCalendar","refresh","toggleClass","_isReset","_emptyMask","dateInputInstance","getToday","_focusElement","eventType","touch","match","dateChanged","oldValue","valueUpdated","isEqualDate","_typing","textFormatted","stopImmediatePropagation","next","renderButton","shape","insertAfter","_setCalendarAttribute","_table","formattedValue","isSameType","wrap","parent","style","cssText","css","height","formId","optionsValue","form","closest","defaultValue","_ariaTemplate","DateInput","toggleDayPeriod","_updateAria","cssProperties","registerPrefix","registerValues","prop","values","roundedValues","concat","plugin","jQuery","kendo$1","__meta__","category","description","depends","default","Object","defineProperty"],"mappings":"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","file":"kendo.datepicker.min.js","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('kendo.calendar.js'), require('kendo.popup.js'), require('kendo.dateinput.js'), require('kendo.html.button.js'), require('kendo.label.js'), require('kendo.actionsheet.js')) :\n    typeof define === 'function' && define.amd ? define(['exports', 'kendo.calendar', 'kendo.popup', 'kendo.dateinput', 'kendo.html.button', 'kendo.label', 'kendo.actionsheet'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global.kendo = global.kendo || {}, global.kendo._globals = global.kendo._globals || {}, global.kendo._globals.Datepicker = {})));\n})(this, (function (exports) {\n    const __meta__ = {\n        id: \"datepicker\",\n        name: \"DatePicker\",\n        category: \"web\",\n        description: \"The DatePicker widget allows the user to select a date from a calendar or by direct input.\",\n        depends: [ \"calendar\", \"popup\", \"html.button\", \"label\", \"actionsheet\" ]\n    };\n\n    (function($, undefined$1) {\n        var kendo = window.kendo,\n        ui = kendo.ui,\n        html = kendo.html,\n        mediaQuery = kendo.mediaQuery,\n        Widget = ui.Widget,\n        parse = kendo.parseDate,\n        keys = kendo.keys,\n        support = kendo.support,\n        template = kendo.template,\n        activeElement = kendo._activeElement,\n        DIV = \"<div />\",\n        SPAN = \"<span />\",\n        ns = \".kendoDatePicker\",\n        CLICK = \"click\" + ns,\n        UP = support.mouseAndTouchPresent ? kendo.applyEventMap(\"up\", ns.slice(1)) : CLICK,\n        OPEN = \"open\",\n        CLOSE = \"close\",\n        CHANGE = \"change\",\n        DISABLED = \"disabled\",\n        READONLY = \"readonly\",\n        FOCUSED = \"k-focus\",\n        SELECTED = \"k-selected\",\n        STATEDISABLED = \"k-disabled\",\n        HOVER = \"k-hover\",\n        HOVEREVENTS = \"mouseenter\" + ns + \" mouseleave\" + ns,\n        MOUSEDOWN = \"mousedown\" + ns,\n        NAVIGATE = \"navigate\",\n        ID = \"id\",\n        MIN = \"min\",\n        MAX = \"max\",\n        MONTH = \"month\",\n        ARIA_DISABLED = \"aria-disabled\",\n        ARIA_READONLY = \"aria-readonly\",\n        ARIA_EXPANDED = \"aria-expanded\",\n        ARIA_HIDDEN = \"aria-hidden\",\n        ARIA_ACTIVEDESCENDANT = \"aria-activedescendant\",\n        calendar = kendo.calendar,\n        isInRange = calendar.isInRange,\n        restrictValue = calendar.restrictValue,\n        isEqualDatePart = calendar.isEqualDatePart,\n        extend = $.extend,\n        DATE = Date;\n\n        function normalize(options) {\n            var parseFormats = options.parseFormats,\n                format = options.format;\n\n            calendar.normalize(options);\n\n            parseFormats = Array.isArray(parseFormats) ? parseFormats : [parseFormats];\n\n            if (!parseFormats.length) {\n                parseFormats.push(\"yyyy-MM-dd\");\n            }\n\n            if ($.inArray(format, parseFormats) === -1) {\n                parseFormats.splice(0, 0, options.format);\n            }\n\n            options.parseFormats = parseFormats;\n        }\n\n        function preventDefault(e) {\n            e.preventDefault();\n        }\n\n        var DateView = function(options) {\n            var that = this, id,\n                body = document.body,\n                div = $(DIV).attr(ARIA_HIDDEN, \"true\")\n                            .addClass(\"k-calendar-container\");\n\n            that.options = options = options || {};\n            id = options.id;\n\n            const renderButtons = options._buttons;\n\n            that.bigScreenMQL = mediaQuery(\"large\");\n            that.smallScreenMQL = mediaQuery(\"small\");\n            if (options.adaptiveMode == \"auto\" ) {\n                that.smallScreenMQL.onChange(function() {\n                    if (that.popup && kendo.isFunction(that.popup.fullscreen)) {\n                        that.popup.fullscreen(that.smallScreenMQL.mediaQueryList.matches);\n                    }\n                });\n            }\n            if (!options.omitPopup) {\n                div.appendTo(body);\n                if (options.adaptiveMode == \"auto\" && !that.bigScreenMQL.mediaQueryList.matches) {\n                    that.popup = new ui.ActionSheet(div, {\n                        adaptive: true,\n                        title: options.adaptiveTitle || \"Set dates\",\n                        subtitle: options.adaptiveSubtitle,\n                        closeButton: {\n                            icon: \"check\",\n                            themeColor: \"primary\",\n                        },\n                        actionButtons: renderButtons,\n                        focusOnActivate: false,\n                        fullscreen: that.smallScreenMQL.mediaQueryList.matches,\n                        open: options.open,\n                        close: options.close,\n                        popup: extend(options.popup, options, { name: \"Popup\", isRtl: kendo.support.isRtl(options.anchor) })\n                    });\n                } else {\n                    that.popup = new ui.Popup(div, extend(options.popup, options, { name: \"Popup\", isRtl: kendo.support.isRtl(options.anchor) }));\n                }\n            } else {\n                div = options.dateDiv;\n            }\n            if (id) {\n                id += \"_dateview\";\n\n                div.attr(ID, id);\n                that._dateViewID = id;\n            }\n            that.div = div;\n\n            that.value(options.value);\n        };\n\n        DateView.prototype = {\n            _calendar: function() {\n                var that = this;\n                var calendar = that.calendar;\n                var options = that.options;\n                var div;\n\n                if (!calendar) {\n                    var size = options.adaptiveMode != \"auto\" || this.bigScreenMQL.mediaQueryList.matches ? this.options.size : \"large\";\n                    div = $(DIV).attr(ID, kendo.guid())\n                                .appendTo(options.omitPopup ? options.dateDiv : (that.popup._content || that.popup.element))\n                                .on(MOUSEDOWN, preventDefault)\n                                .on(CLICK, \"td:has(.k-link)\", that._click.bind(that));\n\n\n                    that.calendar = calendar = new ui.Calendar(div, {\n                        componentType: options.componentType,\n                        size: size,\n                        messages: options.messages\n                    });\n                    that._setOptions(options);\n\n                    div.addClass(kendo.getValidCssClass(\"k-calendar-\", \"size\", size));\n\n                    calendar.navigate(that._value || that._current, options.start);\n\n                    that.value(that._value);\n                }\n            },\n\n            _setOptions: function(options) {\n                this.calendar.setOptions({\n                    focusOnNav: false,\n                    componentType: options.componentType,\n                    change: options.change,\n                    culture: options.culture,\n                    dates: options.dates,\n                    depth: options.depth,\n                    footer: options.footer,\n                    format: options.format,\n                    max: options.max,\n                    min: options.min,\n                    month: options.month,\n                    weekNumber: options.weekNumber,\n                    start: options.start,\n                    messages: options.messages,\n                    disableDates: options.disableDates\n                });\n            },\n\n            setOptions: function(options) {\n                var that = this;\n                var old = that.options;\n                var disableDates = options.disableDates;\n\n                if (disableDates) {\n                    options.disableDates = calendar.disabled(disableDates);\n                }\n\n                that.options = extend(old, options, {\n                    change: old.change,\n                    close: old.close,\n                    open: old.open\n                });\n\n                if (that.calendar) {\n                    that._setOptions(that.options);\n                }\n            },\n\n            destroy: function() {\n                var that = this;\n                if (this.popup) {\n                    this.popup.destroy();\n                }\n\n                if (that.bigScreenMQL) {\n                    that.bigScreenMQL.destroy();\n                    that.bigScreenMQL = null;\n                }\n\n                if (that.smallScreenMQL) {\n                    that.smallScreenMQL.destroy();\n                    that.smallScreenMQL = null;\n                }\n            },\n\n            open: function() {\n                var that = this;\n                var popupHovered;\n\n                that._calendar();\n\n                // In some cases when the popup is opened resize is triggered which will cause it to close\n                // Setting the below flag will prevent this from happening\n                // Reference: https://github.com/telerik/kendo/pull/7553\n                popupHovered = that.popup._hovered;\n                that.popup._hovered = true;\n\n                that.popup.open();\n\n                setTimeout(function() {\n                    that.popup._hovered = popupHovered;\n                }, 1);\n            },\n\n            close: function() {\n                if (this.popup) {\n                    this.popup.close();\n                }\n            },\n\n            min: function(value) {\n                this._option(MIN, value);\n            },\n\n            max: function(value) {\n                this._option(MAX, value);\n            },\n\n            toggle: function() {\n                var that = this;\n\n                that[that.popup.visible() ? CLOSE : OPEN]();\n            },\n\n            move: function(e) {\n                var that = this,\n                    key = e.keyCode,\n                    calendar = that.calendar,\n                    selectIsClicked = e.ctrlKey && key == keys.DOWN || key == keys.ENTER,\n                    handled = false;\n\n                if (e.altKey) {\n                    if (key == keys.DOWN) {\n                        that.open();\n                        e.preventDefault();\n                        handled = true;\n                    } else if (key == keys.UP) {\n                        that.close();\n                        e.preventDefault();\n                        handled = true;\n                    }\n\n                } else if (that.popup && that.popup.visible()) {\n\n                    if (key == keys.ESC || (selectIsClicked && calendar._cell.hasClass(SELECTED))) {\n                        that.close();\n                        e.preventDefault();\n                        return true;\n                    }\n                    //spacebar selects a date in the calendar\n                    if (key != keys.SPACEBAR) {\n                        that._current = calendar._move(e);\n                    }\n\n                    handled = true;\n                }\n\n                return handled;\n            },\n\n            current: function(date) {\n                this._current = date;\n                if (this.calendar) {\n                    this.calendar._focus(date);\n                }\n            },\n\n            value: function(value) {\n                var that = this,\n                    calendar = that.calendar,\n                    options = that.options,\n                    disabledDate = options.disableDates;\n\n                if (disabledDate && disabledDate(value)) {\n                    value = null;\n                }\n\n                that._value = value;\n                that._current = new DATE(+restrictValue(value, options.min, options.max));\n\n                if (calendar) {\n                    calendar.value(value);\n                }\n            },\n\n            _click: function(e) {\n\n                if (e.currentTarget.className.indexOf(SELECTED) !== -1) {\n                    this.calendar.trigger(\"change\");\n                    this.close();\n                }\n            },\n\n            _option: function(option, value) {\n                var that = this;\n                var calendar = that.calendar;\n\n                that.options[option] = value;\n\n                if (calendar) {\n                    calendar[option](value);\n                }\n            }\n        };\n\n        DateView.normalize = normalize;\n\n        kendo.DateView = DateView;\n\n        var DatePicker = Widget.extend({\n            init: function(element, options) {\n                var that = this,\n                    initialValue,\n                    disabled;\n\n                Widget.fn.init.call(that, element, options);\n                element = that.element;\n                options = that.options;\n\n                options.disableDates = kendo.calendar.disabled(options.disableDates);\n\n                options.min = parse(element.attr(\"min\")) || parse(options.min);\n                options.max = parse(element.attr(\"max\")) || parse(options.max);\n\n                that.options.readonly = options.readonly !== undefined$1 ? options.readonly : Boolean(that.element.attr(\"readonly\"));\n                that.options.enable = options.enable !== undefined$1 ? options.enable : !(Boolean(element.is(\"[disabled]\") || $(element).parents(\"fieldset\").is(':disabled')));\n                that.options.inputMode = options.inputMode || that.element.attr(\"inputmode\") || \"text\";\n                that.element.attr(\"inputmode\" , that.options.inputMode);\n\n                normalize(options);\n\n                that._initialOptions = extend({}, options);\n\n                that._wrapper();\n\n                that._createDateView();\n                that._createDateViewProxy = that._createDateView.bind(that);\n\n                that.bigScreenMQL = mediaQuery(\"large\");\n                if (that.options.adaptiveMode == \"auto\") {\n                    that.bigScreenMQL.onChange(()=> {\n                        that._createDateViewProxy();\n                        that.dateView.value(that._value);\n                    });\n                }\n\n                that._icon();\n\n                try {\n                    element[0].setAttribute(\"type\", \"text\");\n                } catch (e) {\n                    element[0].type = \"text\";\n                }\n\n                element\n                    .addClass(\"k-input-inner\")\n                    .attr({\n                        role: \"combobox\",\n                        \"aria-expanded\": false,\n                        \"aria-haspopup\": \"grid\",\n                        \"aria-controls\": that.dateView._dateViewID,\n                        \"autocomplete\": \"off\"\n                    });\n                that._reset();\n                that._template();\n\n                disabled = !that.options.enable;\n                if (disabled) {\n                    that.enable(false);\n                } else {\n                    that.readonly(element.is(\"[readonly]\"));\n                }\n\n                initialValue = parse(options.value || that.element.val(), options.parseFormats, options.culture);\n\n                that._createDateInput(options);\n\n                that._old = that._update(initialValue || that.element.val());\n                that._oldText = element.val();\n                that._applyCssClasses();\n\n                if (options.label) {\n                    that._label();\n                }\n\n                that.element.removeAttr(\"style\");\n\n                kendo.notify(that);\n            },\n            events: [\n            OPEN,\n            CLOSE,\n            CHANGE],\n            options: {\n                name: \"DatePicker\",\n                autoAdjust: true,\n                value: null,\n                footer: \"\",\n                format: \"\",\n                culture: \"\",\n                parseFormats: [],\n                min: new Date(1900, 0, 1),\n                max: new Date(2099, 11, 31),\n                start: MONTH,\n                depth: MONTH,\n                animation: {},\n                month: {},\n                dates: [],\n                disableDates: null,\n                ARIATemplate: ({ valueType, text }) => `Current focused ${valueType} is ${text}`,\n                dateInput: false,\n                weekNumber: false,\n                messages: {\n                    weekColumnHeader: \"\"\n                },\n                componentType: \"classic\",\n                adaptiveMode: \"none\",\n                size: \"medium\",\n                fillMode: \"solid\",\n                rounded: \"medium\",\n                label: null,\n                autoFill: false,\n                autoCorrectParts: true,\n                adaptiveTitle: null,\n                adaptiveSubtitle: null,\n            },\n\n            _createDateView: function() {\n                var that = this,\n                options = that.options,\n                element = that.element,\n                div;\n\n                if (that.dateView) {\n                    if (that.dateView.popup && that.dateView.popup.wrapper) {\n                        that.dateView.popup.wrapper.remove();\n                    }\n                    that.dateView.destroy();\n                    that.dateView = null;\n                }\n\n                that.dateView = new DateView(extend({}, options, {\n                    id: element.attr(ID),\n                    anchor: that.wrapper,\n                    change: function() {\n                        // calendar is the current scope\n                        that._change(this.value());\n                        that.close();\n                    },\n                    close: function(e) {\n                        if (that.trigger(CLOSE)) {\n                            e.preventDefault();\n                        } else {\n                            element.attr(ARIA_EXPANDED, false);\n                            div.attr(ARIA_HIDDEN, true);\n\n                            setTimeout(function() {\n                                element.removeAttr(\"aria-activedescendant\");\n                            });\n                        }\n                    },\n                    open: function(e) {\n                        var options = that.options,\n                            date;\n\n                        if (that.trigger(OPEN)) {\n                            e.preventDefault();\n                        } else {\n                            if (that.element.val() !== that._oldText) {\n                                date = parse(element.val(), options.parseFormats, options.culture);\n\n                                that.dateView[date ? \"current\" : \"value\"](date);\n                            }\n\n                            element.attr(ARIA_EXPANDED, true);\n                            div.attr(ARIA_HIDDEN, false);\n\n                            that._updateARIA(date);\n\n                        }\n                    }\n                }));\n\n                div = that.dateView.div;\n            },\n\n            setOptions: function(options) {\n                var that = this;\n                var value = that._value;\n\n                Widget.fn.setOptions.call(that, options);\n\n                options = that.options;\n\n                options.min = parse(options.min);\n                options.max = parse(options.max);\n\n                normalize(options);\n\n                that._dateIcon.off(ns);\n                that._dateIcon.remove();\n\n                that.dateView.setOptions(options);\n                that._icon();\n                that._editable({\n                    readonly: options.readonly === undefined$1 ? that.options.readonly : options.readonly,\n                    disable: !(options.enable === undefined$1 ? that.options.enable : options.enable)\n                });\n\n                that._createDateInput(options);\n\n                if (!that._dateInput) {\n                    that.element.val(kendo.toString(value, options.format, options.culture));\n                }\n\n                if (value) {\n                    that._updateARIA(value);\n                }\n\n                if (options.label && that._inputLabel) {\n                    that.label.setOptions(options.label);\n                } else if (options.label === false) {\n                    that.label._unwrapFloating();\n                    that._inputLabel.remove();\n                    delete that._inputLabel;\n                } else if (options.label) {\n                    that._label();\n                }\n            },\n\n            _editable: function(options) {\n                var that = this,\n                    icon = that._dateIcon.off(ns),\n                    element = that.element.off(ns),\n                    wrapper = that.wrapper.off(ns),\n                    readonly = options.readonly,\n                    disable = options.disable;\n\n                if (!readonly && !disable) {\n                    wrapper\n                        .removeClass(STATEDISABLED)\n                        .on(HOVEREVENTS, that._toggleHover);\n                    if (element && element.length) {\n                        element[0].removeAttribute(DISABLED);\n                        element[0].removeAttribute(READONLY);\n                    }\n                    element.attr(ARIA_DISABLED, false)\n                           .attr(ARIA_READONLY, false)\n                           .on(\"keydown\" + ns, that._keydown.bind(that))\n                           .on(\"focusout\" + ns, that._blur.bind(that))\n                           .on(\"focus\" + ns, function() {\n                               that.wrapper.addClass(FOCUSED);\n                           });\n\n                   icon.on(UP, that._click.bind(that))\n                       .on(MOUSEDOWN, preventDefault);\n                } else {\n                    wrapper\n                        .addClass(disable ? STATEDISABLED : \"\")\n                        .removeClass(disable ? \"\" : STATEDISABLED);\n\n                    element.attr(DISABLED, disable)\n                           .attr(READONLY, readonly)\n                           .attr(ARIA_DISABLED, disable)\n                           .attr(ARIA_READONLY, readonly);\n                }\n            },\n\n            readonly: function(readonly) {\n                this._editable({\n                    readonly: readonly === undefined$1 ? true : readonly,\n                    disable: false\n                });\n                if (this._dateInput) {\n                    this._dateInput._editable({\n                        readonly: readonly === undefined$1 ? true : readonly,\n                        disable: false\n                    });\n                }\n\n                if (this.label && this.label.floatingLabel) {\n                    this.label.floatingLabel.readonly(readonly === undefined$1 ? true : readonly);\n                }\n            },\n\n            enable: function(enable) {\n                this._editable({\n                    readonly: false,\n                    disable: !(enable = enable === undefined$1 ? true : enable)\n                });\n                if (this._dateInput) {\n                    this._dateInput._editable({\n                        readonly: false,\n                        disable: !(enable = enable === undefined$1 ? true : enable)\n                    });\n                }\n\n                if (this.label && this.label.floatingLabel) {\n                    this.label.floatingLabel.enable(enable = enable === undefined$1 ? true : enable);\n                }\n            },\n\n            _label: function() {\n                var that = this;\n                var options = that.options;\n                var labelOptions = $.isPlainObject(options.label) ? options.label : {\n                    content: options.label\n                };\n\n                if (that._dateInput) {\n                    labelOptions.floatCheck = () => {\n\n                        if (!that.value() && (!that._dateInput._hasDateInput() || that.element.val() === \"\") && document.activeElement !== that.element[0]) {\n                            that.element.val(\"\");\n                            return true;\n                        }\n\n                        return false;\n                    };\n                }\n\n                that.label = new kendo.ui.Label(null, $.extend({}, labelOptions, {\n                    widget: that\n                }));\n\n                that._inputLabel = that.label.element;\n            },\n\n            destroy: function() {\n                var that = this;\n\n                if (that.label) {\n                    that.label.destroy();\n                }\n\n                Widget.fn.destroy.call(that);\n\n                if (that.dateView.calendar && that._navigateCalendarHandler) {\n                    that.dateView.calendar.unbind(NAVIGATE, that._navigateCalendarHandler);\n                    that._navigateCalendarHandler = null;\n                }\n\n                that.dateView.destroy();\n\n                that.element.off(ns);\n                that._dateIcon.off(ns);\n\n                if (that._form) {\n                    that._form.off(\"reset\", that._resetHandler);\n                }\n\n                if (that.bigScreenMQL) {\n                    that.bigScreenMQL.destroy();\n                }\n\n                that._createDateViewProxy = null;\n            },\n\n            open: function() {\n                this.dateView.open();\n                this._navigateCalendar();\n            },\n\n            close: function() {\n                this.dateView.close();\n            },\n\n            min: function(value) {\n                return this._option(MIN, value);\n            },\n\n            max: function(value) {\n                return this._option(MAX, value);\n            },\n\n            value: function(value) {\n                var that = this;\n\n                if (value === undefined$1) {\n                    return that._value;\n                }\n\n                that._old = that._update(value);\n\n                if (that._old === null) {\n                    if (that._dateInput) {\n                        that._dateInput.value(that._old);\n                    } else {\n                        that.element.val(\"\");\n                    }\n                }\n\n                that._oldText = that.element.val();\n\n                if (that.label && that.label.floatingLabel) {\n                    that.label.floatingLabel.refresh();\n                }\n            },\n\n            _toggleHover: function(e) {\n                $(e.currentTarget).toggleClass(HOVER, e.type === \"mouseenter\");\n            },\n\n            _isReset: function(value) {\n                var that = this;\n                return that.options.dateInput && that.options.autoFill && that._dateInput._emptyMask == value;\n            },\n\n            _blur: function() {\n                var that = this,\n                    value = that.element.val();\n\n                that.close();\n                if (value !== that._oldText) {\n\n                    if (that.options.autoFill && !that._isReset(value)) {\n                        that._dateInput.dateInputInstance.autoFill();\n                        value = that.element.val();\n                    }\n\n                    that._change(value);\n                    if (!value) {\n                        that.dateView.current(kendo.calendar.getToday());\n                    }\n                }\n\n                that.wrapper.removeClass(FOCUSED);\n            },\n\n            _click: function(e) {\n                var that = this;\n\n                that.dateView.toggle();\n                that._navigateCalendar();\n                that._focusElement(e.type);\n            },\n\n            _focusElement: function(eventType) {\n                var element = this.element;\n\n                if ((!support.touch || (support.mouseAndTouchPresent && !(eventType || \"\").match(/touch/i))) && element[0] !== activeElement()) {\n                    element.trigger(\"focus\");\n                }\n            },\n\n            _change: function(value) {\n                var that = this,\n                oldValue = that.element.val(),\n                dateChanged;\n\n                value = that._update(value);\n                dateChanged = !kendo.calendar.isEqualDate(that._old, value);\n\n                var valueUpdated = dateChanged && !that._typing;\n                var textFormatted = oldValue !== that.element.val();\n\n                if (valueUpdated || textFormatted) {\n                    that.element.trigger(CHANGE);\n                }\n\n                if (dateChanged) {\n                    that._old = value;\n                    that._oldText = that.element.val();\n\n                    that.trigger(CHANGE);\n                }\n\n                that._typing = false;\n            },\n\n            _keydown: function(e) {\n                var that = this,\n                    dateView = that.dateView,\n                    value = that.element.val(),\n                    handled = false;\n\n                if (!dateView.popup.visible() && e.keyCode == keys.ENTER && value !== that._oldText) {\n                    that._change(value);\n                } else {\n                    handled = dateView.move(e);\n                    that._updateARIA(dateView._current);\n\n                    if (!handled) {\n                        that._typing = true;\n                    } else if (that._dateInput && e.stopImmediatePropagation) {\n                        e.stopImmediatePropagation();\n                    }\n                }\n            },\n\n            _icon: function() {\n                var that = this,\n                    element = that.element,\n                    options = that.options,\n                    icon;\n\n                icon = element.next(\"button.k-input-button\");\n\n                if (!icon[0]) {\n                    icon = $(html.renderButton('<button aria-label=\"select\" tabindex=\"-1\" class=\"k-input-button k-button k-icon-button\"></button>', {\n                        icon: \"calendar\",\n                        size: options.size,\n                        fillMode: options.fillMode,\n                        shape: \"none\",\n                        rounded: \"none\"\n                    })).insertAfter(element);\n                }\n\n                that._dateIcon = icon.attr({\n                    \"role\": \"button\"\n                });\n            },\n\n            _setCalendarAttribute: function() {\n                var that = this;\n                setTimeout(function() {\n                    that.element.attr(ARIA_ACTIVEDESCENDANT, that.dateView.calendar._table.attr(ARIA_ACTIVEDESCENDANT));\n                });\n            },\n\n            _navigateCalendar: function() {\n                var that = this;\n\n                if (!that._navigateCalendarHandler) {\n                    that._navigateCalendarHandler = that._setCalendarAttribute.bind(that);\n                }\n\n                if (!!that.dateView.calendar) {\n                    that.dateView.calendar.unbind(NAVIGATE, that._navigateCalendarHandler).bind(NAVIGATE, that._navigateCalendarHandler);\n                }\n            },\n\n            _option: function(option, value) {\n                var that = this,\n                    options = that.options;\n\n                if (value === undefined$1) {\n                    return options[option];\n                }\n\n                value = parse(value, options.parseFormats, options.culture);\n\n                if (!value) {\n                    return;\n                }\n\n                options[option] = new DATE(+value);\n                that.dateView[option](value);\n\n                if (that._dateInput) {\n                    that._dateInput[option](value);\n                }\n            },\n\n            _update: function(value) {\n                var that = this,\n                    options = that.options,\n                    min = options.min,\n                    max = options.max,\n                    current = that._value,\n                    date = parse(value, options.parseFormats, options.culture),\n                    isSameType = (date === null && current === null) || (date instanceof Date && current instanceof Date),\n                    formattedValue;\n\n                if (options.disableDates(date)) {\n                    date = null;\n                    if (!that._old && !that.element.val()) {\n                        value = null;\n                    }\n                }\n\n                if (+date === +current && isSameType) {\n                    formattedValue = kendo.toString(date, options.format, options.culture);\n\n                    if (formattedValue !== value && !(that._dateInput && !date)) {\n                        that.element.val(date === null ? value : formattedValue);\n                    }\n\n                    return date;\n                }\n\n                if (date !== null && isEqualDatePart(date, min)) {\n                    date = restrictValue(date, min, max);\n                } else if (!isInRange(date, min, max)) {\n                    date = null;\n                }\n\n                that._value = date;\n                that.dateView.value(date);\n                if (that._dateInput && date) {\n                    that._dateInput.value(date || value);\n                } else {\n                    that.element.val(kendo.toString(date || value, options.format, options.culture));\n                }\n                that._updateARIA(date);\n\n                return date;\n            },\n\n            _wrapper: function() {\n                var that = this,\n                    element = that.element,\n                    wrapper;\n\n                wrapper = element.parents(\".k-datepicker\");\n\n                if (!wrapper[0]) {\n                    wrapper = element.wrap(SPAN).parent();\n                }\n\n                wrapper[0].style.cssText = element[0].style.cssText;\n                element.css({\n                    height: element[0].style.height\n                });\n\n                that.wrapper = wrapper.addClass(\"k-datepicker k-input\")\n                    .addClass(element[0].className).removeClass('input-validation-error');\n            },\n\n            _reset: function() {\n                var that = this,\n                    element = that.element,\n                    formId = element.attr(\"form\"),\n                    options = that.options,\n                    disabledDate = options.disableDates,\n                    parseFormats = options.parseFormats.length ? options.parseFormats : null,\n                    optionsValue = that._initialOptions.value,\n                    form = formId ? $(\"#\" + formId) : element.closest(\"form\"),\n                    initialValue = element[0].defaultValue;\n\n                if (optionsValue && (disabledDate && disabledDate(optionsValue))) {\n                    optionsValue = null;\n                }\n\n                if ((!initialValue || !kendo.parseDate(initialValue, parseFormats, options.culture)) && optionsValue) {\n                    element.attr(\"value\", kendo.toString(optionsValue, options.format, options.culture));\n                }\n\n                if (form[0]) {\n                    that._resetHandler = function() {\n                        that.value(optionsValue || element[0].defaultValue);\n                        that.max(that._initialOptions.max);\n                        that.min(that._initialOptions.min);\n                    };\n\n                    that._form = form.on(\"reset\", that._resetHandler);\n                }\n            },\n\n            _template: function() {\n                this._ariaTemplate = template(this.options.ARIATemplate).bind(this);\n            },\n\n            _createDateInput: function(options) {\n                if (this._dateInput) {\n                    this._dateInput.destroy();\n                    this._dateInput = null;\n                }\n\n                if (options.dateInput ) {\n                    this._dateInput = new ui.DateInput(this.element, {\n                        autoAdjust: options.autoAdjust,\n                        culture: options.culture,\n                        format: options.format,\n                        size: options.size,\n                        fillMode: options.fillMode,\n                        rounded: options.rounded,\n                        min: options.min,\n                        max: options.max,\n                        messages: options.messages.dateInput,\n                        autoFill: options.autoFill,\n                        autoCorrectParts: options.autoCorrectParts,\n                        toggleDayPeriod: true,\n                        inputMode: options.inputMode\n                    });\n                }\n            },\n\n            _updateARIA: function(date) {\n                var that = this;\n                var calendar = that.dateView.calendar;\n\n                if (that.element && that.element.length) {\n                    that.element[0].removeAttribute(ARIA_ACTIVEDESCENDANT);\n                }\n\n                if (calendar) {\n                    that.element.attr(ARIA_ACTIVEDESCENDANT, calendar._updateAria(that._ariaTemplate, date));\n                }\n            }\n        });\n\n        kendo.cssProperties.registerPrefix(\"DatePicker\", \"k-input-\");\n\n        kendo.cssProperties.registerValues(\"DatePicker\", [{\n            prop: \"rounded\",\n            values: kendo.cssProperties.roundedValues.concat([['full', 'full']])\n        }]);\n\n        ui.plugin(DatePicker);\n\n    })(window.kendo.jQuery);\n    var kendo$1 = kendo;\n\n    exports.__meta__ = __meta__;\n    exports.default = kendo$1;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n"]}
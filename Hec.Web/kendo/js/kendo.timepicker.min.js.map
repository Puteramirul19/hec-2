{"version":3,"sources":["raw-js/kendo.timepicker.js"],"names":["global","factory","exports","module","require","define","amd","globalThis","self","kendo","_globals","Timepicker","this","$","undefined$1","window","keys","html","parse","parseDate","encode","htmlEncode","activeElement","_activeElement","extractFormat","_extractFormat","support","browser","mediaQuery","ui","Widget","OPEN","CLOSE","CHANGE","ns","CLICK","DISABLED","READONLY","LI","FOCUSED","HOVER","HOVEREVENTS","MOUSEDOWN","MS_PER_MINUTE","MS_PER_DAY","SELECTED","STATEDISABLED","ARIA_SELECTED","ARIA_EXPANDED","ARIA_HIDDEN","ARIA_DISABLED","ARIA_READONLY","ARIA_ACTIVEDESCENDANT","ID","isArray","Array","extend","DATE","Date","TODAY","MODERN_RENDERING_TEMPLATE","mainSize","messages","buttonSize","isAdaptive","renderButton","now","fillMode","size","NEW_RENDERING_FOOTER","cancel","set","themeColor","getFullYear","getMonth","getDate","TimeView","options","that","focusTime","id","_dates","bigScreenMQL","smallScreenMQL","adaptiveMode","onChange","popup","isFunction","fullscreen","mediaQueryList","matches","timeView","list","addTranslate","_updateRanges","_createList","_focusTime","getHours","getMinutes","getSeconds","_timeViewID","_optionID","ul","attr","_heightHandler","_height","bind","_popup","getMilliseconds","date","isInRange","value","min","max","msValue","msMin","msMax","prototype","scroll","_createScrollList","_createClassicRenderingList","templateOptions","getValidCssClass","popupContent","template","on","preventDefault","find","footerCancelSelector","footerAcceptSelector","_nowClickHandler","_cancelClickHandler","_setClickHandler","_mouseOverHandler","_scrollerKeyDownHandler","e","key","keyCode","currentTarget","lists","length","index","isRtl","wrapper","itemHeight","getItemHeight","eq","container","RIGHT","LEFT","_focusList","UP","scrollTop","DOWN","ENTER","ESC","removeClass","addClass","trigger","_scrollTop","listParent","css","overflow","kineticScrollNeeded","_click","append","data","current","candidate","active","_current","removeAttribute","_updateTitle","toString","_value","format","culture","applyValue","designator","is12hourFormat","includes","toLowerCase","hours","minutes","seconds","indexAttr","hoursList","minutessList","secondsList","designatorList","_internalScroll","_scrollListToPosition","item","pad","close","destroy","off","open","popupHovered","firstChild","_hovered","setTimeout","dataBind","dates","idx","_html","refresh","interval","today","midnight","noon","offset","getTimezoneOffset","ignoreDST","parsedValue","mergeDateAndTime","msLastTime","setMinutes","msInterval","start","useValueToRender","startDate","_createListContent","splitDateFormat","getDatesInRange","msStart","forEach","_showAllHiddenItems","items","i","show","_updateListBottomOffset","bottomOffset","outerHeight","height","_updateHoursRange","useMax","useMin","minHours","_minHours","maxHours","_maxHours","selectedDesignator","_findSelectedValue","each","_","_validateMin","_validateMax","hide","_updateMinutesRange","minutesList","minMinutes","_minMinutes","maxMinutes","_maxMinutes","selectedHour","_updateSecondsRange","minSeconds","_minSeconds","maxSeconds","selectedMinutes","_updateDesignatorRange","specifiedRange","_currentlySelected","endTime","startTime","validateDate","_maxSeconds","listHeight","translate","transform","_itemClickHandler","_listScrollHandler","change","_scrollingTimeout","clearTimeout","_updateCurrentlySelected","selectedSeconds","is","setHours","setSeconds","firstOccurence","Math","round","originalEvent","result","push","setTime","getTime","maxSet","_ignoreMaxSet","parts","part","values","type","_literalTemplate","_getValues","_itemTemplate","title","shouldPad","end","step","currentStep","isPlainObject","hour12","isDayTimePattern","pattern","innerHTML","unbind","one","select","scrollIntoViewIfNeeded","element","centerIfNeeded","makeRange","coverRange","inner","outer","makePoint","x","y","dX","dY","absolute","elem","pt","offsetLeft","offsetTop","offsetParent","origin","target","extent","offsetWidth","offsetHeight","parentNode","HTMLElement","clientLeft","clientTop","scrollLeft","clientWidth","clientHeight","li","selection","text","grep","childNodes","node","textContent","innerText","_distinctSelection","currentValue","selectionIndex","inArray","children","setOptions","old","toggle","visible","filter","d","_inRange","isDefaultPrevented","dateSeconds","parent","closest","elements","add","scrollHeight","_parse","parseFormats","_adjustListWidth","computedStyle","computedWidth","width","style","anchor","outerWidth","_outerWidth","getComputedStyle","parseFloat","mozilla","msie","paddingLeft","paddingRight","borderLeftWidth","borderRightWidth","fontFamily","omitPopup","appendTo","timeDiv","Popup","animation","activate","document","body","ActionSheet","adaptive","focusOnActivate","adaptiveTitle","subtitle","adaptiveSubtitle","closeButton","icon","footerTemplate","componentType","_footer","move","down","isInput","isModernType","isPopupOpened","preventInputValueChange","altKey","nextSibling","previousSibling","lastChild","TAB","TimePicker","init","fn","call","inputMode","_specifiedRange","normalize","_initialOptions","_wrapper","_createTimeViewProxy","_update","val","_createTimeView","_icon","_reset","setAttribute","role","autocomplete","parents","enable","readonly","_createDateInput","_old","_oldText","_applyCssClasses","label","_label","removeAttr","notify","name","autoAdjust","dateInput","hour","minute","second","millisecond","rounded","autoCorrectParts","events","componentTypes","classic","modern","isComponentTypeChanged","_arrow","remove","_editable","_inputLabel","_unwrapFloating","_dateInput","DateInput","toggleDayPeriod","disable","arrow","_unbindInput","_toggleHover","_keydown","_blur","_bindInput","labelOptions","content","floatCheck","_hasDateInput","Label","widget","floatingLabel","_form","_resetHandler","_option","_typing","_change","touch","dateChanged","oldValue","valueUpdated","calendar","isEqualDate","textFormatted","_ariaLabel","next","shape","insertAfter","stopImmediatePropagation","option","toggleClass","_toggleMaxSet","flag","wrap","cssText","className","formId","form","defaultValue","getCulture","calendars","standard","patterns","t","splice","time","subStr","returnValue","indexOf","s","String","getBoundingClientRect","cssProperties","registerPrefix","registerValues","prop","roundedValues","concat","plugin","jQuery","kendo$1","__meta__","category","description","depends","default","Object","defineProperty"],"mappings":"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","file":"kendo.timepicker.min.js","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('kendo.calendar.js'), require('kendo.popup.js'), require('kendo.dateinput.js'), require('kendo.html.button.js'), require('kendo.label.js'), require('kendo.actionsheet.js')) :\n    typeof define === 'function' && define.amd ? define(['exports', 'kendo.calendar', 'kendo.popup', 'kendo.dateinput', 'kendo.html.button', 'kendo.label', 'kendo.actionsheet'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global.kendo = global.kendo || {}, global.kendo._globals = global.kendo._globals || {}, global.kendo._globals.Timepicker = {})));\n})(this, (function (exports) {\n    const __meta__ = {\n        id: \"timepicker\",\n        name: \"TimePicker\",\n        category: \"web\",\n        description: \"The TimePicker widget allows the end user to select a value from a list of predefined values or to type a new value.\",\n        depends: [ \"calendar\", \"popup\", \"html.button\", \"label\", \"actionsheet\" ]\n    };\n\n    (function($, undefined$1) {\n        var kendo = window.kendo,\n            keys = kendo.keys,\n            html = kendo.html,\n            parse = kendo.parseDate,\n            encode = kendo.htmlEncode,\n            activeElement = kendo._activeElement,\n            extractFormat = kendo._extractFormat,\n            support = kendo.support,\n            browser = support.browser,\n            mediaQuery = kendo.mediaQuery,\n            ui = kendo.ui,\n            Widget = ui.Widget,\n            OPEN = \"open\",\n            CLOSE = \"close\",\n            CHANGE = \"change\",\n            ns = \".kendoTimePicker\",\n            CLICK = \"click\" + ns,\n            DISABLED = \"disabled\",\n            READONLY = \"readonly\",\n            LI = \"li\",\n            SPAN = \"<span></span>\",\n            FOCUSED = \"k-focus\",\n            HOVER = \"k-hover\",\n            HOVEREVENTS = \"mouseenter\" + ns + \" mouseleave\" + ns,\n            MOUSEDOWN = \"mousedown\" + ns,\n            DEFAULT_HEIGHT = 200,\n            MS_PER_MINUTE = 60000,\n            MS_PER_DAY = 86400000,\n            SELECTED = \"k-selected\",\n            STATEDISABLED = \"k-disabled\",\n            ARIA_SELECTED = \"aria-selected\",\n            ARIA_EXPANDED = \"aria-expanded\",\n            ARIA_HIDDEN = \"aria-hidden\",\n            ARIA_DISABLED = \"aria-disabled\",\n            ARIA_READONLY = \"aria-readonly\",\n            ARIA_ACTIVEDESCENDANT = \"aria-activedescendant\",\n            ID = \"id\",\n            isArray = Array.isArray,\n            extend = $.extend,\n            DATE = Date,\n            TODAY = new DATE(),\n            MODERN_RENDERING_TEMPLATE = ({ mainSize, messages, buttonSize, isAdaptive }) =>\n            '<div>' +\n                `<div tabindex=\"0\" class=\"k-timeselector ${mainSize}\">` +\n                    '<div class=\"k-time-header\">' +\n                        '<span class=\"k-title\"></span>' +\n                        kendo.html.renderButton(`<button class=\"k-time-now\" title=\"Select now\" aria-label=\"Select now\">${encode(messages.now)}</button>`, {\n                            fillMode: \"flat\",\n                            size: buttonSize\n                        }) +\n                    '</div>' +\n                    '<div class=\"k-time-list-container\">' +\n                        '<span class=\"k-time-highlight\"></span>' +\n                    '</div>' +\n                '</div>' +\n                (isAdaptive ? \"\" : NEW_RENDERING_FOOTER(buttonSize, messages)) +\n            '</div>',\n            NEW_RENDERING_FOOTER = (buttonSize, messages, isAdaptive) => (isAdaptive ? (\n                kendo.html.renderButton(`<button class=\"k-time-cancel\" title=\"Cancel changes\" aria-label=\"Cancel changes\">${encode(messages.cancel)}</button>`, {\n                    size: buttonSize\n                }) +\n                kendo.html.renderButton(`<button class=\"k-time-accept\" title=\"Set time\" aria-label=\"Set time\">${encode(messages.set)}</button>`, {\n                    size: buttonSize,\n                    themeColor: \"primary\"\n                })\n            ) : ('<div class=\"k-time-footer k-actions k-actions-stretched k-actions-horizontal\">' +\n                kendo.html.renderButton(`<button class=\"k-time-accept\" title=\"Set time\" aria-label=\"Set time\">${encode(messages.set)}</button>`, {\n                    size: buttonSize,\n                    themeColor: \"primary\"\n                }) +\n                kendo.html.renderButton(`<button class=\"k-time-cancel\" title=\"Cancel changes\" aria-label=\"Cancel changes\">${encode(messages.cancel)}</button>`, {\n                    size: buttonSize\n                }) +\n            '</div>')\n        ),\n            HIGHLIGHTCONTAINER = '<span class=\"k-time-highlight\"></span>';\n\n            TODAY = new Date(TODAY.getFullYear(), TODAY.getMonth(), TODAY.getDate(), 0, 0, 0);\n\n        var TimeView = function(options) {\n            var that = this,\n            focusTime = options.focusTime,\n            id = options.id;\n\n            that.options = options;\n            that._dates = [];\n\n            that.bigScreenMQL = mediaQuery(\"large\");\n            that.smallScreenMQL = mediaQuery(\"small\");\n            if (that.options.adaptiveMode == \"auto\") {\n                that.smallScreenMQL.onChange(function() {\n                    if (that.popup && kendo.isFunction(that.popup.fullscreen)) {\n                        that.popup.fullscreen(that.smallScreenMQL.mediaQueryList.matches);\n                        if (that.options.timeView && that.options.timeView.list === \"scroll\") {\n                            that.addTranslate();\n                            that._updateRanges();\n                        }\n                    }\n                });\n            }\n\n            that._createList(options.timeView && options.timeView.list === \"scroll\");\n            if (focusTime) {\n                that._focusTime = new DATE(TODAY.getFullYear(), TODAY.getMonth(), TODAY.getDate(), focusTime.getHours(), focusTime.getMinutes(), focusTime.getSeconds());\n            }\n\n            if (id) {\n                that._timeViewID = id + \"_timeview\";\n                that._optionID = id + \"_option_selected\";\n\n                that.ul.attr(ID, that._timeViewID);\n            }\n\n            that._heightHandler = that._height.bind(that);\n            that._popup();\n        };\n\n        TimeView.prototype = {\n            _createList: function(scroll) {\n                if (scroll) {\n                    this._createScrollList();\n                } else {\n                    this._createClassicRenderingList();\n                }\n            },\n            _createScrollList: function() {\n                var size = this.options.adaptiveMode != \"auto\" || this.bigScreenMQL.mediaQueryList.matches ? this.options.size || \"medium\" : \"large\";\n                const isAdaptive = this.options.adaptiveMode === \"auto\" && !this.bigScreenMQL.mediaQueryList.matches;\n\n                var templateOptions = $.extend({}, this.options, {\n                    mainSize: kendo.getValidCssClass(\"k-timeselector-\", \"size\", size),\n                    buttonSize: size,\n                    isAdaptive: isAdaptive,\n                });\n                this.popupContent = $(kendo.template(MODERN_RENDERING_TEMPLATE)(templateOptions))\n                .on(MOUSEDOWN, preventDefault);\n                this.list = this.popupContent.find(\".k-timeselector\");\n\n                const footerCancelSelector = isAdaptive ? \".k-actionsheet-footer button.k-time-cancel\" : \".k-time-footer button.k-time-cancel\";\n                const footerAcceptSelector = isAdaptive ? \".k-actionsheet-footer button.k-time-accept\" : \".k-time-footer button.k-time-accept\";\n\n                this.ul = this.list.find(\".k-time-list-container\");\n                this.list.on(\"click\" + ns, \".k-time-header button.k-time-now\", this._nowClickHandler.bind(this));\n                this.popupContent.on(\"click\" + ns, footerCancelSelector, this._cancelClickHandler.bind(this));\n                this.popupContent.on(\"click\" + ns, footerAcceptSelector, this._setClickHandler.bind(this));\n                this.list.on(\"mouseover\" + ns, \".k-time-list-wrapper\", this._mouseOverHandler.bind(this));\n                this.list.on(\"keydown\" + ns, this._scrollerKeyDownHandler.bind(this));\n            },\n\n            _scrollerKeyDownHandler: function(e) {\n                var that = this,\n                    key = e.keyCode,\n                    list = $(e.currentTarget).find(\".k-time-list-wrapper.k-focus\"),\n                    lists = that.list.find(\".k-time-list-wrapper\"),\n                    length = lists.length,\n                    index = lists.index(list),\n                    isRtl = kendo.support.isRtl(that.wrapper),\n                    itemHeight = getItemHeight(list.find(\".k-item:visible\").eq(0)),\n                    container = list.find(\".k-time-container.k-content.k-scrollable\");\n\n                if (!list.length) {\n                    return;\n                }\n\n                if (key == keys.RIGHT && !isRtl || key == keys.LEFT && isRtl) {\n                    if (index + 1 < length) {\n                        that._focusList(lists.eq(index + 1));\n                    }\n\n                } else if (key == keys.LEFT && !isRtl || key == keys.RIGHT && isRtl) {\n                    if (index - 1 >= 0) {\n                        that._focusList(lists.eq(index - 1));\n                    }\n                } else if (key == keys.UP) {\n                    container.scrollTop(container.scrollTop() - itemHeight);\n                    e.preventDefault();\n                } else if (key == keys.DOWN) {\n                    container.scrollTop(container.scrollTop() + itemHeight);\n                    e.preventDefault();\n                } else if (key === keys.ENTER) {\n                    that._setClickHandler(e);\n                } else if (key === keys.ESC) {\n                    that._cancelClickHandler(e);\n                }\n            },\n\n            _mouseOverHandler: function(e) {\n                this._focusList($(e.currentTarget));\n            },\n\n            _focusList: function(list) {\n                this.list.find(\".k-time-list-wrapper\").removeClass(FOCUSED);\n                list.addClass(FOCUSED);\n                this.list.trigger(\"focus\");\n                this._scrollTop = list.find('.k-scrollable').scrollTop();\n            },\n            _createClassicRenderingList: function() {\n                var that = this;\n                var listParent = $('<div class=\"k-list ' + kendo.getValidCssClass(\"k-list-\", \"size\", that.options.size) + '\"><div class=\"k-list-content\"><ul tabindex=\"-1\" role=\"listbox\" aria-hidden=\"true\" unselectable=\"on\" class=\"k-list-ul\"/></div></div>');\n\n                that.ul = listParent.find(\"ul\")\n                    .css({\n                        overflow: support.kineticScrollNeeded ? \"\" : \"auto\"\n                    })\n                    .on(CLICK, LI, that._click.bind(that))\n                    .on(\"mouseenter\" + ns, LI, function() {\n                        $(this).addClass(HOVER);\n                    })\n                    .on(\"mouseleave\" + ns, LI, function() {\n                        $(this).removeClass(HOVER);\n                    });\n\n                that.list = $(\"<div class='k-list-container k-list-scroller' unselectable='on'/>\")\n                    .append(listParent)\n                    .on(MOUSEDOWN, preventDefault);\n\n                that.template = (data) => `<li tabindex=\"-1\" role=\"option\" class=\"k-list-item\" unselectable=\"on\"><span class=\"k-list-item-text\">${data}</span></li>`;\n\n            },\n            current: function(candidate) {\n                var that = this,\n                    active = that.options.active;\n\n                if (candidate !== undefined$1) {\n                    if (that._current) {\n                        that._current\n                            .removeClass(SELECTED);\n                            if (that._current && that._current.length) {\n                                that._current[0].removeAttribute(ID);\n                                that._current[0].removeAttribute(ARIA_SELECTED);\n                            }\n                    }\n\n                    if (candidate) {\n                        candidate = $(candidate).addClass(SELECTED)\n                                                .attr(ID, that._optionID)\n                                                .attr(ARIA_SELECTED, true);\n\n                        that.scroll(candidate[0]);\n                    }\n\n                    that._current = candidate;\n\n                    if (active) {\n                        active(candidate);\n                    }\n                } else {\n                    return that._current;\n                }\n            },\n\n            _updateTitle: function() {\n                this.list.find(\".k-time-header > .k-title\").html(kendo.toString(this._value, this.options.format, this.options.culture));\n            },\n\n            applyValue: function(value) {\n                if (!value) {\n                    return;\n                }\n\n                var is12hourFormat = includes(this.options.format.toLowerCase(), \"t\");\n                var hours = value.getHours();\n                var minutes = value.getMinutes();\n                var seconds = value.getSeconds();\n                var designator;\n                var indexAttr = kendo.attr('index');\n                var hoursList = this.ul.find('[' + indexAttr + '=\"1\"]');\n                var minutessList = this.ul.find('[' + indexAttr + '=\"2\"]');\n                var secondsList = this.ul.find('[' + indexAttr + '=\"3\"]');\n                var designatorList = this.ul.find('[' + indexAttr + '=\"4\"]');\n\n                if (is12hourFormat) {\n                    if (hours >= 12) {\n                        designator = \"PM\";\n                        if (hours > 12) {\n                            hours -= 12;\n                        }\n                    } else {\n                        designator = \"AM\";\n                        if (hours === 0) {\n                            hours = 12;\n                        }\n                    }\n                }\n\n                this._internalScroll = true;\n                if (hoursList.length) {\n                    this._scrollListToPosition(hoursList, hours);\n                }\n\n                if (minutessList.length) {\n                    this._scrollListToPosition(minutessList, minutes);\n                }\n\n                if (secondsList.length) {\n                    this._scrollListToPosition(secondsList, seconds);\n                }\n\n                if (designatorList.length) {\n                    this._scrollListToPosition(designatorList, designator);\n                }\n                this._internalScroll = false;\n            },\n\n            _scrollListToPosition: function(list, value) {\n                var item = list.find('.k-item[data-value=\"' + pad(value) + '\"]');\n                var itemHeight = getItemHeight(item);\n\n                list.scrollTop(list.find(\".k-item:visible\").index(item) * itemHeight);\n            },\n\n            close: function() {\n                if (this.popup) {\n                    this.popup.close();\n                }\n            },\n\n            destroy: function() {\n                var that = this;\n\n                that.ul.off(ns);\n                that.list.off(ns);\n                if (that.popupContent) {\n                    that.popupContent.off(ns);\n                }\n                if (that.popup) {\n                    that.popup.destroy();\n                }\n\n                if (that.bigScreenMQL) {\n                    that.bigScreenMQL.destroy();\n                }\n\n                if (that.smallScreenMQL) {\n                    that.smallScreenMQL.destroy();\n                }\n            },\n\n            open: function() {\n                var that = this;\n                var popupHovered;\n\n                if (!that.ul[0].firstChild || (that.ul.find(\"li\").length < 1)) {\n                    that.bind();\n                }\n\n                if (that._focusTime) {\n                    that.value(that._focusTime);\n                }\n\n                // In some cases when the popup is opened resize is triggered which will cause it to close\n                // Setting the below flag will prevent this from happening\n                // Reference: https://github.com/telerik/kendo/pull/7553\n                popupHovered = that.popup._hovered;\n                that.popup._hovered = true;\n\n                that.popup.open();\n\n                setTimeout(function() {\n                    that.popup._hovered = popupHovered;\n                }, 1);\n\n                if (that._current) {\n                    that.scroll(that._current[0]);\n                }\n            },\n\n            dataBind: function(dates) {\n                var that = this,\n                    options = that.options,\n                    format = options.format,\n                    toString = kendo.toString,\n                    template = that.template,\n                    length = dates.length,\n                    idx = 0,\n                    date,\n                    html = \"\";\n\n                for (; idx < length; idx++) {\n                    date = dates[idx];\n\n                    if (isInRange(date, options.min, options.max)) {\n                        html += template(toString(date, format, options.culture));\n                    }\n                }\n\n                that._html(html);\n            },\n\n            refresh: function() {\n                var that = this,\n                    options = that.options,\n                    format = options.format,\n                    offset = dst(),\n                    ignoreDST = offset < 0,\n                    value = kendo.parseDate(that._value),\n                    parsedValue = value ? mergeDateAndTime(value, options.min) : mergeDateAndTime(new Date(), options.min),\n                    min = options.min,\n                    max = options.max,\n                    msMin = getMilliseconds(min),\n                    msMax = getMilliseconds(max),\n                    msLastTime = getMilliseconds(lastTimeOption(options.interval)),\n                    msInterval = options.interval * MS_PER_MINUTE,\n                    toString = kendo.toString,\n                    template = that.template,\n                    start = options.useValueToRender ? parsedValue : new Date(+options.min),\n                    startDate = new DATE(start),\n                    msStart,\n                    length,\n                    html = \"\";\n\n                if (ignoreDST) {\n                    length = (MS_PER_DAY + (offset * MS_PER_MINUTE)) / msInterval;\n                } else {\n                    length = MS_PER_DAY / msInterval;\n                }\n\n                if (msMin != msMax || msLastTime === msMax) {\n                    if (msMin > msMax) {\n                        msMax += MS_PER_DAY;\n                    }\n\n                    length = ((msMax - msMin) / msInterval) + 1;\n                }\n\n                if (options.timeView && options.timeView.list === \"scroll\") {\n                    html = that._createListContent(kendo.date.splitDateFormat(format), options.interval);\n                } else {\n                    that.getDatesInRange(msStart, msMax, startDate, max, msInterval, start).forEach(function(date) {\n                        html += template(toString(date, format, options.culture));\n                    });\n                }\n\n                that._html(html);\n            },\n\n            _showAllHiddenItems: function() {\n                var items = this.list.find('.k-time-container');\n                var length = items.length;\n                var item;\n\n                for (var i = 0; i < length; i++) {\n                    item = $(items[i]);\n                    item.find('.k-item:hidden').show();\n                    this._updateListBottomOffset(item);\n                }\n            },\n\n            _updateListBottomOffset: function(list) {\n                var itemHeight = getItemHeight(list.find(\".k-item:visible\").eq(0));\n                var listHeight = list.outerHeight();\n                var bottomOffset = listHeight - itemHeight;\n                list.find(\".k-scrollable-placeholder\").css({\n                    height: list.find(\"ul\").height() + bottomOffset\n                });\n            },\n\n            _updateHoursRange: function() {\n                var that = this;\n                var indexAttr = kendo.attr('index');\n                var hoursList = this.ul.find('[' + indexAttr + '=\"1\"]');\n                var minHours = this._minHours;\n                var maxHours = this._maxHours;\n                var is12hourFormat = includes(this.options.format.toLowerCase(), \"t\");\n                var useMax;\n                var useMin;\n                var selectedDesignator = this._findSelectedValue(this.ul.find('[' + indexAttr + '=\"4\"]'));\n\n                if (!hoursList.length) {\n                    return;\n                }\n\n                if (is12hourFormat && selectedDesignator) {\n\n                    if (selectedDesignator === \"AM\") {\n                        if (minHours < 12) {\n                            useMin = true;\n                        }\n\n                        if (maxHours < 12) {\n                            useMax = true;\n                        }\n                    } else if (selectedDesignator === \"PM\") {\n\n                        if (minHours > 12) {\n                            useMin = true;\n                            minHours -= 12;\n                        }\n\n                        if (maxHours > 12) {\n                            useMax = true;\n                            maxHours -= 12;\n                        }\n                    }\n\n                    hoursList.find(\".k-item\").each(function(_, item) {\n                        item = $(item);\n                        var value = +item.attr(\"data-value\");\n                        if ((that._validateMin && useMin && value < minHours) || (that._validateMax && useMax && value > maxHours)) {\n                            item.hide();\n                        } else {\n                            item.show();\n                        }\n                    });\n                } else {\n                    hoursList.find(\".k-item\").each(function(_, item) {\n                        item = $(item);\n                        var value = +item.attr(\"data-value\");\n                        if ((that._validateMin && value < minHours) ||\n                            (that._validateMax && value > maxHours)) {\n                            item.hide();\n                        } else {\n                            item.show();\n                        }\n                    });\n                }\n\n                this._updateListBottomOffset(hoursList);\n            },\n\n            _updateMinutesRange: function() {\n                var that = this;\n                var indexAttr = kendo.attr('index');\n                var minutesList = this.ul.find('[' + indexAttr + '=\"2\"]');\n                var minHours = this._minHours;\n                var maxHours = this._maxHours;\n                var minMinutes = this._minMinutes;\n                var maxMinutes = this._maxMinutes;\n                var selectedHour = +this._findSelectedValue(this.ul.find('[' + indexAttr + '=\"1\"]'));\n                var is12hourFormat = includes(this.options.format.toLowerCase(), \"t\");\n                var selectedDesignator = this._findSelectedValue(this.ul.find('[' + indexAttr + '=\"4\"]'));\n\n                if (is12hourFormat && selectedDesignator === \"PM\") {\n                    selectedHour += 12;\n                }\n\n                if (!minutesList.length) {\n                    return;\n                }\n\n                minutesList.find(\".k-item\").each(function(_, item) {\n                    item = $(item);\n                    var value = +item.attr(\"data-value\");\n                    if ((that._validateMin && value < minMinutes && (minHours && selectedHour) === minHours) ||\n                        (that._validateMax && value > maxMinutes && (maxHours && selectedHour) === maxHours)) {\n                        item.hide();\n                    } else {\n                        item.show();\n                    }\n                });\n\n                this._updateListBottomOffset(minutesList);\n            },\n\n            _updateSecondsRange: function() {\n                var that = this;\n                var indexAttr = kendo.attr('index');\n                var secondsList = this.ul.find('[' + indexAttr + '=\"3\"]');\n                var minSeconds = this._minSeconds;\n                var maxSeconds = this._minSeconds;\n                var minMinutes = this._minMinutes;\n                var maxMinutes = this._maxMinutes;\n                var selectedMinutes = +this._findSelectedValue(this.ul.find('[' + indexAttr + '=\"2\"]'));\n\n                if (!secondsList.length) {\n                    return;\n                }\n\n                secondsList.find(\".k-item\").each(function(_, item) {\n                    item = $(item);\n                    var value = +item.attr(\"data-value\");\n                    if ((that._validateMin && value < minSeconds && minMinutes && selectedMinutes === minMinutes) ||\n                        (that._validateMax && value > maxSeconds && maxMinutes && selectedMinutes === maxMinutes)) {\n                        item.hide();\n                    } else {\n                        item.show();\n                    }\n                });\n\n                this._updateListBottomOffset(secondsList);\n            },\n\n            _updateDesignatorRange: function() {\n                var minHours = this._minHours;\n                var maxHours = this._maxHours;\n                var indexAttr = kendo.attr('index');\n                var designatorList = this.ul.find('[' + indexAttr + '=\"4\"]');\n\n                if (!designatorList.length) {\n                   return;\n                }\n\n                if (this._validateMin && minHours >= 12) {\n                    designatorList.find('.k-item[data-value=\"AM\"]').hide();\n                } else {\n                    designatorList.find('.k-item[data-value=\"AM\"]').show();\n                }\n\n                if (this._validateMax && maxHours < 12) {\n                    designatorList.find('.k-item[data-value=\"PM\"]').hide();\n                } else {\n                    designatorList.find('.k-item[data-value=\"PM\"]').show();\n                }\n            },\n\n\n            _updateRanges: function() {\n                if (!this.options.specifiedRange) {\n                    return;\n                }\n                if (!this._currentlySelected) {\n                    this._currentlySelected = new Date();\n                }\n\n                var max = this.options.endTime ? this.options.endTime : this.options.max;\n                var min = this.options.startTime ? this.options.startTime : this.options.min;\n\n                if (this.options.validateDate) {\n                    if (max.getFullYear() === this._currentlySelected.getFullYear() &&\n                        max.getMonth() === this._currentlySelected.getMonth() &&\n                        max.getDate() === this._currentlySelected.getDate()) {\n                        this._validateMax = true;\n                    } else {\n                        this._validateMax = false;\n                    }\n\n                    if (min.getFullYear() === this._currentlySelected.getFullYear() &&\n                        min.getMonth() === this._currentlySelected.getMonth() &&\n                        min.getDate() === this._currentlySelected.getDate()) {\n                        this._validateMin = true;\n                    } else {\n                        this._validateMin = false;\n                    }\n\n                    if (!this._validateMax && !this._validateMin) {\n                        this._showAllHiddenItems();\n                        return;\n                    }\n                } else {\n                    this._validateMax = true;\n                    this._validateMin = true;\n                }\n\n                this._minMinutes = min.getMinutes();\n                this._maxMinutes = max.getMinutes();\n                this._minHours = min.getHours();\n                this._maxHours = max.getHours();\n                this._minSeconds = min.getSeconds();\n                this._maxSeconds = max.getSeconds();\n\n                this._updateDesignatorRange();\n                this._updateHoursRange();\n                this._updateMinutesRange();\n                this._updateSecondsRange();\n            },\n\n            addTranslate: function() {\n                var lists = this.ul.find(\".k-time-container.k-content.k-scrollable\");\n                var length = lists.length;\n                var list;\n                var itemHeight;\n                var listHeight;\n                var topOffset;\n                var translate;\n                var bottomOffset;\n\n                for (var i = 0; i < length; i++) {\n                    list = lists.eq(i);\n                    itemHeight = getItemHeight(list.find(\".k-item:visible\").eq(0));\n                    listHeight = list.outerHeight();\n                    topOffset = (listHeight - itemHeight) / 2;\n                    translate = \"translateY(\" + topOffset + \"px)\";\n                    bottomOffset = listHeight - itemHeight;\n                    list.find(\"ul\").css({\n                        transform: translate,\n                        \"-ms-transform\": translate\n                    });\n                    list.find(\".k-scrollable-placeholder\").css({\n                        height: list.find(\"ul\").height() + bottomOffset\n                    });\n                    list.off(ns)\n                        .on(\"click\" + ns, \".k-item\", this._itemClickHandler.bind(this))\n                        .on(\"scroll\" + ns, this._listScrollHandler.bind(this));\n                }\n            },\n\n            _nowClickHandler: function(e) {\n                e.preventDefault();\n\n                var now = new Date();\n                this.value(now);\n                this.options.change(kendo.toString(now, this.options.format, this.options.culture), true);\n            },\n\n            _cancelClickHandler: function(e) {\n                e.preventDefault();\n                this.value(this._value);\n                if (this.popup) {\n                    this.popup.close();\n                }\n            },\n\n            _setClickHandler: function(e) {\n                e.preventDefault();\n                this._value = new Date(this._currentlySelected);\n\n                this.options.change(kendo.toString(this._currentlySelected, this.options.format, this.options.culture), true);\n                if (this.popup) {\n                    this.popup.close();\n                }\n            },\n\n            _listScrollHandler: function(e) {\n                var that = this;\n                var itemHeight = getItemHeight($(e.currentTarget).find(\".k-item:visible\").eq(0));\n\n                if (that._internalScroll) {\n                    return;\n                }\n\n                if (that._scrollingTimeout) {\n                    clearTimeout(that._scrollingTimeout);\n                }\n\n                that._scrollingTimeout = setTimeout(function() {\n                    if (e.currentTarget.scrollTop % itemHeight > 1) {\n                        e.currentTarget.scrollTop += itemHeight - e.currentTarget.scrollTop % itemHeight;\n                    }\n                    that._scrollTop = e.currentTarget.scrollTop;\n                    that._updateRanges();\n                    that._updateCurrentlySelected();\n                }, 100);\n            },\n\n            _updateCurrentlySelected: function() {\n                var is12hourFormat = includes(this.options.format.toLowerCase(), \"t\");\n                var indexAttr = kendo.attr('index');\n                var hoursList = this.ul.find('[' + indexAttr + '=\"1\"]');\n                var minutesList = this.ul.find('[' + indexAttr + '=\"2\"]');\n                var secondsList = this.ul.find('[' + indexAttr + '=\"3\"]');\n                var designatorList = this.ul.find('[' + indexAttr + '=\"4\"]');\n                var selectedHour;\n                var selectedMinutes;\n                var selectedSeconds;\n                var selectedDesignator;\n\n                if (!this.ul.is(\":visible\")) {\n                    return;\n                }\n\n                if (!this._currentlySelected) {\n                    this._currentlySelected = this._value ? new Date(this._value) : new Date();\n                }\n\n                if (hoursList.length) {\n                    selectedHour = +this._findSelectedValue(hoursList);\n                }\n\n                if (minutesList.length) {\n                    selectedMinutes = +this._findSelectedValue(minutesList);\n                }\n\n                if (secondsList.length) {\n                    selectedSeconds = +this._findSelectedValue(secondsList);\n                }\n\n                if (designatorList.length) {\n                    selectedDesignator = this._findSelectedValue(designatorList);\n                }\n\n                if (is12hourFormat) {\n                    if (selectedDesignator == \"PM\") {\n                        selectedHour += 12;\n                        if (selectedHour == 24) {\n                            selectedHour = 12;\n                        }\n                    }\n\n                    if (selectedDesignator === \"AM\" && selectedHour === 12) {\n                        selectedHour = 0;\n                    }\n                }\n\n                if (selectedHour !== undefined$1) {\n                    this._currentlySelected.setHours(selectedHour);\n                }\n\n                if (selectedMinutes !== undefined$1) {\n                    this._currentlySelected.setMinutes(selectedMinutes);\n                }\n\n                if (selectedSeconds !== undefined$1) {\n                    this._currentlySelected.setSeconds(selectedSeconds);\n                }\n            },\n\n            _findSelectedValue: function(list) {\n               var firstOccurence = firstItemIndex(list.scrollTop(), getItemHeight(list.find(\".k-item:visible\").eq(0)));\n               return list.find(\".k-item:visible\").eq(firstOccurence).attr(\"data-value\");\n            },\n\n            _itemClickHandler: function(e) {\n                var list = $(e.originalEvent.currentTarget);\n                var index = list.find(\".k-item:visible\").index($(e.currentTarget));\n                var itemHeight = getItemHeight(list.find(\".k-item:visible\").eq(0));\n\n                list.scrollTop(index * itemHeight);\n            },\n\n            getDatesInRange: function(msStart, msMax, startDate, max, msInterval, start) {\n                var result = [];\n\n                while (true) {\n                    if (msMax && (getMilliseconds(start) >= msMax || startDate.getDate() != start.getDate())) {\n                        msStart = getMilliseconds(start);\n                        if (startDate < start) {\n                            msStart += MS_PER_DAY;\n                        }\n                        if (msStart > msMax) {\n                            start = new DATE(+max);\n                        }\n                        if (getMilliseconds(start) > 0) {\n                            result.push(new Date(start));\n                        }\n                        break;\n                    }\n                    if (startDate.getDate() != start.getDate()) {\n                        break;\n                    }\n                    result.push(new Date(start));\n                    start.setTime(start.getTime() + msInterval);\n                    if (!msMax && this.options.maxSet && !this._ignoreMaxSet) {\n                        break;\n                    }\n                }\n\n                return result;\n            },\n\n            _createListContent: function(parts, interval) {\n                var length = parts.length;\n                var result = \"\";\n                var part;\n                var values;\n\n                for (var i = 0; i < length; i++) {\n                    part = parts[i];\n\n                    if (part.type === \"literal\" || part.type == \"dayperiod\") {\n                        result += this._literalTemplate(part);\n                    } else {\n                        values = this._getValues(part, true, interval);\n                        result += this._itemTemplate(values.values, part, this.options.messages[part.type], values.index);\n                    }\n                }\n\n                return result;\n            },\n\n            _itemTemplate: function(values, part, title, index) {\n                var result = \"\";\n                var length = values.length;\n                var indexAttr = kendo.attr('index');\n\n                result += '<div class=\"k-time-list-wrapper\" role=\"presentation\">' +\n                            '<span class=\"k-title\">' + (title || part.type) + '</span>' +\n                            '<div class=\"k-time-list\">' +\n                                '<div class=\"k-time-container k-content k-scrollable\" role=\"presentation\" ' + indexAttr + '=\"' + index + '\">' +\n                                    '<ul class=\"k-reset\">';\n\n                for ( var i = 0; i < length; i++) {\n                    result += '<li class=\"k-item\" data-value=\"' + values[i] + '\">' +\n                                    '<span>' + values[i] + '</span>' +\n                               '</li>';\n                }\n\n                result += '</ul>' +\n                          '<div class=\"k-scrollable-placeholder\"></div>' +\n                        '</div>' +\n                    '</div>' +\n                '</div>';\n\n                return result;\n            },\n\n            _getValues: function(part, shouldPad, interval) {\n                var result = [];\n                var index;\n                var start = 0;\n                var end;\n                var step = 0;\n                var currentStep = 0;\n\n                if ($.isPlainObject(interval)) {\n                    step = interval[part.type] || 0;\n                }\n\n                if (part.type === \"hour\") {\n                    start = part.hour12 ? 1 : 0;\n                    index = 1;\n                    end = part.hour12 ? 12 : 23;\n                } else if (part.type === \"minute\") {\n                    index = 2;\n                    end = 59;\n                } else if (part.type === \"second\") {\n                    index = 3;\n                    end = 59;\n                }\n\n                for (; start <= end; start++) {\n                    if (step > 0) {\n                        if (start === 0 || (start === 1 && step > 1 && part.type === \"hour\")) {\n                            result.push(shouldPad ? pad(currentStep) : currentStep);\n                        }\n\n                        if (start % step === 0 && currentStep + step <= end) {\n                            currentStep += step;\n                            result.push(shouldPad ? pad(currentStep) : currentStep);\n                        }\n                    } else {\n                        result.push(shouldPad ? pad(start) : start);\n                    }\n                }\n\n                return {\n                    values: result,\n                    index: index\n                };\n            },\n\n            _literalTemplate: function(part) {\n                var isDayTimePattern = part.pattern === \" tt\" || part.pattern === \"aa\";\n                var result = '<div class=\"k-time-separator\">' +\n                    (isDayTimePattern ? ':' : part.pattern) +\n                    '</div>';\n\n                if (isDayTimePattern) {\n                    result += this._itemTemplate([\"AM\", \"PM\"], part, \"AM/PM\", 4);\n                }\n\n                return result;\n            },\n\n            bind: function() {\n                var that = this,\n                    options = that.options,\n                    dates = options.dates;\n\n                if (dates && dates[0] && !(options.timeView && options.timeView.list === \"scroll\")) {\n                    that.dataBind(dates);\n                } else {\n                    that.refresh();\n                    that.addTranslate();\n                    if (that._value) {\n                        that.applyValue(that._value);\n                    }\n                }\n            },\n\n            _html: function(html) {\n                var that = this;\n\n                if (that.options.timeView && that.options.timeView.list === \"scroll\") {\n                    html = HIGHLIGHTCONTAINER + html;\n                    that.ul.html(html);\n                } else {\n                    that.ul[0].innerHTML = html;\n                    that.popup.unbind(OPEN, that._heightHandler);\n                    that.popup.one(OPEN, that._heightHandler);\n\n                    that.current(null);\n                    that.select(that._value);\n                }\n            },\n\n            scroll: function(item) {\n                if (!item) {\n                    return;\n                }\n\n                if (item.scrollIntoViewIfNeeded) {\n                    item.scrollIntoViewIfNeeded();\n                } else {\n                    scrollIntoViewIfNeeded(item);\n                }\n            },\n\n            select: function(li) {\n                var that = this,\n                    options = that.options,\n                    current = that._current,\n                    selection;\n\n                if (li instanceof Date) {\n                    li = kendo.toString(li, options.format, options.culture);\n                }\n\n                if (typeof li === \"string\") {\n                    if (!current || current.text() !== li) {\n                        li = $.grep(that.ul[0].childNodes, function(node) {\n                            return (node.textContent || node.innerText) == li;\n                        });\n\n                        li = li[0] ? li : null;\n                    } else {\n                        li = current;\n                    }\n                }\n                selection = that._distinctSelection(li);\n                that.current(selection);\n            },\n\n            _distinctSelection: function(selection) {\n                var that = this,\n                    currentValue,\n                    selectionIndex;\n\n                if (selection && selection.length > 1) {\n                    currentValue = getMilliseconds(that._value);\n                    selectionIndex = $.inArray(currentValue, that._dates);\n                    selection = that.ul.children()[selectionIndex];\n                }\n\n                return selection;\n            },\n\n            setOptions: function(options) {\n                var old = this.options;\n\n                options.min = parse(options.min);\n                options.max = parse(options.max);\n\n                this.options = extend(old, options, {\n                    active: old.active,\n                    change: old.change,\n                    close: old.close,\n                    open: old.open\n                });\n\n                this.bind();\n            },\n\n            toggle: function() {\n                var that = this;\n\n                if (that.popup.visible()) {\n                    that.close();\n                } else {\n                    that.open();\n                }\n            },\n\n            value: function(value) {\n                var that = this;\n\n                that._value = value;\n                if (that.ul[0].firstChild) {\n                    if (that.options.timeView && that.options.timeView.list === \"scroll\") {\n                        that.applyValue(value);\n                    } else {\n                        that.select(value);\n                    }\n                }\n            },\n\n            _click: function(e) {\n                let that = this,\n                    li = $(e.currentTarget),\n                    date = li.text(),\n                    dates = that.options.dates,\n                    min = that.options.min,\n                    max = that.options.max;\n\n                if (dates && dates.length > 0) {\n                    if (min.getTime() !== max.getTime()) {\n                        dates = dates.filter(d => that._inRange(d));\n                    }\n                    date = dates[li.index()];\n                }\n\n                if (!e.isDefaultPrevented()) {\n                    that.select(li);\n                    that.options.change(date, true);\n                    that.close();\n                }\n            },\n\n            _inRange(date) {\n                const that = this,\n                    min = that.options.min,\n                    max = that.options.max;\n\n                const dateSeconds = date.getHours() * 3600 + date.getMinutes() * 60 + date.getSeconds(),\n                    minSeconds = min.getHours() * 3600 + min.getMinutes() * 60 + min.getSeconds(),\n                    maxSeconds = max.getHours() * 3600 + max.getMinutes() * 60 + max.getSeconds();\n\n                return dateSeconds >= minSeconds && dateSeconds <= maxSeconds;\n            },\n\n            _height: function() {\n                var that = this;\n                var list = that.list;\n                var parent = list.parent(\".k-child-animation-container\");\n                var container = parent.closest(\".k-animation-container\");\n                var height = that.options.height;\n                var elements = list.add(container);\n                var ul = that.ul[0];\n\n                if (ul.children.length) {\n                    elements.add(parent).show();\n\n                    list.add(parent)\n                        .height(ul.scrollHeight > height && (that.options.adaptiveMode != \"auto\" || that.bigScreenMQL.mediaQueryList.matches) ? height : \"auto\");\n\n                    elements.hide();\n                }\n            },\n\n            _parse: function(value) {\n                var that = this,\n                    options = that.options,\n                    min = getMilliseconds(options.min) != getMilliseconds(TODAY) ? options.min : null,\n                    max = getMilliseconds(options.max) != getMilliseconds(TODAY) ? options.max : null,\n                    current = that._value || min || max || TODAY;\n\n                if (value instanceof DATE) {\n                    return value;\n                }\n\n                value = parse(value, options.parseFormats, options.culture);\n\n                if (value) {\n                    value = new DATE(current.getFullYear(),\n                                     current.getMonth(),\n                                     current.getDate(),\n                                     value.getHours(),\n                                     value.getMinutes(),\n                                     value.getSeconds(),\n                                     value.getMilliseconds());\n                }\n\n                return value;\n            },\n\n            _adjustListWidth: function() {\n                var that = this,\n                    list = this.list,\n                    width = list[0].style.width,\n                    wrapper = this.options.anchor,\n                    computedStyle, computedWidth,\n                    outerWidth = kendo._outerWidth;\n\n                if (!list.data(\"width\") && width) {\n                    return;\n                }\n\n                computedStyle = window.getComputedStyle ? window.getComputedStyle(wrapper[0], null) : 0;\n                computedWidth = computedStyle ? parseFloat(computedStyle.width) : outerWidth(wrapper);\n\n                if (computedStyle && (browser.mozilla || browser.msie)) { // getComputedStyle returns different box in FF and IE.\n                    computedWidth += parseFloat(computedStyle.paddingLeft) + parseFloat(computedStyle.paddingRight) + parseFloat(computedStyle.borderLeftWidth) + parseFloat(computedStyle.borderRightWidth);\n                }\n\n                width = computedWidth - (outerWidth(list) - list.width());\n\n                list.css({\n                    fontFamily: wrapper.css(\"font-family\"),\n                    width: that.options.adaptiveMode != \"auto\" || that.bigScreenMQL.mediaQueryList.matches ? width : \"100%\"\n                })\n                .data(\"width\", width);\n            },\n\n            _popup: function() {\n                var that = this,\n                    list = that.list,\n                    options = that.options,\n                    anchor = options.anchor;\n\n                if (!this.options.omitPopup) {\n                    if (options.adaptiveMode == \"auto\" && !that.bigScreenMQL.mediaQueryList.matches) {\n                        var popupContent = that.popupContent || list;\n                        popupContent.appendTo(document.body);\n\n                        that.popup = new ui.ActionSheet(popupContent, {\n                            adaptive: true,\n                            focusOnActivate: false,\n                            title: options.adaptiveTitle || \"Set time\",\n                            subtitle: options.adaptiveSubtitle,\n                            closeButton: {\n                                icon: \"check\",\n                                themeColor: \"primary\",\n                            },\n                            footerTemplate: that.options.componentType === 'modern' ? () => NEW_RENDERING_FOOTER(\n                                that.options.adaptiveMode != \"auto\" || that.bigScreenMQL.mediaQueryList.matches ? that.options.size || \"medium\" : \"large\",\n                                that.options.messages,\n                                true\n                            ) : null,\n                            fullscreen: that.smallScreenMQL.mediaQueryList.matches,\n                            popup: extend(options.popup, {\n                                anchor: anchor,\n                                close: options.close,\n                                animation: options.animation,\n                                isRtl: support.isRtl(options.anchor),\n                            }),\n                            open: function() {\n                                if (that.popup._footer) {\n                                    that.popup._footer.addClass(\"k-actions k-actions-stretched k-actions-horizontal\");\n                                }\n\n                                if (options.open) {\n                                    options.open();\n                                }\n                            },\n                            activate: function() {\n                                if (that.options.timeView && that.options.timeView.list === \"scroll\") {\n                                    that.addTranslate();\n                                    that._updateRanges();\n                                    if (that._value) {\n                                        that.applyValue(that._value);\n                                    } else {\n                                        that._updateCurrentlySelected();\n                                    }\n                                    that._focusList(that.list.find(\".k-time-list-wrapper\").eq(0));\n                                }\n                            }\n                        });\n\n                        that._updateRanges();\n                        that._updateCurrentlySelected();\n                        // popupContent.find(\".k-time-footer\").appendTo(popupContent);\n                    } else {\n                        that.popup = new ui.Popup(that.popupContent || list, extend(options.popup, {\n                            anchor: anchor,\n                            open: options.open,\n                            close: options.close,\n                            animation: options.animation,\n                            isRtl: support.isRtl(options.anchor),\n                            activate: function() {\n                                if (that.options.timeView && that.options.timeView.list === \"scroll\") {\n                                    that.addTranslate();\n                                    that._updateRanges();\n                                    if (that._value) {\n                                        that.applyValue(that._value);\n                                    } else {\n                                        that._updateCurrentlySelected();\n                                    }\n                                    that._focusList(that.list.find(\".k-time-list-wrapper\").eq(0));\n                                }\n                            }\n                        }));\n                    }\n\n                } else {\n                    list.appendTo(options.timeDiv);\n                }\n            },\n\n            move: function(e) {\n                const that = this,\n                    key = e.keyCode,\n                    ul = that.ul[0],\n                    down = key === keys.DOWN,\n                    isInput = $(e.target).is('.k-input-inner'),\n                    isModernType = that.options.componentType === 'modern',\n                    isPopupOpened = that.popup.visible();\n\n                let current = that._current;\n\n                const preventInputValueChange = isInput && isModernType && isPopupOpened;\n\n                if (key === keys.UP || down) {\n                    if (e.altKey) {\n                        that.toggle(down);\n                        return;\n                    } else if (preventInputValueChange) {\n                        return;\n                    } else if (down) {\n                        current = current ? current[0].nextSibling : ul.firstChild;\n                    } else {\n                        current = current ? current[0].previousSibling : ul.lastChild;\n                    }\n\n                    if (current) {\n                        that.select(current);\n                    }\n\n                    that.options.change(that._current.text());\n                    e.preventDefault();\n\n                } else if (key === keys.ENTER || key === keys.TAB || key === keys.ESC) {\n                    e.preventDefault();\n                    if (current) {\n                        that.options.change(current.text(), true);\n                    }\n                    that.close();\n                }\n            }\n        };\n\n        function dst() {\n            var today = new DATE(),\n                midnight = new DATE(today.getFullYear(), today.getMonth(), today.getDate(), 0, 0, 0),\n                noon = new DATE(today.getFullYear(), today.getMonth(), today.getDate(), 12, 0, 0);\n\n            return -1 * (midnight.getTimezoneOffset() - noon.getTimezoneOffset());\n        }\n\n        function getMilliseconds(date) {\n            return date.getHours() * 60 * MS_PER_MINUTE + date.getMinutes() * MS_PER_MINUTE + date.getSeconds() * 1000 + date.getMilliseconds();\n        }\n\n        function lastTimeOption(interval) {\n            var date = new Date(2100, 0, 1);\n            date.setMinutes(-interval);\n            return date;\n        }\n\n        function isInRange(value, min, max) {\n            var msMin = getMilliseconds(min),\n                msMax = getMilliseconds(max),\n                msValue;\n\n            if (!value || msMin == msMax) {\n                return true;\n            }\n\n            msValue = getMilliseconds(value);\n\n            if (msMin > msValue) {\n                msValue += MS_PER_DAY;\n            }\n\n            if (msMax < msMin) {\n                msMax += MS_PER_DAY;\n            }\n\n            return msValue >= msMin && msValue <= msMax;\n        }\n\n        TimeView.getMilliseconds = getMilliseconds;\n\n        kendo.TimeView = TimeView;\n\n        var TimePicker = Widget.extend({\n            init: function(element, options) {\n                var that = this, disabled;\n\n                options = options || {};\n                options.componentType = options.componentType || \"classic\";\n\n                if ($.isPlainObject(options.interval) && options.componentType !== \"modern\") {\n                    options.interval = 30; // If an object is passed to the classic picker, fall back to the default interval value.\n                }\n\n                Widget.fn.init.call(that, element, options);\n\n                element = that.element;\n                options = that.options;\n\n                options.min = parse(element.attr(\"min\")) || parse(options.min);\n                options.max = parse(element.attr(\"max\")) || parse(options.max);\n                options.inputMode = options.inputMode || element.attr(\"inputmode\") || \"text\";\n                element.attr(\"inputmode\" , options.inputMode);\n\n                if (+options.max != +TODAY || +options.min != +TODAY) {\n                    this._specifiedRange = true;\n                }\n\n                normalize(options);\n\n                that._initialOptions = extend({}, options);\n\n                that._wrapper();\n\n                if (that.options.timeView && that.options.timeView.list === \"scroll\") {\n                    that.options.height = null;\n                }\n\n                that.bigScreenMQL = mediaQuery(\"large\");\n                if (that.options.adaptiveMode == \"auto\") {\n                    that.bigScreenMQL.onChange(()=> {\n                        that._createTimeViewProxy();\n                        that._update(that.element.val());\n                    });\n                }\n\n                that._createTimeView();\n                that._createTimeViewProxy = that._createTimeView.bind(that);\n\n                that._icon();\n                that._reset();\n\n                try {\n                    element[0].setAttribute(\"type\", \"text\");\n                } catch (e) {\n                    element[0].type = \"text\";\n                }\n\n                element.addClass(\"k-input-inner\")\n                       .attr({\n                            \"role\": \"combobox\",\n                            \"aria-expanded\": false,\n                            \"aria-controls\": that.timeView._timeViewID,\n                            \"autocomplete\": \"off\"\n                       });\n\n                disabled = element.is(\"[disabled]\") || $(that.element).parents(\"fieldset\").is(':disabled');\n                if (disabled) {\n                    that.enable(false);\n                } else {\n                    that.readonly(element.is(\"[readonly]\"));\n                }\n\n                that._createDateInput();\n                that._old = that._update(options.value || that.element.val());\n                that._oldText = element.val();\n                that._applyCssClasses();\n\n                if (options.label) {\n                    that._label();\n                }\n\n                that.element.removeAttr(\"style\");\n                kendo.notify(that);\n            },\n\n            options: {\n                name: \"TimePicker\",\n                autoAdjust: true,\n                min: TODAY,\n                max: TODAY,\n                format: \"\",\n                dates: [],\n                parseFormats: [],\n                focusTime: null,\n                value: null,\n                interval: 30,\n                height: DEFAULT_HEIGHT,\n                animation: {},\n                dateInput: false,\n                messages: {\n                    set: \"Set\",\n                    cancel: \"Cancel\",\n                    hour: \"hour\",\n                    minute: \"minute\",\n                    second: \"second\",\n                    millisecond: \"millisecond\",\n                    now: \"Now\"\n                },\n                adaptiveMode: \"none\",\n                adaptiveTitle: null,\n                adaptiveSubtitle: null,\n                componentType: \"classic\",\n                size: \"medium\",\n                fillMode: \"solid\",\n                rounded: \"medium\",\n                label: null,\n                autoCorrectParts: true\n            },\n\n            events: [\n             OPEN,\n             CLOSE,\n             CHANGE\n            ],\n\n            componentTypes: {\n                \"classic\": {\n                    timeView: {\n                        list: \"list\"\n                    }\n                },\n                \"modern\": {\n                    timeView: {\n                        list: \"scroll\"\n                    }\n                }\n            },\n\n            setOptions: function(options) {\n                let that = this,\n                    value = that._value,\n                    isComponentTypeChanged = options.componentType ? true : false;\n\n                Widget.fn.setOptions.call(that, options);\n                options = that.options;\n                if ($.isPlainObject(options.interval) && options.componentType !== \"modern\") {\n                    options.interval = 30; // If an object is passed to the classic picker, fall back to the default interval value.\n                }\n\n\n                if (+options.max != +TODAY || +options.min != +TODAY) {\n                    this._specifiedRange = true;\n                }\n\n                that._arrow.off(ns);\n                that._arrow.remove();\n\n                normalize(options);\n\n\n                if (options.componentType && isComponentTypeChanged) {\n                    options.timeView.list = options.componentType == \"classic\" ? \"list\" : \"scroll\";\n                    that.options.height = options.componentType == \"classic\" ? DEFAULT_HEIGHT : null;\n                    that._createTimeView();\n                    that.timeView._value = value;\n                }\n\n                that.timeView.setOptions(options);\n\n                that._icon();\n                that._editable(options);\n\n                that._createDateInput();\n\n                if (value) {\n                    that.element.val(kendo.toString(value, options.format, options.culture));\n                }\n\n                if (options.label && that._inputLabel) {\n                    that.label.setOptions(options.label);\n                } else if (options.label === false) {\n                    that.label._unwrapFloating();\n                    that._inputLabel.remove();\n                    delete that._inputLabel;\n                } else if (options.label) {\n                    that._label();\n                }\n            },\n\n            dataBind: function(dates) {\n                if (isArray(dates)) {\n                    this.timeView.dataBind(dates);\n                }\n            },\n\n            _createDateInput: function() {\n                const that = this,\n                    options = that.options,\n                    element = that.element;\n\n                if (that._dateInput) {\n                    that._dateInput.destroy();\n                    that._dateInput = null;\n                }\n\n                if (options.dateInput) {\n                    var min = options.min;\n                    var max = options.max;\n                    var today = new DATE();\n                    if (getMilliseconds(min) == getMilliseconds(max)) {\n                        min = new DATE(today.getFullYear(), today.getMonth(), today.getDate(), 0, 0, 0);\n                        max = new DATE(today.getFullYear(), today.getMonth(), today.getDate(), 24, 0, 0);\n                    }\n\n                    that._dateInput = new ui.DateInput(element, {\n                        autoAdjust: options.autoAdjust,\n                        culture: options.culture,\n                        format: options.format,\n                        min: min,\n                        max: max,\n                        value: options.value,\n                        interval: options.interval,\n                        size: options.size,\n                        fillMode: options.fillMode,\n                        rounded: options.rounded,\n                        messages: options.messages.dateInput,\n                        autoCorrectParts: options.autoCorrectParts,\n                        toggleDayPeriod: true,\n                        inputMode: options.inputMode\n                    });\n                }\n            },\n\n            _editable: function(options) {\n                var that = this,\n                    disable = options.disable,\n                    readonly = options.readonly,\n                    arrow = that._arrow.off(ns),\n                    element = that.element.off(ns),\n                    wrapper = that.wrapper.off(ns);\n\n                if (that._dateInput) {\n                    that._dateInput._unbindInput();\n                }\n\n                if (!readonly && !disable) {\n                    wrapper\n                        .removeClass(STATEDISABLED)\n                        .on(HOVEREVENTS, that._toggleHover);\n\n                    if (element && element.length) {\n                        element[0].removeAttribute(DISABLED);\n                        element[0].removeAttribute(READONLY);\n                    }\n                    element.attr(ARIA_DISABLED, false)\n                           .attr(ARIA_READONLY, false)\n                           .on(\"keydown\" + ns, that._keydown.bind(that))\n                           .on(\"focusout\" + ns, that._blur.bind(that))\n                           .on(\"focus\" + ns, function() {\n                               that.wrapper.addClass(FOCUSED);\n                           });\n\n                    if (that._dateInput) {\n                        that._dateInput._bindInput();\n                    }\n                   arrow.on(CLICK, that._click.bind(that))\n                       .on(MOUSEDOWN, preventDefault);\n                } else {\n                    wrapper\n                        .addClass(disable ? STATEDISABLED : \"\")\n                        .removeClass(disable ? \"\" : STATEDISABLED);\n\n                    element.attr(DISABLED, disable)\n                           .attr(READONLY, readonly)\n                           .attr(ARIA_DISABLED, disable)\n                           .attr(ARIA_READONLY, readonly);\n                }\n            },\n\n            _label: function() {\n                var that = this;\n                var options = that.options;\n                var labelOptions = $.isPlainObject(options.label) ? options.label : {\n                    content: options.label\n                };\n\n                if (that._dateInput) {\n                    labelOptions.floatCheck = () => {\n\n                        if (!that.value() && (!that._dateInput._hasDateInput() || that.element.val() === \"\") && document.activeElement !== that.element[0]) {\n                            that.element.val(\"\");\n                            return true;\n                        }\n\n                        return false;\n                    };\n                }\n\n                that.label = new kendo.ui.Label(null, $.extend({}, labelOptions, {\n                    widget: that\n                }));\n\n                that._inputLabel = that.label.element;\n            },\n\n            readonly: function(readonly) {\n                this._editable({\n                    readonly: readonly === undefined$1 ? true : readonly,\n                    disable: false\n                });\n\n                if (this.label && this.label.floatingLabel) {\n                    this.label.floatingLabel.readonly(readonly === undefined$1 ? true : readonly);\n                }\n            },\n\n            enable: function(enable) {\n                this._editable({\n                    readonly: false,\n                    disable: !(enable = enable === undefined$1 ? true : enable)\n                });\n\n                if (this.label && this.label.floatingLabel) {\n                    this.label.floatingLabel.enable(enable = enable === undefined$1 ? true : enable);\n                }\n            },\n\n            destroy: function() {\n                var that = this;\n\n                Widget.fn.destroy.call(that);\n\n                that.timeView.destroy();\n\n                that.element.off(ns);\n                that._arrow.off(ns);\n                that.wrapper.off(ns);\n\n                if (that._form) {\n                    that._form.off(\"reset\", that._resetHandler);\n                }\n\n                if (that.label) {\n                    that.label.destroy();\n                }\n\n                if (that.bigScreenMQL) {\n                    that.bigScreenMQL.destroy();\n                }\n\n                that._createTimeViewProxy = null;\n            },\n\n            close: function() {\n                this.timeView.close();\n            },\n\n            open: function() {\n                this.timeView.open();\n            },\n\n            min: function(value) {\n                if (value) {\n                    this._specifiedRange = true;\n                }\n\n                return this._option(\"min\", value);\n            },\n\n            max: function(value) {\n                if (value && this.timeView) {\n                    this._specifiedRange = true;\n                    this.timeView.options.maxSet = true;\n                } else if (this.timeView) {\n                    this.timeView.options.maxSet = false;\n                }\n                return this._option(\"max\", value);\n            },\n\n            value: function(value) {\n                var that = this;\n\n                if (value === undefined$1) {\n                    return that._value;\n                }\n\n                that._old = that._update(value);\n\n                if (that._old === null) {\n                    that.element.val(\"\");\n                }\n\n                that._oldText = that.element.val();\n\n                if (that.label && that.label.floatingLabel) {\n                    that.label.floatingLabel.refresh();\n                }\n            },\n\n            _blur: function() {\n                var that = this,\n                    value = that.element.val();\n                that._typing = false;\n\n                if (!(that.options.timeView && that.options.timeView.list === \"scroll\")) {\n                   that.close();\n               }\n\n                if (value !== that._oldText) {\n                    that._change(value);\n                }\n                that.wrapper.removeClass(FOCUSED);\n            },\n\n            _click: function() {\n                var that = this,\n                    element = that.element;\n\n                that.timeView.toggle();\n\n                if (!support.touch && element[0] !== activeElement() && !(that.options.timeView && that.options.timeView.list === \"scroll\")) {\n                    element.trigger(\"focus\");\n                }\n            },\n\n            _change: function(value) {\n                var that = this,\n                oldValue = that.element.val(),\n                dateChanged;\n\n                value = that._update(value);\n                dateChanged = !kendo.calendar.isEqualDate(that._old, value);\n\n                var valueUpdated = dateChanged && !that._typing;\n                var textFormatted = oldValue !== that.element.val();\n\n                if (valueUpdated || textFormatted) {\n                    that.element.trigger(CHANGE);\n                }\n\n                if (dateChanged) {\n                    that._old = value;\n                    that._oldText = that.element.val();\n\n                    that.trigger(CHANGE);\n                }\n\n                that._typing = false;\n            },\n\n            _createTimeView: function() {\n                var that = this;\n                var options = that.options;\n                var element = that.element;\n                var timeView,\n                    ul;\n\n                if (that.timeView) {\n                    if (that.timeView.popup && that.timeView.popup.wrapper) {\n                        that.timeView.popup.wrapper.remove();\n                    }\n                    that.timeView.destroy();\n                    that.timeView = null;\n                }\n\n                that.timeView = timeView = new TimeView(extend({}, options, {\n                    id: element.attr(ID),\n                    size: options.adaptiveMode != \"auto\" || that.bigScreenMQL.mediaQueryList.matches ? options.size : \"large\",\n                    anchor: that.wrapper,\n                    format: options.format,\n                    change: function(value, trigger) {\n                        if (trigger) {\n                            that._change(value);\n                        } else {\n                            element.val(value);\n                        }\n                        that.timeView._focusTime = null;\n                    },\n                    open: function(e) {\n                        if (that.options.timeView && that.options.timeView.list !== \"scroll\") {\n                            that.timeView._adjustListWidth();\n                        } else {\n                            that.timeView._updateTitle();\n                        }\n\n                        if (that.trigger(OPEN)) {\n                            e.preventDefault();\n                        } else {\n                            element.attr(ARIA_EXPANDED, true);\n                            ul.attr(ARIA_HIDDEN, false);\n\n                            if (timeView.current()) {\n                                element.attr(ARIA_ACTIVEDESCENDANT, timeView._optionID);\n                            }\n                        }\n                    },\n                    close: function(e) {\n                        if (that.trigger(CLOSE)) {\n                            e.preventDefault();\n                        } else {\n                            element.attr(ARIA_EXPANDED, false);\n                            ul.attr(ARIA_HIDDEN, true);\n                            element[0].removeAttribute(ARIA_ACTIVEDESCENDANT);\n                        }\n                    },\n                    active: function(current) {\n                        if (element && element.length) {\n                            element[0].removeAttribute(ARIA_ACTIVEDESCENDANT);\n                        }\n                        if (current) {\n                            element.attr(ARIA_ACTIVEDESCENDANT, timeView._optionID);\n                        }\n                    },\n                    specifiedRange: that._specifiedRange,\n                    maxSet: +options.max != +TODAY\n                }));\n\n                ul = timeView.ul;\n\n                that._ariaLabel(ul);\n            },\n\n            _icon: function() {\n                var that = this,\n                    element = that.element,\n                    options = that.options,\n                    arrow;\n\n                arrow = element.next(\"button.k-input-button\");\n\n                if (!arrow[0]) {\n                    arrow = $(html.renderButton('<button unselectable=\"on\" tabindex=\"-1\" class=\"k-input-button\" aria-label=\"select\"></button>', {\n                        icon: \"clock\",\n                        size: options.size,\n                        fillMode: options.fillMode,\n                        shape: \"none\",\n                        rounded: \"none\"\n                    })).insertAfter(element);\n                }\n\n                that._arrow = arrow.attr({\n                    \"role\": \"button\"\n                });\n            },\n\n            _keydown: function(e) {\n                const that = this,\n                    key = e.keyCode,\n                    timeView = that.timeView,\n                    value = that.element.val();\n\n              if (timeView.popup.visible() || e.altKey) {\n                    timeView.move(e);\n                    if (that._dateInput && e.stopImmediatePropagation && that.options.componentType !== 'modern') {\n                        e.stopImmediatePropagation();\n                    }\n                } else if (key === keys.ENTER && value !== that._oldText) {\n                    that._change(value);\n                } else {\n                    that._typing = true;\n                }\n            },\n\n            _option: function(option, value) {\n                var that = this,\n                    options = that.options;\n\n                if (value === undefined$1) {\n                    return options[option];\n                }\n\n                value = that.timeView._parse(value);\n\n                if (!value) {\n                    return;\n                }\n\n                value = new DATE(+value);\n\n                options[option] = value;\n                that.timeView.options[option] = value;\n\n                if (that._dateInput) {\n                    that._dateInput[option](value);\n                }\n\n                that.timeView.bind();\n            },\n\n            _toggleHover: function(e) {\n                $(e.currentTarget).toggleClass(HOVER, e.type === \"mouseenter\");\n            },\n\n            _update: function(value) {\n                var that = this,\n                    options = that.options,\n                    timeView = that.timeView,\n                    date = timeView._parse(value);\n\n                if (!isInRange(date, options.min, options.max)) {\n                    date = null;\n                }\n\n                that._value = date;\n                that._currentlySelected = date;\n                if (that._dateInput && date) {\n                    that._dateInput.value(date || value);\n                } else {\n                    that.element.val(kendo.toString(date || value, options.format, options.culture));\n                }\n                timeView.value(date);\n\n                return date;\n            },\n\n            _toggleMaxSet: function(flag) {\n                if (this.timeView) {\n                    this.timeView._ignoreMaxSet = flag;\n                }\n            },\n\n            _wrapper: function() {\n                var that = this,\n                    element = that.element,\n                    wrapper;\n\n                wrapper = element.parents(\".k-timepicker\");\n\n                if (!wrapper[0]) {\n                    wrapper = element.wrap(SPAN).parent();\n                }\n\n                wrapper[0].style.cssText = element[0].style.cssText;\n                that.wrapper = wrapper.addClass(\"k-timepicker k-input\")\n                    .addClass(element[0].className);\n\n                element.css({\n                    height: element[0].style.height\n                });\n            },\n\n            _reset: function() {\n                let that = this,\n                    element = that.element,\n                    formId = element.attr(\"form\"),\n                    form = formId ? $(\"#\" + formId) : element.closest(\"form\");\n\n                if (form[0]) {\n                    that._resetHandler = function() {\n                        that._toggleMaxSet(true);\n                        that.value(element[0].defaultValue);\n                        that.max(that._initialOptions.max);\n                        that.min(that._initialOptions.min);\n                        that._toggleMaxSet(false);\n                    };\n\n                    that._form = form.on(\"reset\", that._resetHandler);\n                }\n            }\n        });\n\n        function normalize(options) {\n            var parseFormats = options.parseFormats;\n\n            options.format = extractFormat(options.format || kendo.getCulture(options.culture).calendars.standard.patterns.t);\n\n            parseFormats = isArray(parseFormats) ? parseFormats : [parseFormats];\n            parseFormats.splice(0, 0, options.format);\n            options.parseFormats = parseFormats;\n        }\n\n        function preventDefault(e) {\n            e.preventDefault();\n        }\n\n        function mergeDateAndTime(date, time) {\n            return new Date(date.getFullYear(),\n                date.getMonth(),\n                date.getDate(),\n                time.getHours(),\n                time.getMinutes(),\n                time.getSeconds(),\n                time.getMilliseconds());\n        }\n\n        function includes(text, subStr) {\n            var returnValue = false;\n\n            if (text.indexOf(subStr) !== -1) {\n                returnValue = true;\n            }\n\n            return returnValue;\n        }\n\n        function pad(value, size) {\n            var s = String(value);\n            while (s.length < (size || 2)) {\n                s = \"0\" + s;\n            }\n            return s;\n        }\n\n        function firstItemIndex(scrollTop, itemHeight) {\n            return Math.max(Math.round(scrollTop / itemHeight), 0);\n        }\n\n        function getItemHeight(item) {\n            return item.length && item[0].getBoundingClientRect().height;\n        }\n\n        function scrollIntoViewIfNeeded(element, centerIfNeeded) {\n\n            function makeRange(start, length) {\n                return { start: start, length: length, end: start + length };\n            }\n\n            function coverRange(inner, outer) {\n                if (centerIfNeeded === false ||\n                    (outer.start < inner.end && inner.start < outer.end))\n                {\n                    return Math.min(\n                        inner.start, Math.max(outer.start, inner.end - outer.length)\n                    );\n                }\n                return (inner.start + inner.end - outer.length) / 2;\n            }\n\n            function makePoint(x, y) {\n                return {\n                    x: x, y: y,\n                    translate: function translate(dX, dY) {\n                        return makePoint(x + dX, y + dY);\n                    }\n                };\n            }\n\n            function absolute(elem, pt) {\n                while (elem) {\n                    pt = pt.translate(elem.offsetLeft, elem.offsetTop);\n                    elem = elem.offsetParent;\n                }\n                return pt;\n            }\n\n            var target = absolute(element, makePoint(0, 0)),\n                extent = makePoint(element.offsetWidth, element.offsetHeight),\n                elem = element.parentNode,\n                origin;\n\n            while (elem instanceof HTMLElement) {\n                origin = absolute(elem, makePoint(elem.clientLeft, elem.clientTop));\n                elem.scrollLeft = coverRange(\n                    makeRange(target.x - origin.x, extent.x),\n                    makeRange(elem.scrollLeft, elem.clientWidth)\n                );\n                elem.scrollTop = coverRange(\n                    makeRange(target.y - origin.y, extent.y),\n                    makeRange(elem.scrollTop, elem.clientHeight)\n                );\n\n                target = target.translate(-elem.scrollLeft, -elem.scrollTop);\n                elem = elem.parentNode;\n            }\n        }\n\n\n        kendo.cssProperties.registerPrefix(\"TimePicker\", \"k-input-\");\n\n        kendo.cssProperties.registerValues(\"TimePicker\", [{\n            prop: \"rounded\",\n            values: kendo.cssProperties.roundedValues.concat([['full', 'full']])\n        }]);\n\n        ui.plugin(TimePicker);\n\n    })(window.kendo.jQuery);\n    var kendo$1 = kendo;\n\n    exports.__meta__ = __meta__;\n    exports.default = kendo$1;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n"]}
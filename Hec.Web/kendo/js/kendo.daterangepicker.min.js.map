{"version":3,"sources":["raw-js/kendo.daterangepicker.js"],"names":["global","factory","exports","module","require","define","amd","globalThis","self","kendo","_globals","Daterangepicker","this","isPresent","value","isValidDate","getTime","isNumber","Number","isNaN","$","undefined$1","window","ui","html","keys","mediaQuery","Widget","MONTH","OPEN","CLOSE","CHANGE","template","extend","support","mobileOS","ARIA_EXPANDED","ARIA_DISABLED","ARIA_ACTIVEDESCENDANT","STATEDISABLED","HIDDEN","DISABLED","READONLY","ARIA_HIDDEN","START","END","ns","CLICK","MOUSEDOWN","UP","mouseAndTouchPresent","applyEventMap","slice","parse","parseDate","DateRangeView","options","DateView","call","preventDefault","e","prototype","Object","create","_calendar","div","that","calendar","contentElement","popup","_content","element","adaptiveMode","bigScreenMQL","mediaQueryList","matches","append","find","attr","guid","appendTo","MultiViewCalendar","size","orientation","views","_setOptions","navigate","_value","_current","start","_range","range","on","_click","bind","selectRange","setOptions","allowReverse","focusOnNav","change","culture","dates","depth","footer","format","selectable","max","min","month","weekNumber","disableDates","end","rangeSelectable","clear","move","key","keyCode","selectIsClicked","ctrlKey","DOWN","isEnter","ENTER","handled","altKey","open","close","visible","ESC","_cell","hasClass","target","kay","_move","trigger","autoClose","ios","android","browser","currentTarget","closest","is","DateRangePicker","init","fn","disabled","inputMode","_initialOptions","_buildHTML","_changeTriggered","_initializeDateViewProxy","_initializeDateView","onChange","_ariaTemplate","ARIATemplate","_reset","_aria","_inputs","_keydown","_initializeDateInputs","_expandButton","_clearButton","enable","readonly","name","labels","autoAdjust","calendarButton","clearButton","Date","animation","startField","endField","valueType","text","messages","startLabel","endLabel","fillMode","rounded","events","off","dateView","role","_dateViewID","autocomplete","startInput","_startInput","endInput","_endInput","_startClearButton","icon","tabIndex","insertAfter","_clearValue","_endClearButton","startInputButton","endInputButton","next","renderButton","shape","_startDateButton","_expandButtonClick","_endDateButton","_isFirstClick","_preventInputAction","_toggleClearButton","state","toggleClass","type","data","startDateInput","_startDateInput","endDateInput","_endDateInput","_navigatePrevNextDate","currentTargetedDate","currentTargetedDateFocused","currentInputInstance","_currentTarget","dateInputInstance","symbol","currentFormat","selection","step","getStepFromSymbol","parsedDate","elementValue","dateObject","localeId","isInRange","modifyDateSegmentValue","setDate","getDate","_handleAllowReverseEnter","currentInput","select","_handleStandardEnter","currentGreather","selectedEnd","isCurrentMatchSelected","_backspaceChange","correctStartDate","_emptyMask","_oldValue","_updateARIA","correctDate","focus","_handleArrowKeys","shiftKey","index","switchDateSegment","isCurrentInRange","isCalendarUpdated","stopImmediatePropagation","JSON","stringify","attributes","parseFloat","setTimeout","date","length","removeAttr","_dateInViews","contains","document","activeElement","_updateAria","_isAdaptive","_inputFocus","temp","_temporaryInputValues","_updateInputValueAndSelectRange","input","newValue","_startChange","sender","startValue","endValue","blur","_endChange","isAdaptive","temporary","correctEndDate","previousElementValue","wrapper","remove","destroy","id","anchor","mode","reverse","resetOnStart","startInitial","endInitial","_buttons","click","themeColor","inputOptions","toggleDayPeriod","empty","kendoDateInput","getKendoDateInput","_startChangeHandler","_endChangeHandler","addClass","htmlEncode","eq","add","_option","option","parseFormats","formId","form","_resetHandler","_form","_editable","inputs","disable","removeClass","each","item","removeAttribute","unbind","_startDateClear","_endDateClear","_createDateViewProxy","plugin","jQuery","kendo$1","__meta__","category","description","depends","default","defineProperty"],"mappings":"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","file":"kendo.daterangepicker.min.js","sourcesContent":["(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('kendo.core.js'), require('kendo.multiviewcalendar.js'), require('kendo.datepicker.js'), require('kendo.html.button.js')) :\n  typeof define === 'function' && define.amd ? define(['exports', 'kendo.core', 'kendo.multiviewcalendar', 'kendo.datepicker', 'kendo.html.button'], factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global.kendo = global.kendo || {}, global.kendo._globals = global.kendo._globals || {}, global.kendo._globals.Daterangepicker = {})));\n})(this, (function (exports) {\n  const __meta__ = {\n      id: \"daterangepicker\",\n      name: \"DateRangePicker\",\n      category: \"web\",\n      description: \"Date range picker.\",\n      depends: [ \"core\", \"multiviewcalendar\", \"datepicker\", \"html.button\",]\n  };\n\n  var isPresent = function(value) {\n      return value !== void 0 && value !== null;\n    };\n\n  var isValidDate = function(value) {\n      return isPresent(value) && value.getTime && isNumber(value.getTime());\n    };\n\n    var isNumber = function(value) {\n      return isPresent(value) && typeof value === \"number\" && !Number.isNaN(value);\n    };\n\n\n  (function($, undefined$1) {\n      let kendo = window.kendo,\n          ui = kendo.ui,\n          html = kendo.html,\n          keys = kendo.keys,\n          mediaQuery = kendo.mediaQuery,\n          Widget = ui.Widget,\n          MONTH = \"month\",\n          OPEN = \"open\",\n          CLOSE = \"close\",\n          CHANGE = \"change\",\n          DIV = \"<div />\",\n          MIN = \"min\",\n          MAX = \"max\",\n          template = kendo.template,\n          extend = $.extend,\n          ID = \"id\",\n          support = kendo.support,\n          mobileOS = support.mobileOS,\n          SELECTED = \"k-selected\",\n          ARIA_EXPANDED = \"aria-expanded\",\n          ARIA_DISABLED = \"aria-disabled\",\n          ARIA_ACTIVEDESCENDANT = \"aria-activedescendant\",\n          STATEDISABLED = \"k-disabled\",\n          HIDDEN = \"k-hidden\",\n          DISABLED = \"disabled\",\n          READONLY = \"readonly\",\n          ARIA_HIDDEN = \"aria-hidden\",\n          START = \"start\",\n          END = \"end\",\n          ns = \".kendoDateRangePicker\",\n          CLICK = \"click\" + ns,\n          MOUSEDOWN = \"mousedown\" + ns,\n          UP = support.mouseAndTouchPresent ? kendo.applyEventMap(\"up\", ns.slice(1)) : CLICK,\n          parse = kendo.parseDate;\n\n      var DateRangeView = function(options) {\n          kendo.DateView.call(this, options);\n      };\n\n      DateRangeView.prototype = Object.create(kendo.DateView.prototype);\n\n      function preventDefault(e) {\n          e.preventDefault();\n      }\n\n      DateRangeView.prototype._calendar = function() {\n          var that = this;\n          var calendar = that.calendar;\n          var options = that.options;\n          var div;\n\n          if (!calendar) {\n              var contentElement = that.popup._content || that.popup.element;\n              if (options.adaptiveMode == \"auto\" && !that.bigScreenMQL.mediaQueryList.matches) {\n                  contentElement = contentElement.append($('<div class=\"k-scrollable-wrap\"></div>')).find(\".k-scrollable-wrap\");\n              }\n\n              div = $(DIV).attr(ID, kendo.guid())\n                          .appendTo(contentElement);\n\n              that.calendar = calendar = new ui.MultiViewCalendar(div, {\n                  size: options.adaptiveMode == \"auto\" && !that.bigScreenMQL.mediaQueryList.matches ? \"large\" : options.size || \"medium\",\n                  orientation: options.adaptiveMode == \"auto\" && !that.bigScreenMQL.mediaQueryList.matches ? \"vertical\" : \"horizontal\",\n                  views: options.adaptiveMode == \"auto\" && !that.bigScreenMQL.mediaQueryList.matches ? 1 : 2,\n              });\n\n              that._setOptions(options);\n\n              calendar.navigate(that._value || that._current, options.start);\n\n              that._range = that._range || options.range || {};\n\n              div.on(MOUSEDOWN, preventDefault)\n                 .on(CLICK, \"td:has(.k-link)\", that._click.bind(that));\n\n              that.calendar.selectRange(that._range);\n          }\n      };\n\n      DateRangeView.prototype._setOptions = function(options) {\n          var that = this;\n          this.calendar.setOptions({\n              allowReverse: options.allowReverse,\n              focusOnNav: false,\n              change: options.change,\n              culture: options.culture,\n              dates: options.dates,\n              depth: options.depth,\n              footer: options.footer,\n              format: options.format,\n              selectable: options.selectable,\n              max: options.max,\n              min: options.min,\n              month: options.month,\n              weekNumber: options.weekNumber,\n              start: options.start,\n              disableDates: options.disableDates,\n              range: options.range,\n              size: options.adaptiveMode == \"auto\" && !that.bigScreenMQL.mediaQueryList.matches ? \"large\" : options.size || \"medium\"\n          });\n      };\n\n      DateRangeView.prototype.range = function(range) {\n          this._range = range;\n\n          if (this.calendar) {\n              if (!range.start && !range.end) {\n                  this.calendar.selectRange(range);\n                  this.calendar.rangeSelectable.clear();\n              } else {\n                  this.calendar.selectRange(range);\n              }\n          }\n      };\n\n      DateRangeView.prototype.move = function(e) {\n          var that = this;\n          var key = e.keyCode;\n          var calendar = that.calendar;\n          var selectIsClicked = e.ctrlKey && key == keys.DOWN;\n          var isEnter = key == keys.ENTER;\n          var handled = false;\n\n          if (e.altKey) {\n              if (key == keys.DOWN) {\n                  that.open();\n                  e.preventDefault();\n                  handled = true;\n              } else if (key == keys.UP) {\n                  that.close();\n                  e.preventDefault();\n                  handled = true;\n              }\n\n          } else if (that.popup.visible()) {\n\n              if (key == keys.ESC || (selectIsClicked && calendar._cell.hasClass(SELECTED))) {\n                  that.close();\n                  e.preventDefault();\n                  return true;\n              }\n              if (isEnter && that._range.target == START && that._range.start == null ||\n                  (isEnter && that._range.target == START && that._range.end !== null) ||\n                  e.key == 'ArrowUp' || e.kay == 'ArrowDown') {\n                  that._current = calendar._move(e);\n              } else if (isEnter) {\n                  that.calendar.trigger(CHANGE);\n              } else {\n                  that._current = calendar._move(e);\n              }\n              handled = true;\n          }\n\n          return handled;\n      };\n\n      DateRangeView.prototype._click = function(e) {\n\n          if (!this.options.autoClose) {\n              return;\n          }\n\n          if (mobileOS.ios || (mobileOS.android && (mobileOS.browser == \"firefox\" || mobileOS.browser == \"chrome\"))) {\n              if (this._range && this._range.end) {\n                  this.close();\n              }\n          }\n          else if (this._range && this._range.start && this._range.end && $(e.currentTarget).closest(\".k-calendar-view\").is(\".k-calendar-monthview\")) {\n              this.close();\n          }\n      };\n\n      kendo.DateRangeView = DateRangeView;\n\n      var DateRangePicker = Widget.extend({\n          init: function(element, options) {\n              var that = this;\n              var disabled;\n\n              Widget.fn.init.call(that, element, options);\n              element = that.element;\n              options = that.options;\n              options.disableDates = kendo.calendar.disabled(options.disableDates);\n\n              options.min = parse(element.attr(\"min\")) || parse(options.min);\n              options.max = parse(element.attr(\"max\")) || parse(options.max);\n              options.inputMode = options.inputMode || element.attr(\"inputmode\") || \"text\";\n\n              that._initialOptions = extend({}, options);\n\n              that._buildHTML();\n\n              that._range = that.options.range;\n              that._changeTriggered = false;\n\n              that._initializeDateViewProxy = that._initializeDateView.bind(that);\n              that.bigScreenMQL = mediaQuery(\"large\");\n              that.bigScreenMQL.onChange(()=> {\n                  that._initializeDateViewProxy();\n              });\n              that._initializeDateView();\n\n              that._ariaTemplate = template(this.options.ARIATemplate).bind(that);\n              that._reset();\n              that._aria();\n\n              that._inputs\n                  .on(UP + ns, that._click.bind(that))\n                  .on(\"keydown\" + ns, that._keydown.bind(that));\n\n              that._initializeDateInputs();\n\n              that._expandButton();\n              that._clearButton();\n\n              disabled = element.is(\"[disabled]\");\n              if (disabled) {\n                  that.enable(false);\n              } else {\n                  that.readonly(element.is(\"[readonly]\"));\n              }\n          },\n\n          options: {\n              name: \"DateRangePicker\",\n              labels: true,\n              autoAdjust: true,\n              allowReverse: false,\n              autoClose: true,\n              calendarButton: false,\n              clearButton: false,\n              footer: \"\",\n              format: \"\",\n              culture: \"\",\n              min: new Date(1900, 0, 1),\n              max: new Date(2099, 11, 31),\n              start: MONTH,\n              depth: MONTH,\n              adaptiveMode: \"none\",\n              animation: {},\n              month: {},\n              startField: \"\",\n              endField: \"\",\n              dates: [],\n              disableDates: null,\n              range: null,\n              ARIATemplate: ({ valueType, text }) => `Current focused ${valueType} is ${text}`,\n              weekNumber: false,\n              messages: {\n                  startLabel: \"Start\",\n                  endLabel: \"End\"\n              },\n              size: \"medium\",\n              fillMode: \"solid\",\n              rounded: \"medium\"\n          },\n\n          events: [\n              OPEN,\n              CLOSE,\n              CHANGE\n          ],\n\n          setOptions: function(options) {\n              var that = this;\n\n              Widget.fn.setOptions.call(that, options);\n\n              options = that.options;\n\n              options.min = parse(options.min);\n              options.max = parse(options.max);\n              that._inputs.off(ns);\n\n              that._initializeDateInputs();\n              that.dateView.setOptions(options);\n              that._expandButton();\n              that._clearButton();\n              that._range = options.range;\n          },\n\n          _aria: function() {\n              this._inputs\n                  .attr({\n                      role: \"combobox\",\n                      \"aria-haspopup\": \"grid\",\n                      \"aria-expanded\": false,\n                      \"aria-controls\": this.dateView._dateViewID,\n                      \"autocomplete\": \"off\"\n                  });\n          },\n\n          _clearButton: function() {\n              let that = this,\n                  options = that.options,\n                  startInput = that._startInput,\n                  endInput = that._endInput,\n                  range = that.range();\n\n              if (!options.clearButton) {\n                  return;\n              }\n\n              if (!that._startClearButton) {\n                  that._startClearButton = $(`<span unselectable=\"on\" class=\"k-clear-value ${range && range.start ? '' : 'k-hidden'}\" title=\"Clear the start date value\">${kendo.ui.icon(\"x\")}</span>`).attr({\n                      \"role\": \"button\",\n                      \"tabIndex\": -1\n                  }).insertAfter(startInput).on(\"click\", that._clearValue.bind(that));\n              }\n\n              if (!that._endClearButton) {\n                  that._endClearButton = $(`<span unselectable=\"on\" class=\"k-clear-value ${range && range.start ? '' : 'k-hidden'}\" title=\"Clear the end date value\">${kendo.ui.icon(\"x\")}</span>`).attr({\n                      \"role\": \"button\",\n                      \"tabIndex\": -1\n                  }).insertAfter(endInput).on(\"click\", that._clearValue.bind(that));\n              }\n          },\n\n          _expandButton: function() {\n              let that = this,\n                  startInput = that._startInput,\n                  endInput = that._endInput,\n                  options = that.options,\n                  startInputButton,\n                  endInputButton;\n\n              if (!options.calendarButton) {\n                  return;\n              }\n\n              startInputButton = startInput.next(\"button.k-input-button\");\n              endInputButton = endInput.next(\"button.k-input-button\");\n\n              if (!startInputButton[0]) {\n                  startInputButton = $(html.renderButton('<button aria-label=\"select\" tabindex=\"-1\" class=\"k-input-button k-button k-icon-button\"></button>', {\n                      icon: \"calendar\",\n                      size: options.size,\n                      fillMode: options.fillMode,\n                      shape: \"none\",\n                      rounded: \"none\"\n                  })).insertAfter(startInput);\n              }\n\n              if (!endInputButton[0]) {\n                  endInputButton = $(html.renderButton('<button aria-label=\"select\" tabindex=\"-1\" class=\"k-input-button k-button k-icon-button\"></button>', {\n                      icon: \"calendar\",\n                      size: options.size,\n                      fillMode: options.fillMode,\n                      shape: \"none\",\n                      rounded: \"none\"\n                  })).insertAfter(endInput);\n              }\n\n              that._startDateButton = startInputButton.attr({\n                  \"role\": \"button\"\n              }).on(CLICK, that._expandButtonClick.bind(that));\n\n              that._endDateButton = endInputButton.attr({\n                  \"role\": \"button\"\n              }).on(CLICK, that._expandButtonClick.bind(that));\n          },\n\n          _click: function() {\n              let that = this,\n                  options = that.options;\n\n                  that._isFirstClick = that._isFirstClick == undefined$1 ? true : false;\n\n              if (options.calendarButton) {\n                  return;\n              }\n\n              if (!that._preventInputAction && !that.dateView.popup.visible()) {\n                  that.dateView.open();\n              }\n          },\n\n          _toggleClearButton: function(target, state) {\n              let that = this;\n\n              if (!target || !that.options.clearButton) {\n                  return;\n              }\n\n              if (target === START) {\n                  that._startClearButton.toggleClass(HIDDEN, !state);\n              }\n\n              if (target === END) {\n                  that._endClearButton.toggleClass(HIDDEN, !state);\n              }\n          },\n\n          _clearValue: function(e) {\n              let that = this,\n                  target = $(e.target),\n                  type = target.closest(\".k-input\").find(\".k-input-inner\").data(\"input\"),\n                  startDateInput = that._startDateInput,\n                  endDateInput = that._endDateInput,\n                  range = that.range();\n\n              if (type === START) {\n                  startDateInput.value(null);\n                  startDateInput.trigger(CHANGE);\n                  that.range({ start: null, end: range.end });\n              }\n\n              if (type === END) {\n                  endDateInput.value(null);\n                  endDateInput.trigger(CHANGE);\n                  that.range({ start: range.start, end: null });\n              }\n\n              that._toggleClearButton(type, false);\n          },\n\n          _expandButtonClick: function(e) {\n              let that = this;\n\n              if (!that._preventInputAction && !that.dateView.popup.visible()) {\n                  that._isFirstClick = true;\n                  that.dateView.open();\n                  $(e.target).closest(\".k-input\").find(\".k-input-inner\").trigger(\"focus\");\n              }\n          },\n\n          _navigatePrevNextDate: function(e) {\n              var that = this,\n                  currentTargetedDate,\n                  currentTargetedDateFocused,\n                  dateView = that.dateView;\n              var currentInputInstance = that._currentTarget == START ? that._startDateInput.dateInputInstance : that._endDateInput.dateInputInstance;\n              var symbol = currentInputInstance.currentFormat[currentInputInstance.selection.start];\n              var step = currentInputInstance.getStepFromSymbol(symbol);\n              let parsedDate = parse(currentInputInstance.elementValue, currentInputInstance.dateObject.format, currentInputInstance.dateObject.localeId);\n\n              step = e.key == 'ArrowDown' ? -step : +step;\n              var isInRange = kendo.calendar.isInRange(parsedDate, dateView.options.min, dateView.options.max);\n\n              if (isValidDate(parsedDate) && isInRange && dateView.popup.visible()) {\n\n                  e.preventDefault();\n                  currentInputInstance.modifyDateSegmentValue(step, symbol, e);\n                  dateView.calendar.selectRange({ start: that._startDateInput.value(), end: that._endDateInput.value() });\n                  currentTargetedDate = that._currentTarget == START ? that._startDateInput.value() : that._endDateInput.value();\n                  currentTargetedDateFocused = e.key == 'ArrowDown' ? currentTargetedDate.setDate(currentTargetedDate.getDate() - 7) : currentTargetedDate.setDate(currentTargetedDate.getDate() + 7);\n                  that.dateView.calendar._current = new Date(currentTargetedDateFocused);\n              } else if (dateView.calendar) {\n                  dateView.calendar.selectRange({ start: that._startDateInput.value(), end: that._endDateInput.value() });\n              } else {\n                  dateView.range({ start: that._startDateInput.value(), end: that._endDateInput.value() });\n              }\n          },\n\n          _handleAllowReverseEnter: function(e, range, currentInput, currentInputInstance, parsedDate) {\n              var that = this,\n                  dateView = that.dateView;\n\n              if (that._currentTarget === START && that._startDateInput.value() === null) {\n                  e.target.select();\n                  dateView.move(e);\n              } else if (that._currentTarget === END && that._endDateInput.value() === null) {\n                  currentInput.value(dateView._current);\n                  range = { start: range.start, end: dateView._current };\n                  currentInput.trigger(CHANGE);\n                  dateView.range(range);\n                  dateView.close();\n\n              } else if (that._isFirstClick && currentInputInstance.value !== dateView._current) {\n                  currentInput.value(dateView._current);\n                  range[that._currentTarget] = dateView._current;\n                  currentInput.trigger(CHANGE);\n                  dateView.range(range);\n                  dateView.close();\n              } else {\n                  dateView.range(range);\n              }\n          },\n\n          _handleStandardEnter: function(e, range, currentInput, parsedDate, handled) {\n              var that = this,\n                  dateView = that.dateView;\n                  let currentGreather = that._startDateInput.value() > dateView._current ? null : dateView._current;\n                  let selectedEnd = that._isFirstClick == true ? currentGreather : that._endDateInput.value();\n                  let isCurrentMatchSelected = currentInput.value() === that.dateView._current;\n\n                  if (that._currentTarget == START && !isCurrentMatchSelected && that.dateView.popup.visible() && !that._backspaceChange) {\n                      currentInput.value(dateView._current);\n                      range = { start: dateView._current, end: range.end };\n                      dateView.range(range);\n                      currentInput.trigger(CHANGE);\n                      that._endDateInput.dateInputInstance.focus();\n\n                  } else if (that._backspaceChange) {\n                      let correctStartDate = currentInput.dateInputInstance.elementValue == currentInput._emptyMask ? null : currentInput._oldValue;\n                      currentInput.value(correctStartDate);\n                      range[that._currentTarget] = correctStartDate;\n                      dateView.range(range);\n                      currentInput.trigger(CHANGE);\n\n                  } else if (that._startDateInput.value() <= that._endDateInput.value()\n                      && that._startDateInput.value() != null && that._endDateInput.value() != null) {\n\n                      range = { start: that._startDateInput.value(), end: selectedEnd };\n                      dateView.range(range);\n                      if (that._isFirstClick) {\n                          currentInput.value(selectedEnd);\n                      }\n                      that._updateARIA(dateView._current);\n                      currentInput.trigger(CHANGE);\n\n                  } else if (that._currentTarget == START && that._endDateInput.value() <= dateView._current) {\n                      e.target.select();\n                      handled = dateView.move(e);\n                  } else if (that._currentTarget == START && that._startDateInput.value() > selectedEnd) {\n                      that._endDateInput.value(that._startDateInput.value());\n                      currentInput.trigger(CHANGE);\n                  } else {\n                      if (that._currentTarget == END && that._startDateInput.value() > that._endDateInput.value() && isValidDate(parsedDate)) {\n                          range = { start: that._startDateInput.value(), end: null };\n                          that._endDateInput.value(that._startDateInput.value());\n                      } else if (selectedEnd == null) {\n                          let correctDate = currentInput == 'start' ? range.start : range.end;\n                          currentInput.value(correctDate);\n                      } else {\n                          currentInput.value(selectedEnd);\n                          range[that._currentTarget] = selectedEnd;\n                      }\n                      currentInput.trigger(CHANGE);\n                      dateView.range(range);\n                  }\n                  that._backspaceChange = false;\n          },\n\n          _handleArrowKeys: function(e, parsedDate, dateView, handled) {\n              let that = this,\n              currentInputInstance = that._currentTarget == START ? that._startDateInput.dateInputInstance : that._endDateInput.dateInputInstance,\n              currentTargetedDate = currentInputInstance.value;\n\n              if (that._isFirstClick === false && (e.key == 'ArrowDown' || e.key == 'ArrowUp') && !e.altKey && !e.ctrlKey) {\n                  that._navigatePrevNextDate(e);\n              }\n\n              if (that._isFirstClick === false && (e.key == 'ArrowRight' || e.key == 'ArrowLeft') && !e.shiftKey) {\n                  let index = e.key == 'ArrowRight' ? -1 : + 1;\n                  if (parsedDate != null) {\n                      dateView.calendar._current = new Date(currentTargetedDate.setDate(currentTargetedDate.getDate() + index));\n                      currentInputInstance.switchDateSegment(- index);\n                  }\n\n              } else if (e.shiftKey && (e.key == 'ArrowRight' || e.key == 'ArrowLeft')) {\n                  handled = dateView.move(e);\n                  that._updateARIA(dateView._current);\n              }\n          },\n\n\n          _keydown: function(e) {\n              var that = this,\n                  dateView = that.dateView,\n                  isCurrentInRange,\n                  handled = false,\n                  range = that.range(),\n                  currentInput = that._currentTarget == START ? that._startDateInput : that._endDateInput,\n                  currentInputInstance = that._currentTarget == START ? that._startDateInput.dateInputInstance : that._endDateInput.dateInputInstance,\n                  parsedDate = parse(currentInputInstance.elementValue, currentInputInstance.dateObject.format, currentInputInstance.dateObject.localeId),\n\n                  isCalendarUpdated = false;\n\n              if (that._preventInputAction) {\n                  e.stopImmediatePropagation();\n                  return;\n              }\n\n              if (dateView.calendar) {\n                  isCurrentInRange = kendo.calendar.isInRange(parsedDate, dateView.calendar.options.min, dateView.calendar.options.max);\n              }\n\n              if (e.altKey && (e.key == 'ArrowDown' || e.key == 'ArrowUp')) {\n                  that._isFirstClick = true;\n                  if (e.key == 'ArrowUp' && (JSON.stringify(range) != JSON.stringify(that.dateView.calendar._range))) {\n                      dateView.range(that.dateView.calendar._range);\n                      currentInput.trigger(CHANGE);\n                  }\n              }\n\n              if (e.key == 'Enter') {\n                  isCalendarUpdated = true;\n                  if (that.options.allowReverse) {\n                      that._handleAllowReverseEnter(e, range, currentInput, currentInputInstance, parsedDate);\n                  } else {\n                      that._handleStandardEnter(e, range, currentInput, parsedDate, handled);\n                  }\n\n                  if (this.dateView && this.options.autoClose && e.target.attributes['data-input'].value == END) {\n                      this.dateView.close();\n                  }\n              } else if (e.keyCode == keys.ESC) {\n                  isCalendarUpdated = true;\n                  handled = dateView.move(e);\n              } else if (e.key == 'Backspace' || e.key == 'Delete') {\n                  that._changeTriggered = false;\n                  that._backspaceChange = true;\n              } else {\n                  if ((that._isFirstClick && (isValidDate(parsedDate) && isCurrentInRange) && isNaN(parseFloat(e.key))) || e.altKey) {\n                      handled = dateView.move(e);\n                      that._updateARIA(dateView._current);\n                      isCalendarUpdated = true;\n                  } else if (that._isFirstClick && (isValidDate(parsedDate) || isCurrentInRange) && isNaN(parseFloat(e.key)) || e.altKey ) {\n                      isCalendarUpdated = true;\n                      that._updateARIA(dateView._current);\n\n                      if ((e.key == 'ArrowDown' || e.key == 'ArrowUp') && !e.altKey && !e.ctrlKey) {\n                          that._navigatePrevNextDate(e);\n                      }\n                      handled = dateView.move(e);\n                  } else {\n                      that._updateARIA(dateView._current);\n                      that._handleArrowKeys(e, parsedDate, dateView, handled);\n\n                      if (!isNaN(parseFloat(e.key)) && !e.altKey && !e.ctrlKey && !e.shiftKey) {\n                          setTimeout(function() {\n                              parsedDate = parse(currentInputInstance.elementValue, currentInputInstance.dateObject.format, currentInputInstance.dateObject.localeId);\n                              let isInRange = kendo.calendar.isInRange(parsedDate, dateView.options.min, dateView.options.max);\n\n                              if (isValidDate(parsedDate) && isInRange && dateView.popup.visible()) {\n                                  dateView.calendar.selectRange({ start: that._startDateInput.value(), end: that._endDateInput.value() });\n                                  dateView.calendar._current = that._currentTarget == START ? that._startDateInput.value() : that._endDateInput.value();\n                                  handled = dateView.move(e);\n                                  that._updateARIA(dateView._current);\n\n                              } else if (isValidDate(parsedDate) && isInRange) {\n                                  dateView.range({ start: that._startDateInput.value(), end: that._endDateInput.value() });\n                              }\n                          });\n                      }\n                  }\n              }\n\n              if ((isValidDate(parsedDate) && isCurrentInRange) && !isCalendarUpdated && isNaN(parseFloat(e.key))) {\n                  handled = dateView.move(e);\n                  that._updateARIA(dateView._current);\n              }\n\n              if (handled && e.stopImmediatePropagation) {\n                  e.stopImmediatePropagation();\n              }\n          },\n\n          _updateARIA: function(date) {\n              var that = this;\n              var calendar = that.dateView.calendar;\n\n              if (that._inputs && that._inputs.length) {\n                  that._inputs.removeAttr(ARIA_ACTIVEDESCENDANT);\n              }\n\n              if (calendar) {\n                  if (date && !calendar._dateInViews(date)) {\n                      calendar.navigate(date);\n                  }\n\n                  if ($.contains(that.element[0], document.activeElement)) {\n                      that._inputs.attr(ARIA_ACTIVEDESCENDANT, calendar._updateAria(that._ariaTemplate, date));\n                  }\n              }\n          },\n\n          _isAdaptive: function() {\n              const that = this;\n              return that.options.adaptiveMode === \"auto\" && !that.bigScreenMQL.mediaQueryList.matches;\n          },\n\n          _inputFocus: function(e) {\n              let that = this, range = that.range();\n\n              if (that._currentTarget !== $(e.target).data(\"input\")) {\n                  that._currentTarget = $(e.target).data(\"input\");\n                  if (range) {\n                      if (that._isAdaptive() && !that.options.autoClose && that.dateView.popup.visible()) {\n                          const temp = that._temporaryInputValues || {};\n                          range.start = temp.start;\n                          range.end = temp.end;\n                      } else {\n                          range.start = that._startDateInput.value();\n                          range.end = that._endDateInput.value();\n                      }\n                      that.range(range);\n                  } else {\n                      that.range({ start: null, end: null });\n                  }\n              }\n          },\n\n          _updateInputValueAndSelectRange: function(e, input, newValue, range) {\n              var that = this;\n\n              input.value(newValue);\n              input.trigger(CHANGE);\n\n              if (that.dateView.calendar) {\n                  that.dateView.calendar.selectRange(range);\n              }\n              that.trigger(CHANGE);\n          },\n\n          _startChange: function(e) {\n              var that = this;\n              var input = e.sender;\n              var startValue = input.value();\n\n              let endValue;\n              if (that._isAdaptive() && !that.options.autoClose) {\n                  const temporary = that._temporaryInputValues || {};\n                  endValue = temporary.end;\n              } else {\n                  endValue = that._endDateInput.value();\n              }\n\n              var range = that.range();\n\n              if (that.options.disableDates(startValue)) {\n                  e.sender.value(null);\n                  startValue = null;\n              }\n\n              if (that._backspaceChange == true) {\n                  let correctStartDate = input.dateInputInstance.elementValue == input._emptyMask ? null : range.start;\n                  input.value(correctStartDate);\n                  that.range({ start: correctStartDate, end: range.end });\n                  that.dateView.range(that.range());\n                  startValue = correctStartDate;\n                  that._changeTriggered = false;\n                  that._backspaceChange = false;\n              }\n\n              that.range({ start: startValue, end: endValue });\n\n              if (e.blur && !that.options.allowReverse &&\n                  that._startDateInput.value() > that._endDateInput.value() &&\n                  endValue != null &&\n                  that.options.min.getTime() === new Date(1900, 0, 1).getTime()) {\n                  that._changeTriggered = true;\n                  setTimeout(function() {\n                      that._updateInputValueAndSelectRange(e, that._startDateInput, range.start, range);\n                      that._changeTriggered = false;\n                  });\n              }\n\n              if (!that._changeTriggered) {\n                  that.trigger(CHANGE);\n              }\n\n              that._backspaceChange = false;\n              that._toggleClearButton(START, startValue !== null);\n          },\n\n          _endChange: function(e) {\n              var that = this;\n              var input = e.sender;\n              let endValue;\n              let startValue;\n              const isAdaptive = that._isAdaptive();\n              if (isAdaptive && !that._backspaceChange) {\n                  const temporary = that._temporaryInputValues || {};\n                  startValue = temporary.start;\n                  endValue = temporary.end;\n              } else {\n                  startValue = that._startDateInput.value();\n                  endValue = input.value();\n              }\n              var range = that.range();\n\n              if (that.options.disableDates(endValue)) {\n                  e.sender.value(null);\n                  endValue = null;\n              }\n\n              if (that._backspaceChange == true) {\n                  let correctEndDate = input.dateInputInstance.elementValue == input._emptyMask ? null : range.end;\n                  input.value(correctEndDate);\n                  that.range({ start: range.start, end: range.correctEndDate });\n                  that.dateView.range(that.range());\n                  endValue = correctEndDate;\n                  that._changeTriggered = false;\n                  that._backspaceChange = false;\n              }\n\n              that.range({ start: startValue, end: endValue });\n\n              if (!e.blur) {\n                  if (that._currentTarget === END) {\n                      if (!startValue || (!that.options.autoClose) || isAdaptive) {\n                          that._startDateInput.dateInputInstance.focus();\n                      } else {\n                          that._endDateInput.dateInputInstance.focus();\n                      }\n                  } else {\n                      if (!endValue || (!that.options.autoClose) || isAdaptive) {\n                          that._endDateInput.dateInputInstance.focus();\n                      } else {\n                          that._startDateInput.dateInputInstance.focus();\n                      }\n                  }\n              } else if (!that.options.allowReverse && that._startDateInput.value() > that._endDateInput.value()\n                  && input.dateInputInstance.previousElementValue != input._emptyMask) {\n                  that._changeTriggered = true;\n                  setTimeout(function() {\n                      that._updateInputValueAndSelectRange(e, that._endDateInput, range.end, range);\n                  });\n              }\n\n              if (e.blur == true && this.dateView && this.options.autoClose && e.sender.element.attr('data-input') == END) {\n                  this.dateView.close();\n              }\n\n              if (!that._changeTriggered) {\n                  that.trigger(CHANGE);\n              }\n\n              that._backspaceChange = false;\n              that._toggleClearButton(END, endValue !== null);\n          },\n          _initializeDateView: function() {\n              var that = this;\n              var div;\n\n              if (that.dateView) {\n                  if (that.dateView.popup && that.dateView.popup.wrapper) {\n                      that.dateView.popup.wrapper.remove();\n                  }\n                  that.dateView.destroy();\n                  that.dateView = null;\n              }\n\n              const isAdaptive = that.options.adaptiveMode === \"auto\" && !that.bigScreenMQL.mediaQueryList.matches;\n\n              that.dateView = new DateRangeView(extend({}, that.options, {\n                  id: that.element.attr(ID),\n                  anchor: that.wrapper,\n                  views: 2,\n                  selectable: {\n                      mode: \"range\",\n                      reverse: that.options.allowReverse,\n                      resetOnStart: !that.options.autoClose && isAdaptive\n                  },\n                  value: that._range?.start || that._range?.end,\n                  range: that._range,\n                  change: function() {\n                      var range = this.selectRange();\n                      if (that._isAdaptive()) {\n                          that._temporaryInputValues = {\n                              start: range.start,\n                              end: range.end\n                          };\n                      }\n                      that.range(range);\n                      that.trigger(CHANGE);\n                      that._changeTriggered = true;\n                      that._startDateInput.trigger(CHANGE);\n                      that._endDateInput.trigger(CHANGE);\n                      that._changeTriggered = false;\n                  },\n                  close: function(e) {\n                      if (that.trigger(CLOSE)) {\n                          e.preventDefault();\n                      } else {\n                          that._inputs.attr(ARIA_EXPANDED, false);\n                          div.attr(ARIA_HIDDEN, true);\n\n                          setTimeout(function() {\n                              let range = that.range();\n                              if (that._inputs) {\n                                  that._inputs.removeAttr(ARIA_ACTIVEDESCENDANT);\n                              }\n\n                              if (range && that.dateView && that.dateView.calendar && that.dateView.calendar.rangeSelectable) {\n                                  that.range(range);\n                              }\n                          });\n                      }\n                      that._isFirstClick = undefined$1;\n                  },\n                  open: function(e) {\n                      let range = that.range();\n                      let currentInput = that._currentTarget == START ? that._startDateInput : that._endDateInput;\n\n                      if (that.trigger(OPEN)) {\n                          e.preventDefault();\n                      } else {\n                          if (that._isAdaptive() && !that.options.autoClose) {\n                              that._temporaryInputValues = {\n                                  startInitial: that._startDateInput.value(),\n                                  endInitial: that._endDateInput.value()\n                              };\n\n                              that.dateView.popup.wrapper.find(\"[data-ref-actionsheet-close-button]\").on(\"mousedown\", function() {\n                                  e.preventDefault();\n                                  const temp = that._temporaryInputValues || {};\n                                  const startValue = temp.start;\n                                  const endValue = temp.end;\n\n                                  that._startDateInput.value(startValue);\n                                  that._endDateInput.value(endValue);\n                                  that.close();\n                              });\n                          }\n                          if (range && (JSON.stringify(that._startDateInput.value()) != JSON.stringify(range.start)\n                              || JSON.stringify(that._endDateInput.value()) != JSON.stringify(range.end))\n                              && (that._startDateInput.value() != null || that._endDateInput.value() != null)) {\n                              that.dateView.range({ start: that._startDateInput.value(), end: that._endDateInput.value() });\n                              currentInput.trigger(CHANGE);\n                          }\n                          that.dateView._current = currentInput.value();\n                          that._inputs.attr(ARIA_EXPANDED, true);\n                          div.attr(ARIA_HIDDEN, false);\n                          that._updateARIA();\n                      }\n                  },\n                  _buttons: !this.options.autoClose && isAdaptive && [\n                      { text: \"Cancel\", click: function() {\n                          const temp = that._temporaryInputValues || {};\n                          const startInitial = temp.startInitial;\n                          const endInitial = temp.endInitial;\n\n                          that._startDateInput.value(startInitial);\n                          that._endDateInput.value(endInitial);\n                          that.close();\n                      } },\n                      { text: \"Set\", themeColor: \"primary\", click: function() {\n                          const temp = that._temporaryInputValues || {};\n                          const startValue = temp.start;\n                          const endValue = temp.end;\n\n                          that._startDateInput.value(startValue);\n                          that._endDateInput.value(endValue);\n                          that.close();\n                      } }\n                  ]\n              }));\n\n              div = that.dateView.div;\n          },\n          _initializeDateInputs: function() {\n              var that = this;\n              var options = that.options;\n              var range = options.range || {};\n              var inputOptions = {\n                  autoAdjust: options.autoAdjust,\n                  footer: options.footer,\n                  format: options.format,\n                  culture: options.culture,\n                  min: options.min,\n                  max: options.max,\n                  start: options.start,\n                  startField: options.startField,\n                  endField: options.endField,\n                  depth: options.depth,\n                  animation: options.animation,\n                  month: options.month,\n                  dates: options.dates,\n                  disableDates: options.disableDates,\n                  ARIATemplate: options.ARIATemplate,\n                  weekNumber: options.weekNumber,\n                  size: options.size,\n                  fillMode: options.fillMode,\n                  rounded: options.rounded,\n                  toggleDayPeriod: true,\n                  inputMode: options.inputMode\n              };\n\n              if (that._startDateInput) {\n                  that._startDateInput.destroy();\n                  that._endDateInput.destroy();\n                  that.wrapper.empty();\n                  that._buildHTML();\n                  that._inputs\n                      .on(UP + ns, that._click.bind(that))\n                      .on(\"keydown\" + ns, that._keydown.bind(that));\n              }\n              that._startDateInput = that._startInput.kendoDateInput(extend(true, inputOptions, { value: range.start })).getKendoDateInput();\n              that._endDateInput = that._endInput.kendoDateInput(extend(true, inputOptions, { value: range.end })).getKendoDateInput();\n\n              that._startChangeHandler = that._startChange.bind(that);\n              that._startDateInput.bind(CHANGE, that._startChangeHandler);\n\n              that._endChangeHandler = that._endChange.bind(that);\n              that._endDateInput.bind(CHANGE, that._endChangeHandler);\n\n              that._inputs.on(\"focus\" + ns, that._inputFocus.bind(that));\n          },\n\n          _buildHTML: function() {\n              var that = this;\n              var element = that.element;\n              var id;\n\n              if (!that.wrapper) {\n                  that.wrapper = element.addClass(\"k-daterangepicker\");\n              }\n\n              if (that.options.labels) {\n                  id = kendo.guid();\n                  $('<span class=\"k-floating-label-container\"><input data-input=\"' + START + '\" id=\"' + id + '\"/><label for=\"' + id + '\" class=\"k-floating-label\">' + kendo.htmlEncode(that.options.messages.startLabel) + '</label></span>').appendTo(that.wrapper);\n                  id = kendo.guid();\n                  $('<span>&nbsp;</span><span class=\"k-floating-label-container\"><input data-input=\"' + END + '\" id=\"' + id + '\"/><label for=\"' + id + '\" class=\"k-floating-label\">' + kendo.htmlEncode(that.options.messages.endLabel) + '</label></span>').appendTo(that.wrapper);\n              } else {\n                  $('<input data-input=\"' + START + '\" /><span>&nbsp;</span><input data-input=\"' + END + '\" />').appendTo(that.wrapper);\n              }\n\n              that._startInput = that.wrapper.find(\"input\").eq(0);\n              that._endInput = that.wrapper.find(\"input\").eq(1);\n\n              if (that.options.startField !== \"\") {\n                  that._startInput.attr(kendo.attr(\"bind\"), \"value: \" + that.options.startField);\n  \t\t\t\tthat._startInput.attr(\"name\", that.options.startField);\n              }\n\n              if (that.options.endField !== \"\") {\n                  that._endInput.attr(kendo.attr(\"bind\"), \"value: \" + that.options.endField);\n  \t\t\t\tthat._endInput.attr(\"name\", that.options.endField);\n              }\n\n              that._inputs = that._startInput.add(that._endInput);\n          },\n\n          _option: function(option, value) {\n              var that = this,\n                  options = that.options,\n                  startDateInput = that._startDateInput,\n                  endDateInput = that._endDateInput;\n\n              if (value === undefined$1) {\n                  return options[option];\n              }\n\n              value = parse(value, options.parseFormats, options.culture);\n\n              if (!value) {\n                  return;\n              }\n\n              options[option] = new Date(+value);\n              that.dateView[option](value);\n\n              if (startDateInput) {\n                  startDateInput[option](value);\n              }\n\n              if (endDateInput) {\n                  endDateInput[option](value);\n              }\n          },\n\n          _reset: function() {\n              var that = this,\n                  element = that.element,\n                  formId = element.attr(\"form\"),\n                  form = formId ? $(\"#\" + formId) : element.closest(\"form\");\n\n              if (form[0]) {\n                  that._resetHandler = function() {\n                      that.max(that._initialOptions.max);\n                      that.min(that._initialOptions.min);\n                  };\n\n                  that._form = form.on(\"reset\", that._resetHandler);\n              }\n          },\n\n          _editable: function(options) {\n              var that = this,\n                  inputs = that._inputs,\n                  readonly = options.readonly,\n                  disable = options.disable;\n\n              if (!readonly && !disable) {\n                  that.wrapper\n                      .removeClass(STATEDISABLED);\n\n                  $.each(inputs, function(key, item) {\n                      item.removeAttribute(DISABLED);\n                      item.removeAttribute(READONLY);\n                  });\n\n                  inputs.attr(ARIA_DISABLED, false);\n                  that._preventInputAction = false;\n              } else {\n                  that.wrapper\n                      .addClass(disable ? STATEDISABLED : \"\")\n                      .removeClass(disable ? \"\" : STATEDISABLED);\n\n                      inputs.attr(DISABLED, disable)\n                         .attr(READONLY, readonly)\n                         .attr(ARIA_DISABLED, disable);\n\n                  that._preventInputAction = true;\n              }\n          },\n\n          destroy: function() {\n              var that = this;\n\n              if (that._startDateInput) {\n                  that._startDateInput.unbind(CHANGE, that._startChangeHandler);\n                  that._startDateInput.destroy();\n                  that._startChangeHandler = null;\n              }\n\n              if (that._endDateInput) {\n                  that._endDateInput.unbind(CHANGE, that._endChangeHandler);\n                  that._endDateInput.destroy();\n                  that._endChangeHandler = null;\n              }\n\n              if (that._startDateButton) {\n                  that._startDateButton.off(CLICK, that._expandButtonClick);\n              }\n\n              if (that._endDateButton) {\n                  that._endDateButton.off(CLICK, that._expandButtonClick);\n              }\n\n              if (that._startDateClear) {\n                  that._startDateClear.off(CLICK, that._clearValue);\n              }\n\n              if (that._endDateClear) {\n                  that._endDateClear.off(CLICK, that._clearValue);\n              }\n\n              if (that._form) {\n                  that._form.off(\"reset\", that._resetHandler);\n              }\n\n              that._inputs.off(ns);\n              that._inputs = null;\n\n              if (that.bigScreenMQL) {\n                  that.bigScreenMQL.destroy();\n              }\n\n              that._createDateViewProxy = null;\n\n              that.dateView.destroy();\n\n              that.element.off(ns);\n\n              Widget.fn.destroy.call(that);\n          },\n\n          range: function(range) {\n              let that = this, target = that._currentTarget || START;\n\n              if (range === undefined$1) {\n                  return that._range;\n              }\n\n              that._range = range;\n              that._range[\"target\"] = target;\n              that.dateView.range({ start: null, end: null, target: target });\n              if (!range) {\n                  that._startDateInput.value(null);\n                  that._endDateInput.value(null);\n              }\n\n              if (!that._isAdaptive() || (that._isAdaptive() && that.options.autoClose)) {\n                  that._startDateInput.value(range.start ? range.start : null);\n                  that._endDateInput.value(range.end ? range.end : null);\n              }\n\n              if (target === START) {\n                  that.dateView.range({ start: range.start, end: range.end || null, target: target });\n              }\n\n              if (target === END) {\n                  that.dateView.range({ start: range.start || null, end: range.end, target: target });\n              }\n          },\n\n          open: function() {\n              this.dateView.open();\n          },\n\n          close: function() {\n                  this.dateView.close();\n          },\n\n          min: function(value) {\n              return this._option(MIN, value);\n          },\n\n          max: function(value) {\n              return this._option(MAX, value);\n          },\n\n          readonly: function(readonly) {\n              this._startDateInput.readonly(readonly);\n              this._endDateInput.readonly(readonly);\n\n              this._editable({\n                  readonly: readonly === undefined$1 ? true : readonly,\n                  disable: false\n              });\n          },\n\n          enable: function(enable) {\n              this._startDateInput.enable(enable);\n              this._endDateInput.enable(enable);\n\n              if (!enable) {\n                  this.close();\n              }\n\n              this._editable({\n                  readonly: false,\n                  disable: !(enable = enable === undefined$1 ? true : enable)\n              });\n          }\n      });\n\n      kendo.ui.plugin(DateRangePicker);\n\n  })(window.kendo.jQuery);\n  var kendo$1 = kendo;\n\n  exports.__meta__ = __meta__;\n  exports.default = kendo$1;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n"]}